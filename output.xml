<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231106 23:27:00.177" rpa="false" schemaversion="4">
<suite id="s1" name="Login" source="d:\TESTER\Automation\Auto_Web\testcases\login.robot">
<test id="s1-t1" name="LO_05 Verify that log in with leaving the blank field in &quot;Mật khẩu&quot;" line="30">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231106 23:27:02.376" endtime="20231106 23:27:02.377"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231106 23:27:02.378" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\a2fa2dff-10e1-4106-91e3-106f763076c2"}</msg>
<msg timestamp="20231106 23:27:03.545" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\a2fa2dff-10e1-4106-91e3-106f763076c2"}</msg>
<status status="PASS" starttime="20231106 23:27:02.377" endtime="20231106 23:27:03.546"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231106 23:27:07.040" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231106 23:27:07.041" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231106 23:27:03.549" endtime="20231106 23:27:07.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231106 23:27:07.044" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231106 23:27:07.043" endtime="20231106 23:27:07.045"/>
</kw>
<status status="PASS" starttime="20231106 23:27:02.374" endtime="20231106 23:27:07.045"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231106 23:27:07.057" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231106 23:27:07.056" endtime="20231106 23:27:07.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231106 23:27:07.059" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231106 23:27:07.058" endtime="20231106 23:27:07.059"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231106 23:27:07.061" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231106 23:27:07.060" endtime="20231106 23:27:07.061"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231106 23:27:07.065" level="INFO">Length is 0</msg>
<msg timestamp="20231106 23:27:07.065" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231106 23:27:07.062" endtime="20231106 23:27:07.066"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231106 23:27:07.068" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231106 23:27:07.066" endtime="20231106 23:27:07.068"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231106 23:27:07.070" level="INFO">Length is 0</msg>
<msg timestamp="20231106 23:27:07.071" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231106 23:27:07.069" endtime="20231106 23:27:07.071"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.075" endtime="20231106 23:27:07.076"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.077" endtime="20231106 23:27:07.077"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.074" endtime="20231106 23:27:07.078"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.079" endtime="20231106 23:27:07.082"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.083" endtime="20231106 23:27:07.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.085" endtime="20231106 23:27:07.086"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.078" endtime="20231106 23:27:07.087"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.089" endtime="20231106 23:27:07.089"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.090" endtime="20231106 23:27:07.091"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.087" endtime="20231106 23:27:07.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.093" endtime="20231106 23:27:07.094"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.094" endtime="20231106 23:27:07.095"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.092" endtime="20231106 23:27:07.095"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.099" endtime="20231106 23:27:07.100"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.096" endtime="20231106 23:27:07.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231106 23:27:07.104" endtime="20231106 23:27:07.104"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.101" endtime="20231106 23:27:07.105"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.107" endtime="20231106 23:27:07.108"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.109" endtime="20231106 23:27:07.110"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.111" endtime="20231106 23:27:07.112"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.106" endtime="20231106 23:27:07.112"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.115" endtime="20231106 23:27:07.116"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.114" endtime="20231106 23:27:07.116"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.118" endtime="20231106 23:27:07.119"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.117" endtime="20231106 23:27:07.119"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.122" endtime="20231106 23:27:07.123"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.120" endtime="20231106 23:27:07.123"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.126" endtime="20231106 23:27:07.127"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.124" endtime="20231106 23:27:07.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231106 23:27:07.133" endtime="20231106 23:27:07.133"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:07.129" endtime="20231106 23:27:07.134"/>
</branch>
<status status="PASS" starttime="20231106 23:27:07.074" endtime="20231106 23:27:07.135"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231106 23:27:07.136" level="INFO">Length is 15</msg>
<msg timestamp="20231106 23:27:07.136" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231106 23:27:07.135" endtime="20231106 23:27:07.137"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231106 23:27:07.142" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231106 23:27:07.139" endtime="20231106 23:27:07.143"/>
</kw>
<status status="PASS" starttime="20231106 23:27:07.137" endtime="20231106 23:27:07.144"/>
</branch>
<status status="PASS" starttime="20231106 23:27:07.137" endtime="20231106 23:27:07.145"/>
</if>
<msg timestamp="20231106 23:27:07.146" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231106 23:27:07.054" endtime="20231106 23:27:07.151"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231106 23:27:07.156" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231106 23:27:07.152" endtime="20231106 23:27:07.156"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231106 23:27:07.157" endtime="20231106 23:27:07.687"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231106 23:27:07.688" endtime="20231106 23:27:07.857"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231106 23:27:07.859" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231106 23:27:07.858" endtime="20231106 23:27:07.923"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231106 23:27:08.005" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231106 23:27:08.005" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231106 23:27:07.924" endtime="20231106 23:27:08.006"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231106 23:27:08.007" endtime="20231106 23:27:08.007"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231106 23:27:08.008" endtime="20231106 23:27:08.008"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:08.006" endtime="20231106 23:27:08.008"/>
</iter>
<status status="NOT RUN" starttime="20231106 23:27:08.006" endtime="20231106 23:27:08.009"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231106 23:27:08.010" endtime="20231106 23:27:08.077"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231106 23:27:08.078" level="INFO">Length is 15</msg>
<msg timestamp="20231106 23:27:08.078" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231106 23:27:08.077" endtime="20231106 23:27:08.078"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231106 23:27:08.083" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231106 23:27:08.079" endtime="20231106 23:27:08.084"/>
</kw>
<status status="PASS" starttime="20231106 23:27:08.078" endtime="20231106 23:27:08.084"/>
</branch>
<status status="PASS" starttime="20231106 23:27:08.078" endtime="20231106 23:27:08.085"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231106 23:27:08.085" endtime="20231106 23:27:08.102"/>
</kw>
<status status="PASS" starttime="20231106 23:27:07.052" endtime="20231106 23:27:08.103"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231106 23:27:08.211" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231106 23:27:08.109" endtime="20231106 23:27:08.211"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231106 23:27:08.229" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231106 23:27:08.212" endtime="20231106 23:27:08.229"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231106 23:27:08.235" endtime="20231106 23:27:08.349"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231106 23:27:08.355" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231106 23:27:08.354" endtime="20231106 23:27:08.355"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231106 23:27:08.371" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231106 23:27:08.356" endtime="20231106 23:27:08.372"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231106 23:27:08.373" endtime="20231106 23:27:08.374"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231106 23:27:08.375" endtime="20231106 23:27:08.375"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231106 23:27:08.376" endtime="20231106 23:27:08.377"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:08.372" endtime="20231106 23:27:08.377"/>
</branch>
<status status="PASS" starttime="20231106 23:27:08.372" endtime="20231106 23:27:08.377"/>
</if>
<status status="PASS" starttime="20231106 23:27:08.351" endtime="20231106 23:27:08.377"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231106 23:27:08.410" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231106 23:27:08.410" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231106 23:27:08.439" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231106 23:27:08.439" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231106 23:27:08.454" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231106 23:27:08.378" endtime="20231106 23:27:08.454"/>
</kw>
<status status="PASS" starttime="20231106 23:27:08.234" endtime="20231106 23:27:08.455"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231106 23:27:08.456" endtime="20231106 23:27:08.457"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231106 23:27:08.457" endtime="20231106 23:27:08.458"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231106 23:27:08.459" endtime="20231106 23:27:08.459"/>
</kw>
<status status="NOT RUN" starttime="20231106 23:27:08.455" endtime="20231106 23:27:08.460"/>
</branch>
<status status="PASS" starttime="20231106 23:27:08.233" endtime="20231106 23:27:08.460"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231106 23:27:08.461" endtime="20231106 23:27:08.472"/>
</kw>
<status status="PASS" starttime="20231106 23:27:08.107" endtime="20231106 23:27:08.473"/>
</kw>
<kw name="Then Required message &quot;Xin vui lòng nhập mật khẩu&quot; displayed under &quot;Mật khẩu&quot; field" library="common" sourcename="Required message &quot;${text}&quot; displayed under &quot;${name}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20231106 23:27:08.483" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20231106 23:27:08.481" endtime="20231106 23:27:08.484"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231106 23:27:08.550" level="INFO">Text: 'Xin vui lòng nhập mật khẩu'</msg>
<status status="PASS" starttime="20231106 23:27:08.489" endtime="20231106 23:27:08.551"/>
</kw>
<status status="PASS" starttime="20231106 23:27:08.485" endtime="20231106 23:27:08.551"/>
</kw>
<status status="PASS" starttime="20231106 23:27:08.477" endtime="20231106 23:27:08.552"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231106 23:27:09.626" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231106 23:27:08.559" endtime="20231106 23:27:09.626"/>
</kw>
<status status="PASS" starttime="20231106 23:27:08.558" endtime="20231106 23:27:09.627"/>
</kw>
<tag>BlankField</tag>
<tag>Login</tag>
<tag>Smoketest</tag>
<status status="PASS" starttime="20231106 23:27:02.367" endtime="20231106 23:27:09.627"/>
</test>
<status status="PASS" starttime="20231106 23:27:00.186" endtime="20231106 23:27:09.642"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">BlankField</stat>
<stat pass="1" fail="0" skip="0">Login</stat>
<stat pass="1" fail="0" skip="0">Smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

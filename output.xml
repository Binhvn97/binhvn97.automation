<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231222 16:57:55.614" rpa="false" schemaversion="4">
<suite id="s1" name="Customer Account" source="d:\TESTER\Automation\Auto_Web\testcases\customer_account.robot">
<test id="s1-t1" name="CA_19 Verify the date selection filter function" line="225">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231222 16:57:57.880" endtime="20231222 16:57:57.933"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231222 16:57:57.935" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\20bf0fa0-d8c7-4fd9-a185-5ee49668aba6"}</msg>
<msg timestamp="20231222 16:57:59.124" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\20bf0fa0-d8c7-4fd9-a185-5ee49668aba6"}</msg>
<status status="PASS" starttime="20231222 16:57:57.934" endtime="20231222 16:57:59.125"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231222 16:58:02.500" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231222 16:58:02.500" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231222 16:57:59.125" endtime="20231222 16:58:02.502"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231222 16:58:02.506" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231222 16:58:02.503" endtime="20231222 16:58:02.508"/>
</kw>
<status status="PASS" starttime="20231222 16:57:57.879" endtime="20231222 16:58:02.509"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${today}</var>
<arg>local</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231222 16:58:02.528" level="INFO">${today} = 2023-12-22</msg>
<status status="PASS" starttime="20231222 16:58:02.527" endtime="20231222 16:58:02.529"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${yesterday}</var>
<arg>local</arg>
<arg>- 1 day</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231222 16:58:02.535" level="INFO">${yesterday} = 2023-12-21</msg>
<status status="PASS" starttime="20231222 16:58:02.534" endtime="20231222 16:58:02.536"/>
</kw>
<kw name="Create a test account with &quot;Farmer Side&quot; type" sourcename="Create a test account with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Tài khoản khách hàng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Tài khoản khách hàng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:02.669" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:02.566" endtime="20231222 16:58:02.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231222 16:58:02.677" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231222 16:58:02.671" endtime="20231222 16:58:02.677"/>
</kw>
<status status="FAIL" starttime="20231222 16:58:02.565" endtime="20231222 16:58:02.678"/>
</kw>
<msg timestamp="20231222 16:58:02.679" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231222 16:58:02.563" endtime="20231222 16:58:02.679"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231222 16:58:02.681" endtime="20231222 16:58:02.682"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.680" endtime="20231222 16:58:02.682"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create account &quot;Tài khoản Người dùng&quot; with &quot;/customer-account&quot;" sourcename="Go to page create account &quot;${name}&quot; with &quot;${url}&quot;">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:02.794" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:02.692" endtime="20231222 16:58:02.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:02.797" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:02.795" endtime="20231222 16:58:02.797"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:02.814" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:02.798" endtime="20231222 16:58:02.814"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:02.817" endtime="20231222 16:58:02.817"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.815" endtime="20231222 16:58:02.818"/>
</branch>
<status status="PASS" starttime="20231222 16:58:02.815" endtime="20231222 16:58:02.819"/>
</if>
<status status="PASS" starttime="20231222 16:58:02.688" endtime="20231222 16:58:02.819"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:02.828" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:02.825" endtime="20231222 16:58:02.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:02.833" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:02.832" endtime="20231222 16:58:02.834"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:02.837" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:02.835" endtime="20231222 16:58:02.837"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:02.844" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:02.845" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:02.843" endtime="20231222 16:58:02.846"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:02.849" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:02.847" endtime="20231222 16:58:02.849"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:02.852" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:02.852" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:02.851" endtime="20231222 16:58:02.853"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.857" endtime="20231222 16:58:02.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.860" endtime="20231222 16:58:02.861"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.854" endtime="20231222 16:58:02.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.865" endtime="20231222 16:58:02.866"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.867" endtime="20231222 16:58:02.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.869" endtime="20231222 16:58:02.870"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.864" endtime="20231222 16:58:02.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.882" endtime="20231222 16:58:02.882"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.883" endtime="20231222 16:58:02.883"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.871" endtime="20231222 16:58:02.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.885" endtime="20231222 16:58:02.886"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.886" endtime="20231222 16:58:02.886"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.884" endtime="20231222 16:58:02.887"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.887" endtime="20231222 16:58:02.888"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.887" endtime="20231222 16:58:02.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:02.896" endtime="20231222 16:58:02.897"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.894" endtime="20231222 16:58:02.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.902" endtime="20231222 16:58:02.902"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.903" endtime="20231222 16:58:02.904"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.905" endtime="20231222 16:58:02.911"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.912" endtime="20231222 16:58:02.913"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.914" endtime="20231222 16:58:02.915"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.917" endtime="20231222 16:58:02.918"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.901" endtime="20231222 16:58:02.918"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.920" endtime="20231222 16:58:02.921"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.919" endtime="20231222 16:58:02.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.930" endtime="20231222 16:58:02.931"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.927" endtime="20231222 16:58:02.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.934" endtime="20231222 16:58:02.935"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.933" endtime="20231222 16:58:02.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.937" endtime="20231222 16:58:02.938"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.936" endtime="20231222 16:58:02.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:02.947" endtime="20231222 16:58:02.947"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:02.945" endtime="20231222 16:58:02.948"/>
</branch>
<status status="PASS" starttime="20231222 16:58:02.854" endtime="20231222 16:58:02.949"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:02.950" level="INFO">Length is 15</msg>
<msg timestamp="20231222 16:58:02.951" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231222 16:58:02.949" endtime="20231222 16:58:02.951"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:02.954" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231222 16:58:02.953" endtime="20231222 16:58:02.954"/>
</kw>
<status status="PASS" starttime="20231222 16:58:02.952" endtime="20231222 16:58:02.961"/>
</branch>
<status status="PASS" starttime="20231222 16:58:02.952" endtime="20231222 16:58:02.961"/>
</if>
<msg timestamp="20231222 16:58:03.019" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231222 16:58:02.820" endtime="20231222 16:58:03.019"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:03.029" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:03.020" endtime="20231222 16:58:03.029"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:03.030" endtime="20231222 16:58:03.169"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:03.170" endtime="20231222 16:58:03.250"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:03.252" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:03.251" endtime="20231222 16:58:03.315"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:03.401" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231222 16:58:03.402" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231222 16:58:03.316" endtime="20231222 16:58:03.402"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.404" endtime="20231222 16:58:03.406"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.409" endtime="20231222 16:58:03.410"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.403" endtime="20231222 16:58:03.411"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:03.403" endtime="20231222 16:58:03.411"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:03.412" endtime="20231222 16:58:03.486"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:03.492" level="INFO">Length is 15</msg>
<msg timestamp="20231222 16:58:03.493" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231222 16:58:03.488" endtime="20231222 16:58:03.493"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:03.497" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231222 16:58:03.495" endtime="20231222 16:58:03.497"/>
</kw>
<status status="PASS" starttime="20231222 16:58:03.494" endtime="20231222 16:58:03.498"/>
</branch>
<status status="PASS" starttime="20231222 16:58:03.494" endtime="20231222 16:58:03.498"/>
</if>
<status status="PASS" starttime="20231222 16:58:02.687" endtime="20231222 16:58:03.499"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:03.605" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:03.503" endtime="20231222 16:58:03.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:03.611" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:03.609" endtime="20231222 16:58:03.611"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:03.627" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:03.612" endtime="20231222 16:58:03.627"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:03.629" endtime="20231222 16:58:03.630"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.628" endtime="20231222 16:58:03.630"/>
</branch>
<status status="PASS" starttime="20231222 16:58:03.628" endtime="20231222 16:58:03.631"/>
</if>
<status status="PASS" starttime="20231222 16:58:03.502" endtime="20231222 16:58:03.631"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:03.635" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:03.634" endtime="20231222 16:58:03.635"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:03.637" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:03.636" endtime="20231222 16:58:03.637"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:03.643" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:03.638" endtime="20231222 16:58:03.643"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:03.645" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:03.646" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:03.644" endtime="20231222 16:58:03.646"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:03.648" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:03.647" endtime="20231222 16:58:03.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:03.650" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:03.650" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:03.649" endtime="20231222 16:58:03.651"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.652" endtime="20231222 16:58:03.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.652" endtime="20231222 16:58:03.653"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.651" endtime="20231222 16:58:03.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.654" endtime="20231222 16:58:03.654"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.654" endtime="20231222 16:58:03.655"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.655" endtime="20231222 16:58:03.659"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.653" endtime="20231222 16:58:03.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.661" endtime="20231222 16:58:03.661"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.661" endtime="20231222 16:58:03.661"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.660" endtime="20231222 16:58:03.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.662" endtime="20231222 16:58:03.663"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.663" endtime="20231222 16:58:03.663"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.662" endtime="20231222 16:58:03.663"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.664" endtime="20231222 16:58:03.664"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.664" endtime="20231222 16:58:03.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:03.666" endtime="20231222 16:58:03.666"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.665" endtime="20231222 16:58:03.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.667" endtime="20231222 16:58:03.667"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.668" endtime="20231222 16:58:03.668"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.668" endtime="20231222 16:58:03.669"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.670" endtime="20231222 16:58:03.670"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.670" endtime="20231222 16:58:03.671"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.671" endtime="20231222 16:58:03.671"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.667" endtime="20231222 16:58:03.672"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.676" endtime="20231222 16:58:03.677"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.675" endtime="20231222 16:58:03.677"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.678" endtime="20231222 16:58:03.678"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.677" endtime="20231222 16:58:03.678"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.679" endtime="20231222 16:58:03.679"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.678" endtime="20231222 16:58:03.679"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.680" endtime="20231222 16:58:03.680"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.679" endtime="20231222 16:58:03.680"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.682" endtime="20231222 16:58:03.682"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.681" endtime="20231222 16:58:03.683"/>
</branch>
<status status="PASS" starttime="20231222 16:58:03.651" endtime="20231222 16:58:03.683"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:03.684" level="INFO">Length is 6</msg>
<msg timestamp="20231222 16:58:03.684" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231222 16:58:03.683" endtime="20231222 16:58:03.684"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:03.686" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231222 16:58:03.685" endtime="20231222 16:58:03.686"/>
</kw>
<status status="PASS" starttime="20231222 16:58:03.685" endtime="20231222 16:58:03.686"/>
</branch>
<status status="PASS" starttime="20231222 16:58:03.684" endtime="20231222 16:58:03.686"/>
</if>
<msg timestamp="20231222 16:58:03.687" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231222 16:58:03.632" endtime="20231222 16:58:03.687"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:03.693" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:03.688" endtime="20231222 16:58:03.693"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:03.694" endtime="20231222 16:58:03.796"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:03.797" endtime="20231222 16:58:03.846"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:03.848" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:03.847" endtime="20231222 16:58:03.912"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:03.954" level="INFO">Text: '123123'</msg>
<msg timestamp="20231222 16:58:03.954" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231222 16:58:03.913" endtime="20231222 16:58:03.955"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.961" endtime="20231222 16:58:03.961"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:03.962" endtime="20231222 16:58:03.963"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:03.956" endtime="20231222 16:58:03.964"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:03.956" endtime="20231222 16:58:03.964"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:03.965" endtime="20231222 16:58:04.037"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:04.041" level="INFO">Length is 6</msg>
<msg timestamp="20231222 16:58:04.042" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231222 16:58:04.038" endtime="20231222 16:58:04.043"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:04.047" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231222 16:58:04.046" endtime="20231222 16:58:04.048"/>
</kw>
<status status="PASS" starttime="20231222 16:58:04.044" endtime="20231222 16:58:04.048"/>
</branch>
<status status="PASS" starttime="20231222 16:58:04.044" endtime="20231222 16:58:04.049"/>
</if>
<status status="PASS" starttime="20231222 16:58:03.500" endtime="20231222 16:58:04.049"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:04.153" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:04.051" endtime="20231222 16:58:04.153"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:04.180" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:04.154" endtime="20231222 16:58:04.181"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:04.183" endtime="20231222 16:58:04.311"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:04.415" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:04.313" endtime="20231222 16:58:04.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:04.418" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231222 16:58:04.416" endtime="20231222 16:58:04.418"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:04.479" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:04.419" endtime="20231222 16:58:04.479"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:04.482" endtime="20231222 16:58:04.483"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231222 16:58:04.484" endtime="20231222 16:58:04.485"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231222 16:58:04.485" endtime="20231222 16:58:04.486"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:04.480" endtime="20231222 16:58:04.487"/>
</branch>
<status status="PASS" starttime="20231222 16:58:04.480" endtime="20231222 16:58:04.487"/>
</if>
<status status="PASS" starttime="20231222 16:58:04.312" endtime="20231222 16:58:04.490"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231222 16:58:04.636" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:04.637" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:04.675" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:04.676" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:04.685" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231222 16:58:04.492" endtime="20231222 16:58:04.686"/>
</kw>
<status status="PASS" starttime="20231222 16:58:04.182" endtime="20231222 16:58:04.687"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:04.688" endtime="20231222 16:58:04.690"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231222 16:58:04.691" endtime="20231222 16:58:04.691"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231222 16:58:04.692" endtime="20231222 16:58:04.692"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:04.687" endtime="20231222 16:58:04.693"/>
</branch>
<status status="PASS" starttime="20231222 16:58:04.181" endtime="20231222 16:58:04.694"/>
</if>
<status status="PASS" starttime="20231222 16:58:04.050" endtime="20231222 16:58:04.694"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:04.697" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:04.696" endtime="20231222 16:58:04.698"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:04.699" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:04.700" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:04.698" endtime="20231222 16:58:04.700"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:04.703" endtime="20231222 16:58:04.705"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:04.702" endtime="20231222 16:58:04.708"/>
</branch>
<status status="PASS" starttime="20231222 16:58:04.701" endtime="20231222 16:58:04.709"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:04.985" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231222 16:58:04.727" endtime="20231222 16:58:04.986"/>
</kw>
<status status="PASS" starttime="20231222 16:58:04.711" endtime="20231222 16:58:04.987"/>
</kw>
<status status="PASS" starttime="20231222 16:58:04.709" endtime="20231222 16:58:04.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:04.994" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231222 16:58:04.988" endtime="20231222 16:58:04.995"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:05.415" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231222 16:58:05.415" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231222 16:58:05.416" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231222 16:58:05.000" endtime="20231222 16:58:05.427"/>
</kw>
<status status="FAIL" starttime="20231222 16:58:04.998" endtime="20231222 16:58:05.429"/>
</kw>
<msg timestamp="20231222 16:58:05.430" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231222 16:58:04.997" endtime="20231222 16:58:05.430"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:05.433" endtime="20231222 16:58:05.433"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:05.431" endtime="20231222 16:58:05.434"/>
</branch>
<status status="PASS" starttime="20231222 16:58:05.431" endtime="20231222 16:58:05.434"/>
</if>
<status status="PASS" starttime="20231222 16:58:04.695" endtime="20231222 16:58:05.435"/>
</kw>
<status status="PASS" starttime="20231222 16:58:02.686" endtime="20231222 16:58:05.435"/>
</kw>
<kw name="Click &quot;QUẢN LÝ TÀI KHOẢN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:05.470" level="INFO">Waited for Element with selector //li[contains(@class, "menu") and descendant::span[contains(text(), "QUẢN LÝ TÀI KHOẢN")]] at state attached</msg>
<status status="PASS" starttime="20231222 16:58:05.441" endtime="20231222 16:58:05.471"/>
</kw>
<status status="PASS" starttime="20231222 16:58:05.437" endtime="20231222 16:58:05.472"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:05.474" endtime="20231222 16:58:06.486"/>
</kw>
<status status="PASS" starttime="20231222 16:58:05.436" endtime="20231222 16:58:06.487"/>
</kw>
<kw name="Click &quot;${name}&quot; sub menu to &quot;${url}&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:06.518" level="INFO">Waited for Element with selector //a[contains(@class, "sub-menu") and descendant::span[contains(text(), "Tài khoản Người dùng")]] at state attached</msg>
<status status="PASS" starttime="20231222 16:58:06.496" endtime="20231222 16:58:06.519"/>
</kw>
<status status="PASS" starttime="20231222 16:58:06.494" endtime="20231222 16:58:06.519"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:06.520" endtime="20231222 16:58:06.896"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231222 16:58:06.902" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/customer-account</msg>
<status status="PASS" starttime="20231222 16:58:06.897" endtime="20231222 16:58:06.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231222 16:58:06.904" endtime="20231222 16:58:06.907"/>
</kw>
<status status="PASS" starttime="20231222 16:58:06.488" endtime="20231222 16:58:06.908"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:07.012" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:06.910" endtime="20231222 16:58:07.012"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:07.313" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:07.013" endtime="20231222 16:58:07.313"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:07.325" endtime="20231222 16:58:07.711"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:07.816" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:07.714" endtime="20231222 16:58:07.816"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:07.817" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231222 16:58:07.817" endtime="20231222 16:58:07.817"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:07.829" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:07.818" endtime="20231222 16:58:07.830"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:07.832" endtime="20231222 16:58:07.832"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231222 16:58:07.833" endtime="20231222 16:58:07.834"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231222 16:58:07.834" endtime="20231222 16:58:07.835"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:07.831" endtime="20231222 16:58:07.835"/>
</branch>
<status status="PASS" starttime="20231222 16:58:07.830" endtime="20231222 16:58:07.835"/>
</if>
<status status="PASS" starttime="20231222 16:58:07.712" endtime="20231222 16:58:07.836"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231222 16:58:07.858" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:07.859" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:07.895" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:07.896" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:07.904" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231222 16:58:07.836" endtime="20231222 16:58:07.914"/>
</kw>
<status status="PASS" starttime="20231222 16:58:07.320" endtime="20231222 16:58:07.915"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:07.917" endtime="20231222 16:58:07.917"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231222 16:58:07.918" endtime="20231222 16:58:07.918"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231222 16:58:07.919" endtime="20231222 16:58:07.920"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:07.916" endtime="20231222 16:58:07.920"/>
</branch>
<status status="PASS" starttime="20231222 16:58:07.320" endtime="20231222 16:58:07.921"/>
</if>
<status status="PASS" starttime="20231222 16:58:06.909" endtime="20231222 16:58:07.921"/>
</kw>
<status status="PASS" starttime="20231222 16:58:02.684" endtime="20231222 16:58:07.929"/>
</kw>
<status status="PASS" starttime="20231222 16:58:02.683" endtime="20231222 16:58:07.930"/>
</branch>
<status status="PASS" starttime="20231222 16:58:02.680" endtime="20231222 16:58:07.931"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Họ và tên&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:08.035" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:07.934" endtime="20231222 16:58:08.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.036" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:08.036" endtime="20231222 16:58:08.036"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:08.050" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:08.037" endtime="20231222 16:58:08.050"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:08.052" endtime="20231222 16:58:08.053"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.051" endtime="20231222 16:58:08.054"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.051" endtime="20231222 16:58:08.058"/>
</if>
<status status="PASS" starttime="20231222 16:58:07.933" endtime="20231222 16:58:08.058"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.062" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:08.061" endtime="20231222 16:58:08.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.064" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:08.063" endtime="20231222 16:58:08.064"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:08.065" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:08.065" endtime="20231222 16:58:08.065"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.066" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:08.066" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:08.066" endtime="20231222 16:58:08.066"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:08.068" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231222 16:58:08.067" endtime="20231222 16:58:08.068"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.069" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:08.070" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:08.069" endtime="20231222 16:58:08.070"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.074" endtime="20231222 16:58:08.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.076" endtime="20231222 16:58:08.076"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.070" endtime="20231222 16:58:08.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231222 16:58:08.080" level="INFO">${random} = Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.078" endtime="20231222 16:58:08.080"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231222 16:58:08.082" level="INFO">${words} = ['CA_19', 'Verify', 'the', 'date', 'selection', 'filter', 'function']</msg>
<status status="PASS" starttime="20231222 16:58:08.081" endtime="20231222 16:58:08.082"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.086" level="INFO">${new_text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.083" endtime="20231222 16:58:08.086"/>
</kw>
<status status="PASS" starttime="20231222 16:58:08.077" endtime="20231222 16:58:08.087"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.099" endtime="20231222 16:58:08.099"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.100" endtime="20231222 16:58:08.101"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.087" endtime="20231222 16:58:08.101"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.102" endtime="20231222 16:58:08.103"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.103" endtime="20231222 16:58:08.104"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.101" endtime="20231222 16:58:08.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.109" endtime="20231222 16:58:08.132"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.108" endtime="20231222 16:58:08.133"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:08.135" endtime="20231222 16:58:08.136"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.134" endtime="20231222 16:58:08.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.141" endtime="20231222 16:58:08.142"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.143" endtime="20231222 16:58:08.143"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.144" endtime="20231222 16:58:08.145"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.146" endtime="20231222 16:58:08.146"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.147" endtime="20231222 16:58:08.148"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.148" endtime="20231222 16:58:08.149"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.137" endtime="20231222 16:58:08.150"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.151" endtime="20231222 16:58:08.152"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.150" endtime="20231222 16:58:08.153"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.159" endtime="20231222 16:58:08.160"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.154" endtime="20231222 16:58:08.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.162" endtime="20231222 16:58:08.163"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.161" endtime="20231222 16:58:08.164"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.165" endtime="20231222 16:58:08.166"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.164" endtime="20231222 16:58:08.167"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.169" endtime="20231222 16:58:08.170"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.168" endtime="20231222 16:58:08.170"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.070" endtime="20231222 16:58:08.171"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.179" level="INFO">Length is 8</msg>
<msg timestamp="20231222 16:58:08.180" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231222 16:58:08.175" endtime="20231222 16:58:08.180"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:08.183" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.182" endtime="20231222 16:58:08.183"/>
</kw>
<status status="PASS" starttime="20231222 16:58:08.181" endtime="20231222 16:58:08.184"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.181" endtime="20231222 16:58:08.185"/>
</if>
<msg timestamp="20231222 16:58:08.185" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.059" endtime="20231222 16:58:08.185"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:08.192" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Họ và tên"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:08.186" endtime="20231222 16:58:08.192"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:08.193" endtime="20231222 16:58:08.283"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:08.284" endtime="20231222 16:58:08.327"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:08.329" level="INFO">Fills the text 'CA_19 Aperiam expedita.' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:08.327" endtime="20231222 16:58:08.387"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:08.426" level="INFO">Text: 'CA_19 Aperiam expedita.'</msg>
<msg timestamp="20231222 16:58:08.426" level="INFO">${condition} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.388" endtime="20231222 16:58:08.427"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.429" endtime="20231222 16:58:08.430"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.431" endtime="20231222 16:58:08.432"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.427" endtime="20231222 16:58:08.432"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:08.427" endtime="20231222 16:58:08.433"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:08.434" endtime="20231222 16:58:08.502"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.504" level="INFO">Length is 23</msg>
<msg timestamp="20231222 16:58:08.506" level="INFO">${cnt} = 23</msg>
<status status="PASS" starttime="20231222 16:58:08.503" endtime="20231222 16:58:08.507"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:08.512" level="INFO">${STATE["Họ và tên"]} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.510" endtime="20231222 16:58:08.512"/>
</kw>
<status status="PASS" starttime="20231222 16:58:08.508" endtime="20231222 16:58:08.513"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.508" endtime="20231222 16:58:08.514"/>
</if>
<status status="PASS" starttime="20231222 16:58:07.931" endtime="20231222 16:58:08.514"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Họ và tên@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:08.518" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231222 16:58:08.517" endtime="20231222 16:58:08.519"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.521" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:08.522" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231222 16:58:08.520" endtime="20231222 16:58:08.523"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.530" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.527" endtime="20231222 16:58:08.531"/>
</kw>
<status status="PASS" starttime="20231222 16:58:08.525" endtime="20231222 16:58:08.531"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.524" endtime="20231222 16:58:08.532"/>
</if>
<msg timestamp="20231222 16:58:08.533" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.515" endtime="20231222 16:58:08.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.536" level="INFO">${name} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:08.534" endtime="20231222 16:58:08.536"/>
</kw>
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:08.645" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:08.543" endtime="20231222 16:58:08.646"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.649" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:08.647" endtime="20231222 16:58:08.649"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:08.663" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:08.650" endtime="20231222 16:58:08.664"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:08.666" endtime="20231222 16:58:08.666"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.665" endtime="20231222 16:58:08.667"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.665" endtime="20231222 16:58:08.667"/>
</if>
<status status="PASS" starttime="20231222 16:58:08.542" endtime="20231222 16:58:08.668"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.671" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:08.670" endtime="20231222 16:58:08.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:08.674" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:08.673" endtime="20231222 16:58:08.675"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:08.676" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:08.675" endtime="20231222 16:58:08.677"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.679" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:08.679" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:08.678" endtime="20231222 16:58:08.680"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:08.682" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231222 16:58:08.681" endtime="20231222 16:58:08.683"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.685" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:08.685" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:08.684" endtime="20231222 16:58:08.686"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.688" endtime="20231222 16:58:08.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.691" endtime="20231222 16:58:08.692"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.687" endtime="20231222 16:58:08.692"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.694" endtime="20231222 16:58:08.694"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.695" endtime="20231222 16:58:08.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.697" endtime="20231222 16:58:08.697"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.693" endtime="20231222 16:58:08.698"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.699" endtime="20231222 16:58:08.700"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.700" endtime="20231222 16:58:08.701"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.698" endtime="20231222 16:58:08.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.703" endtime="20231222 16:58:08.703"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.704" endtime="20231222 16:58:08.704"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.702" endtime="20231222 16:58:08.705"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.709" endtime="20231222 16:58:08.710"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.707" endtime="20231222 16:58:08.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20231222 16:58:08.713" level="INFO">${new_text} = hazelgarg@example.com</msg>
<status status="PASS" starttime="20231222 16:58:08.712" endtime="20231222 16:58:08.713"/>
</kw>
<status status="PASS" starttime="20231222 16:58:08.711" endtime="20231222 16:58:08.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.714" endtime="20231222 16:58:08.715"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.716" endtime="20231222 16:58:08.716"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.717" endtime="20231222 16:58:08.717"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.718" endtime="20231222 16:58:08.719"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.720" endtime="20231222 16:58:08.720"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.721" endtime="20231222 16:58:08.721"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.714" endtime="20231222 16:58:08.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.726" endtime="20231222 16:58:08.726"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.725" endtime="20231222 16:58:08.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.728" endtime="20231222 16:58:08.729"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.727" endtime="20231222 16:58:08.729"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.730" endtime="20231222 16:58:08.731"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.730" endtime="20231222 16:58:08.731"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.732" endtime="20231222 16:58:08.733"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.732" endtime="20231222 16:58:08.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.734" endtime="20231222 16:58:08.735"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.734" endtime="20231222 16:58:08.735"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.686" endtime="20231222 16:58:08.736"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:08.737" level="INFO">Length is 8</msg>
<msg timestamp="20231222 16:58:08.738" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231222 16:58:08.736" endtime="20231222 16:58:08.740"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:08.743" level="INFO">${text} = hazelgarg@example.com</msg>
<status status="PASS" starttime="20231222 16:58:08.742" endtime="20231222 16:58:08.744"/>
</kw>
<status status="PASS" starttime="20231222 16:58:08.741" endtime="20231222 16:58:08.744"/>
</branch>
<status status="PASS" starttime="20231222 16:58:08.741" endtime="20231222 16:58:08.745"/>
</if>
<msg timestamp="20231222 16:58:08.745" level="INFO">${text} = hazelgarg@example.com</msg>
<status status="PASS" starttime="20231222 16:58:08.668" endtime="20231222 16:58:08.746"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:08.748" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:08.746" endtime="20231222 16:58:08.748"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:08.749" endtime="20231222 16:58:08.824"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:08.826" endtime="20231222 16:58:08.865"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:08.867" level="INFO">Fills the text 'hazelgarg@example.com' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:08.866" endtime="20231222 16:58:08.927"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:08.974" level="INFO">Text: 'hazelgarg@example.com'</msg>
<msg timestamp="20231222 16:58:08.975" level="INFO">${condition} = hazelgarg@example.com</msg>
<status status="PASS" starttime="20231222 16:58:08.928" endtime="20231222 16:58:08.975"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.978" endtime="20231222 16:58:08.979"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:08.980" endtime="20231222 16:58:08.981"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:08.976" endtime="20231222 16:58:08.981"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:08.976" endtime="20231222 16:58:08.982"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:08.983" endtime="20231222 16:58:09.052"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.054" level="INFO">Length is 21</msg>
<msg timestamp="20231222 16:58:09.057" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20231222 16:58:09.053" endtime="20231222 16:58:09.058"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:09.063" level="INFO">${STATE["Email"]} = hazelgarg@example.com</msg>
<status status="PASS" starttime="20231222 16:58:09.061" endtime="20231222 16:58:09.064"/>
</kw>
<status status="PASS" starttime="20231222 16:58:09.059" endtime="20231222 16:58:09.064"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.059" endtime="20231222 16:58:09.065"/>
</if>
<status status="PASS" starttime="20231222 16:58:08.537" endtime="20231222 16:58:09.065"/>
</kw>
<kw name="Enter &quot;phone&quot; in &quot;Số điện thoại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:09.169" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:09.068" endtime="20231222 16:58:09.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:09.173" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:09.171" endtime="20231222 16:58:09.174"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:09.186" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:09.175" endtime="20231222 16:58:09.187"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:09.190" endtime="20231222 16:58:09.191"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.188" endtime="20231222 16:58:09.191"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.188" endtime="20231222 16:58:09.192"/>
</if>
<status status="PASS" starttime="20231222 16:58:09.067" endtime="20231222 16:58:09.192"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:09.196" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:09.195" endtime="20231222 16:58:09.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:09.198" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:09.197" endtime="20231222 16:58:09.198"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:09.200" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:09.199" endtime="20231222 16:58:09.200"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.203" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:09.206" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:09.201" endtime="20231222 16:58:09.208"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:09.211" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231222 16:58:09.210" endtime="20231222 16:58:09.212"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.214" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:09.214" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:09.213" endtime="20231222 16:58:09.215"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.217" endtime="20231222 16:58:09.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.219" endtime="20231222 16:58:09.220"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.216" endtime="20231222 16:58:09.220"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.223" endtime="20231222 16:58:09.224"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.225" endtime="20231222 16:58:09.225"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.226" endtime="20231222 16:58:09.227"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.221" endtime="20231222 16:58:09.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.230" endtime="20231222 16:58:09.230"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.231" endtime="20231222 16:58:09.232"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.228" endtime="20231222 16:58:09.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.235" endtime="20231222 16:58:09.236"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.237" endtime="20231222 16:58:09.238"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.234" endtime="20231222 16:58:09.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.242" endtime="20231222 16:58:09.243"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.241" endtime="20231222 16:58:09.243"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:09.245" endtime="20231222 16:58:09.246"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.244" endtime="20231222 16:58:09.247"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231222 16:58:09.251" level="INFO">${new_text} = 62708708</msg>
<status status="PASS" starttime="20231222 16:58:09.249" endtime="20231222 16:58:09.251"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231222 16:58:09.253" level="INFO">${new_text} = 62708708</msg>
<status status="PASS" starttime="20231222 16:58:09.252" endtime="20231222 16:58:09.254"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231222 16:58:09.257" level="INFO">${List} = ['3', '7', '8', '9']</msg>
<status status="PASS" starttime="20231222 16:58:09.255" endtime="20231222 16:58:09.258"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231222 16:58:09.270" level="INFO">${2nd_number} = 8</msg>
<status status="PASS" starttime="20231222 16:58:09.259" endtime="20231222 16:58:09.271"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231222 16:58:09.275" level="INFO">${2nd_number} = 8</msg>
<status status="PASS" starttime="20231222 16:58:09.274" endtime="20231222 16:58:09.276"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231222 16:58:09.278" level="INFO">${new_text} = 0862708708</msg>
<status status="PASS" starttime="20231222 16:58:09.277" endtime="20231222 16:58:09.278"/>
</kw>
<status status="PASS" starttime="20231222 16:58:09.247" endtime="20231222 16:58:09.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.280" endtime="20231222 16:58:09.280"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.279" endtime="20231222 16:58:09.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.283" endtime="20231222 16:58:09.283"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.281" endtime="20231222 16:58:09.284"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.285" endtime="20231222 16:58:09.286"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.285" endtime="20231222 16:58:09.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.290" endtime="20231222 16:58:09.291"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.287" endtime="20231222 16:58:09.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.293" endtime="20231222 16:58:09.293"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.292" endtime="20231222 16:58:09.294"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.215" endtime="20231222 16:58:09.294"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.296" level="INFO">Length is 8</msg>
<msg timestamp="20231222 16:58:09.296" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231222 16:58:09.295" endtime="20231222 16:58:09.297"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:09.301" level="INFO">${text} = 0862708708</msg>
<status status="PASS" starttime="20231222 16:58:09.299" endtime="20231222 16:58:09.301"/>
</kw>
<status status="PASS" starttime="20231222 16:58:09.298" endtime="20231222 16:58:09.302"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.297" endtime="20231222 16:58:09.302"/>
</if>
<msg timestamp="20231222 16:58:09.303" level="INFO">${text} = 0862708708</msg>
<status status="PASS" starttime="20231222 16:58:09.193" endtime="20231222 16:58:09.304"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:09.309" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số điện thoại"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:09.304" endtime="20231222 16:58:09.309"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:09.310" endtime="20231222 16:58:09.400"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:09.401" endtime="20231222 16:58:09.444"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:09.446" level="INFO">Fills the text '0862708708' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:09.445" endtime="20231222 16:58:09.496"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:09.537" level="INFO">Text: '0862708708'</msg>
<msg timestamp="20231222 16:58:09.538" level="INFO">${condition} = 0862708708</msg>
<status status="PASS" starttime="20231222 16:58:09.497" endtime="20231222 16:58:09.540"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.544" endtime="20231222 16:58:09.545"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.546" endtime="20231222 16:58:09.546"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.541" endtime="20231222 16:58:09.547"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:09.541" endtime="20231222 16:58:09.547"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:09.548" endtime="20231222 16:58:09.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.624" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:09.626" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:09.621" endtime="20231222 16:58:09.627"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:09.631" level="INFO">${STATE["Số điện thoại"]} = 0862708708</msg>
<status status="PASS" starttime="20231222 16:58:09.629" endtime="20231222 16:58:09.631"/>
</kw>
<status status="PASS" starttime="20231222 16:58:09.627" endtime="20231222 16:58:09.632"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.627" endtime="20231222 16:58:09.632"/>
</if>
<status status="PASS" starttime="20231222 16:58:09.066" endtime="20231222 16:58:09.633"/>
</kw>
<kw name="Click select &quot;Giới tính&quot; with &quot;Nam&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:09.639" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:09.637" endtime="20231222 16:58:09.641"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:09.644" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:09.643" endtime="20231222 16:58:09.645"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:09.647" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:09.646" endtime="20231222 16:58:09.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.650" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:09.650" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:09.649" endtime="20231222 16:58:09.651"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:09.653" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:09.652" endtime="20231222 16:58:09.653"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.657" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:09.658" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:09.654" endtime="20231222 16:58:09.659"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.661" endtime="20231222 16:58:09.662"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.663" endtime="20231222 16:58:09.663"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.660" endtime="20231222 16:58:09.663"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.665" endtime="20231222 16:58:09.666"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.667" endtime="20231222 16:58:09.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.668" endtime="20231222 16:58:09.669"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.664" endtime="20231222 16:58:09.670"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.675" endtime="20231222 16:58:09.676"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.676" endtime="20231222 16:58:09.677"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.670" endtime="20231222 16:58:09.677"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.679" endtime="20231222 16:58:09.679"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.680" endtime="20231222 16:58:09.681"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.678" endtime="20231222 16:58:09.681"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.683" endtime="20231222 16:58:09.683"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.682" endtime="20231222 16:58:09.683"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:09.685" endtime="20231222 16:58:09.686"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.684" endtime="20231222 16:58:09.687"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.692" endtime="20231222 16:58:09.693"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.695" endtime="20231222 16:58:09.695"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.696" endtime="20231222 16:58:09.697"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.698" endtime="20231222 16:58:09.699"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.700" endtime="20231222 16:58:09.700"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.701" endtime="20231222 16:58:09.702"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.687" endtime="20231222 16:58:09.703"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.707" endtime="20231222 16:58:09.708"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.703" endtime="20231222 16:58:09.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.710" endtime="20231222 16:58:09.711"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.709" endtime="20231222 16:58:09.711"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.713" endtime="20231222 16:58:09.714"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.712" endtime="20231222 16:58:09.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.717" endtime="20231222 16:58:09.717"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.715" endtime="20231222 16:58:09.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:09.720" endtime="20231222 16:58:09.721"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:09.719" endtime="20231222 16:58:09.724"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.660" endtime="20231222 16:58:09.724"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:09.726" level="INFO">Length is 3</msg>
<msg timestamp="20231222 16:58:09.727" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231222 16:58:09.725" endtime="20231222 16:58:09.727"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:09.731" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231222 16:58:09.730" endtime="20231222 16:58:09.732"/>
</kw>
<status status="PASS" starttime="20231222 16:58:09.728" endtime="20231222 16:58:09.732"/>
</branch>
<status status="PASS" starttime="20231222 16:58:09.728" endtime="20231222 16:58:09.733"/>
</if>
<msg timestamp="20231222 16:58:09.734" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231222 16:58:09.635" endtime="20231222 16:58:09.734"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231222 16:58:09.739" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231222 16:58:09.736" endtime="20231222 16:58:09.740"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:09.761" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231222 16:58:09.744" endtime="20231222 16:58:09.761"/>
</kw>
<status status="PASS" starttime="20231222 16:58:09.741" endtime="20231222 16:58:09.762"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:09.763" endtime="20231222 16:58:09.930"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231222 16:58:09.933" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231222 16:58:09.931" endtime="20231222 16:58:09.933"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:09.935" level="INFO">Fills the text 'Nam' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:09.934" endtime="20231222 16:58:09.995"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:09.996" endtime="20231222 16:58:10.271"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:10.277" level="INFO">Length is 3</msg>
<msg timestamp="20231222 16:58:10.278" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231222 16:58:10.276" endtime="20231222 16:58:10.278"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:10.282" level="INFO">${STATE["Giới tính"]} = Nam</msg>
<status status="PASS" starttime="20231222 16:58:10.280" endtime="20231222 16:58:10.282"/>
</kw>
<status status="PASS" starttime="20231222 16:58:10.279" endtime="20231222 16:58:10.283"/>
</branch>
<status status="PASS" starttime="20231222 16:58:10.279" endtime="20231222 16:58:10.283"/>
</if>
<status status="PASS" starttime="20231222 16:58:09.634" endtime="20231222 16:58:10.284"/>
</kw>
<kw name="Click select &quot;Loại tài khoản&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:10.290" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:10.287" endtime="20231222 16:58:10.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:10.293" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:10.292" endtime="20231222 16:58:10.294"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:10.296" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:10.295" endtime="20231222 16:58:10.297"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:10.298" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:10.299" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:10.298" endtime="20231222 16:58:10.299"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:10.301" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:10.300" endtime="20231222 16:58:10.301"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:10.303" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:10.303" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:10.302" endtime="20231222 16:58:10.304"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.309" endtime="20231222 16:58:10.313"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.314" endtime="20231222 16:58:10.314"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.305" endtime="20231222 16:58:10.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.317" endtime="20231222 16:58:10.317"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.318" endtime="20231222 16:58:10.319"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.321" endtime="20231222 16:58:10.327"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.316" endtime="20231222 16:58:10.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.332" endtime="20231222 16:58:10.332"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.333" endtime="20231222 16:58:10.334"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.330" endtime="20231222 16:58:10.335"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.337" endtime="20231222 16:58:10.338"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.342" endtime="20231222 16:58:10.343"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.335" endtime="20231222 16:58:10.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.346" endtime="20231222 16:58:10.346"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.345" endtime="20231222 16:58:10.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:10.348" endtime="20231222 16:58:10.348"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.347" endtime="20231222 16:58:10.349"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.350" endtime="20231222 16:58:10.351"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.352" endtime="20231222 16:58:10.352"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.353" endtime="20231222 16:58:10.353"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.354" endtime="20231222 16:58:10.392"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.394" endtime="20231222 16:58:10.395"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.396" endtime="20231222 16:58:10.397"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.349" endtime="20231222 16:58:10.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.400" endtime="20231222 16:58:10.400"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.399" endtime="20231222 16:58:10.401"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.402" endtime="20231222 16:58:10.403"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.401" endtime="20231222 16:58:10.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.408" endtime="20231222 16:58:10.409"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.404" endtime="20231222 16:58:10.409"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.411" endtime="20231222 16:58:10.412"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.410" endtime="20231222 16:58:10.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:10.415" endtime="20231222 16:58:10.415"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:10.414" endtime="20231222 16:58:10.416"/>
</branch>
<status status="PASS" starttime="20231222 16:58:10.304" endtime="20231222 16:58:10.416"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:10.418" level="INFO">Length is 11</msg>
<msg timestamp="20231222 16:58:10.418" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231222 16:58:10.417" endtime="20231222 16:58:10.419"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:10.426" level="INFO">${text} = Farmer Side</msg>
<status status="PASS" starttime="20231222 16:58:10.421" endtime="20231222 16:58:10.426"/>
</kw>
<status status="PASS" starttime="20231222 16:58:10.420" endtime="20231222 16:58:10.427"/>
</branch>
<status status="PASS" starttime="20231222 16:58:10.419" endtime="20231222 16:58:10.428"/>
</if>
<msg timestamp="20231222 16:58:10.428" level="INFO">${text} = Farmer Side</msg>
<status status="PASS" starttime="20231222 16:58:10.286" endtime="20231222 16:58:10.428"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231222 16:58:10.432" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231222 16:58:10.429" endtime="20231222 16:58:10.433"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:10.497" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231222 16:58:10.467" endtime="20231222 16:58:10.497"/>
</kw>
<status status="PASS" starttime="20231222 16:58:10.464" endtime="20231222 16:58:10.498"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:10.499" endtime="20231222 16:58:10.644"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231222 16:58:10.647" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231222 16:58:10.645" endtime="20231222 16:58:10.647"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:10.649" level="INFO">Fills the text 'Farmer Side' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:10.648" endtime="20231222 16:58:10.744"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:10.745" endtime="20231222 16:58:10.935"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:10.936" level="INFO">Length is 11</msg>
<msg timestamp="20231222 16:58:10.937" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231222 16:58:10.936" endtime="20231222 16:58:10.941"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:10.947" level="INFO">${STATE["Loại tài khoản"]} = Farmer Side</msg>
<status status="PASS" starttime="20231222 16:58:10.945" endtime="20231222 16:58:10.948"/>
</kw>
<status status="PASS" starttime="20231222 16:58:10.942" endtime="20231222 16:58:10.948"/>
</branch>
<status status="PASS" starttime="20231222 16:58:10.941" endtime="20231222 16:58:10.949"/>
</if>
<status status="PASS" starttime="20231222 16:58:10.284" endtime="20231222 16:58:10.950"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:11.058" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:10.953" endtime="20231222 16:58:11.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.061" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:11.060" endtime="20231222 16:58:11.061"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:11.108" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:11.062" endtime="20231222 16:58:11.109"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:11.111" endtime="20231222 16:58:11.112"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.110" endtime="20231222 16:58:11.112"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.109" endtime="20231222 16:58:11.113"/>
</if>
<status status="PASS" starttime="20231222 16:58:10.952" endtime="20231222 16:58:11.113"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.116" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:11.116" endtime="20231222 16:58:11.117"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.118" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:11.118" endtime="20231222 16:58:11.119"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:11.121" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231222 16:58:11.120" endtime="20231222 16:58:11.121"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.126" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:11.127" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231222 16:58:11.125" endtime="20231222 16:58:11.127"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:11.129" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231222 16:58:11.128" endtime="20231222 16:58:11.130"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.131" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:11.132" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:11.130" endtime="20231222 16:58:11.132"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.133" endtime="20231222 16:58:11.134"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.135" endtime="20231222 16:58:11.136"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.132" endtime="20231222 16:58:11.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.139" endtime="20231222 16:58:11.141"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.142" endtime="20231222 16:58:11.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.144" endtime="20231222 16:58:11.144"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.137" endtime="20231222 16:58:11.145"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.146" endtime="20231222 16:58:11.146"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.147" endtime="20231222 16:58:11.148"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.145" endtime="20231222 16:58:11.148"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.149" endtime="20231222 16:58:11.150"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.151" endtime="20231222 16:58:11.151"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.149" endtime="20231222 16:58:11.152"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.153" endtime="20231222 16:58:11.158"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.152" endtime="20231222 16:58:11.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:11.161" endtime="20231222 16:58:11.162"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.160" endtime="20231222 16:58:11.162"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.164" endtime="20231222 16:58:11.165"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.165" endtime="20231222 16:58:11.166"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.167" endtime="20231222 16:58:11.167"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.168" endtime="20231222 16:58:11.169"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.169" endtime="20231222 16:58:11.170"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.174" endtime="20231222 16:58:11.175"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.163" endtime="20231222 16:58:11.175"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.177" endtime="20231222 16:58:11.178"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.176" endtime="20231222 16:58:11.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231222 16:58:11.181" level="INFO">${new_text} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.180" endtime="20231222 16:58:11.182"/>
</kw>
<status status="PASS" starttime="20231222 16:58:11.179" endtime="20231222 16:58:11.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.197" endtime="20231222 16:58:11.197"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.183" endtime="20231222 16:58:11.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.199" endtime="20231222 16:58:11.200"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.198" endtime="20231222 16:58:11.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.202" endtime="20231222 16:58:11.203"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.201" endtime="20231222 16:58:11.203"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.132" endtime="20231222 16:58:11.204"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.208" level="INFO">Length is 8</msg>
<msg timestamp="20231222 16:58:11.209" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231222 16:58:11.207" endtime="20231222 16:58:11.209"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:11.213" level="INFO">${text} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.212" endtime="20231222 16:58:11.213"/>
</kw>
<status status="PASS" starttime="20231222 16:58:11.211" endtime="20231222 16:58:11.214"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.210" endtime="20231222 16:58:11.214"/>
</if>
<msg timestamp="20231222 16:58:11.215" level="INFO">${text} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.114" endtime="20231222 16:58:11.215"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:11.218" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:11.216" endtime="20231222 16:58:11.218"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:11.219" endtime="20231222 16:58:11.307"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:11.309" endtime="20231222 16:58:11.350"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:11.352" level="INFO">Fills the text '#SI11Cd+@2' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:11.350" endtime="20231222 16:58:11.402"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:11.450" level="INFO">Text: '#SI11Cd+@2'</msg>
<msg timestamp="20231222 16:58:11.450" level="INFO">${condition} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.403" endtime="20231222 16:58:11.451"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.453" endtime="20231222 16:58:11.454"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.458" endtime="20231222 16:58:11.459"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.451" endtime="20231222 16:58:11.459"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:11.451" endtime="20231222 16:58:11.460"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:11.461" endtime="20231222 16:58:11.535"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.537" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:11.537" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:11.536" endtime="20231222 16:58:11.537"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:11.543" level="INFO">${STATE["Mật khẩu"]} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.542" endtime="20231222 16:58:11.544"/>
</kw>
<status status="PASS" starttime="20231222 16:58:11.540" endtime="20231222 16:58:11.545"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.540" endtime="20231222 16:58:11.545"/>
</if>
<status status="PASS" starttime="20231222 16:58:10.950" endtime="20231222 16:58:11.545"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Xác nhận mật khẩu&quot; with &quot;_@Mật khẩu@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:11.647" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:11.547" endtime="20231222 16:58:11.647"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.649" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:11.648" endtime="20231222 16:58:11.649"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:11.660" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:11.650" endtime="20231222 16:58:11.660"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:11.662" endtime="20231222 16:58:11.662"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.661" endtime="20231222 16:58:11.663"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.661" endtime="20231222 16:58:11.663"/>
</if>
<status status="PASS" starttime="20231222 16:58:11.546" endtime="20231222 16:58:11.663"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.666" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231222 16:58:11.665" endtime="20231222 16:58:11.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.668" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231222 16:58:11.667" endtime="20231222 16:58:11.668"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:11.671" level="INFO">${containsS} = ['Mật khẩu']</msg>
<status status="PASS" starttime="20231222 16:58:11.669" endtime="20231222 16:58:11.672"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.674" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:11.674" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231222 16:58:11.673" endtime="20231222 16:58:11.674"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:11.676" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:11.675" endtime="20231222 16:58:11.677"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.679" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:11.679" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:11.678" endtime="20231222 16:58:11.679"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.685" level="INFO">${new_text} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.682" endtime="20231222 16:58:11.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:11.691" level="INFO">${symbol} = _@Mật khẩu@_</msg>
<status status="PASS" starttime="20231222 16:58:11.686" endtime="20231222 16:58:11.691"/>
</kw>
<status status="PASS" starttime="20231222 16:58:11.680" endtime="20231222 16:58:11.692"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.693" endtime="20231222 16:58:11.694"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.694" endtime="20231222 16:58:11.695"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.696" endtime="20231222 16:58:11.696"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.692" endtime="20231222 16:58:11.697"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.698" endtime="20231222 16:58:11.699"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.700" endtime="20231222 16:58:11.700"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.697" endtime="20231222 16:58:11.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.702" endtime="20231222 16:58:11.703"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.707" endtime="20231222 16:58:11.707"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.701" endtime="20231222 16:58:11.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.709" endtime="20231222 16:58:11.710"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.709" endtime="20231222 16:58:11.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231222 16:58:11.714" endtime="20231222 16:58:11.714"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.713" endtime="20231222 16:58:11.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.716" endtime="20231222 16:58:11.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.718" endtime="20231222 16:58:11.719"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.720" endtime="20231222 16:58:11.720"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.722" endtime="20231222 16:58:11.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.724" endtime="20231222 16:58:11.724"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.725" endtime="20231222 16:58:11.725"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.715" endtime="20231222 16:58:11.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.727" endtime="20231222 16:58:11.727"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.726" endtime="20231222 16:58:11.728"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.729" endtime="20231222 16:58:11.730"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.728" endtime="20231222 16:58:11.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.732" endtime="20231222 16:58:11.732"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.731" endtime="20231222 16:58:11.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.734" endtime="20231222 16:58:11.735"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.733" endtime="20231222 16:58:11.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.736" endtime="20231222 16:58:11.737"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.736" endtime="20231222 16:58:11.739"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.680" endtime="20231222 16:58:11.740"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:11.741" level="INFO">Length is 12</msg>
<msg timestamp="20231222 16:58:11.742" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231222 16:58:11.740" endtime="20231222 16:58:11.742"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231222 16:58:11.745" level="INFO">${text} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.744" endtime="20231222 16:58:11.745"/>
</kw>
<status status="PASS" starttime="20231222 16:58:11.743" endtime="20231222 16:58:11.746"/>
</branch>
<status status="PASS" starttime="20231222 16:58:11.743" endtime="20231222 16:58:11.746"/>
</if>
<msg timestamp="20231222 16:58:11.747" level="INFO">${text} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.664" endtime="20231222 16:58:11.747"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231222 16:58:11.750" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Xác nhận mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231222 16:58:11.749" endtime="20231222 16:58:11.750"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:11.751" endtime="20231222 16:58:11.817"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:11.818" endtime="20231222 16:58:11.856"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:11.859" level="INFO">Fills the text '#SI11Cd+@2' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:11.857" endtime="20231222 16:58:11.909"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:11.948" level="INFO">Text: '#SI11Cd+@2'</msg>
<msg timestamp="20231222 16:58:11.948" level="INFO">${condition} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:11.910" endtime="20231222 16:58:11.949"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.951" endtime="20231222 16:58:11.952"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:11.953" endtime="20231222 16:58:11.953"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:11.950" endtime="20231222 16:58:11.954"/>
</iter>
<status status="NOT RUN" starttime="20231222 16:58:11.950" endtime="20231222 16:58:11.956"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231222 16:58:11.957" endtime="20231222 16:58:12.033"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:12.035" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:12.036" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:12.034" endtime="20231222 16:58:12.036"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:12.041" level="INFO">${STATE["Xác nhận mật khẩu"]} = #SI11Cd+@2</msg>
<status status="PASS" starttime="20231222 16:58:12.039" endtime="20231222 16:58:12.041"/>
</kw>
<status status="PASS" starttime="20231222 16:58:12.037" endtime="20231222 16:58:12.042"/>
</branch>
<status status="PASS" starttime="20231222 16:58:12.036" endtime="20231222 16:58:12.043"/>
</if>
<status status="PASS" starttime="20231222 16:58:11.546" endtime="20231222 16:58:12.043"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:12.149" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:12.047" endtime="20231222 16:58:12.149"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:12.160" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231222 16:58:12.150" endtime="20231222 16:58:12.161"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:12.162" endtime="20231222 16:58:12.276"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:12.381" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:12.279" endtime="20231222 16:58:12.382"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:12.383" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231222 16:58:12.383" endtime="20231222 16:58:12.384"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:12.530" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:12.384" endtime="20231222 16:58:12.530"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:12.533" endtime="20231222 16:58:12.534"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231222 16:58:12.535" endtime="20231222 16:58:12.535"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231222 16:58:12.536" endtime="20231222 16:58:12.536"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:12.532" endtime="20231222 16:58:12.536"/>
</branch>
<status status="PASS" starttime="20231222 16:58:12.532" endtime="20231222 16:58:12.537"/>
</if>
<status status="PASS" starttime="20231222 16:58:12.278" endtime="20231222 16:58:12.537"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231222 16:58:13.136" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:13.137" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:13.170" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:13.170" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231222 16:58:13.196" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231222 16:58:12.541" endtime="20231222 16:58:13.197"/>
</kw>
<status status="PASS" starttime="20231222 16:58:12.161" endtime="20231222 16:58:13.199"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:13.201" endtime="20231222 16:58:13.201"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231222 16:58:13.202" endtime="20231222 16:58:13.203"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231222 16:58:13.204" endtime="20231222 16:58:13.208"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:13.200" endtime="20231222 16:58:13.210"/>
</branch>
<status status="PASS" starttime="20231222 16:58:12.161" endtime="20231222 16:58:13.211"/>
</if>
<status status="PASS" starttime="20231222 16:58:12.045" endtime="20231222 16:58:13.211"/>
</kw>
<kw name="User look message &quot;Tạo tài khoản thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:13.216" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231222 16:58:13.214" endtime="20231222 16:58:13.216"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:13.219" level="INFO">Length is 0</msg>
<msg timestamp="20231222 16:58:13.219" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231222 16:58:13.217" endtime="20231222 16:58:13.220"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:13.234" endtime="20231222 16:58:13.235"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:13.223" endtime="20231222 16:58:13.235"/>
</branch>
<status status="PASS" starttime="20231222 16:58:13.223" endtime="20231222 16:58:13.236"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231222 16:58:13.328" level="INFO">Text: 'Tạo tài khoản thành công'</msg>
<status status="PASS" starttime="20231222 16:58:13.252" endtime="20231222 16:58:13.329"/>
</kw>
<status status="PASS" starttime="20231222 16:58:13.245" endtime="20231222 16:58:13.330"/>
</kw>
<status status="PASS" starttime="20231222 16:58:13.236" endtime="20231222 16:58:13.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:13.332" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231222 16:58:13.331" endtime="20231222 16:58:13.333"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:13.758" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231222 16:58:13.759" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231222 16:58:13.760" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231222 16:58:13.345" endtime="20231222 16:58:13.763"/>
</kw>
<status status="FAIL" starttime="20231222 16:58:13.335" endtime="20231222 16:58:13.764"/>
</kw>
<msg timestamp="20231222 16:58:13.765" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231222 16:58:13.334" endtime="20231222 16:58:13.765"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:13.767" endtime="20231222 16:58:13.768"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:13.766" endtime="20231222 16:58:13.768"/>
</branch>
<status status="PASS" starttime="20231222 16:58:13.766" endtime="20231222 16:58:13.769"/>
</if>
<status status="PASS" starttime="20231222 16:58:13.213" endtime="20231222 16:58:13.769"/>
</kw>
<status status="PASS" starttime="20231222 16:58:02.562" endtime="20231222 16:58:13.770"/>
</kw>
<kw name="When Enter date in placeholder &quot;Bắt đầu&quot; with &quot;${yesterday}&quot;" library="common" sourcename="Enter date in placeholder &quot;${name}&quot; with &quot;${date}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:13.885" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:13.782" endtime="20231222 16:58:13.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:13.887" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:13.886" endtime="20231222 16:58:13.887"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:13.903" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:13.890" endtime="20231222 16:58:13.903"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:13.908" endtime="20231222 16:58:13.909"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:13.904" endtime="20231222 16:58:13.910"/>
</branch>
<status status="PASS" starttime="20231222 16:58:13.904" endtime="20231222 16:58:13.911"/>
</if>
<status status="PASS" starttime="20231222 16:58:13.780" endtime="20231222 16:58:13.911"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${name}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231222 16:58:13.930" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231222 16:58:13.930" level="INFO">${element} = //input[contains(@placeholder, "Bắt đầu")]</msg>
<status status="PASS" starttime="20231222 16:58:13.912" endtime="20231222 16:58:13.931"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:13.932" endtime="20231222 16:58:14.001"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231222 16:58:14.002" level="INFO">${date} = 2023-12-21</msg>
<status status="PASS" starttime="20231222 16:58:14.001" endtime="20231222 16:58:14.003"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${date}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:14.007" level="INFO">Fills the text '2023-12-21' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:14.003" endtime="20231222 16:58:14.328"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>Press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20231222 16:58:14.329" endtime="20231222 16:58:14.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${date}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:14.399" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:14.400" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:14.399" endtime="20231222 16:58:14.400"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:14.403" level="INFO">${STATE["Bắt đầu"]} = Bắt đầu</msg>
<status status="PASS" starttime="20231222 16:58:14.402" endtime="20231222 16:58:14.403"/>
</kw>
<status status="PASS" starttime="20231222 16:58:14.401" endtime="20231222 16:58:14.405"/>
</branch>
<status status="PASS" starttime="20231222 16:58:14.401" endtime="20231222 16:58:14.406"/>
</if>
<status status="PASS" starttime="20231222 16:58:13.779" endtime="20231222 16:58:14.406"/>
</kw>
<kw name="When Enter date in placeholder &quot;Kết thúc&quot; with &quot;${yesterday}&quot;" library="common" sourcename="Enter date in placeholder &quot;${name}&quot; with &quot;${date}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:14.553" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:14.451" endtime="20231222 16:58:14.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:14.562" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:14.554" endtime="20231222 16:58:14.563"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:14.585" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:14.564" endtime="20231222 16:58:14.586"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:14.588" endtime="20231222 16:58:14.590"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:14.586" endtime="20231222 16:58:14.590"/>
</branch>
<status status="PASS" starttime="20231222 16:58:14.586" endtime="20231222 16:58:14.591"/>
</if>
<status status="PASS" starttime="20231222 16:58:14.443" endtime="20231222 16:58:14.592"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${name}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231222 16:58:14.630" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231222 16:58:14.630" level="INFO">${element} = //input[contains(@placeholder, "Kết thúc")]</msg>
<status status="PASS" starttime="20231222 16:58:14.592" endtime="20231222 16:58:14.631"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:14.632" endtime="20231222 16:58:14.768"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231222 16:58:14.769" level="INFO">${date} = 2023-12-21</msg>
<status status="PASS" starttime="20231222 16:58:14.769" endtime="20231222 16:58:14.769"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${date}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:14.770" level="INFO">Fills the text '2023-12-21' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:14.770" endtime="20231222 16:58:14.869"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>Press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20231222 16:58:14.870" endtime="20231222 16:58:14.998"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${date}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:14.999" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:14.999" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:14.998" endtime="20231222 16:58:14.999"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:15.001" level="INFO">${STATE["Kết thúc"]} = Kết thúc</msg>
<status status="PASS" starttime="20231222 16:58:15.000" endtime="20231222 16:58:15.001"/>
</kw>
<status status="PASS" starttime="20231222 16:58:15.000" endtime="20231222 16:58:15.002"/>
</branch>
<status status="PASS" starttime="20231222 16:58:15.000" endtime="20231222 16:58:15.002"/>
</if>
<status status="PASS" starttime="20231222 16:58:14.442" endtime="20231222 16:58:15.002"/>
</kw>
<kw name="Then &quot;_@Họ và tên@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:15.015" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231222 16:58:15.014" endtime="20231222 16:58:15.016"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:15.018" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:15.019" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231222 16:58:15.017" endtime="20231222 16:58:15.020"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:15.028" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:15.023" endtime="20231222 16:58:15.029"/>
</kw>
<status status="PASS" starttime="20231222 16:58:15.022" endtime="20231222 16:58:15.030"/>
</branch>
<status status="PASS" starttime="20231222 16:58:15.021" endtime="20231222 16:58:15.030"/>
</if>
<msg timestamp="20231222 16:58:15.031" level="INFO">${name} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:15.012" endtime="20231222 16:58:15.031"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:15.033" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_19 Aperiam expedita.")]</msg>
<status status="PASS" starttime="20231222 16:58:15.032" endtime="20231222 16:58:15.033"/>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:15.119" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_19 Aperiam expedita.")] at state detached</msg>
<status status="PASS" starttime="20231222 16:58:15.037" endtime="20231222 16:58:15.120"/>
</kw>
<status status="PASS" starttime="20231222 16:58:15.034" endtime="20231222 16:58:15.120"/>
</kw>
<status status="PASS" starttime="20231222 16:58:15.011" endtime="20231222 16:58:15.122"/>
</kw>
<kw name="When Enter date in placeholder &quot;Bắt đầu&quot; with &quot;${today}&quot;" library="common" sourcename="Enter date in placeholder &quot;${name}&quot; with &quot;${date}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:15.232" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:15.130" endtime="20231222 16:58:15.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:15.234" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:15.233" endtime="20231222 16:58:15.234"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:15.280" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:15.235" endtime="20231222 16:58:15.280"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:15.282" endtime="20231222 16:58:15.282"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:15.281" endtime="20231222 16:58:15.283"/>
</branch>
<status status="PASS" starttime="20231222 16:58:15.281" endtime="20231222 16:58:15.283"/>
</if>
<status status="PASS" starttime="20231222 16:58:15.128" endtime="20231222 16:58:15.284"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${name}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231222 16:58:15.298" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231222 16:58:15.299" level="INFO">${element} = //input[contains(@placeholder, "Bắt đầu")]</msg>
<status status="PASS" starttime="20231222 16:58:15.285" endtime="20231222 16:58:15.299"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:15.300" endtime="20231222 16:58:15.511"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231222 16:58:15.514" level="INFO">${date} = 2023-12-22</msg>
<status status="PASS" starttime="20231222 16:58:15.512" endtime="20231222 16:58:15.515"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${date}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:15.517" level="INFO">Fills the text '2023-12-22' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:15.516" endtime="20231222 16:58:15.593"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>Press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20231222 16:58:15.594" endtime="20231222 16:58:15.675"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${date}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:15.676" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:15.677" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:15.676" endtime="20231222 16:58:15.677"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:15.679" level="INFO">${STATE["Bắt đầu"]} = Bắt đầu</msg>
<status status="PASS" starttime="20231222 16:58:15.679" endtime="20231222 16:58:15.680"/>
</kw>
<status status="PASS" starttime="20231222 16:58:15.678" endtime="20231222 16:58:15.680"/>
</branch>
<status status="PASS" starttime="20231222 16:58:15.678" endtime="20231222 16:58:15.681"/>
</if>
<status status="PASS" starttime="20231222 16:58:15.125" endtime="20231222 16:58:15.681"/>
</kw>
<kw name="When Enter date in placeholder &quot;Kết thúc&quot; with &quot;${today}&quot;" library="common" sourcename="Enter date in placeholder &quot;${name}&quot; with &quot;${date}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:15.810" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:15.708" endtime="20231222 16:58:15.811"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:15.813" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:15.812" endtime="20231222 16:58:15.814"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:15.829" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:15.815" endtime="20231222 16:58:15.829"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:15.831" endtime="20231222 16:58:15.831"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:15.830" endtime="20231222 16:58:15.832"/>
</branch>
<status status="PASS" starttime="20231222 16:58:15.830" endtime="20231222 16:58:15.832"/>
</if>
<status status="PASS" starttime="20231222 16:58:15.706" endtime="20231222 16:58:15.832"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${name}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231222 16:58:15.858" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231222 16:58:15.859" level="INFO">${element} = //input[contains(@placeholder, "Kết thúc")]</msg>
<status status="PASS" starttime="20231222 16:58:15.833" endtime="20231222 16:58:15.860"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:15.861" endtime="20231222 16:58:15.919"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${date}</var>
<arg>${date}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231222 16:58:15.925" level="INFO">${date} = 2023-12-22</msg>
<status status="PASS" starttime="20231222 16:58:15.924" endtime="20231222 16:58:15.926"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${date}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231222 16:58:15.929" level="INFO">Fills the text '2023-12-22' in the given field.</msg>
<status status="PASS" starttime="20231222 16:58:15.928" endtime="20231222 16:58:16.061"/>
</kw>
<kw name="Keyboard Key" library="Browser">
<arg>Press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20231222 16:58:16.061" endtime="20231222 16:58:16.158"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${date}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:16.159" level="INFO">Length is 10</msg>
<msg timestamp="20231222 16:58:16.160" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231222 16:58:16.159" endtime="20231222 16:58:16.160"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${name}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231222 16:58:16.163" level="INFO">${STATE["Kết thúc"]} = Kết thúc</msg>
<status status="PASS" starttime="20231222 16:58:16.162" endtime="20231222 16:58:16.164"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.161" endtime="20231222 16:58:16.164"/>
</branch>
<status status="PASS" starttime="20231222 16:58:16.160" endtime="20231222 16:58:16.164"/>
</if>
<status status="PASS" starttime="20231222 16:58:15.702" endtime="20231222 16:58:16.165"/>
</kw>
<kw name="Then &quot;_@Họ và tên@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:16.346" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:16.243" endtime="20231222 16:58:16.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:16.348" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:16.347" endtime="20231222 16:58:16.348"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:16.437" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:16.349" endtime="20231222 16:58:16.440"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:16.444" endtime="20231222 16:58:16.445"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:16.441" endtime="20231222 16:58:16.446"/>
</branch>
<status status="PASS" starttime="20231222 16:58:16.441" endtime="20231222 16:58:16.447"/>
</if>
<status status="PASS" starttime="20231222 16:58:16.241" endtime="20231222 16:58:16.447"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:16.449" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231222 16:58:16.449" endtime="20231222 16:58:16.450"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:16.451" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:16.451" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231222 16:58:16.450" endtime="20231222 16:58:16.451"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:16.453" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:16.452" endtime="20231222 16:58:16.453"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.451" endtime="20231222 16:58:16.453"/>
</branch>
<status status="PASS" starttime="20231222 16:58:16.451" endtime="20231222 16:58:16.454"/>
</if>
<msg timestamp="20231222 16:58:16.454" level="INFO">${name} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:16.448" endtime="20231222 16:58:16.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:16.457" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_19 Aperiam expedita.")]</msg>
<status status="PASS" starttime="20231222 16:58:16.456" endtime="20231222 16:58:16.457"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231222 16:58:16.474" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_19 Aperiam expedita.")] at state attached</msg>
<status status="PASS" starttime="20231222 16:58:16.460" endtime="20231222 16:58:16.474"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.458" endtime="20231222 16:58:16.475"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.235" endtime="20231222 16:58:16.475"/>
</kw>
<kw name="Then Click on the &quot;Xóa&quot; button in the &quot;_@Họ và tên@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:16.581" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:16.480" endtime="20231222 16:58:16.581"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:16.685" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:16.583" endtime="20231222 16:58:16.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:16.686" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:16.685" endtime="20231222 16:58:16.686"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:16.696" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:16.686" endtime="20231222 16:58:16.697"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:16.699" endtime="20231222 16:58:16.699"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:16.698" endtime="20231222 16:58:16.700"/>
</branch>
<status status="PASS" starttime="20231222 16:58:16.697" endtime="20231222 16:58:16.701"/>
</if>
<status status="PASS" starttime="20231222 16:58:16.582" endtime="20231222 16:58:16.701"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231222 16:58:16.705" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231222 16:58:16.703" endtime="20231222 16:58:16.706"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231222 16:58:16.708" level="INFO">Length is 1</msg>
<msg timestamp="20231222 16:58:16.708" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231222 16:58:16.707" endtime="20231222 16:58:16.708"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:16.710" level="INFO">${text} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:16.709" endtime="20231222 16:58:16.710"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.709" endtime="20231222 16:58:16.711"/>
</branch>
<status status="PASS" starttime="20231222 16:58:16.709" endtime="20231222 16:58:16.711"/>
</if>
<msg timestamp="20231222 16:58:16.711" level="INFO">${name} = CA_19 Aperiam expedita.</msg>
<status status="PASS" starttime="20231222 16:58:16.702" endtime="20231222 16:58:16.711"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231222 16:58:16.712" endtime="20231222 16:58:16.712"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:16.713" endtime="20231222 16:58:16.713"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:16.714" endtime="20231222 16:58:16.714"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:16.713" endtime="20231222 16:58:16.714"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231222 16:58:16.715" endtime="20231222 16:58:16.715"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231222 16:58:16.716" endtime="20231222 16:58:16.716"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:16.714" endtime="20231222 16:58:16.716"/>
</branch>
<status status="NOT RUN" starttime="20231222 16:58:16.713" endtime="20231222 16:58:16.717"/>
</if>
<status status="NOT RUN" starttime="20231222 16:58:16.712" endtime="20231222 16:58:16.717"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231222 16:58:16.718" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CA_19 Aperiam expedita.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231222 16:58:16.717" endtime="20231222 16:58:16.718"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:16.819" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:16.719" endtime="20231222 16:58:16.819"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:16.819" endtime="20231222 16:58:16.933"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.717" endtime="20231222 16:58:16.933"/>
</branch>
<status status="PASS" starttime="20231222 16:58:16.712" endtime="20231222 16:58:16.933"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:17.036" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:16.935" endtime="20231222 16:58:17.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:17.039" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231222 16:58:17.037" endtime="20231222 16:58:17.040"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:17.051" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231222 16:58:17.041" endtime="20231222 16:58:17.052"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231222 16:58:17.057" endtime="20231222 16:58:17.217"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:17.319" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:17.218" endtime="20231222 16:58:17.319"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231222 16:58:17.428" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231222 16:58:17.326" endtime="20231222 16:58:17.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231222 16:58:17.429" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231222 16:58:17.429" endtime="20231222 16:58:17.429"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231222 16:58:17.478" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231222 16:58:17.430" endtime="20231222 16:58:17.478"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231222 16:58:17.483" endtime="20231222 16:58:17.483"/>
</kw>
<status status="NOT RUN" starttime="20231222 16:58:17.481" endtime="20231222 16:58:17.483"/>
</branch>
<status status="PASS" starttime="20231222 16:58:17.481" endtime="20231222 16:58:17.483"/>
</if>
<status status="PASS" starttime="20231222 16:58:17.320" endtime="20231222 16:58:17.483"/>
</kw>
<status status="PASS" starttime="20231222 16:58:17.053" endtime="20231222 16:58:17.484"/>
</branch>
<status status="PASS" starttime="20231222 16:58:17.053" endtime="20231222 16:58:17.484"/>
</if>
<status status="PASS" starttime="20231222 16:58:16.934" endtime="20231222 16:58:17.484"/>
</kw>
<status status="PASS" starttime="20231222 16:58:16.479" endtime="20231222 16:58:17.485"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231222 16:58:18.574" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231222 16:58:17.493" endtime="20231222 16:58:18.574"/>
</kw>
<status status="PASS" starttime="20231222 16:58:17.486" endtime="20231222 16:58:18.575"/>
</kw>
<tag>Filter</tag>
<status status="PASS" starttime="20231222 16:57:57.871" endtime="20231222 16:58:18.576"/>
</test>
<status status="PASS" starttime="20231222 16:57:55.637" endtime="20231222 16:58:18.642"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Filter</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Customer Account">Customer Account</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

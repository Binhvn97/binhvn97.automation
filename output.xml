<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231128 21:49:32.974" rpa="false" schemaversion="4">
<suite id="s1" name="Navigation" source="d:\TESTER\Automation\Auto_Web\testcases\navigation.robot">
<test id="s1-t1" name="DH_28 Verify the search function when enter the name was not existed" line="347">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231128 21:49:35.233" endtime="20231128 21:49:35.235"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231128 21:49:35.237" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\28aabd64-9c93-4786-90eb-410cf84805eb"}</msg>
<msg timestamp="20231128 21:49:36.767" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\28aabd64-9c93-4786-90eb-410cf84805eb"}</msg>
<status status="PASS" starttime="20231128 21:49:35.236" endtime="20231128 21:49:36.768"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231128 21:49:40.530" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231128 21:49:40.531" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231128 21:49:36.769" endtime="20231128 21:49:40.532"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231128 21:49:40.534" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231128 21:49:40.533" endtime="20231128 21:49:40.535"/>
</kw>
<status status="PASS" starttime="20231128 21:49:35.232" endtime="20231128 21:49:40.535"/>
</kw>
<kw name="Create a test data">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Phân quyền điều hướng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Phân quyền điều hướng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:40.670" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:40.564" endtime="20231128 21:49:40.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231128 21:49:40.674" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231128 21:49:40.671" endtime="20231128 21:49:40.674"/>
</kw>
<status status="FAIL" starttime="20231128 21:49:40.563" endtime="20231128 21:49:40.677"/>
</kw>
<msg timestamp="20231128 21:49:40.678" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231128 21:49:40.561" endtime="20231128 21:49:40.679"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231128 21:49:40.682" endtime="20231128 21:49:40.683"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.680" endtime="20231128 21:49:40.683"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Điều hướng&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:40.796" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:40.694" endtime="20231128 21:49:40.796"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:40.799" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:40.797" endtime="20231128 21:49:40.799"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:40.816" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:40.800" endtime="20231128 21:49:40.817"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:40.833" endtime="20231128 21:49:40.834"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.818" endtime="20231128 21:49:40.834"/>
</branch>
<status status="PASS" starttime="20231128 21:49:40.818" endtime="20231128 21:49:40.835"/>
</if>
<status status="PASS" starttime="20231128 21:49:40.693" endtime="20231128 21:49:40.836"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:40.844" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:40.843" endtime="20231128 21:49:40.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:40.846" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:40.845" endtime="20231128 21:49:40.847"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:40.849" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:40.848" endtime="20231128 21:49:40.850"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:40.852" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:40.853" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:40.851" endtime="20231128 21:49:40.854"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:40.858" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:40.856" endtime="20231128 21:49:40.858"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:40.861" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:40.862" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:40.859" endtime="20231128 21:49:40.862"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.865" endtime="20231128 21:49:40.866"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.868" endtime="20231128 21:49:40.869"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.863" endtime="20231128 21:49:40.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.902" endtime="20231128 21:49:40.902"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.903" endtime="20231128 21:49:40.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.908" endtime="20231128 21:49:40.909"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.901" endtime="20231128 21:49:40.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.911" endtime="20231128 21:49:40.912"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.913" endtime="20231128 21:49:40.914"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.910" endtime="20231128 21:49:40.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.933" endtime="20231128 21:49:40.934"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.936" endtime="20231128 21:49:40.937"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.932" endtime="20231128 21:49:40.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.949" endtime="20231128 21:49:40.950"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.945" endtime="20231128 21:49:40.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:40.953" endtime="20231128 21:49:40.953"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.951" endtime="20231128 21:49:40.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.961" endtime="20231128 21:49:40.962"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.963" endtime="20231128 21:49:40.963"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.964" endtime="20231128 21:49:40.965"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.960" endtime="20231128 21:49:40.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.968" endtime="20231128 21:49:40.968"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.966" endtime="20231128 21:49:40.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.977" endtime="20231128 21:49:40.978"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.969" endtime="20231128 21:49:40.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.980" endtime="20231128 21:49:40.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.979" endtime="20231128 21:49:40.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.983" endtime="20231128 21:49:40.983"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.981" endtime="20231128 21:49:40.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:40.985" endtime="20231128 21:49:40.986"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:40.984" endtime="20231128 21:49:40.986"/>
</branch>
<status status="PASS" starttime="20231128 21:49:40.863" endtime="20231128 21:49:40.987"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:40.993" level="INFO">Length is 15</msg>
<msg timestamp="20231128 21:49:40.994" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231128 21:49:40.992" endtime="20231128 21:49:40.995"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:40.998" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 21:49:40.997" endtime="20231128 21:49:40.998"/>
</kw>
<status status="PASS" starttime="20231128 21:49:40.995" endtime="20231128 21:49:40.999"/>
</branch>
<status status="PASS" starttime="20231128 21:49:40.995" endtime="20231128 21:49:40.999"/>
</if>
<msg timestamp="20231128 21:49:41.000" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 21:49:40.841" endtime="20231128 21:49:41.001"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:41.003" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:41.001" endtime="20231128 21:49:41.003"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:41.009" endtime="20231128 21:49:41.157"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:41.158" endtime="20231128 21:49:41.273"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:41.275" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:41.274" endtime="20231128 21:49:41.345"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:41.425" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231128 21:49:41.426" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 21:49:41.346" endtime="20231128 21:49:41.426"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.429" endtime="20231128 21:49:41.430"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.431" endtime="20231128 21:49:41.432"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.427" endtime="20231128 21:49:41.432"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:41.427" endtime="20231128 21:49:41.433"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:41.434" endtime="20231128 21:49:41.518"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:41.519" level="INFO">Length is 15</msg>
<msg timestamp="20231128 21:49:41.520" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231128 21:49:41.519" endtime="20231128 21:49:41.521"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:41.527" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 21:49:41.526" endtime="20231128 21:49:41.527"/>
</kw>
<status status="PASS" starttime="20231128 21:49:41.524" endtime="20231128 21:49:41.528"/>
</branch>
<status status="PASS" starttime="20231128 21:49:41.523" endtime="20231128 21:49:41.528"/>
</if>
<status status="PASS" starttime="20231128 21:49:40.687" endtime="20231128 21:49:41.529"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:41.633" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:41.532" endtime="20231128 21:49:41.633"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:41.635" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:41.634" endtime="20231128 21:49:41.635"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:41.648" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:41.636" endtime="20231128 21:49:41.648"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:41.649" endtime="20231128 21:49:41.650"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.648" endtime="20231128 21:49:41.651"/>
</branch>
<status status="PASS" starttime="20231128 21:49:41.648" endtime="20231128 21:49:41.652"/>
</if>
<status status="PASS" starttime="20231128 21:49:41.531" endtime="20231128 21:49:41.652"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:41.656" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:41.654" endtime="20231128 21:49:41.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:41.659" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:41.658" endtime="20231128 21:49:41.659"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:41.661" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:41.660" endtime="20231128 21:49:41.662"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:41.663" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:41.663" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:41.662" endtime="20231128 21:49:41.663"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:41.665" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:41.664" endtime="20231128 21:49:41.665"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:41.667" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:41.668" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:41.666" endtime="20231128 21:49:41.668"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.670" endtime="20231128 21:49:41.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.674" endtime="20231128 21:49:41.674"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.669" endtime="20231128 21:49:41.675"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.677" endtime="20231128 21:49:41.677"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.678" endtime="20231128 21:49:41.679"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.681" endtime="20231128 21:49:41.682"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.676" endtime="20231128 21:49:41.682"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.684" endtime="20231128 21:49:41.685"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.686" endtime="20231128 21:49:41.686"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.683" endtime="20231128 21:49:41.687"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.693" endtime="20231128 21:49:41.694"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.694" endtime="20231128 21:49:41.695"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.691" endtime="20231128 21:49:41.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.699" endtime="20231128 21:49:41.700"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.697" endtime="20231128 21:49:41.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:41.703" endtime="20231128 21:49:41.708"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.701" endtime="20231128 21:49:41.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.711" endtime="20231128 21:49:41.712"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.713" endtime="20231128 21:49:41.713"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.715" endtime="20231128 21:49:41.715"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.709" endtime="20231128 21:49:41.716"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.718" endtime="20231128 21:49:41.718"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.717" endtime="20231128 21:49:41.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.720" endtime="20231128 21:49:41.723"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.719" endtime="20231128 21:49:41.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.727" endtime="20231128 21:49:41.728"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.726" endtime="20231128 21:49:41.729"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.731" endtime="20231128 21:49:41.731"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.730" endtime="20231128 21:49:41.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:41.733" endtime="20231128 21:49:41.734"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:41.732" endtime="20231128 21:49:41.734"/>
</branch>
<status status="PASS" starttime="20231128 21:49:41.669" endtime="20231128 21:49:41.735"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:41.742" level="INFO">Length is 6</msg>
<msg timestamp="20231128 21:49:41.743" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231128 21:49:41.735" endtime="20231128 21:49:41.745"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:41.748" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231128 21:49:41.747" endtime="20231128 21:49:41.749"/>
</kw>
<status status="PASS" starttime="20231128 21:49:41.746" endtime="20231128 21:49:41.749"/>
</branch>
<status status="PASS" starttime="20231128 21:49:41.746" endtime="20231128 21:49:41.750"/>
</if>
<msg timestamp="20231128 21:49:41.750" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231128 21:49:41.653" endtime="20231128 21:49:41.751"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:41.752" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:41.751" endtime="20231128 21:49:41.753"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:41.753" endtime="20231128 21:49:41.868"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:41.869" endtime="20231128 21:49:41.919"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:41.921" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:41.919" endtime="20231128 21:49:41.976"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:42.022" level="INFO">Text: '123123'</msg>
<msg timestamp="20231128 21:49:42.023" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231128 21:49:41.977" endtime="20231128 21:49:42.024"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.027" endtime="20231128 21:49:42.027"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.028" endtime="20231128 21:49:42.029"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:42.025" endtime="20231128 21:49:42.029"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:42.025" endtime="20231128 21:49:42.029"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:42.030" endtime="20231128 21:49:42.099"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:42.102" level="INFO">Length is 6</msg>
<msg timestamp="20231128 21:49:42.102" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231128 21:49:42.101" endtime="20231128 21:49:42.103"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:42.109" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231128 21:49:42.105" endtime="20231128 21:49:42.109"/>
</kw>
<status status="PASS" starttime="20231128 21:49:42.104" endtime="20231128 21:49:42.110"/>
</branch>
<status status="PASS" starttime="20231128 21:49:42.103" endtime="20231128 21:49:42.111"/>
</if>
<status status="PASS" starttime="20231128 21:49:41.529" endtime="20231128 21:49:42.111"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:42.215" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:42.113" endtime="20231128 21:49:42.215"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:42.230" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:42.216" endtime="20231128 21:49:42.231"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:42.233" endtime="20231128 21:49:42.355"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:42.361" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 21:49:42.360" endtime="20231128 21:49:42.362"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:42.379" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:42.363" endtime="20231128 21:49:42.381"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.387" endtime="20231128 21:49:42.388"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.390" endtime="20231128 21:49:42.392"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 21:49:42.393" endtime="20231128 21:49:42.394"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:42.384" endtime="20231128 21:49:42.395"/>
</branch>
<status status="PASS" starttime="20231128 21:49:42.384" endtime="20231128 21:49:42.396"/>
</if>
<status status="PASS" starttime="20231128 21:49:42.357" endtime="20231128 21:49:42.396"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 21:49:42.430" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:42.431" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:42.450" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:42.450" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:42.465" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 21:49:42.397" endtime="20231128 21:49:42.466"/>
</kw>
<status status="PASS" starttime="20231128 21:49:42.232" endtime="20231128 21:49:42.466"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.468" endtime="20231128 21:49:42.469"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 21:49:42.469" endtime="20231128 21:49:42.470"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.471" endtime="20231128 21:49:42.474"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:42.467" endtime="20231128 21:49:42.476"/>
</branch>
<status status="PASS" starttime="20231128 21:49:42.232" endtime="20231128 21:49:42.476"/>
</if>
<status status="PASS" starttime="20231128 21:49:42.112" endtime="20231128 21:49:42.477"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:42.480" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:42.479" endtime="20231128 21:49:42.481"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:42.483" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:42.483" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:42.482" endtime="20231128 21:49:42.484"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:42.486" endtime="20231128 21:49:42.487"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:42.485" endtime="20231128 21:49:42.488"/>
</branch>
<status status="PASS" starttime="20231128 21:49:42.484" endtime="20231128 21:49:42.490"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:42.958" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231128 21:49:42.497" endtime="20231128 21:49:42.959"/>
</kw>
<status status="PASS" starttime="20231128 21:49:42.494" endtime="20231128 21:49:42.959"/>
</kw>
<status status="PASS" starttime="20231128 21:49:42.491" endtime="20231128 21:49:42.960"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:42.961" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231128 21:49:42.960" endtime="20231128 21:49:42.961"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231128 21:49:43.382" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231128 21:49:43.382" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231128 21:49:43.382" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231128 21:49:42.963" endtime="20231128 21:49:43.394"/>
</kw>
<status status="FAIL" starttime="20231128 21:49:42.962" endtime="20231128 21:49:43.395"/>
</kw>
<msg timestamp="20231128 21:49:43.396" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231128 21:49:42.962" endtime="20231128 21:49:43.397"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:43.399" endtime="20231128 21:49:43.400"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:43.398" endtime="20231128 21:49:43.400"/>
</branch>
<status status="PASS" starttime="20231128 21:49:43.397" endtime="20231128 21:49:43.401"/>
</if>
<status status="PASS" starttime="20231128 21:49:42.478" endtime="20231128 21:49:43.401"/>
</kw>
<status status="PASS" starttime="20231128 21:49:40.686" endtime="20231128 21:49:43.402"/>
</kw>
<kw name="Click &quot;SUPERADMIN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:43.404" endtime="20231128 21:49:44.429"/>
</kw>
<status status="PASS" starttime="20231128 21:49:43.403" endtime="20231128 21:49:44.429"/>
</kw>
<kw name="Click &quot;Phân quyền điều hướng&quot; sub menu to &quot;/navigation&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:44.531" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:44.431" endtime="20231128 21:49:44.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:44.532" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:44.531" endtime="20231128 21:49:44.532"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:44.541" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:44.532" endtime="20231128 21:49:44.542"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:44.544" endtime="20231128 21:49:44.545"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:44.543" endtime="20231128 21:49:44.546"/>
</branch>
<status status="PASS" starttime="20231128 21:49:44.543" endtime="20231128 21:49:44.547"/>
</if>
<status status="PASS" starttime="20231128 21:49:44.430" endtime="20231128 21:49:44.547"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:44.548" endtime="20231128 21:49:44.734"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231128 21:49:44.744" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/navigation</msg>
<status status="PASS" starttime="20231128 21:49:44.734" endtime="20231128 21:49:44.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 21:49:44.745" endtime="20231128 21:49:44.747"/>
</kw>
<status status="PASS" starttime="20231128 21:49:44.430" endtime="20231128 21:49:44.748"/>
</kw>
<status status="PASS" starttime="20231128 21:49:40.684" endtime="20231128 21:49:44.749"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:44.857" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:44.753" endtime="20231128 21:49:44.857"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:45.140" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:44.858" endtime="20231128 21:49:45.141"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:45.145" endtime="20231128 21:49:47.027"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.031" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 21:49:47.030" endtime="20231128 21:49:47.031"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:47.043" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:47.032" endtime="20231128 21:49:47.044"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.045" endtime="20231128 21:49:47.046"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.046" endtime="20231128 21:49:47.047"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 21:49:47.047" endtime="20231128 21:49:47.048"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.044" endtime="20231128 21:49:47.048"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.044" endtime="20231128 21:49:47.049"/>
</if>
<status status="PASS" starttime="20231128 21:49:47.028" endtime="20231128 21:49:47.049"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 21:49:47.070" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:47.072" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:47.092" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:47.093" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:47.106" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 21:49:47.050" endtime="20231128 21:49:47.106"/>
</kw>
<status status="PASS" starttime="20231128 21:49:45.144" endtime="20231128 21:49:47.107"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.109" endtime="20231128 21:49:47.109"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 21:49:47.110" endtime="20231128 21:49:47.110"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.111" endtime="20231128 21:49:47.112"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.108" endtime="20231128 21:49:47.113"/>
</branch>
<status status="PASS" starttime="20231128 21:49:45.143" endtime="20231128 21:49:47.114"/>
</if>
<status status="PASS" starttime="20231128 21:49:44.750" endtime="20231128 21:49:47.115"/>
</kw>
<status status="PASS" starttime="20231128 21:49:40.684" endtime="20231128 21:49:47.116"/>
</branch>
<status status="PASS" starttime="20231128 21:49:40.680" endtime="20231128 21:49:47.116"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên điều hướng&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:47.224" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:47.119" endtime="20231128 21:49:47.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.225" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:47.225" endtime="20231128 21:49:47.226"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:47.238" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:47.226" endtime="20231128 21:49:47.240"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:47.242" endtime="20231128 21:49:47.243"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.241" endtime="20231128 21:49:47.243"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.241" endtime="20231128 21:49:47.244"/>
</if>
<status status="PASS" starttime="20231128 21:49:47.118" endtime="20231128 21:49:47.244"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.247" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:47.247" endtime="20231128 21:49:47.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.249" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:47.248" endtime="20231128 21:49:47.249"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:47.250" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:47.249" endtime="20231128 21:49:47.250"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.251" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:47.251" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:47.250" endtime="20231128 21:49:47.251"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:47.252" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 21:49:47.251" endtime="20231128 21:49:47.252"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.253" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:47.253" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:47.252" endtime="20231128 21:49:47.253"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.259" endtime="20231128 21:49:47.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.261" endtime="20231128 21:49:47.261"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.258" endtime="20231128 21:49:47.261"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 21:49:47.263" level="INFO">${random} = Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.262" endtime="20231128 21:49:47.263"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231128 21:49:47.264" level="INFO">${words} = ['DH_28', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231128 21:49:47.263" endtime="20231128 21:49:47.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.266" level="INFO">${new_text} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.264" endtime="20231128 21:49:47.266"/>
</kw>
<status status="PASS" starttime="20231128 21:49:47.262" endtime="20231128 21:49:47.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.267" endtime="20231128 21:49:47.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.267" endtime="20231128 21:49:47.268"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.266" endtime="20231128 21:49:47.268"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.269" endtime="20231128 21:49:47.270"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.274" endtime="20231128 21:49:47.275"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.269" endtime="20231128 21:49:47.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.276" endtime="20231128 21:49:47.277"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.276" endtime="20231128 21:49:47.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:47.277" endtime="20231128 21:49:47.278"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.277" endtime="20231128 21:49:47.278"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.279" endtime="20231128 21:49:47.279"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.279" endtime="20231128 21:49:47.279"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.280" endtime="20231128 21:49:47.280"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.278" endtime="20231128 21:49:47.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.281" endtime="20231128 21:49:47.281"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.280" endtime="20231128 21:49:47.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.282" endtime="20231128 21:49:47.282"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.281" endtime="20231128 21:49:47.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.283" endtime="20231128 21:49:47.283"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.283" endtime="20231128 21:49:47.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.284" endtime="20231128 21:49:47.284"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.284" endtime="20231128 21:49:47.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.285" endtime="20231128 21:49:47.285"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.285" endtime="20231128 21:49:47.285"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.257" endtime="20231128 21:49:47.286"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.291" level="INFO">Length is 8</msg>
<msg timestamp="20231128 21:49:47.292" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 21:49:47.286" endtime="20231128 21:49:47.292"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:47.327" level="INFO">${text} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.326" endtime="20231128 21:49:47.328"/>
</kw>
<status status="PASS" starttime="20231128 21:49:47.293" endtime="20231128 21:49:47.328"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.293" endtime="20231128 21:49:47.329"/>
</if>
<msg timestamp="20231128 21:49:47.329" level="INFO">${text} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.245" endtime="20231128 21:49:47.329"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:47.331" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên điều hướng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:47.330" endtime="20231128 21:49:47.332"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:47.332" endtime="20231128 21:49:47.420"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:47.421" endtime="20231128 21:49:47.458"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:47.460" level="INFO">Fills the text 'DH_28 Consectetur alias.' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:47.459" endtime="20231128 21:49:47.543"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:47.594" level="INFO">Text: 'DH_28 Consectetur alias.'</msg>
<msg timestamp="20231128 21:49:47.594" level="INFO">${condition} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.544" endtime="20231128 21:49:47.595"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.597" endtime="20231128 21:49:47.597"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.598" endtime="20231128 21:49:47.598"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.595" endtime="20231128 21:49:47.599"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:47.595" endtime="20231128 21:49:47.599"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:47.601" endtime="20231128 21:49:47.669"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.673" level="INFO">Length is 24</msg>
<msg timestamp="20231128 21:49:47.675" level="INFO">${cnt} = 24</msg>
<status status="PASS" starttime="20231128 21:49:47.670" endtime="20231128 21:49:47.675"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:47.679" level="INFO">${STATE["Tên điều hướng"]} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.678" endtime="20231128 21:49:47.680"/>
</kw>
<status status="PASS" starttime="20231128 21:49:47.676" endtime="20231128 21:49:47.680"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.676" endtime="20231128 21:49:47.681"/>
</if>
<status status="PASS" starttime="20231128 21:49:47.117" endtime="20231128 21:49:47.681"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên điều hướng@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:47.685" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231128 21:49:47.684" endtime="20231128 21:49:47.685"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.689" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:47.690" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 21:49:47.686" endtime="20231128 21:49:47.691"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.696" level="INFO">${text} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.693" endtime="20231128 21:49:47.696"/>
</kw>
<status status="PASS" starttime="20231128 21:49:47.692" endtime="20231128 21:49:47.697"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.691" endtime="20231128 21:49:47.697"/>
</if>
<msg timestamp="20231128 21:49:47.698" level="INFO">${text} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.682" endtime="20231128 21:49:47.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.702" level="INFO">${name} = DH_28 Consectetur alias.</msg>
<status status="PASS" starttime="20231128 21:49:47.700" endtime="20231128 21:49:47.702"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Mã điều hướng&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:47.812" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:47.710" endtime="20231128 21:49:47.812"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.814" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:47.813" endtime="20231128 21:49:47.815"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:47.829" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:47.815" endtime="20231128 21:49:47.829"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:47.831" endtime="20231128 21:49:47.831"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.830" endtime="20231128 21:49:47.832"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.830" endtime="20231128 21:49:47.832"/>
</if>
<status status="PASS" starttime="20231128 21:49:47.708" endtime="20231128 21:49:47.832"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.835" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:47.834" endtime="20231128 21:49:47.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:47.837" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:47.836" endtime="20231128 21:49:47.837"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:47.841" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:47.840" endtime="20231128 21:49:47.841"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.843" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:47.843" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:47.842" endtime="20231128 21:49:47.844"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:47.846" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 21:49:47.845" endtime="20231128 21:49:47.846"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.848" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:47.848" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:47.847" endtime="20231128 21:49:47.848"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.850" endtime="20231128 21:49:47.851"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.852" endtime="20231128 21:49:47.853"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.849" endtime="20231128 21:49:47.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.857" endtime="20231128 21:49:47.858"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.859" endtime="20231128 21:49:47.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.860" endtime="20231128 21:49:47.861"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.856" endtime="20231128 21:49:47.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.862" endtime="20231128 21:49:47.863"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.864" endtime="20231128 21:49:47.864"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.862" endtime="20231128 21:49:47.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.866" endtime="20231128 21:49:47.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.867" endtime="20231128 21:49:47.867"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.865" endtime="20231128 21:49:47.868"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.870" endtime="20231128 21:49:47.870"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.869" endtime="20231128 21:49:47.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:47.874" endtime="20231128 21:49:47.875"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.873" endtime="20231128 21:49:47.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.877" endtime="20231128 21:49:47.877"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.878" endtime="20231128 21:49:47.878"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.879" endtime="20231128 21:49:47.880"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.876" endtime="20231128 21:49:47.880"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.882" endtime="20231128 21:49:47.883"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.881" endtime="20231128 21:49:47.884"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.885" endtime="20231128 21:49:47.886"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.884" endtime="20231128 21:49:47.886"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.908" endtime="20231128 21:49:47.908"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.904" endtime="20231128 21:49:47.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 21:49:47.911" level="INFO">${new_text} = Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:47.910" endtime="20231128 21:49:47.911"/>
</kw>
<status status="PASS" starttime="20231128 21:49:47.909" endtime="20231128 21:49:47.912"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:47.913" endtime="20231128 21:49:47.913"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:47.912" endtime="20231128 21:49:47.914"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.849" endtime="20231128 21:49:47.915"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:47.916" level="INFO">Length is 8</msg>
<msg timestamp="20231128 21:49:47.917" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 21:49:47.915" endtime="20231128 21:49:47.917"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:47.920" level="INFO">${text} = Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:47.919" endtime="20231128 21:49:47.923"/>
</kw>
<status status="PASS" starttime="20231128 21:49:47.918" endtime="20231128 21:49:47.924"/>
</branch>
<status status="PASS" starttime="20231128 21:49:47.918" endtime="20231128 21:49:47.924"/>
</if>
<msg timestamp="20231128 21:49:47.925" level="INFO">${text} = Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:47.833" endtime="20231128 21:49:47.925"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:47.928" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã điều hướng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:47.926" endtime="20231128 21:49:47.929"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:47.930" endtime="20231128 21:49:48.041"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:48.042" endtime="20231128 21:49:48.091"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:48.094" level="INFO">Fills the text 'Fugiat.' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:48.092" endtime="20231128 21:49:48.161"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:48.212" level="INFO">Text: 'Fugiat.'</msg>
<msg timestamp="20231128 21:49:48.213" level="INFO">${condition} = Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.162" endtime="20231128 21:49:48.213"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.215" endtime="20231128 21:49:48.216"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.217" endtime="20231128 21:49:48.217"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.214" endtime="20231128 21:49:48.218"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:48.214" endtime="20231128 21:49:48.219"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:48.220" endtime="20231128 21:49:48.286"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:48.292" level="INFO">Length is 7</msg>
<msg timestamp="20231128 21:49:48.292" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231128 21:49:48.289" endtime="20231128 21:49:48.293"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:48.297" level="INFO">${STATE["Mã điều hướng"]} = Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.295" endtime="20231128 21:49:48.297"/>
</kw>
<status status="PASS" starttime="20231128 21:49:48.294" endtime="20231128 21:49:48.298"/>
</branch>
<status status="PASS" starttime="20231128 21:49:48.294" endtime="20231128 21:49:48.298"/>
</if>
<status status="PASS" starttime="20231128 21:49:47.703" endtime="20231128 21:49:48.299"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Link&quot; with &quot;/_@Mã điều hướng@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:48.405" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:48.303" endtime="20231128 21:49:48.406"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:48.408" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:48.407" endtime="20231128 21:49:48.408"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:48.420" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:48.409" endtime="20231128 21:49:48.422"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:48.424" endtime="20231128 21:49:48.425"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.423" endtime="20231128 21:49:48.426"/>
</branch>
<status status="PASS" starttime="20231128 21:49:48.423" endtime="20231128 21:49:48.426"/>
</if>
<status status="PASS" starttime="20231128 21:49:48.301" endtime="20231128 21:49:48.427"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:48.430" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:48.429" endtime="20231128 21:49:48.431"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:48.433" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:48.431" endtime="20231128 21:49:48.433"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:48.435" level="INFO">${containsS} = ['Mã điều hướng']</msg>
<status status="PASS" starttime="20231128 21:49:48.434" endtime="20231128 21:49:48.436"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:48.440" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:48.441" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 21:49:48.439" endtime="20231128 21:49:48.441"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:48.443" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:48.442" endtime="20231128 21:49:48.444"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:48.446" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:48.446" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:48.445" endtime="20231128 21:49:48.446"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:48.452" level="INFO">${new_text} = Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.449" endtime="20231128 21:49:48.452"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:48.458" level="INFO">${symbol} = _@Mã điều hướng@_</msg>
<status status="PASS" starttime="20231128 21:49:48.453" endtime="20231128 21:49:48.459"/>
</kw>
<status status="PASS" starttime="20231128 21:49:48.447" endtime="20231128 21:49:48.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.460" endtime="20231128 21:49:48.461"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.462" endtime="20231128 21:49:48.462"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.463" endtime="20231128 21:49:48.463"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.460" endtime="20231128 21:49:48.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.465" endtime="20231128 21:49:48.465"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.466" endtime="20231128 21:49:48.466"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.464" endtime="20231128 21:49:48.481"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.486" endtime="20231128 21:49:48.491"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.492" endtime="20231128 21:49:48.493"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.483" endtime="20231128 21:49:48.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.495" endtime="20231128 21:49:48.496"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.494" endtime="20231128 21:49:48.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:48.498" endtime="20231128 21:49:48.498"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.497" endtime="20231128 21:49:48.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.500" endtime="20231128 21:49:48.501"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.501" endtime="20231128 21:49:48.502"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.503" endtime="20231128 21:49:48.506"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.499" endtime="20231128 21:49:48.507"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.508" endtime="20231128 21:49:48.509"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.507" endtime="20231128 21:49:48.509"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.510" endtime="20231128 21:49:48.511"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.510" endtime="20231128 21:49:48.511"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.512" endtime="20231128 21:49:48.513"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.512" endtime="20231128 21:49:48.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.515" endtime="20231128 21:49:48.515"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.514" endtime="20231128 21:49:48.516"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.517" endtime="20231128 21:49:48.517"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.516" endtime="20231128 21:49:48.518"/>
</branch>
<status status="PASS" starttime="20231128 21:49:48.447" endtime="20231128 21:49:48.518"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:48.519" level="INFO">Length is 18</msg>
<msg timestamp="20231128 21:49:48.522" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20231128 21:49:48.519" endtime="20231128 21:49:48.523"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:48.531" level="INFO">${text} = /Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.529" endtime="20231128 21:49:48.531"/>
</kw>
<status status="PASS" starttime="20231128 21:49:48.524" endtime="20231128 21:49:48.532"/>
</branch>
<status status="PASS" starttime="20231128 21:49:48.524" endtime="20231128 21:49:48.532"/>
</if>
<msg timestamp="20231128 21:49:48.533" level="INFO">${text} = /Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.427" endtime="20231128 21:49:48.533"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:48.535" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Link"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:48.534" endtime="20231128 21:49:48.536"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:48.536" endtime="20231128 21:49:48.651"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:48.652" endtime="20231128 21:49:48.700"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:48.702" level="INFO">Fills the text '/Fugiat.' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:48.701" endtime="20231128 21:49:48.768"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:48.818" level="INFO">Text: '/Fugiat.'</msg>
<msg timestamp="20231128 21:49:48.819" level="INFO">${condition} = /Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.769" endtime="20231128 21:49:48.820"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.825" endtime="20231128 21:49:48.826"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:48.827" endtime="20231128 21:49:48.827"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:48.823" endtime="20231128 21:49:48.828"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:48.823" endtime="20231128 21:49:48.829"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:48.830" endtime="20231128 21:49:48.901"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:48.906" level="INFO">Length is 8</msg>
<msg timestamp="20231128 21:49:48.907" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 21:49:48.903" endtime="20231128 21:49:48.907"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:48.911" level="INFO">${STATE["Link"]} = /Fugiat.</msg>
<status status="PASS" starttime="20231128 21:49:48.909" endtime="20231128 21:49:48.911"/>
</kw>
<status status="PASS" starttime="20231128 21:49:48.908" endtime="20231128 21:49:48.912"/>
</branch>
<status status="PASS" starttime="20231128 21:49:48.908" endtime="20231128 21:49:48.912"/>
</if>
<status status="PASS" starttime="20231128 21:49:48.300" endtime="20231128 21:49:48.913"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Số thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:49.018" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:48.916" endtime="20231128 21:49:49.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:49.021" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:49.019" endtime="20231128 21:49:49.023"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:49.035" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:49.024" endtime="20231128 21:49:49.035"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:49.038" endtime="20231128 21:49:49.040"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.036" endtime="20231128 21:49:49.041"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.036" endtime="20231128 21:49:49.041"/>
</if>
<status status="PASS" starttime="20231128 21:49:48.915" endtime="20231128 21:49:49.042"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:49.045" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:49.044" endtime="20231128 21:49:49.045"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:49.047" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:49.046" endtime="20231128 21:49:49.047"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:49.049" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:49.048" endtime="20231128 21:49:49.050"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.052" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:49.052" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:49.050" endtime="20231128 21:49:49.052"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:49.056" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 21:49:49.055" endtime="20231128 21:49:49.057"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.058" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:49.059" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:49.057" endtime="20231128 21:49:49.059"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.061" endtime="20231128 21:49:49.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.062" endtime="20231128 21:49:49.063"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.060" endtime="20231128 21:49:49.063"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.065" endtime="20231128 21:49:49.065"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.065" endtime="20231128 21:49:49.066"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.066" endtime="20231128 21:49:49.066"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.064" endtime="20231128 21:49:49.067"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231128 21:49:49.069" level="INFO">${new_text} = 4214</msg>
<status status="PASS" starttime="20231128 21:49:49.068" endtime="20231128 21:49:49.070"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231128 21:49:49.073" level="INFO">${new_text} = 4214</msg>
<status status="PASS" starttime="20231128 21:49:49.072" endtime="20231128 21:49:49.075"/>
</kw>
<status status="PASS" starttime="20231128 21:49:49.067" endtime="20231128 21:49:49.076"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.077" endtime="20231128 21:49:49.078"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.078" endtime="20231128 21:49:49.079"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.076" endtime="20231128 21:49:49.079"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.088" endtime="20231128 21:49:49.089"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.087" endtime="20231128 21:49:49.089"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:49.091" endtime="20231128 21:49:49.092"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.090" endtime="20231128 21:49:49.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.093" endtime="20231128 21:49:49.094"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.095" endtime="20231128 21:49:49.096"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.096" endtime="20231128 21:49:49.097"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.093" endtime="20231128 21:49:49.098"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.099" endtime="20231128 21:49:49.100"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.098" endtime="20231128 21:49:49.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.102" endtime="20231128 21:49:49.102"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.101" endtime="20231128 21:49:49.103"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.105" endtime="20231128 21:49:49.106"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.104" endtime="20231128 21:49:49.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.108" endtime="20231128 21:49:49.109"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.107" endtime="20231128 21:49:49.109"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.110" endtime="20231128 21:49:49.110"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.109" endtime="20231128 21:49:49.111"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.060" endtime="20231128 21:49:49.111"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.113" level="INFO">Length is 8</msg>
<msg timestamp="20231128 21:49:49.113" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 21:49:49.112" endtime="20231128 21:49:49.113"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:49.116" level="INFO">${text} = 4214</msg>
<status status="PASS" starttime="20231128 21:49:49.115" endtime="20231128 21:49:49.116"/>
</kw>
<status status="PASS" starttime="20231128 21:49:49.114" endtime="20231128 21:49:49.116"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.114" endtime="20231128 21:49:49.117"/>
</if>
<msg timestamp="20231128 21:49:49.118" level="INFO">${text} = 4214</msg>
<status status="PASS" starttime="20231128 21:49:49.043" endtime="20231128 21:49:49.118"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:49.119" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số thứ tự"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:49.118" endtime="20231128 21:49:49.120"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:49.121" endtime="20231128 21:49:49.232"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:49.233" endtime="20231128 21:49:49.280"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:49.282" level="INFO">Fills the text '4214' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:49.281" endtime="20231128 21:49:49.350"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:49.397" level="INFO">Text: '4214'</msg>
<msg timestamp="20231128 21:49:49.398" level="INFO">${condition} = 4214</msg>
<status status="PASS" starttime="20231128 21:49:49.351" endtime="20231128 21:49:49.398"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.400" endtime="20231128 21:49:49.401"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.402" endtime="20231128 21:49:49.402"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.398" endtime="20231128 21:49:49.402"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:49.398" endtime="20231128 21:49:49.403"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:49.405" endtime="20231128 21:49:49.483"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.485" level="INFO">Length is 4</msg>
<msg timestamp="20231128 21:49:49.485" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231128 21:49:49.484" endtime="20231128 21:49:49.486"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:49.491" level="INFO">${STATE["Số thứ tự"]} = 4214</msg>
<status status="PASS" starttime="20231128 21:49:49.489" endtime="20231128 21:49:49.492"/>
</kw>
<status status="PASS" starttime="20231128 21:49:49.486" endtime="20231128 21:49:49.492"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.486" endtime="20231128 21:49:49.493"/>
</if>
<status status="PASS" starttime="20231128 21:49:48.914" endtime="20231128 21:49:49.493"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Biểu tượng&quot; with &quot;las la-folder-minus&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:49.599" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:49.497" endtime="20231128 21:49:49.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:49.600" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:49.599" endtime="20231128 21:49:49.601"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:49.611" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:49.601" endtime="20231128 21:49:49.612"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:49.613" endtime="20231128 21:49:49.614"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.612" endtime="20231128 21:49:49.615"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.612" endtime="20231128 21:49:49.615"/>
</if>
<status status="PASS" starttime="20231128 21:49:49.496" endtime="20231128 21:49:49.616"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:49.618" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:49.617" endtime="20231128 21:49:49.618"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:49.619" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:49.618" endtime="20231128 21:49:49.620"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:49.622" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:49.621" endtime="20231128 21:49:49.623"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.624" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:49.625" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:49.624" endtime="20231128 21:49:49.625"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:49.626" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:49.625" endtime="20231128 21:49:49.626"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.627" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:49.627" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:49.626" endtime="20231128 21:49:49.627"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.628" endtime="20231128 21:49:49.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.628" endtime="20231128 21:49:49.629"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.627" endtime="20231128 21:49:49.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.629" endtime="20231128 21:49:49.630"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.630" endtime="20231128 21:49:49.630"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.631" endtime="20231128 21:49:49.631"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.629" endtime="20231128 21:49:49.631"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.632" endtime="20231128 21:49:49.632"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.632" endtime="20231128 21:49:49.632"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.631" endtime="20231128 21:49:49.633"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.633" endtime="20231128 21:49:49.633"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.634" endtime="20231128 21:49:49.634"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.633" endtime="20231128 21:49:49.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.635" endtime="20231128 21:49:49.635"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.634" endtime="20231128 21:49:49.636"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:49.639" endtime="20231128 21:49:49.639"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.637" endtime="20231128 21:49:49.639"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.640" endtime="20231128 21:49:49.640"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.641" endtime="20231128 21:49:49.641"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.641" endtime="20231128 21:49:49.642"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.639" endtime="20231128 21:49:49.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.644" endtime="20231128 21:49:49.644"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.643" endtime="20231128 21:49:49.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.645" endtime="20231128 21:49:49.645"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.645" endtime="20231128 21:49:49.646"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.646" endtime="20231128 21:49:49.646"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.646" endtime="20231128 21:49:49.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.647" endtime="20231128 21:49:49.648"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.647" endtime="20231128 21:49:49.648"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:49.648" endtime="20231128 21:49:49.649"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:49.648" endtime="20231128 21:49:49.649"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.627" endtime="20231128 21:49:49.649"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:49.650" level="INFO">Length is 19</msg>
<msg timestamp="20231128 21:49:49.650" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231128 21:49:49.649" endtime="20231128 21:49:49.650"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:49.652" level="INFO">${text} = las la-folder-minus</msg>
<status status="PASS" starttime="20231128 21:49:49.651" endtime="20231128 21:49:49.653"/>
</kw>
<status status="PASS" starttime="20231128 21:49:49.650" endtime="20231128 21:49:49.653"/>
</branch>
<status status="PASS" starttime="20231128 21:49:49.650" endtime="20231128 21:49:49.653"/>
</if>
<msg timestamp="20231128 21:49:49.654" level="INFO">${text} = las la-folder-minus</msg>
<status status="PASS" starttime="20231128 21:49:49.616" endtime="20231128 21:49:49.655"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:49.656" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Biểu tượng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:49.655" endtime="20231128 21:49:49.657"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:49.657" endtime="20231128 21:49:50.981"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:50.982" endtime="20231128 21:49:51.029"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:51.031" level="INFO">Fills the text 'las la-folder-minus' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:51.030" endtime="20231128 21:49:51.238"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:51.285" level="INFO">Text: 'las la-folder-minus'</msg>
<msg timestamp="20231128 21:49:51.285" level="INFO">${condition} = las la-folder-minus</msg>
<status status="PASS" starttime="20231128 21:49:51.239" endtime="20231128 21:49:51.285"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.291" endtime="20231128 21:49:51.292"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.293" endtime="20231128 21:49:51.294"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.286" endtime="20231128 21:49:51.294"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:51.286" endtime="20231128 21:49:51.294"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:51.295" endtime="20231128 21:49:51.362"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:51.363" level="INFO">Length is 19</msg>
<msg timestamp="20231128 21:49:51.363" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231128 21:49:51.362" endtime="20231128 21:49:51.363"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:51.365" level="INFO">${STATE["Biểu tượng"]} = las la-folder-minus</msg>
<status status="PASS" starttime="20231128 21:49:51.364" endtime="20231128 21:49:51.365"/>
</kw>
<status status="PASS" starttime="20231128 21:49:51.364" endtime="20231128 21:49:51.366"/>
</branch>
<status status="PASS" starttime="20231128 21:49:51.364" endtime="20231128 21:49:51.366"/>
</if>
<status status="PASS" starttime="20231128 21:49:49.494" endtime="20231128 21:49:51.366"/>
</kw>
<kw name="Click tree select &quot;Điều hướng cha&quot; with &quot;DASHBOARD&quot;" library="common" sourcename="Click tree select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:51.369" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:51.368" endtime="20231128 21:49:51.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:51.372" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:51.369" endtime="20231128 21:49:51.372"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:51.375" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:51.374" endtime="20231128 21:49:51.375"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:51.376" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:51.377" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:51.376" endtime="20231128 21:49:51.377"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:51.378" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:51.377" endtime="20231128 21:49:51.378"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:51.379" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:51.379" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:51.378" endtime="20231128 21:49:51.379"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.380" endtime="20231128 21:49:51.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.381" endtime="20231128 21:49:51.381"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.379" endtime="20231128 21:49:51.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.382" endtime="20231128 21:49:51.382"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.382" endtime="20231128 21:49:51.382"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.383" endtime="20231128 21:49:51.383"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.381" endtime="20231128 21:49:51.383"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.384" endtime="20231128 21:49:51.384"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.384" endtime="20231128 21:49:51.385"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.383" endtime="20231128 21:49:51.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.386" endtime="20231128 21:49:51.386"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.388" endtime="20231128 21:49:51.389"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.385" endtime="20231128 21:49:51.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.391" endtime="20231128 21:49:51.392"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.390" endtime="20231128 21:49:51.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:51.393" endtime="20231128 21:49:51.393"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.392" endtime="20231128 21:49:51.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.394" endtime="20231128 21:49:51.394"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.395" endtime="20231128 21:49:51.395"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.396" endtime="20231128 21:49:51.396"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.394" endtime="20231128 21:49:51.396"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.397" endtime="20231128 21:49:51.397"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.396" endtime="20231128 21:49:51.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.398" endtime="20231128 21:49:51.399"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.397" endtime="20231128 21:49:51.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.400" endtime="20231128 21:49:51.401"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.400" endtime="20231128 21:49:51.401"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.402" endtime="20231128 21:49:51.402"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.401" endtime="20231128 21:49:51.402"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:51.406" endtime="20231128 21:49:51.407"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:51.402" endtime="20231128 21:49:51.407"/>
</branch>
<status status="PASS" starttime="20231128 21:49:51.379" endtime="20231128 21:49:51.407"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:51.408" level="INFO">Length is 9</msg>
<msg timestamp="20231128 21:49:51.409" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231128 21:49:51.408" endtime="20231128 21:49:51.409"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:51.410" level="INFO">${text} = DASHBOARD</msg>
<status status="PASS" starttime="20231128 21:49:51.410" endtime="20231128 21:49:51.410"/>
</kw>
<status status="PASS" starttime="20231128 21:49:51.409" endtime="20231128 21:49:51.411"/>
</branch>
<status status="PASS" starttime="20231128 21:49:51.409" endtime="20231128 21:49:51.411"/>
</if>
<msg timestamp="20231128 21:49:51.411" level="INFO">${text} = DASHBOARD</msg>
<status status="PASS" starttime="20231128 21:49:51.368" endtime="20231128 21:49:51.411"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-tree-select")]</arg>
<msg timestamp="20231128 21:49:51.412" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Điều hướng cha"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-tree-select")]</msg>
<status status="PASS" starttime="20231128 21:49:51.412" endtime="20231128 21:49:51.412"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:51.413" endtime="20231128 21:49:51.712"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}//input</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:51.716" level="INFO">Fills the text 'DASHBOARD' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:51.713" endtime="20231128 21:49:51.863"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-tree-node-content-wrapper") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:51.864" endtime="20231128 21:49:52.050"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:52.051" level="INFO">Length is 9</msg>
<msg timestamp="20231128 21:49:52.051" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231128 21:49:52.050" endtime="20231128 21:49:52.051"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:52.052" level="INFO">${STATE["Điều hướng cha"]} = DASHBOARD</msg>
<status status="PASS" starttime="20231128 21:49:52.052" endtime="20231128 21:49:52.053"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.051" endtime="20231128 21:49:52.055"/>
</branch>
<status status="PASS" starttime="20231128 21:49:52.051" endtime="20231128 21:49:52.056"/>
</if>
<status status="PASS" starttime="20231128 21:49:51.367" endtime="20231128 21:49:52.057"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tham số truy vấn&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:52.162" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:52.061" endtime="20231128 21:49:52.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:52.163" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:52.162" endtime="20231128 21:49:52.163"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:52.175" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:52.163" endtime="20231128 21:49:52.175"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:52.177" endtime="20231128 21:49:52.177"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.176" endtime="20231128 21:49:52.178"/>
</branch>
<status status="PASS" starttime="20231128 21:49:52.176" endtime="20231128 21:49:52.179"/>
</if>
<status status="PASS" starttime="20231128 21:49:52.060" endtime="20231128 21:49:52.179"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:52.181" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:52.181" endtime="20231128 21:49:52.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:52.183" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:52.182" endtime="20231128 21:49:52.183"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:52.184" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:52.184" endtime="20231128 21:49:52.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:52.185" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:52.186" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:52.185" endtime="20231128 21:49:52.186"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:52.190" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 21:49:52.188" endtime="20231128 21:49:52.191"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:52.192" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:52.192" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:52.191" endtime="20231128 21:49:52.192"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.193" endtime="20231128 21:49:52.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.194" endtime="20231128 21:49:52.194"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.193" endtime="20231128 21:49:52.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.195" endtime="20231128 21:49:52.195"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.196" endtime="20231128 21:49:52.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.196" endtime="20231128 21:49:52.196"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.195" endtime="20231128 21:49:52.197"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.197" endtime="20231128 21:49:52.198"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.198" endtime="20231128 21:49:52.198"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.197" endtime="20231128 21:49:52.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.199" endtime="20231128 21:49:52.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.199" endtime="20231128 21:49:52.200"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.199" endtime="20231128 21:49:52.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.201" endtime="20231128 21:49:52.201"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.200" endtime="20231128 21:49:52.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:52.202" endtime="20231128 21:49:52.202"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.201" endtime="20231128 21:49:52.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.207" endtime="20231128 21:49:52.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.208" endtime="20231128 21:49:52.209"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.209" endtime="20231128 21:49:52.210"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.206" endtime="20231128 21:49:52.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.210" endtime="20231128 21:49:52.211"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.210" endtime="20231128 21:49:52.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.212" endtime="20231128 21:49:52.212"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.211" endtime="20231128 21:49:52.212"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.213" endtime="20231128 21:49:52.213"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.212" endtime="20231128 21:49:52.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.214" endtime="20231128 21:49:52.215"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.214" endtime="20231128 21:49:52.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 21:49:52.217" level="INFO">${new_text} = Quas repudiandae ratione officia quis aspernatur.</msg>
<status status="PASS" starttime="20231128 21:49:52.217" endtime="20231128 21:49:52.217"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.216" endtime="20231128 21:49:52.218"/>
</branch>
<status status="PASS" starttime="20231128 21:49:52.193" endtime="20231128 21:49:52.218"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:52.219" level="INFO">Length is 8</msg>
<msg timestamp="20231128 21:49:52.219" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 21:49:52.218" endtime="20231128 21:49:52.219"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:52.225" level="INFO">${text} = Quas repudiandae ratione officia quis aspernatur.</msg>
<status status="PASS" starttime="20231128 21:49:52.224" endtime="20231128 21:49:52.226"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.223" endtime="20231128 21:49:52.226"/>
</branch>
<status status="PASS" starttime="20231128 21:49:52.222" endtime="20231128 21:49:52.226"/>
</if>
<msg timestamp="20231128 21:49:52.227" level="INFO">${text} = Quas repudiandae ratione officia quis aspernatur.</msg>
<status status="PASS" starttime="20231128 21:49:52.179" endtime="20231128 21:49:52.227"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 21:49:52.228" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tham số truy vấn"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 21:49:52.227" endtime="20231128 21:49:52.228"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:52.228" endtime="20231128 21:49:52.333"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:52.334" endtime="20231128 21:49:52.380"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:52.383" level="INFO">Fills the text 'Quas repudiandae ratione officia quis aspernatur.' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:52.381" endtime="20231128 21:49:52.443"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:52.490" level="INFO">Text: 'Quas repudiandae ratione officia quis aspernatur.'</msg>
<msg timestamp="20231128 21:49:52.491" level="INFO">${condition} = Quas repudiandae ratione officia quis aspernatur.</msg>
<status status="PASS" starttime="20231128 21:49:52.443" endtime="20231128 21:49:52.491"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.494" endtime="20231128 21:49:52.495"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:52.496" endtime="20231128 21:49:52.496"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:52.492" endtime="20231128 21:49:52.497"/>
</iter>
<status status="NOT RUN" starttime="20231128 21:49:52.492" endtime="20231128 21:49:52.497"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 21:49:52.498" endtime="20231128 21:49:52.565"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:52.566" level="INFO">Length is 49</msg>
<msg timestamp="20231128 21:49:52.567" level="INFO">${cnt} = 49</msg>
<status status="PASS" starttime="20231128 21:49:52.566" endtime="20231128 21:49:52.567"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:52.570" level="INFO">${STATE["Tham số truy vấn"]} = Quas repudiandae ratione officia quis aspernatur.</msg>
<status status="PASS" starttime="20231128 21:49:52.569" endtime="20231128 21:49:52.571"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.568" endtime="20231128 21:49:52.572"/>
</branch>
<status status="PASS" starttime="20231128 21:49:52.567" endtime="20231128 21:49:52.572"/>
</if>
<status status="PASS" starttime="20231128 21:49:52.059" endtime="20231128 21:49:52.573"/>
</kw>
<kw name="Click switch &quot;Kích hoạt&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231128 21:49:52.576" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Kích hoạt"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231128 21:49:52.575" endtime="20231128 21:49:52.576"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:52.577" endtime="20231128 21:49:52.690"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.574" endtime="20231128 21:49:52.691"/>
</kw>
<kw name="Click assign list &quot;Order Side, Farmer Side&quot;" library="common" sourcename="Click assign list &quot;${list}&quot;">
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${list}</arg>
<arg>,${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231128 21:49:52.695" level="INFO">${words} = ['Order Side', 'Farmer Side']</msg>
<status status="PASS" starttime="20231128 21:49:52.693" endtime="20231128 21:49:52.696"/>
</kw>
<for flavor="IN">
<var>${word}</var>
<value>@{words}</value>
<iter>
<var name="${word}">Order Side</var>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-checkbox-wrapper")]/*[text()="${word}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:52.699" endtime="20231128 21:49:52.874"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.697" endtime="20231128 21:49:52.875"/>
</iter>
<iter>
<var name="${word}">Farmer Side</var>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-checkbox-wrapper")]/*[text()="${word}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:52.876" endtime="20231128 21:49:53.042"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.876" endtime="20231128 21:49:53.043"/>
</iter>
<status status="PASS" starttime="20231128 21:49:52.696" endtime="20231128 21:49:53.044"/>
</for>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-transfer-operation")]/button[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:53.045" endtime="20231128 21:49:53.181"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:53.283" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:53.182" endtime="20231128 21:49:53.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:53.284" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:53.283" endtime="20231128 21:49:53.284"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:53.302" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:53.284" endtime="20231128 21:49:53.304"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:53.307" endtime="20231128 21:49:53.308"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:53.306" endtime="20231128 21:49:53.308"/>
</branch>
<status status="PASS" starttime="20231128 21:49:53.305" endtime="20231128 21:49:53.309"/>
</if>
<status status="PASS" starttime="20231128 21:49:53.181" endtime="20231128 21:49:53.309"/>
</kw>
<status status="PASS" starttime="20231128 21:49:52.692" endtime="20231128 21:49:53.309"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:53.413" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:53.311" endtime="20231128 21:49:53.413"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:53.423" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:53.413" endtime="20231128 21:49:53.424"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:53.426" endtime="20231128 21:49:53.739"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:53.744" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 21:49:53.743" endtime="20231128 21:49:53.745"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:53.762" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:53.746" endtime="20231128 21:49:53.763"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:53.765" endtime="20231128 21:49:53.766"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 21:49:53.767" endtime="20231128 21:49:53.767"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 21:49:53.768" endtime="20231128 21:49:53.769"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:53.764" endtime="20231128 21:49:53.771"/>
</branch>
<status status="PASS" starttime="20231128 21:49:53.764" endtime="20231128 21:49:53.775"/>
</if>
<status status="PASS" starttime="20231128 21:49:53.741" endtime="20231128 21:49:53.776"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 21:49:53.800" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:53.800" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:53.832" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:53.832" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 21:49:53.963" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 21:49:53.777" endtime="20231128 21:49:53.963"/>
</kw>
<status status="PASS" starttime="20231128 21:49:53.425" endtime="20231128 21:49:53.964"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:53.965" endtime="20231128 21:49:53.965"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 21:49:53.965" endtime="20231128 21:49:53.966"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 21:49:53.966" endtime="20231128 21:49:53.967"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:53.964" endtime="20231128 21:49:53.967"/>
</branch>
<status status="PASS" starttime="20231128 21:49:53.425" endtime="20231128 21:49:53.968"/>
</if>
<status status="PASS" starttime="20231128 21:49:53.310" endtime="20231128 21:49:53.968"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:53.974" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 21:49:53.971" endtime="20231128 21:49:53.975"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:53.977" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:53.977" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 21:49:53.976" endtime="20231128 21:49:53.978"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:53.980" endtime="20231128 21:49:53.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:53.979" endtime="20231128 21:49:53.980"/>
</branch>
<status status="PASS" starttime="20231128 21:49:53.978" endtime="20231128 21:49:53.981"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 21:49:54.119" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231128 21:49:53.983" endtime="20231128 21:49:54.121"/>
</kw>
<status status="PASS" starttime="20231128 21:49:53.982" endtime="20231128 21:49:54.124"/>
</kw>
<status status="PASS" starttime="20231128 21:49:53.981" endtime="20231128 21:49:54.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:54.126" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231128 21:49:54.126" endtime="20231128 21:49:54.126"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231128 21:49:54.547" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231128 21:49:54.547" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231128 21:49:54.547" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231128 21:49:54.130" endtime="20231128 21:49:54.550"/>
</kw>
<status status="FAIL" starttime="20231128 21:49:54.128" endtime="20231128 21:49:54.551"/>
</kw>
<msg timestamp="20231128 21:49:54.552" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231128 21:49:54.127" endtime="20231128 21:49:54.552"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.557" endtime="20231128 21:49:54.557"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.555" endtime="20231128 21:49:54.558"/>
</branch>
<status status="PASS" starttime="20231128 21:49:54.554" endtime="20231128 21:49:54.558"/>
</if>
<status status="PASS" starttime="20231128 21:49:53.969" endtime="20231128 21:49:54.558"/>
</kw>
<status status="PASS" starttime="20231128 21:49:40.559" endtime="20231128 21:49:54.559"/>
</kw>
<kw name="When Enter &quot;text&quot; in placeholder &quot;Nhập để tìm kiếm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in placeholder &quot;${placeholder}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 21:49:54.669" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 21:49:54.567" endtime="20231128 21:49:54.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:54.671" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 21:49:54.669" endtime="20231128 21:49:54.671"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 21:49:54.682" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 21:49:54.673" endtime="20231128 21:49:54.682"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 21:49:54.684" endtime="20231128 21:49:54.685"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.683" endtime="20231128 21:49:54.686"/>
</branch>
<status status="PASS" starttime="20231128 21:49:54.683" endtime="20231128 21:49:54.686"/>
</if>
<status status="PASS" starttime="20231128 21:49:54.566" endtime="20231128 21:49:54.688"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:54.692" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 21:49:54.691" endtime="20231128 21:49:54.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 21:49:54.693" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 21:49:54.693" endtime="20231128 21:49:54.693"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:54.694" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:54.694" endtime="20231128 21:49:54.694"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:54.695" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:54.695" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:54.695" endtime="20231128 21:49:54.696"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:54.697" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 21:49:54.696" endtime="20231128 21:49:54.697"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:54.698" level="INFO">Length is 1</msg>
<msg timestamp="20231128 21:49:54.698" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 21:49:54.697" endtime="20231128 21:49:54.698"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.699" endtime="20231128 21:49:54.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.700" endtime="20231128 21:49:54.700"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.698" endtime="20231128 21:49:54.700"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.701" endtime="20231128 21:49:54.701"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.701" endtime="20231128 21:49:54.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.703" endtime="20231128 21:49:54.706"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.700" endtime="20231128 21:49:54.706"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.707" endtime="20231128 21:49:54.707"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.707" endtime="20231128 21:49:54.708"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.706" endtime="20231128 21:49:54.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.709" endtime="20231128 21:49:54.709"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.710" endtime="20231128 21:49:54.710"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.708" endtime="20231128 21:49:54.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.711" endtime="20231128 21:49:54.711"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.710" endtime="20231128 21:49:54.711"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 21:49:54.712" endtime="20231128 21:49:54.712"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.712" endtime="20231128 21:49:54.712"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.713" endtime="20231128 21:49:54.713"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.714" endtime="20231128 21:49:54.714"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.714" endtime="20231128 21:49:54.715"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.713" endtime="20231128 21:49:54.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.716" endtime="20231128 21:49:54.716"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.715" endtime="20231128 21:49:54.716"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.717" endtime="20231128 21:49:54.717"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.717" endtime="20231128 21:49:54.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.719" endtime="20231128 21:49:54.721"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.719" endtime="20231128 21:49:54.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.722" endtime="20231128 21:49:54.723"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.722" endtime="20231128 21:49:54.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 21:49:54.724" level="INFO">${new_text} = Autem maiores corporis in vero dignissimos corporis.</msg>
<status status="PASS" starttime="20231128 21:49:54.723" endtime="20231128 21:49:54.724"/>
</kw>
<status status="PASS" starttime="20231128 21:49:54.723" endtime="20231128 21:49:54.724"/>
</branch>
<status status="PASS" starttime="20231128 21:49:54.698" endtime="20231128 21:49:54.724"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:54.725" level="INFO">Length is 8</msg>
<msg timestamp="20231128 21:49:54.725" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 21:49:54.725" endtime="20231128 21:49:54.725"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 21:49:54.727" level="INFO">${text} = Autem maiores corporis in vero dignissimos corporis.</msg>
<status status="PASS" starttime="20231128 21:49:54.726" endtime="20231128 21:49:54.727"/>
</kw>
<status status="PASS" starttime="20231128 21:49:54.726" endtime="20231128 21:49:54.727"/>
</branch>
<status status="PASS" starttime="20231128 21:49:54.726" endtime="20231128 21:49:54.727"/>
</if>
<msg timestamp="20231128 21:49:54.727" level="INFO">${text} = Autem maiores corporis in vero dignissimos corporis.</msg>
<status status="PASS" starttime="20231128 21:49:54.689" endtime="20231128 21:49:54.728"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${placeholder}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231128 21:49:54.740" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231128 21:49:54.741" level="INFO">${element} = //input[contains(@placeholder, "Nhập để tìm kiếm")]</msg>
<status status="PASS" starttime="20231128 21:49:54.728" endtime="20231128 21:49:54.741"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 21:49:54.742" endtime="20231128 21:49:54.778"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 21:49:54.780" level="INFO">Fills the text 'Autem maiores corporis in vero dignissimos corporis.' in the given field.</msg>
<status status="PASS" starttime="20231128 21:49:54.779" endtime="20231128 21:49:54.879"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:54.881" level="INFO">Length is 52</msg>
<msg timestamp="20231128 21:49:54.882" level="INFO">${cnt} = 52</msg>
<status status="PASS" starttime="20231128 21:49:54.880" endtime="20231128 21:49:54.882"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${placeholder}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 21:49:54.888" level="INFO">${STATE["Nhập để tìm kiếm"]} = Autem maiores corporis in vero dignissimos corporis.</msg>
<status status="PASS" starttime="20231128 21:49:54.885" endtime="20231128 21:49:54.889"/>
</kw>
<status status="PASS" starttime="20231128 21:49:54.883" endtime="20231128 21:49:54.890"/>
</branch>
<status status="PASS" starttime="20231128 21:49:54.883" endtime="20231128 21:49:54.891"/>
</if>
<status status="PASS" starttime="20231128 21:49:54.564" endtime="20231128 21:49:54.891"/>
</kw>
<kw name="Then &quot;SUPERADMIN&quot; should not be visible in the tree line" library="common" sourcename="&quot;${name}&quot; should not be visible in the tree line">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 21:49:54.913" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 21:49:54.912" endtime="20231128 21:49:54.914"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 21:49:54.916" level="INFO">Length is 0</msg>
<msg timestamp="20231128 21:49:54.917" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 21:49:54.915" endtime="20231128 21:49:54.918"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 21:49:54.920" endtime="20231128 21:49:54.922"/>
</kw>
<status status="NOT RUN" starttime="20231128 21:49:54.918" endtime="20231128 21:49:54.922"/>
</branch>
<status status="PASS" starttime="20231128 21:49:54.918" endtime="20231128 21:49:54.923"/>
</if>
<msg timestamp="20231128 21:49:54.924" level="INFO">${name} = SUPERADMIN</msg>
<status status="PASS" starttime="20231128 21:49:54.910" endtime="20231128 21:49:54.924"/>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>//nz-tree-node-title[@title="${name}" and contains(@class,"ant-tree-node-content-wrapper")]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231128 21:50:05.211" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231128 21:50:05.211" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231128 21:50:05.212" level="FAIL">TimeoutError: locator.waitFor: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//nz-tree-node-title[@title="SUPERADMIN" and contains(@class,"ant-tree-node-content-wrapper")]') to be detached
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231128 21:49:54.932" endtime="20231128 21:50:05.223"/>
</kw>
<status status="FAIL" starttime="20231128 21:49:54.925" endtime="20231128 21:50:05.224"/>
</kw>
<status status="FAIL" starttime="20231128 21:49:54.909" endtime="20231128 21:50:05.225"/>
</kw>
<kw name="When Enter &quot;test name&quot; in placeholder &quot;Nhập để tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in placeholder &quot;${placeholder}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231128 21:50:05.232" endtime="20231128 21:50:05.233"/>
</kw>
<kw name="When Click tree select &quot;DASHBOARD&quot; to show data" library="common" sourcename="Click tree select &quot;${name}&quot; to show data">
<status status="NOT RUN" starttime="20231128 21:50:05.237" endtime="20231128 21:50:05.238"/>
</kw>
<kw name="Then &quot;_@Tên điều hướng@_&quot; should be visible in the tree line" library="common" sourcename="&quot;${name}&quot; should be visible in the tree line">
<status status="NOT RUN" starttime="20231128 21:50:05.241" endtime="20231128 21:50:05.241"/>
</kw>
<kw name="When Click on the &quot;_@Tên điều hướng@_&quot; tree to delete" library="common" sourcename="Click on the &quot;${name}&quot; tree to delete">
<status status="NOT RUN" starttime="20231128 21:50:05.244" endtime="20231128 21:50:05.245"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231128 21:50:06.324" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231128 21:50:05.249" endtime="20231128 21:50:06.324"/>
</kw>
<status status="PASS" starttime="20231128 21:50:05.248" endtime="20231128 21:50:06.324"/>
</kw>
<tag>Search</tag>
<tag>Smoketest</tag>
<status status="FAIL" starttime="20231128 21:49:35.224" endtime="20231128 21:50:06.326">TimeoutError: locator.waitFor: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//nz-tree-node-title[@title="SUPERADMIN" and contains(@class,"ant-tree-node-content-wrapper")]') to be detached
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
    [ Message content over the limit has been removed. ]
...le title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
  locator resolved to visible &lt;nz-tree-node-title title="SUPERADMIN" class="ant-tree-node-content-…&gt;…&lt;/nz-tree-node-title&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<status status="FAIL" starttime="20231128 21:49:32.986" endtime="20231128 21:50:06.400"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">Search</stat>
<stat pass="0" fail="1" skip="0">Smoketest</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Navigation">Navigation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

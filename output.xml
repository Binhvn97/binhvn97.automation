<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231125 00:20:07.087" rpa="false" schemaversion="4">
<suite id="s1" name="Navigation" source="d:\TESTER\Automation\Auto_Web\testcases\navigation.robot">
<test id="s1-t1" name="DH_28 Verify the search function when enter the name was not existed" line="347">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231125 00:20:09.943" endtime="20231125 00:20:09.945"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231125 00:20:09.948" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\42a76d0c-e184-4f6b-884c-226988ef0f2e"}</msg>
<msg timestamp="20231125 00:20:11.680" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\42a76d0c-e184-4f6b-884c-226988ef0f2e"}</msg>
<status status="PASS" starttime="20231125 00:20:09.946" endtime="20231125 00:20:11.681"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231125 00:20:15.691" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231125 00:20:15.691" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231125 00:20:11.682" endtime="20231125 00:20:15.692"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231125 00:20:15.695" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231125 00:20:15.693" endtime="20231125 00:20:15.696"/>
</kw>
<status status="PASS" starttime="20231125 00:20:09.940" endtime="20231125 00:20:15.696"/>
</kw>
<kw name="Create a test data">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Phân quyền điều hướng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Phân quyền điều hướng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:15.802" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:15.717" endtime="20231125 00:20:15.802"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231125 00:20:15.809" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231125 00:20:15.803" endtime="20231125 00:20:15.811"/>
</kw>
<status status="FAIL" starttime="20231125 00:20:15.716" endtime="20231125 00:20:15.812"/>
</kw>
<msg timestamp="20231125 00:20:15.815" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231125 00:20:15.714" endtime="20231125 00:20:15.816"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231125 00:20:15.818" endtime="20231125 00:20:15.819"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.817" endtime="20231125 00:20:15.820"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Điều hướng&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:15.835" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:15.834" endtime="20231125 00:20:15.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:15.838" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:15.837" endtime="20231125 00:20:15.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:15.842" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:15.841" endtime="20231125 00:20:15.851"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:15.861" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:15.861" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:15.860" endtime="20231125 00:20:15.862"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:15.863" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:15.862" endtime="20231125 00:20:15.864"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:15.871" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:15.876" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:15.865" endtime="20231125 00:20:15.878"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.886" endtime="20231125 00:20:15.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.893" endtime="20231125 00:20:15.894"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.882" endtime="20231125 00:20:15.895"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.897" endtime="20231125 00:20:15.897"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.898" endtime="20231125 00:20:15.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.901" endtime="20231125 00:20:15.901"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.895" endtime="20231125 00:20:15.902"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.909" endtime="20231125 00:20:15.910"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.925" endtime="20231125 00:20:15.926"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.904" endtime="20231125 00:20:15.926"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.928" endtime="20231125 00:20:15.929"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.929" endtime="20231125 00:20:15.930"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.927" endtime="20231125 00:20:15.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.933" endtime="20231125 00:20:15.934"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.932" endtime="20231125 00:20:15.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:15.937" endtime="20231125 00:20:15.940"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.936" endtime="20231125 00:20:15.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.943" endtime="20231125 00:20:15.944"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.945" endtime="20231125 00:20:15.946"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.947" endtime="20231125 00:20:15.948"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.942" endtime="20231125 00:20:15.949"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.950" endtime="20231125 00:20:15.951"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.949" endtime="20231125 00:20:15.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.953" endtime="20231125 00:20:15.954"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.952" endtime="20231125 00:20:15.958"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.960" endtime="20231125 00:20:15.961"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.959" endtime="20231125 00:20:15.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.970" endtime="20231125 00:20:15.974"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.966" endtime="20231125 00:20:15.976"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:15.992" endtime="20231125 00:20:16.002"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:15.977" endtime="20231125 00:20:16.003"/>
</branch>
<status status="PASS" starttime="20231125 00:20:15.881" endtime="20231125 00:20:16.004"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:16.012" level="INFO">Length is 15</msg>
<msg timestamp="20231125 00:20:16.014" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231125 00:20:16.009" endtime="20231125 00:20:16.014"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:16.027" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231125 00:20:16.018" endtime="20231125 00:20:16.028"/>
</kw>
<status status="PASS" starttime="20231125 00:20:16.015" endtime="20231125 00:20:16.030"/>
</branch>
<status status="PASS" starttime="20231125 00:20:16.015" endtime="20231125 00:20:16.031"/>
</if>
<msg timestamp="20231125 00:20:16.032" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231125 00:20:15.832" endtime="20231125 00:20:16.032"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:16.037" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:16.034" endtime="20231125 00:20:16.037"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:16.042" endtime="20231125 00:20:16.284"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:16.285" endtime="20231125 00:20:16.389"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:16.395" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:16.393" endtime="20231125 00:20:16.464"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:16.551" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231125 00:20:16.552" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231125 00:20:16.467" endtime="20231125 00:20:16.553"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.557" endtime="20231125 00:20:16.558"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.559" endtime="20231125 00:20:16.560"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.553" endtime="20231125 00:20:16.560"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:16.553" endtime="20231125 00:20:16.561"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:16.562" endtime="20231125 00:20:16.635"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:16.637" level="INFO">Length is 15</msg>
<msg timestamp="20231125 00:20:16.638" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231125 00:20:16.636" endtime="20231125 00:20:16.639"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:16.644" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231125 00:20:16.642" endtime="20231125 00:20:16.645"/>
</kw>
<status status="PASS" starttime="20231125 00:20:16.641" endtime="20231125 00:20:16.645"/>
</branch>
<status status="PASS" starttime="20231125 00:20:16.641" endtime="20231125 00:20:16.646"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:16.646" endtime="20231125 00:20:16.663"/>
</kw>
<status status="PASS" starttime="20231125 00:20:15.830" endtime="20231125 00:20:16.664"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:16.668" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:16.667" endtime="20231125 00:20:16.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:16.670" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:16.669" endtime="20231125 00:20:16.671"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:16.675" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:16.673" endtime="20231125 00:20:16.675"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:16.678" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:16.678" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:16.677" endtime="20231125 00:20:16.679"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:16.680" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:16.679" endtime="20231125 00:20:16.681"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:16.682" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:16.682" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:16.681" endtime="20231125 00:20:16.683"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.684" endtime="20231125 00:20:16.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.685" endtime="20231125 00:20:16.686"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.683" endtime="20231125 00:20:16.686"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.691" endtime="20231125 00:20:16.692"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.693" endtime="20231125 00:20:16.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.695" endtime="20231125 00:20:16.695"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.687" endtime="20231125 00:20:16.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.697" endtime="20231125 00:20:16.698"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.699" endtime="20231125 00:20:16.699"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.696" endtime="20231125 00:20:16.700"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.702" endtime="20231125 00:20:16.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.703" endtime="20231125 00:20:16.704"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.700" endtime="20231125 00:20:16.704"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.710" endtime="20231125 00:20:16.710"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.708" endtime="20231125 00:20:16.711"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:16.712" endtime="20231125 00:20:16.713"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.711" endtime="20231125 00:20:16.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.715" endtime="20231125 00:20:16.716"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.717" endtime="20231125 00:20:16.717"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.718" endtime="20231125 00:20:16.719"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.714" endtime="20231125 00:20:16.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.726" endtime="20231125 00:20:16.727"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.720" endtime="20231125 00:20:16.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.729" endtime="20231125 00:20:16.729"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.728" endtime="20231125 00:20:16.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.731" endtime="20231125 00:20:16.732"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.730" endtime="20231125 00:20:16.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.733" endtime="20231125 00:20:16.734"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.733" endtime="20231125 00:20:16.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:16.736" endtime="20231125 00:20:16.736"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.735" endtime="20231125 00:20:16.737"/>
</branch>
<status status="PASS" starttime="20231125 00:20:16.683" endtime="20231125 00:20:16.737"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:16.742" level="INFO">Length is 6</msg>
<msg timestamp="20231125 00:20:16.743" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231125 00:20:16.737" endtime="20231125 00:20:16.743"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:16.746" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231125 00:20:16.745" endtime="20231125 00:20:16.746"/>
</kw>
<status status="PASS" starttime="20231125 00:20:16.744" endtime="20231125 00:20:16.747"/>
</branch>
<status status="PASS" starttime="20231125 00:20:16.744" endtime="20231125 00:20:16.747"/>
</if>
<msg timestamp="20231125 00:20:16.748" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231125 00:20:16.666" endtime="20231125 00:20:16.748"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:16.750" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:16.749" endtime="20231125 00:20:16.750"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:16.751" endtime="20231125 00:20:16.842"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:16.843" endtime="20231125 00:20:16.885"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:16.887" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:16.886" endtime="20231125 00:20:16.947"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:16.997" level="INFO">Text: '123123'</msg>
<msg timestamp="20231125 00:20:16.997" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231125 00:20:16.948" endtime="20231125 00:20:16.998"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.000" endtime="20231125 00:20:17.001"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.001" endtime="20231125 00:20:17.002"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:16.998" endtime="20231125 00:20:17.002"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:16.998" endtime="20231125 00:20:17.003"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:17.004" endtime="20231125 00:20:17.070"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:17.074" level="INFO">Length is 6</msg>
<msg timestamp="20231125 00:20:17.075" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231125 00:20:17.071" endtime="20231125 00:20:17.075"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:17.080" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231125 00:20:17.079" endtime="20231125 00:20:17.081"/>
</kw>
<status status="PASS" starttime="20231125 00:20:17.077" endtime="20231125 00:20:17.081"/>
</branch>
<status status="PASS" starttime="20231125 00:20:17.076" endtime="20231125 00:20:17.082"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:17.083" endtime="20231125 00:20:17.096"/>
</kw>
<status status="PASS" starttime="20231125 00:20:16.664" endtime="20231125 00:20:17.097"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:17.202" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:17.100" endtime="20231125 00:20:17.202"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:17.217" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:17.203" endtime="20231125 00:20:17.217"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:17.218" endtime="20231125 00:20:17.339"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:17.344" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231125 00:20:17.343" endtime="20231125 00:20:17.344"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:17.356" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:17.345" endtime="20231125 00:20:17.357"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.360" endtime="20231125 00:20:17.363"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.364" endtime="20231125 00:20:17.365"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231125 00:20:17.367" endtime="20231125 00:20:17.367"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:17.358" endtime="20231125 00:20:17.368"/>
</branch>
<status status="PASS" starttime="20231125 00:20:17.358" endtime="20231125 00:20:17.368"/>
</if>
<status status="PASS" starttime="20231125 00:20:17.341" endtime="20231125 00:20:17.369"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231125 00:20:17.420" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:17.429" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:17.454" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:17.457" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:17.467" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231125 00:20:17.370" endtime="20231125 00:20:17.468"/>
</kw>
<status status="PASS" starttime="20231125 00:20:17.218" endtime="20231125 00:20:17.469"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.470" endtime="20231125 00:20:17.473"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231125 00:20:17.474" endtime="20231125 00:20:17.474"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.475" endtime="20231125 00:20:17.476"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:17.469" endtime="20231125 00:20:17.476"/>
</branch>
<status status="PASS" starttime="20231125 00:20:17.218" endtime="20231125 00:20:17.477"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:17.478" endtime="20231125 00:20:17.484"/>
</kw>
<status status="PASS" starttime="20231125 00:20:17.098" endtime="20231125 00:20:17.485"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:17.490" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:17.487" endtime="20231125 00:20:17.491"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:17.492" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:17.493" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:17.492" endtime="20231125 00:20:17.493"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:17.496" endtime="20231125 00:20:17.499"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:17.494" endtime="20231125 00:20:17.500"/>
</branch>
<status status="PASS" starttime="20231125 00:20:17.494" endtime="20231125 00:20:17.504"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:18.109" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231125 00:20:17.516" endtime="20231125 00:20:18.109"/>
</kw>
<status status="PASS" starttime="20231125 00:20:17.512" endtime="20231125 00:20:18.110"/>
</kw>
<status status="PASS" starttime="20231125 00:20:17.509" endtime="20231125 00:20:18.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:18.112" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231125 00:20:18.112" endtime="20231125 00:20:18.113"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231125 00:20:18.511" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231125 00:20:18.511" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231125 00:20:18.512" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231125 00:20:18.118" endtime="20231125 00:20:18.523"/>
</kw>
<status status="FAIL" starttime="20231125 00:20:18.115" endtime="20231125 00:20:18.524"/>
</kw>
<msg timestamp="20231125 00:20:18.525" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231125 00:20:18.114" endtime="20231125 00:20:18.525"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:18.528" endtime="20231125 00:20:18.530"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:18.526" endtime="20231125 00:20:18.531"/>
</branch>
<status status="PASS" starttime="20231125 00:20:18.525" endtime="20231125 00:20:18.531"/>
</if>
<status status="PASS" starttime="20231125 00:20:17.486" endtime="20231125 00:20:18.532"/>
</kw>
<status status="PASS" starttime="20231125 00:20:15.828" endtime="20231125 00:20:18.532"/>
</kw>
<kw name="Click &quot;SUPERADMIN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:18.534" endtime="20231125 00:20:19.548"/>
</kw>
<status status="PASS" starttime="20231125 00:20:18.533" endtime="20231125 00:20:19.548"/>
</kw>
<kw name="Click &quot;Phân quyền điều hướng&quot; sub menu to &quot;/navigation&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:19.650" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:19.549" endtime="20231125 00:20:19.650"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:19.651" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:19.650" endtime="20231125 00:20:19.651"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:19.667" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:19.651" endtime="20231125 00:20:19.667"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:19.669" endtime="20231125 00:20:19.670"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:19.668" endtime="20231125 00:20:19.670"/>
</branch>
<status status="PASS" starttime="20231125 00:20:19.668" endtime="20231125 00:20:19.672"/>
</if>
<status status="PASS" starttime="20231125 00:20:19.549" endtime="20231125 00:20:19.673"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:19.674" endtime="20231125 00:20:19.865"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231125 00:20:19.873" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/navigation</msg>
<status status="PASS" starttime="20231125 00:20:19.866" endtime="20231125 00:20:19.873"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231125 00:20:19.874" endtime="20231125 00:20:19.876"/>
</kw>
<status status="PASS" starttime="20231125 00:20:19.549" endtime="20231125 00:20:19.876"/>
</kw>
<status status="PASS" starttime="20231125 00:20:15.825" endtime="20231125 00:20:19.877"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:19.980" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:19.879" endtime="20231125 00:20:19.980"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:19.992" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:19.981" endtime="20231125 00:20:19.993"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:19.995" endtime="20231125 00:20:22.044"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.047" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231125 00:20:22.046" endtime="20231125 00:20:22.048"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:22.062" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:22.049" endtime="20231125 00:20:22.063"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.064" endtime="20231125 00:20:22.065"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.065" endtime="20231125 00:20:22.066"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231125 00:20:22.066" endtime="20231125 00:20:22.067"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.063" endtime="20231125 00:20:22.067"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.063" endtime="20231125 00:20:22.068"/>
</if>
<status status="PASS" starttime="20231125 00:20:22.045" endtime="20231125 00:20:22.068"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231125 00:20:22.114" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:22.115" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:22.174" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:22.174" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:22.183" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231125 00:20:22.069" endtime="20231125 00:20:22.183"/>
</kw>
<status status="PASS" starttime="20231125 00:20:19.994" endtime="20231125 00:20:22.184"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.186" endtime="20231125 00:20:22.186"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231125 00:20:22.187" endtime="20231125 00:20:22.188"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.190" endtime="20231125 00:20:22.190"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.185" endtime="20231125 00:20:22.191"/>
</branch>
<status status="PASS" starttime="20231125 00:20:19.993" endtime="20231125 00:20:22.192"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:22.192" endtime="20231125 00:20:22.202"/>
</kw>
<status status="PASS" starttime="20231125 00:20:19.878" endtime="20231125 00:20:22.203"/>
</kw>
<status status="PASS" starttime="20231125 00:20:15.821" endtime="20231125 00:20:22.203"/>
</branch>
<status status="PASS" starttime="20231125 00:20:15.817" endtime="20231125 00:20:22.204"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên điều hướng&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.210" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:22.209" endtime="20231125 00:20:22.211"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.214" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:22.213" endtime="20231125 00:20:22.214"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:22.217" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:22.215" endtime="20231125 00:20:22.217"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.219" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:22.220" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:22.218" endtime="20231125 00:20:22.220"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:22.227" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231125 00:20:22.221" endtime="20231125 00:20:22.228"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.230" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:22.231" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:22.229" endtime="20231125 00:20:22.231"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.233" endtime="20231125 00:20:22.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.235" endtime="20231125 00:20:22.236"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.232" endtime="20231125 00:20:22.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231125 00:20:22.244" level="INFO">${random} = Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.242" endtime="20231125 00:20:22.245"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231125 00:20:22.249" level="INFO">${words} = ['DH_28', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231125 00:20:22.246" endtime="20231125 00:20:22.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.261" level="INFO">${new_text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.254" endtime="20231125 00:20:22.262"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.237" endtime="20231125 00:20:22.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.264" endtime="20231125 00:20:22.264"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.267" endtime="20231125 00:20:22.268"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.263" endtime="20231125 00:20:22.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.276" endtime="20231125 00:20:22.278"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.279" endtime="20231125 00:20:22.279"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.275" endtime="20231125 00:20:22.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.282" endtime="20231125 00:20:22.282"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.281" endtime="20231125 00:20:22.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:22.284" endtime="20231125 00:20:22.285"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.283" endtime="20231125 00:20:22.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.287" endtime="20231125 00:20:22.287"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.287" endtime="20231125 00:20:22.288"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.292" endtime="20231125 00:20:22.292"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.286" endtime="20231125 00:20:22.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.294" endtime="20231125 00:20:22.294"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.293" endtime="20231125 00:20:22.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.295" endtime="20231125 00:20:22.295"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.294" endtime="20231125 00:20:22.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.297" endtime="20231125 00:20:22.297"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.296" endtime="20231125 00:20:22.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.299" endtime="20231125 00:20:22.299"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.298" endtime="20231125 00:20:22.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.301" endtime="20231125 00:20:22.301"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.300" endtime="20231125 00:20:22.301"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.232" endtime="20231125 00:20:22.302"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.302" level="INFO">Length is 8</msg>
<msg timestamp="20231125 00:20:22.303" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231125 00:20:22.302" endtime="20231125 00:20:22.303"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:22.304" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.304" endtime="20231125 00:20:22.307"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.303" endtime="20231125 00:20:22.308"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.303" endtime="20231125 00:20:22.309"/>
</if>
<msg timestamp="20231125 00:20:22.309" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.207" endtime="20231125 00:20:22.310"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:22.311" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên điều hướng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:22.310" endtime="20231125 00:20:22.311"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:22.311" endtime="20231125 00:20:22.406"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:22.408" endtime="20231125 00:20:22.451"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:22.454" level="INFO">Fills the text 'DH_28 Assumenda atque.' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:22.452" endtime="20231125 00:20:22.527"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:22.576" level="INFO">Text: 'DH_28 Assumenda atque.'</msg>
<msg timestamp="20231125 00:20:22.577" level="INFO">${condition} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.528" endtime="20231125 00:20:22.577"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.580" endtime="20231125 00:20:22.581"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.582" endtime="20231125 00:20:22.582"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.578" endtime="20231125 00:20:22.583"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:22.578" endtime="20231125 00:20:22.583"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:22.584" endtime="20231125 00:20:22.652"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.653" level="INFO">Length is 22</msg>
<msg timestamp="20231125 00:20:22.655" level="INFO">${cnt} = 22</msg>
<status status="PASS" starttime="20231125 00:20:22.652" endtime="20231125 00:20:22.657"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:22.661" level="INFO">${STATE["Tên điều hướng"]} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.660" endtime="20231125 00:20:22.662"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.658" endtime="20231125 00:20:22.662"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.658" endtime="20231125 00:20:22.663"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:22.663" endtime="20231125 00:20:22.672"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.206" endtime="20231125 00:20:22.674"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên điều hướng@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:22.678" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231125 00:20:22.676" endtime="20231125 00:20:22.678"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.679" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:22.680" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231125 00:20:22.679" endtime="20231125 00:20:22.680"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.684" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.682" endtime="20231125 00:20:22.685"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.681" endtime="20231125 00:20:22.685"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.681" endtime="20231125 00:20:22.686"/>
</if>
<msg timestamp="20231125 00:20:22.686" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.675" endtime="20231125 00:20:22.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.694" level="INFO">${name} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:22.692" endtime="20231125 00:20:22.694"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Mã điều hướng&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.698" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:22.697" endtime="20231125 00:20:22.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:22.700" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:22.699" endtime="20231125 00:20:22.700"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:22.701" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:22.700" endtime="20231125 00:20:22.702"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.703" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:22.707" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:22.702" endtime="20231125 00:20:22.708"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:22.711" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231125 00:20:22.710" endtime="20231125 00:20:22.712"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.714" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:22.714" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:22.713" endtime="20231125 00:20:22.714"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.717" endtime="20231125 00:20:22.717"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.718" endtime="20231125 00:20:22.719"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.715" endtime="20231125 00:20:22.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.732" endtime="20231125 00:20:22.732"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.733" endtime="20231125 00:20:22.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.735" endtime="20231125 00:20:22.736"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.723" endtime="20231125 00:20:22.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.742" endtime="20231125 00:20:22.742"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.745" endtime="20231125 00:20:22.746"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.740" endtime="20231125 00:20:22.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.760" endtime="20231125 00:20:22.761"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.762" endtime="20231125 00:20:22.763"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.759" endtime="20231125 00:20:22.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.766" endtime="20231125 00:20:22.767"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.764" endtime="20231125 00:20:22.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:22.769" endtime="20231125 00:20:22.769"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.768" endtime="20231125 00:20:22.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.775" endtime="20231125 00:20:22.775"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.778" endtime="20231125 00:20:22.778"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.779" endtime="20231125 00:20:22.780"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.770" endtime="20231125 00:20:22.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.782" endtime="20231125 00:20:22.782"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.781" endtime="20231125 00:20:22.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.784" endtime="20231125 00:20:22.785"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.783" endtime="20231125 00:20:22.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.790" endtime="20231125 00:20:22.791"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.786" endtime="20231125 00:20:22.792"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231125 00:20:22.797" level="INFO">${new_text} = Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:22.794" endtime="20231125 00:20:22.818"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.793" endtime="20231125 00:20:22.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:22.820" endtime="20231125 00:20:22.823"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:22.819" endtime="20231125 00:20:22.824"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.715" endtime="20231125 00:20:22.824"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:22.826" level="INFO">Length is 8</msg>
<msg timestamp="20231125 00:20:22.827" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231125 00:20:22.825" endtime="20231125 00:20:22.827"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:22.830" level="INFO">${text} = Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:22.829" endtime="20231125 00:20:22.831"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.828" endtime="20231125 00:20:22.831"/>
</branch>
<status status="PASS" starttime="20231125 00:20:22.827" endtime="20231125 00:20:22.832"/>
</if>
<msg timestamp="20231125 00:20:22.832" level="INFO">${text} = Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:22.696" endtime="20231125 00:20:22.833"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:22.834" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã điều hướng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:22.833" endtime="20231125 00:20:22.835"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:22.835" endtime="20231125 00:20:22.965"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:22.966" endtime="20231125 00:20:23.019"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:23.024" level="INFO">Fills the text 'Placeat.' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:23.020" endtime="20231125 00:20:23.086"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:23.135" level="INFO">Text: 'Placeat.'</msg>
<msg timestamp="20231125 00:20:23.135" level="INFO">${condition} = Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.090" endtime="20231125 00:20:23.136"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.141" endtime="20231125 00:20:23.141"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.142" endtime="20231125 00:20:23.143"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.136" endtime="20231125 00:20:23.143"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:23.136" endtime="20231125 00:20:23.144"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:23.146" endtime="20231125 00:20:23.216"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.218" level="INFO">Length is 8</msg>
<msg timestamp="20231125 00:20:23.218" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231125 00:20:23.217" endtime="20231125 00:20:23.218"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:23.224" level="INFO">${STATE["Mã điều hướng"]} = Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.220" endtime="20231125 00:20:23.224"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.219" endtime="20231125 00:20:23.225"/>
</branch>
<status status="PASS" starttime="20231125 00:20:23.219" endtime="20231125 00:20:23.226"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:23.226" endtime="20231125 00:20:23.234"/>
</kw>
<status status="PASS" starttime="20231125 00:20:22.695" endtime="20231125 00:20:23.234"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Link&quot; with &quot;/_@Mã điều hướng@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:23.243" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:23.242" endtime="20231125 00:20:23.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:23.245" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:23.244" endtime="20231125 00:20:23.245"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:23.247" level="INFO">${containsS} = ['Mã điều hướng']</msg>
<status status="PASS" starttime="20231125 00:20:23.246" endtime="20231125 00:20:23.247"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.248" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:23.249" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231125 00:20:23.248" endtime="20231125 00:20:23.249"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:23.251" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:23.250" endtime="20231125 00:20:23.251"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.252" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:23.253" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:23.252" endtime="20231125 00:20:23.253"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:23.263" level="INFO">${new_text} = Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.258" endtime="20231125 00:20:23.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:23.267" level="INFO">${symbol} = _@Mã điều hướng@_</msg>
<status status="PASS" starttime="20231125 00:20:23.264" endtime="20231125 00:20:23.267"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.256" endtime="20231125 00:20:23.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.269" endtime="20231125 00:20:23.275"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.276" endtime="20231125 00:20:23.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.278" endtime="20231125 00:20:23.278"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.268" endtime="20231125 00:20:23.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.280" endtime="20231125 00:20:23.281"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.282" endtime="20231125 00:20:23.282"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.279" endtime="20231125 00:20:23.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.284" endtime="20231125 00:20:23.285"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.286" endtime="20231125 00:20:23.290"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.284" endtime="20231125 00:20:23.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.293" endtime="20231125 00:20:23.294"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.292" endtime="20231125 00:20:23.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:23.295" endtime="20231125 00:20:23.296"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.295" endtime="20231125 00:20:23.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.298" endtime="20231125 00:20:23.299"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.300" endtime="20231125 00:20:23.300"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.301" endtime="20231125 00:20:23.335"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.298" endtime="20231125 00:20:23.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.337" endtime="20231125 00:20:23.341"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.336" endtime="20231125 00:20:23.341"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.343" endtime="20231125 00:20:23.344"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.342" endtime="20231125 00:20:23.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.346" endtime="20231125 00:20:23.347"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.345" endtime="20231125 00:20:23.348"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.349" endtime="20231125 00:20:23.350"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.349" endtime="20231125 00:20:23.351"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.352" endtime="20231125 00:20:23.352"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.351" endtime="20231125 00:20:23.353"/>
</branch>
<status status="PASS" starttime="20231125 00:20:23.255" endtime="20231125 00:20:23.353"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.358" level="INFO">Length is 18</msg>
<msg timestamp="20231125 00:20:23.358" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20231125 00:20:23.356" endtime="20231125 00:20:23.358"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:23.361" level="INFO">${text} = /Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.360" endtime="20231125 00:20:23.362"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.359" endtime="20231125 00:20:23.362"/>
</branch>
<status status="PASS" starttime="20231125 00:20:23.359" endtime="20231125 00:20:23.363"/>
</if>
<msg timestamp="20231125 00:20:23.364" level="INFO">${text} = /Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.236" endtime="20231125 00:20:23.364"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:23.366" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Link"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:23.365" endtime="20231125 00:20:23.366"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:23.367" endtime="20231125 00:20:23.492"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:23.493" endtime="20231125 00:20:23.533"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:23.535" level="INFO">Fills the text '/Placeat.' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:23.534" endtime="20231125 00:20:23.600"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:23.649" level="INFO">Text: '/Placeat.'</msg>
<msg timestamp="20231125 00:20:23.649" level="INFO">${condition} = /Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.601" endtime="20231125 00:20:23.649"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.651" endtime="20231125 00:20:23.651"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.652" endtime="20231125 00:20:23.653"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.650" endtime="20231125 00:20:23.653"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:23.650" endtime="20231125 00:20:23.655"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:23.657" endtime="20231125 00:20:23.717"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.718" level="INFO">Length is 9</msg>
<msg timestamp="20231125 00:20:23.718" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231125 00:20:23.717" endtime="20231125 00:20:23.718"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:23.720" level="INFO">${STATE["Link"]} = /Placeat.</msg>
<status status="PASS" starttime="20231125 00:20:23.719" endtime="20231125 00:20:23.720"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.719" endtime="20231125 00:20:23.720"/>
</branch>
<status status="PASS" starttime="20231125 00:20:23.718" endtime="20231125 00:20:23.720"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:23.723" endtime="20231125 00:20:23.731"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.235" endtime="20231125 00:20:23.732"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Số thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:23.736" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:23.735" endtime="20231125 00:20:23.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:23.741" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:23.740" endtime="20231125 00:20:23.741"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:23.744" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:23.742" endtime="20231125 00:20:23.744"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.746" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:23.747" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:23.745" endtime="20231125 00:20:23.747"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:23.749" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231125 00:20:23.748" endtime="20231125 00:20:23.749"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.752" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:23.752" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:23.750" endtime="20231125 00:20:23.753"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.757" endtime="20231125 00:20:23.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.759" endtime="20231125 00:20:23.759"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.753" endtime="20231125 00:20:23.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.762" endtime="20231125 00:20:23.762"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.763" endtime="20231125 00:20:23.763"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.763" endtime="20231125 00:20:23.764"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.761" endtime="20231125 00:20:23.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231125 00:20:23.765" level="INFO">${new_text} = 7259</msg>
<status status="PASS" starttime="20231125 00:20:23.765" endtime="20231125 00:20:23.765"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231125 00:20:23.766" level="INFO">${new_text} = 7259</msg>
<status status="PASS" starttime="20231125 00:20:23.766" endtime="20231125 00:20:23.767"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.764" endtime="20231125 00:20:23.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.768" endtime="20231125 00:20:23.769"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.769" endtime="20231125 00:20:23.769"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.768" endtime="20231125 00:20:23.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.773" endtime="20231125 00:20:23.774"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.770" endtime="20231125 00:20:23.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:23.776" endtime="20231125 00:20:23.776"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.775" endtime="20231125 00:20:23.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.778" endtime="20231125 00:20:23.778"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.778" endtime="20231125 00:20:23.779"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.779" endtime="20231125 00:20:23.779"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.777" endtime="20231125 00:20:23.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.780" endtime="20231125 00:20:23.781"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.780" endtime="20231125 00:20:23.781"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.782" endtime="20231125 00:20:23.783"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.782" endtime="20231125 00:20:23.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.784" endtime="20231125 00:20:23.784"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.783" endtime="20231125 00:20:23.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.785" endtime="20231125 00:20:23.785"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.785" endtime="20231125 00:20:23.786"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:23.786" endtime="20231125 00:20:23.786"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:23.786" endtime="20231125 00:20:23.787"/>
</branch>
<status status="PASS" starttime="20231125 00:20:23.753" endtime="20231125 00:20:23.787"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:23.791" level="INFO">Length is 8</msg>
<msg timestamp="20231125 00:20:23.791" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231125 00:20:23.790" endtime="20231125 00:20:23.791"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:23.794" level="INFO">${text} = 7259</msg>
<status status="PASS" starttime="20231125 00:20:23.793" endtime="20231125 00:20:23.794"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.792" endtime="20231125 00:20:23.794"/>
</branch>
<status status="PASS" starttime="20231125 00:20:23.792" endtime="20231125 00:20:23.795"/>
</if>
<msg timestamp="20231125 00:20:23.795" level="INFO">${text} = 7259</msg>
<status status="PASS" starttime="20231125 00:20:23.734" endtime="20231125 00:20:23.795"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:23.796" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số thứ tự"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:23.795" endtime="20231125 00:20:23.796"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:23.797" endtime="20231125 00:20:23.903"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:23.906" endtime="20231125 00:20:23.950"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:23.952" level="INFO">Fills the text '7259' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:23.951" endtime="20231125 00:20:24.031"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:24.084" level="INFO">Text: '7259'</msg>
<msg timestamp="20231125 00:20:24.085" level="INFO">${condition} = 7259</msg>
<status status="PASS" starttime="20231125 00:20:24.032" endtime="20231125 00:20:24.085"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.090" endtime="20231125 00:20:24.091"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.092" endtime="20231125 00:20:24.092"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.085" endtime="20231125 00:20:24.093"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:24.085" endtime="20231125 00:20:24.093"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:24.094" endtime="20231125 00:20:24.167"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:24.169" level="INFO">Length is 4</msg>
<msg timestamp="20231125 00:20:24.169" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231125 00:20:24.168" endtime="20231125 00:20:24.170"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:24.176" level="INFO">${STATE["Số thứ tự"]} = 7259</msg>
<status status="PASS" starttime="20231125 00:20:24.174" endtime="20231125 00:20:24.176"/>
</kw>
<status status="PASS" starttime="20231125 00:20:24.173" endtime="20231125 00:20:24.177"/>
</branch>
<status status="PASS" starttime="20231125 00:20:24.172" endtime="20231125 00:20:24.177"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:24.178" endtime="20231125 00:20:24.186"/>
</kw>
<status status="PASS" starttime="20231125 00:20:23.733" endtime="20231125 00:20:24.186"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Biểu tượng&quot; with &quot;las la-folder-minus&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:24.193" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:24.192" endtime="20231125 00:20:24.193"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:24.195" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:24.194" endtime="20231125 00:20:24.195"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:24.196" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:24.195" endtime="20231125 00:20:24.197"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:24.198" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:24.198" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:24.197" endtime="20231125 00:20:24.198"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:24.200" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:24.199" endtime="20231125 00:20:24.200"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:24.202" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:24.202" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:24.201" endtime="20231125 00:20:24.202"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.207" endtime="20231125 00:20:24.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.208" endtime="20231125 00:20:24.209"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.203" endtime="20231125 00:20:24.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.211" endtime="20231125 00:20:24.211"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.212" endtime="20231125 00:20:24.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.213" endtime="20231125 00:20:24.213"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.210" endtime="20231125 00:20:24.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.216" endtime="20231125 00:20:24.216"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.217" endtime="20231125 00:20:24.218"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.215" endtime="20231125 00:20:24.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.220" endtime="20231125 00:20:24.223"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.224" endtime="20231125 00:20:24.225"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.219" endtime="20231125 00:20:24.226"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.227" endtime="20231125 00:20:24.228"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.226" endtime="20231125 00:20:24.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:24.230" endtime="20231125 00:20:24.231"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.229" endtime="20231125 00:20:24.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.233" endtime="20231125 00:20:24.234"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.235" endtime="20231125 00:20:24.236"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.239" endtime="20231125 00:20:24.240"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.232" endtime="20231125 00:20:24.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.242" endtime="20231125 00:20:24.242"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.241" endtime="20231125 00:20:24.243"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.257" endtime="20231125 00:20:24.258"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.244" endtime="20231125 00:20:24.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.261" endtime="20231125 00:20:24.261"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.259" endtime="20231125 00:20:24.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.263" endtime="20231125 00:20:24.264"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.262" endtime="20231125 00:20:24.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:24.266" endtime="20231125 00:20:24.266"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:24.265" endtime="20231125 00:20:24.267"/>
</branch>
<status status="PASS" starttime="20231125 00:20:24.203" endtime="20231125 00:20:24.267"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:24.269" level="INFO">Length is 19</msg>
<msg timestamp="20231125 00:20:24.270" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231125 00:20:24.268" endtime="20231125 00:20:24.270"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:24.275" level="INFO">${text} = las la-folder-minus</msg>
<status status="PASS" starttime="20231125 00:20:24.274" endtime="20231125 00:20:24.276"/>
</kw>
<status status="PASS" starttime="20231125 00:20:24.272" endtime="20231125 00:20:24.276"/>
</branch>
<status status="PASS" starttime="20231125 00:20:24.272" endtime="20231125 00:20:24.277"/>
</if>
<msg timestamp="20231125 00:20:24.277" level="INFO">${text} = las la-folder-minus</msg>
<status status="PASS" starttime="20231125 00:20:24.190" endtime="20231125 00:20:24.278"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:24.280" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Biểu tượng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:24.278" endtime="20231125 00:20:24.280"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:24.281" endtime="20231125 00:20:25.631"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:25.632" endtime="20231125 00:20:25.686"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:25.689" level="INFO">Fills the text 'las la-folder-minus' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:25.687" endtime="20231125 00:20:25.913"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:25.966" level="INFO">Text: 'las la-folder-minus'</msg>
<msg timestamp="20231125 00:20:25.966" level="INFO">${condition} = las la-folder-minus</msg>
<status status="PASS" starttime="20231125 00:20:25.914" endtime="20231125 00:20:25.967"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:25.968" endtime="20231125 00:20:25.968"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:25.968" endtime="20231125 00:20:25.969"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:25.967" endtime="20231125 00:20:25.969"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:25.967" endtime="20231125 00:20:25.969"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:25.970" endtime="20231125 00:20:26.030"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.031" level="INFO">Length is 19</msg>
<msg timestamp="20231125 00:20:26.031" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231125 00:20:26.030" endtime="20231125 00:20:26.032"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:26.033" level="INFO">${STATE["Biểu tượng"]} = las la-folder-minus</msg>
<status status="PASS" starttime="20231125 00:20:26.032" endtime="20231125 00:20:26.033"/>
</kw>
<status status="PASS" starttime="20231125 00:20:26.032" endtime="20231125 00:20:26.034"/>
</branch>
<status status="PASS" starttime="20231125 00:20:26.032" endtime="20231125 00:20:26.034"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:26.034" endtime="20231125 00:20:26.043"/>
</kw>
<status status="PASS" starttime="20231125 00:20:24.189" endtime="20231125 00:20:26.044"/>
</kw>
<kw name="Click tree select &quot;Điều hướng cha&quot; with &quot;DASHBOARD&quot;" library="common" sourcename="Click tree select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:26.050" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:26.049" endtime="20231125 00:20:26.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:26.052" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:26.051" endtime="20231125 00:20:26.053"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:26.057" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:26.055" endtime="20231125 00:20:26.057"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.059" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:26.060" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:26.058" endtime="20231125 00:20:26.060"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:26.063" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:26.061" endtime="20231125 00:20:26.063"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.065" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:26.065" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:26.064" endtime="20231125 00:20:26.066"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.067" endtime="20231125 00:20:26.068"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.068" endtime="20231125 00:20:26.069"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.066" endtime="20231125 00:20:26.069"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.070" endtime="20231125 00:20:26.072"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.073" endtime="20231125 00:20:26.074"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.075" endtime="20231125 00:20:26.076"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.069" endtime="20231125 00:20:26.076"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.077" endtime="20231125 00:20:26.078"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.079" endtime="20231125 00:20:26.079"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.077" endtime="20231125 00:20:26.079"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.081" endtime="20231125 00:20:26.081"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.081" endtime="20231125 00:20:26.082"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.080" endtime="20231125 00:20:26.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.083" endtime="20231125 00:20:26.083"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.082" endtime="20231125 00:20:26.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:26.084" endtime="20231125 00:20:26.084"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.083" endtime="20231125 00:20:26.084"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.085" endtime="20231125 00:20:26.085"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.085" endtime="20231125 00:20:26.086"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.086" endtime="20231125 00:20:26.086"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.084" endtime="20231125 00:20:26.090"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.091" endtime="20231125 00:20:26.092"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.091" endtime="20231125 00:20:26.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.093" endtime="20231125 00:20:26.094"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.092" endtime="20231125 00:20:26.094"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.095" endtime="20231125 00:20:26.096"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.095" endtime="20231125 00:20:26.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.097" endtime="20231125 00:20:26.098"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.096" endtime="20231125 00:20:26.098"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.099" endtime="20231125 00:20:26.100"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.099" endtime="20231125 00:20:26.100"/>
</branch>
<status status="PASS" starttime="20231125 00:20:26.066" endtime="20231125 00:20:26.100"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.101" level="INFO">Length is 9</msg>
<msg timestamp="20231125 00:20:26.101" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231125 00:20:26.101" endtime="20231125 00:20:26.101"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:26.103" level="INFO">${text} = DASHBOARD</msg>
<status status="PASS" starttime="20231125 00:20:26.102" endtime="20231125 00:20:26.103"/>
</kw>
<status status="PASS" starttime="20231125 00:20:26.102" endtime="20231125 00:20:26.106"/>
</branch>
<status status="PASS" starttime="20231125 00:20:26.102" endtime="20231125 00:20:26.107"/>
</if>
<msg timestamp="20231125 00:20:26.107" level="INFO">${text} = DASHBOARD</msg>
<status status="PASS" starttime="20231125 00:20:26.047" endtime="20231125 00:20:26.108"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-tree-select")]</arg>
<msg timestamp="20231125 00:20:26.110" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Điều hướng cha"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-tree-select")]</msg>
<status status="PASS" starttime="20231125 00:20:26.108" endtime="20231125 00:20:26.110"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:26.110" endtime="20231125 00:20:26.419"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}//input</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:26.424" level="INFO">Fills the text 'DASHBOARD' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:26.423" endtime="20231125 00:20:26.561"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-tree-node-content-wrapper") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:26.562" endtime="20231125 00:20:26.702"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.708" level="INFO">Length is 9</msg>
<msg timestamp="20231125 00:20:26.709" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231125 00:20:26.703" endtime="20231125 00:20:26.710"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:26.713" level="INFO">${STATE["Điều hướng cha"]} = DASHBOARD</msg>
<status status="PASS" starttime="20231125 00:20:26.712" endtime="20231125 00:20:26.713"/>
</kw>
<status status="PASS" starttime="20231125 00:20:26.711" endtime="20231125 00:20:26.714"/>
</branch>
<status status="PASS" starttime="20231125 00:20:26.711" endtime="20231125 00:20:26.714"/>
</if>
<status status="PASS" starttime="20231125 00:20:26.045" endtime="20231125 00:20:26.714"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tham số truy vấn&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:26.716" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:26.716" endtime="20231125 00:20:26.717"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:26.717" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:26.717" endtime="20231125 00:20:26.717"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:26.718" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:26.718" endtime="20231125 00:20:26.718"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.719" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:26.719" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:26.719" endtime="20231125 00:20:26.719"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:26.723" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231125 00:20:26.720" endtime="20231125 00:20:26.724"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.728" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:26.729" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:26.726" endtime="20231125 00:20:26.730"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.731" endtime="20231125 00:20:26.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.732" endtime="20231125 00:20:26.732"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.730" endtime="20231125 00:20:26.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.733" endtime="20231125 00:20:26.733"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.734" endtime="20231125 00:20:26.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.734" endtime="20231125 00:20:26.735"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.732" endtime="20231125 00:20:26.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.736" endtime="20231125 00:20:26.736"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.738" endtime="20231125 00:20:26.743"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.736" endtime="20231125 00:20:26.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.745" endtime="20231125 00:20:26.745"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.746" endtime="20231125 00:20:26.746"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.744" endtime="20231125 00:20:26.746"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.747" endtime="20231125 00:20:26.747"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.746" endtime="20231125 00:20:26.747"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:26.748" endtime="20231125 00:20:26.748"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.748" endtime="20231125 00:20:26.749"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.749" endtime="20231125 00:20:26.749"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.750" endtime="20231125 00:20:26.750"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.750" endtime="20231125 00:20:26.751"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.749" endtime="20231125 00:20:26.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.752" endtime="20231125 00:20:26.752"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.751" endtime="20231125 00:20:26.752"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.753" endtime="20231125 00:20:26.753"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.752" endtime="20231125 00:20:26.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.759" endtime="20231125 00:20:26.760"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.758" endtime="20231125 00:20:26.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:26.761" endtime="20231125 00:20:26.762"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:26.760" endtime="20231125 00:20:26.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231125 00:20:26.763" level="INFO">${new_text} = Dolorem ipsa dolorum error error recusandae tenetur.</msg>
<status status="PASS" starttime="20231125 00:20:26.763" endtime="20231125 00:20:26.764"/>
</kw>
<status status="PASS" starttime="20231125 00:20:26.762" endtime="20231125 00:20:26.764"/>
</branch>
<status status="PASS" starttime="20231125 00:20:26.730" endtime="20231125 00:20:26.764"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:26.765" level="INFO">Length is 8</msg>
<msg timestamp="20231125 00:20:26.765" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231125 00:20:26.764" endtime="20231125 00:20:26.765"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:26.766" level="INFO">${text} = Dolorem ipsa dolorum error error recusandae tenetur.</msg>
<status status="PASS" starttime="20231125 00:20:26.766" endtime="20231125 00:20:26.766"/>
</kw>
<status status="PASS" starttime="20231125 00:20:26.765" endtime="20231125 00:20:26.767"/>
</branch>
<status status="PASS" starttime="20231125 00:20:26.765" endtime="20231125 00:20:26.767"/>
</if>
<msg timestamp="20231125 00:20:26.767" level="INFO">${text} = Dolorem ipsa dolorum error error recusandae tenetur.</msg>
<status status="PASS" starttime="20231125 00:20:26.715" endtime="20231125 00:20:26.767"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231125 00:20:26.768" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tham số truy vấn"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231125 00:20:26.767" endtime="20231125 00:20:26.768"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:26.769" endtime="20231125 00:20:26.902"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:26.903" endtime="20231125 00:20:26.948"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:26.950" level="INFO">Fills the text 'Dolorem ipsa dolorum error error recusandae tenetur.' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:26.948" endtime="20231125 00:20:27.014"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:27.060" level="INFO">Text: 'Dolorem ipsa dolorum error error recusandae tenetur.'</msg>
<msg timestamp="20231125 00:20:27.060" level="INFO">${condition} = Dolorem ipsa dolorum error error recusandae tenetur.</msg>
<status status="PASS" starttime="20231125 00:20:27.015" endtime="20231125 00:20:27.061"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:27.064" endtime="20231125 00:20:27.065"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:27.066" endtime="20231125 00:20:27.066"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:27.062" endtime="20231125 00:20:27.067"/>
</iter>
<status status="NOT RUN" starttime="20231125 00:20:27.062" endtime="20231125 00:20:27.068"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:27.069" endtime="20231125 00:20:27.134"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:27.135" level="INFO">Length is 52</msg>
<msg timestamp="20231125 00:20:27.136" level="INFO">${cnt} = 52</msg>
<status status="PASS" starttime="20231125 00:20:27.135" endtime="20231125 00:20:27.138"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:27.142" level="INFO">${STATE["Tham số truy vấn"]} = Dolorem ipsa dolorum error error recusandae tenetur.</msg>
<status status="PASS" starttime="20231125 00:20:27.141" endtime="20231125 00:20:27.143"/>
</kw>
<status status="PASS" starttime="20231125 00:20:27.139" endtime="20231125 00:20:27.143"/>
</branch>
<status status="PASS" starttime="20231125 00:20:27.139" endtime="20231125 00:20:27.144"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:27.144" endtime="20231125 00:20:27.155"/>
</kw>
<status status="PASS" starttime="20231125 00:20:26.715" endtime="20231125 00:20:27.156"/>
</kw>
<kw name="Click switch &quot;Kích hoạt&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231125 00:20:27.160" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Kích hoạt"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231125 00:20:27.158" endtime="20231125 00:20:27.160"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:27.161" endtime="20231125 00:20:27.275"/>
</kw>
<status status="PASS" starttime="20231125 00:20:27.157" endtime="20231125 00:20:27.276"/>
</kw>
<kw name="Click assign list &quot;Order Side, Farmer Side&quot;" library="common" sourcename="Click assign list &quot;${list}&quot;">
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${list}</arg>
<arg>,${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231125 00:20:27.279" level="INFO">${words} = ['Order Side', 'Farmer Side']</msg>
<status status="PASS" starttime="20231125 00:20:27.278" endtime="20231125 00:20:27.280"/>
</kw>
<for flavor="IN">
<var>${word}</var>
<value>@{words}</value>
<iter>
<var name="${word}">Order Side</var>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-checkbox-wrapper")]/*[text()="${word}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:27.282" endtime="20231125 00:20:27.480"/>
</kw>
<status status="PASS" starttime="20231125 00:20:27.281" endtime="20231125 00:20:27.481"/>
</iter>
<iter>
<var name="${word}">Farmer Side</var>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-checkbox-wrapper")]/*[text()="${word}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:27.483" endtime="20231125 00:20:27.642"/>
</kw>
<status status="PASS" starttime="20231125 00:20:27.482" endtime="20231125 00:20:27.643"/>
</iter>
<status status="PASS" starttime="20231125 00:20:27.280" endtime="20231125 00:20:27.643"/>
</for>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-transfer-operation")]/button[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:27.644" endtime="20231125 00:20:27.761"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:27.863" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:27.762" endtime="20231125 00:20:27.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:27.864" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:27.863" endtime="20231125 00:20:27.864"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:27.875" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:27.865" endtime="20231125 00:20:27.876"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:27.878" endtime="20231125 00:20:27.878"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:27.877" endtime="20231125 00:20:27.879"/>
</branch>
<status status="PASS" starttime="20231125 00:20:27.876" endtime="20231125 00:20:27.880"/>
</if>
<status status="PASS" starttime="20231125 00:20:27.762" endtime="20231125 00:20:27.880"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:27.881" endtime="20231125 00:20:27.891"/>
</kw>
<status status="PASS" starttime="20231125 00:20:27.276" endtime="20231125 00:20:27.892"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:27.995" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:27.895" endtime="20231125 00:20:27.995"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:28.003" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:27.995" endtime="20231125 00:20:28.004"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:28.007" endtime="20231125 00:20:28.330"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:28.332" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231125 00:20:28.331" endtime="20231125 00:20:28.333"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:28.362" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:28.334" endtime="20231125 00:20:28.363"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:28.367" endtime="20231125 00:20:28.367"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231125 00:20:28.368" endtime="20231125 00:20:28.369"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231125 00:20:28.371" endtime="20231125 00:20:28.371"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:28.364" endtime="20231125 00:20:28.372"/>
</branch>
<status status="PASS" starttime="20231125 00:20:28.363" endtime="20231125 00:20:28.373"/>
</if>
<status status="PASS" starttime="20231125 00:20:28.330" endtime="20231125 00:20:28.374"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231125 00:20:28.523" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:28.524" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:28.553" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:28.554" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231125 00:20:28.575" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231125 00:20:28.376" endtime="20231125 00:20:28.576"/>
</kw>
<status status="PASS" starttime="20231125 00:20:28.005" endtime="20231125 00:20:28.577"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:28.579" endtime="20231125 00:20:28.579"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231125 00:20:28.580" endtime="20231125 00:20:28.581"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231125 00:20:28.582" endtime="20231125 00:20:28.583"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:28.577" endtime="20231125 00:20:28.584"/>
</branch>
<status status="PASS" starttime="20231125 00:20:28.005" endtime="20231125 00:20:28.584"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:28.585" endtime="20231125 00:20:28.596"/>
</kw>
<status status="PASS" starttime="20231125 00:20:27.893" endtime="20231125 00:20:28.597"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:28.601" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:28.599" endtime="20231125 00:20:28.601"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:28.608" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:28.609" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:28.607" endtime="20231125 00:20:28.609"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:28.612" endtime="20231125 00:20:28.613"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:28.611" endtime="20231125 00:20:28.614"/>
</branch>
<status status="PASS" starttime="20231125 00:20:28.610" endtime="20231125 00:20:28.615"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231125 00:20:28.717" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231125 00:20:28.627" endtime="20231125 00:20:28.717"/>
</kw>
<status status="PASS" starttime="20231125 00:20:28.618" endtime="20231125 00:20:28.718"/>
</kw>
<status status="PASS" starttime="20231125 00:20:28.616" endtime="20231125 00:20:28.719"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:28.721" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231125 00:20:28.719" endtime="20231125 00:20:28.722"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231125 00:20:29.107" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231125 00:20:29.108" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231125 00:20:29.108" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231125 00:20:28.727" endtime="20231125 00:20:29.112"/>
</kw>
<status status="FAIL" starttime="20231125 00:20:28.724" endtime="20231125 00:20:29.113"/>
</kw>
<msg timestamp="20231125 00:20:29.114" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231125 00:20:28.723" endtime="20231125 00:20:29.114"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.116" endtime="20231125 00:20:29.117"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.115" endtime="20231125 00:20:29.118"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.115" endtime="20231125 00:20:29.118"/>
</if>
<status status="PASS" starttime="20231125 00:20:28.598" endtime="20231125 00:20:29.119"/>
</kw>
<status status="PASS" starttime="20231125 00:20:15.713" endtime="20231125 00:20:29.121"/>
</kw>
<kw name="When Enter &quot;text&quot; in placeholder &quot;Nhập để tìm kiếm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in placeholder &quot;${placeholder}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:29.138" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:29.136" endtime="20231125 00:20:29.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:29.141" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:29.140" endtime="20231125 00:20:29.142"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:29.144" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:29.143" endtime="20231125 00:20:29.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.146" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:29.146" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.145" endtime="20231125 00:20:29.147"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:29.148" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231125 00:20:29.147" endtime="20231125 00:20:29.165"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.169" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:29.169" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:29.166" endtime="20231125 00:20:29.170"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.173" endtime="20231125 00:20:29.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.175" endtime="20231125 00:20:29.175"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.172" endtime="20231125 00:20:29.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.177" endtime="20231125 00:20:29.178"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.179" endtime="20231125 00:20:29.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.180" endtime="20231125 00:20:29.181"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.176" endtime="20231125 00:20:29.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.182" endtime="20231125 00:20:29.183"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.184" endtime="20231125 00:20:29.184"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.181" endtime="20231125 00:20:29.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.188" endtime="20231125 00:20:29.190"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.192" endtime="20231125 00:20:29.194"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.185" endtime="20231125 00:20:29.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.197" endtime="20231125 00:20:29.197"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.196" endtime="20231125 00:20:29.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:29.200" endtime="20231125 00:20:29.200"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.199" endtime="20231125 00:20:29.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.203" endtime="20231125 00:20:29.219"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.222" endtime="20231125 00:20:29.224"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.224" endtime="20231125 00:20:29.226"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.202" endtime="20231125 00:20:29.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.230" endtime="20231125 00:20:29.230"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.229" endtime="20231125 00:20:29.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.233" endtime="20231125 00:20:29.234"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.232" endtime="20231125 00:20:29.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.236" endtime="20231125 00:20:29.241"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.235" endtime="20231125 00:20:29.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.243" endtime="20231125 00:20:29.244"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.242" endtime="20231125 00:20:29.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231125 00:20:29.246" level="INFO">${new_text} = Fugiat iure soluta harum.</msg>
<status status="PASS" starttime="20231125 00:20:29.246" endtime="20231125 00:20:29.247"/>
</kw>
<status status="PASS" starttime="20231125 00:20:29.245" endtime="20231125 00:20:29.247"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.172" endtime="20231125 00:20:29.248"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.249" level="INFO">Length is 8</msg>
<msg timestamp="20231125 00:20:29.249" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231125 00:20:29.248" endtime="20231125 00:20:29.250"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231125 00:20:29.253" level="INFO">${text} = Fugiat iure soluta harum.</msg>
<status status="PASS" starttime="20231125 00:20:29.252" endtime="20231125 00:20:29.257"/>
</kw>
<status status="PASS" starttime="20231125 00:20:29.250" endtime="20231125 00:20:29.258"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.250" endtime="20231125 00:20:29.258"/>
</if>
<msg timestamp="20231125 00:20:29.259" level="INFO">${text} = Fugiat iure soluta harum.</msg>
<status status="PASS" starttime="20231125 00:20:29.134" endtime="20231125 00:20:29.259"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${placeholder}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231125 00:20:29.277" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231125 00:20:29.278" level="INFO">${element} = //input[contains(@placeholder, "Nhập để tìm kiếm")]</msg>
<status status="PASS" starttime="20231125 00:20:29.262" endtime="20231125 00:20:29.278"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:29.279" endtime="20231125 00:20:29.326"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:29.329" level="INFO">Fills the text 'Fugiat iure soluta harum.' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:29.327" endtime="20231125 00:20:29.425"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.428" level="INFO">Length is 25</msg>
<msg timestamp="20231125 00:20:29.429" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20231125 00:20:29.426" endtime="20231125 00:20:29.429"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${placeholder}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231125 00:20:29.434" level="INFO">${STATE["Nhập để tìm kiếm"]} = Fugiat iure soluta harum.</msg>
<status status="PASS" starttime="20231125 00:20:29.432" endtime="20231125 00:20:29.434"/>
</kw>
<status status="PASS" starttime="20231125 00:20:29.431" endtime="20231125 00:20:29.435"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.431" endtime="20231125 00:20:29.436"/>
</if>
<status status="PASS" starttime="20231125 00:20:29.132" endtime="20231125 00:20:29.436"/>
</kw>
<kw name="Then &quot;_@Tên điều hướng@_&quot; should not be visible in the tree line" library="common" sourcename="&quot;${name}&quot; should not be visible in the tree line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:29.590" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:29.478" endtime="20231125 00:20:29.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:29.594" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:29.592" endtime="20231125 00:20:29.595"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:29.626" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.595" endtime="20231125 00:20:29.627"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:29.629" endtime="20231125 00:20:29.630"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.628" endtime="20231125 00:20:29.630"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.628" endtime="20231125 00:20:29.631"/>
</if>
<status status="PASS" starttime="20231125 00:20:29.476" endtime="20231125 00:20:29.631"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:29.635" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231125 00:20:29.633" endtime="20231125 00:20:29.635"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.639" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:29.641" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231125 00:20:29.636" endtime="20231125 00:20:29.641"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:29.646" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:29.643" endtime="20231125 00:20:29.647"/>
</kw>
<status status="PASS" starttime="20231125 00:20:29.642" endtime="20231125 00:20:29.647"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.642" endtime="20231125 00:20:29.648"/>
</if>
<msg timestamp="20231125 00:20:29.649" level="INFO">${name} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:29.632" endtime="20231125 00:20:29.649"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//nz-tree-node-title[@title="${name}" and contains(@class,"ant-tree-node-content-wrapper")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:29.662" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.650" endtime="20231125 00:20:29.662"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &lt; 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231125 00:20:29.663" endtime="20231125 00:20:29.665"/>
</kw>
<status status="PASS" starttime="20231125 00:20:29.475" endtime="20231125 00:20:29.665"/>
</kw>
<kw name="When Enter &quot;test name&quot; in placeholder &quot;Nhập để tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in placeholder &quot;${placeholder}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:29.675" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231125 00:20:29.674" endtime="20231125 00:20:29.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:29.677" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231125 00:20:29.676" endtime="20231125 00:20:29.677"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:29.679" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:29.678" endtime="20231125 00:20:29.679"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.681" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:29.681" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.680" endtime="20231125 00:20:29.682"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:29.684" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231125 00:20:29.682" endtime="20231125 00:20:29.684"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.686" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:29.687" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.685" endtime="20231125 00:20:29.689"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.692" endtime="20231125 00:20:29.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.694" endtime="20231125 00:20:29.694"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.691" endtime="20231125 00:20:29.695"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.697" endtime="20231125 00:20:29.697"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.698" endtime="20231125 00:20:29.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.700" endtime="20231125 00:20:29.700"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.695" endtime="20231125 00:20:29.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.703" endtime="20231125 00:20:29.703"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.712" endtime="20231125 00:20:29.713"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.702" endtime="20231125 00:20:29.714"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.716" endtime="20231125 00:20:29.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.717" endtime="20231125 00:20:29.718"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.714" endtime="20231125 00:20:29.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.725" endtime="20231125 00:20:29.726"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.724" endtime="20231125 00:20:29.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231125 00:20:29.728" endtime="20231125 00:20:29.729"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.727" endtime="20231125 00:20:29.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.732" endtime="20231125 00:20:29.733"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.734" endtime="20231125 00:20:29.735"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.736" endtime="20231125 00:20:29.740"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.731" endtime="20231125 00:20:29.742"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.744" endtime="20231125 00:20:29.745"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.743" endtime="20231125 00:20:29.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.747" endtime="20231125 00:20:29.748"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.746" endtime="20231125 00:20:29.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.750" endtime="20231125 00:20:29.750"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.749" endtime="20231125 00:20:29.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.753" endtime="20231125 00:20:29.753"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.751" endtime="20231125 00:20:29.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.762" endtime="20231125 00:20:29.763"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.759" endtime="20231125 00:20:29.765"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.691" endtime="20231125 00:20:29.766"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.768" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:29.768" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.767" endtime="20231125 00:20:29.769"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.776" endtime="20231125 00:20:29.778"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.774" endtime="20231125 00:20:29.779"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.770" endtime="20231125 00:20:29.781"/>
</if>
<msg timestamp="20231125 00:20:29.781" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231125 00:20:29.670" endtime="20231125 00:20:29.782"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${placeholder}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231125 00:20:29.801" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231125 00:20:29.802" level="INFO">${element} = //input[contains(@placeholder, "Nhập để tìm kiếm")]</msg>
<status status="PASS" starttime="20231125 00:20:29.783" endtime="20231125 00:20:29.802"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:29.803" endtime="20231125 00:20:29.869"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231125 00:20:29.874" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231125 00:20:29.870" endtime="20231125 00:20:29.909"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.911" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:29.912" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.910" endtime="20231125 00:20:29.912"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${placeholder}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.914" endtime="20231125 00:20:29.915"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.913" endtime="20231125 00:20:29.916"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.913" endtime="20231125 00:20:29.916"/>
</if>
<status status="PASS" starttime="20231125 00:20:29.668" endtime="20231125 00:20:29.917"/>
</kw>
<kw name="When Click tree select &quot;DASHBOARD&quot; to show data" library="common" sourcename="Click tree select &quot;${name}&quot; to show data">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:29.928" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231125 00:20:29.927" endtime="20231125 00:20:29.929"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:29.930" level="INFO">Length is 0</msg>
<msg timestamp="20231125 00:20:29.931" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231125 00:20:29.929" endtime="20231125 00:20:29.931"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231125 00:20:29.933" endtime="20231125 00:20:29.934"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:29.932" endtime="20231125 00:20:29.935"/>
</branch>
<status status="PASS" starttime="20231125 00:20:29.932" endtime="20231125 00:20:29.935"/>
</if>
<msg timestamp="20231125 00:20:29.936" level="INFO">${name} = DASHBOARD</msg>
<status status="PASS" starttime="20231125 00:20:29.926" endtime="20231125 00:20:29.936"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//nz-tree-node-title[@title="${name}"]/..//i[contains(@class,'la-angle-down')]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231125 00:20:29.952" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231125 00:20:29.953" level="INFO">${element} = //nz-tree-node-title[@title="DASHBOARD"]/..//i[contains(@class,'la-angle-down')]</msg>
<status status="PASS" starttime="20231125 00:20:29.940" endtime="20231125 00:20:29.953"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:29.955" endtime="20231125 00:20:30.050"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:30.052" endtime="20231125 00:20:30.067"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:30.170" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:30.069" endtime="20231125 00:20:30.172"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:30.176" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:30.174" endtime="20231125 00:20:30.176"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:30.198" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:30.177" endtime="20231125 00:20:30.198"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:30.200" endtime="20231125 00:20:30.200"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:30.199" endtime="20231125 00:20:30.201"/>
</branch>
<status status="PASS" starttime="20231125 00:20:30.199" endtime="20231125 00:20:30.201"/>
</if>
<status status="PASS" starttime="20231125 00:20:30.068" endtime="20231125 00:20:30.202"/>
</kw>
<status status="PASS" starttime="20231125 00:20:29.924" endtime="20231125 00:20:30.202"/>
</kw>
<kw name="Then &quot;_@Tên điều hướng@_&quot; should be visible in the tree line" library="common" sourcename="&quot;${name}&quot; should be visible in the tree line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:30.316" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:30.214" endtime="20231125 00:20:30.316"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:30.318" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:30.317" endtime="20231125 00:20:30.318"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:30.341" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:30.319" endtime="20231125 00:20:30.341"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:30.344" endtime="20231125 00:20:30.345"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:30.343" endtime="20231125 00:20:30.345"/>
</branch>
<status status="PASS" starttime="20231125 00:20:30.343" endtime="20231125 00:20:30.345"/>
</if>
<status status="PASS" starttime="20231125 00:20:30.213" endtime="20231125 00:20:30.345"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:30.349" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231125 00:20:30.347" endtime="20231125 00:20:30.349"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:30.351" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:30.352" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231125 00:20:30.350" endtime="20231125 00:20:30.352"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:30.358" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:30.355" endtime="20231125 00:20:30.358"/>
</kw>
<status status="PASS" starttime="20231125 00:20:30.353" endtime="20231125 00:20:30.359"/>
</branch>
<status status="PASS" starttime="20231125 00:20:30.353" endtime="20231125 00:20:30.359"/>
</if>
<msg timestamp="20231125 00:20:30.360" level="INFO">${name} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:30.346" endtime="20231125 00:20:30.360"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//nz-tree-node-title[@title="${name}" and contains(@class,"ant-tree-node-content-wrapper")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:30.369" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231125 00:20:30.361" endtime="20231125 00:20:30.369"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231125 00:20:30.372" endtime="20231125 00:20:30.373"/>
</kw>
<status status="PASS" starttime="20231125 00:20:30.212" endtime="20231125 00:20:30.374"/>
</kw>
<kw name="When Click on the &quot;_@Tên điều hướng@_&quot; tree to delete" library="common" sourcename="Click on the &quot;${name}&quot; tree to delete">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:30.480" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:30.380" endtime="20231125 00:20:30.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:30.481" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:30.481" endtime="20231125 00:20:30.482"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:30.493" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:30.482" endtime="20231125 00:20:30.494"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:30.496" endtime="20231125 00:20:30.496"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:30.495" endtime="20231125 00:20:30.497"/>
</branch>
<status status="PASS" starttime="20231125 00:20:30.494" endtime="20231125 00:20:30.497"/>
</if>
<status status="PASS" starttime="20231125 00:20:30.378" endtime="20231125 00:20:30.498"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231125 00:20:30.501" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231125 00:20:30.500" endtime="20231125 00:20:30.501"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231125 00:20:30.502" level="INFO">Length is 1</msg>
<msg timestamp="20231125 00:20:30.502" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231125 00:20:30.501" endtime="20231125 00:20:30.502"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:30.509" level="INFO">${text} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:30.506" endtime="20231125 00:20:30.509"/>
</kw>
<status status="PASS" starttime="20231125 00:20:30.503" endtime="20231125 00:20:30.510"/>
</branch>
<status status="PASS" starttime="20231125 00:20:30.502" endtime="20231125 00:20:30.510"/>
</if>
<msg timestamp="20231125 00:20:30.511" level="INFO">${name} = DH_28 Assumenda atque.</msg>
<status status="PASS" starttime="20231125 00:20:30.498" endtime="20231125 00:20:30.511"/>
</kw>
<kw name="Get Element Tree By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<msg timestamp="20231125 00:20:30.512" level="INFO">${element} = xpath=//*[contains(@class, "ant-tree-node-content-wrapper") and @title = "DH_28 Assumenda atque."]/*[contains(@class, "group")]</msg>
<status status="PASS" starttime="20231125 00:20:30.511" endtime="20231125 00:20:30.513"/>
</kw>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231125 00:20:30.513" endtime="20231125 00:20:30.563"/>
</kw>
<kw name="Mouse Move Relative To" library="Browser">
<arg>${element}</arg>
<arg>0</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Moves the mouse cursor relative to the selected element.</doc>
<msg timestamp="20231125 00:20:30.593" level="INFO">Moving mouse relative to element center by x: 0.0, y: 0.0 coordinates.</msg>
<status status="PASS" starttime="20231125 00:20:30.564" endtime="20231125 00:20:30.607"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}//*[contains(@class, "la-trash")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:30.607" endtime="20231125 00:20:30.814"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:30.817" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231125 00:20:30.816" endtime="20231125 00:20:30.817"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:30.832" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231125 00:20:30.818" endtime="20231125 00:20:30.833"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231125 00:20:30.835" endtime="20231125 00:20:31.124"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:31.227" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:31.125" endtime="20231125 00:20:31.227"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231125 00:20:31.331" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231125 00:20:31.229" endtime="20231125 00:20:31.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231125 00:20:31.333" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231125 00:20:31.332" endtime="20231125 00:20:31.334"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231125 00:20:31.500" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231125 00:20:31.334" endtime="20231125 00:20:31.500"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231125 00:20:31.502" endtime="20231125 00:20:31.502"/>
</kw>
<status status="NOT RUN" starttime="20231125 00:20:31.501" endtime="20231125 00:20:31.505"/>
</branch>
<status status="PASS" starttime="20231125 00:20:31.501" endtime="20231125 00:20:31.506"/>
</if>
<status status="PASS" starttime="20231125 00:20:31.228" endtime="20231125 00:20:31.506"/>
</kw>
<status status="PASS" starttime="20231125 00:20:30.834" endtime="20231125 00:20:31.507"/>
</branch>
<status status="PASS" starttime="20231125 00:20:30.834" endtime="20231125 00:20:31.508"/>
</if>
<status status="PASS" starttime="20231125 00:20:30.815" endtime="20231125 00:20:31.509"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231125 00:20:31.510" endtime="20231125 00:20:31.529"/>
</kw>
<status status="PASS" starttime="20231125 00:20:30.377" endtime="20231125 00:20:31.530"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231125 00:20:32.608" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231125 00:20:31.549" endtime="20231125 00:20:32.609"/>
</kw>
<status status="PASS" starttime="20231125 00:20:31.547" endtime="20231125 00:20:32.609"/>
</kw>
<tag>Search</tag>
<tag>Smoketest</tag>
<status status="PASS" starttime="20231125 00:20:09.921" endtime="20231125 00:20:32.617"/>
</test>
<status status="PASS" starttime="20231125 00:20:07.102" endtime="20231125 00:20:32.666"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
<stat pass="1" fail="0" skip="0">Smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Navigation">Navigation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231128 22:14:53.411" rpa="false" schemaversion="4">
<suite id="s1" name="Post" source="d:\TESTER\Automation\Auto_Web\testcases\post.robot">
<test id="s1-t1" name="PO_11 Check the update of data list after cancel the search action" line="136">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231128 22:14:55.710" endtime="20231128 22:14:55.711"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231128 22:14:55.713" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\35665507-df31-4f9a-9877-2ef0e2ee4c4d"}</msg>
<msg timestamp="20231128 22:14:56.993" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\35665507-df31-4f9a-9877-2ef0e2ee4c4d"}</msg>
<status status="PASS" starttime="20231128 22:14:55.712" endtime="20231128 22:14:56.994"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231128 22:15:01.510" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231128 22:15:01.511" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231128 22:14:56.995" endtime="20231128 22:15:01.511"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231128 22:15:01.514" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231128 22:15:01.512" endtime="20231128 22:15:01.514"/>
</kw>
<status status="PASS" starttime="20231128 22:14:55.708" endtime="20231128 22:15:01.515"/>
</kw>
<kw name="Create a category with &quot;Cate1&quot; name" sourcename="Create a category with &quot;${name}&quot; name">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:01.558" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:01.556" endtime="20231128 22:15:01.558"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:01.560" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:01.561" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:01.559" endtime="20231128 22:15:01.562"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.571" endtime="20231128 22:15:01.572"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.564" endtime="20231128 22:15:01.573"/>
</branch>
<status status="PASS" starttime="20231128 22:15:01.563" endtime="20231128 22:15:01.574"/>
</if>
<msg timestamp="20231128 22:15:01.575" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:01.550" endtime="20231128 22:15:01.576"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Post" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Post&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:01.699" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:01.582" endtime="20231128 22:15:01.701"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231128 22:15:01.719" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231128 22:15:01.711" endtime="20231128 22:15:01.721"/>
</kw>
<status status="FAIL" starttime="20231128 22:15:01.580" endtime="20231128 22:15:01.722"/>
</kw>
<msg timestamp="20231128 22:15:01.723" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231128 22:15:01.578" endtime="20231128 22:15:01.723"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 22:15:01.725" endtime="20231128 22:15:01.726"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.727" endtime="20231128 22:15:01.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.729" endtime="20231128 22:15:01.730"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.732" endtime="20231128 22:15:01.733"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231128 22:15:01.738" endtime="20231128 22:15:01.739"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231128 22:15:01.739" endtime="20231128 22:15:01.740"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231128 22:15:01.741" endtime="20231128 22:15:01.742"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231128 22:15:01.742" endtime="20231128 22:15:01.743"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231128 22:15:01.744" endtime="20231128 22:15:01.745"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.734" endtime="20231128 22:15:01.745"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231128 22:15:01.747" endtime="20231128 22:15:01.748"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.746" endtime="20231128 22:15:01.748"/>
</branch>
<status status="NOT RUN" starttime="20231128 22:15:01.733" endtime="20231128 22:15:01.749"/>
</if>
<status status="NOT RUN" starttime="20231128 22:15:01.724" endtime="20231128 22:15:01.749"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Post&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:01.861" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:01.759" endtime="20231128 22:15:01.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:01.863" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:01.862" endtime="20231128 22:15:01.863"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:01.881" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:01.864" endtime="20231128 22:15:01.882"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:01.885" endtime="20231128 22:15:01.887"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.883" endtime="20231128 22:15:01.887"/>
</branch>
<status status="PASS" starttime="20231128 22:15:01.882" endtime="20231128 22:15:01.888"/>
</if>
<status status="PASS" starttime="20231128 22:15:01.757" endtime="20231128 22:15:01.889"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:01.896" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:01.895" endtime="20231128 22:15:01.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:01.898" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:01.897" endtime="20231128 22:15:01.899"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:01.908" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:01.902" endtime="20231128 22:15:01.908"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:01.912" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:01.913" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:01.911" endtime="20231128 22:15:01.914"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:01.922" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:01.915" endtime="20231128 22:15:01.923"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:01.926" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:01.926" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:01.925" endtime="20231128 22:15:01.928"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.930" endtime="20231128 22:15:01.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.932" endtime="20231128 22:15:01.932"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.928" endtime="20231128 22:15:01.933"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.938" endtime="20231128 22:15:01.939"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.940" endtime="20231128 22:15:01.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.941" endtime="20231128 22:15:01.942"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.933" endtime="20231128 22:15:01.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.944" endtime="20231128 22:15:01.945"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.946" endtime="20231128 22:15:01.947"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.943" endtime="20231128 22:15:01.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.955" endtime="20231128 22:15:01.956"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.957" endtime="20231128 22:15:01.958"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.949" endtime="20231128 22:15:01.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.960" endtime="20231128 22:15:01.961"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.959" endtime="20231128 22:15:01.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:01.962" endtime="20231128 22:15:01.962"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.961" endtime="20231128 22:15:01.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.965" endtime="20231128 22:15:01.966"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.967" endtime="20231128 22:15:01.970"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.971" endtime="20231128 22:15:01.972"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.964" endtime="20231128 22:15:01.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.974" endtime="20231128 22:15:01.974"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.973" endtime="20231128 22:15:01.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.976" endtime="20231128 22:15:01.977"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.975" endtime="20231128 22:15:01.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.979" endtime="20231128 22:15:01.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.978" endtime="20231128 22:15:01.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.981" endtime="20231128 22:15:01.982"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.980" endtime="20231128 22:15:01.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:01.986" endtime="20231128 22:15:01.987"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:01.983" endtime="20231128 22:15:01.988"/>
</branch>
<status status="PASS" starttime="20231128 22:15:01.928" endtime="20231128 22:15:01.988"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:01.991" level="INFO">Length is 15</msg>
<msg timestamp="20231128 22:15:01.991" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231128 22:15:01.989" endtime="20231128 22:15:01.992"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:01.995" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 22:15:01.993" endtime="20231128 22:15:01.995"/>
</kw>
<status status="PASS" starttime="20231128 22:15:01.992" endtime="20231128 22:15:01.995"/>
</branch>
<status status="PASS" starttime="20231128 22:15:01.992" endtime="20231128 22:15:01.996"/>
</if>
<msg timestamp="20231128 22:15:01.997" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 22:15:01.890" endtime="20231128 22:15:01.997"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:02.000" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:01.998" endtime="20231128 22:15:02.000"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:02.004" endtime="20231128 22:15:02.270"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:02.271" endtime="20231128 22:15:02.324"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:02.327" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:02.325" endtime="20231128 22:15:02.430"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:02.521" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231128 22:15:02.522" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 22:15:02.431" endtime="20231128 22:15:02.523"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.525" endtime="20231128 22:15:02.526"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.527" endtime="20231128 22:15:02.528"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.523" endtime="20231128 22:15:02.528"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:02.523" endtime="20231128 22:15:02.529"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:02.530" endtime="20231128 22:15:02.631"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:02.632" level="INFO">Length is 15</msg>
<msg timestamp="20231128 22:15:02.633" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231128 22:15:02.631" endtime="20231128 22:15:02.633"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:02.639" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231128 22:15:02.637" endtime="20231128 22:15:02.639"/>
</kw>
<status status="PASS" starttime="20231128 22:15:02.636" endtime="20231128 22:15:02.639"/>
</branch>
<status status="PASS" starttime="20231128 22:15:02.635" endtime="20231128 22:15:02.640"/>
</if>
<status status="PASS" starttime="20231128 22:15:01.755" endtime="20231128 22:15:02.640"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:02.745" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:02.643" endtime="20231128 22:15:02.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:02.747" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:02.746" endtime="20231128 22:15:02.747"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:02.759" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:02.748" endtime="20231128 22:15:02.760"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:02.762" endtime="20231128 22:15:02.762"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.761" endtime="20231128 22:15:02.763"/>
</branch>
<status status="PASS" starttime="20231128 22:15:02.760" endtime="20231128 22:15:02.764"/>
</if>
<status status="PASS" starttime="20231128 22:15:02.642" endtime="20231128 22:15:02.764"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:02.768" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:02.766" endtime="20231128 22:15:02.769"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:02.772" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:02.771" endtime="20231128 22:15:02.772"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:02.774" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:02.773" endtime="20231128 22:15:02.775"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:02.779" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:02.780" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:02.778" endtime="20231128 22:15:02.781"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:02.788" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:02.786" endtime="20231128 22:15:02.788"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:02.790" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:02.791" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:02.790" endtime="20231128 22:15:02.791"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.794" endtime="20231128 22:15:02.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.795" endtime="20231128 22:15:02.796"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.793" endtime="20231128 22:15:02.796"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.798" endtime="20231128 22:15:02.799"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.799" endtime="20231128 22:15:02.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.803" endtime="20231128 22:15:02.804"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.797" endtime="20231128 22:15:02.805"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.807" endtime="20231128 22:15:02.808"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.809" endtime="20231128 22:15:02.810"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.806" endtime="20231128 22:15:02.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.813" endtime="20231128 22:15:02.814"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.816" endtime="20231128 22:15:02.817"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.811" endtime="20231128 22:15:02.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.822" endtime="20231128 22:15:02.823"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.821" endtime="20231128 22:15:02.824"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:02.826" endtime="20231128 22:15:02.826"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.825" endtime="20231128 22:15:02.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.829" endtime="20231128 22:15:02.830"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.831" endtime="20231128 22:15:02.832"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.832" endtime="20231128 22:15:02.833"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.828" endtime="20231128 22:15:02.834"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.839" endtime="20231128 22:15:02.839"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.837" endtime="20231128 22:15:02.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.842" endtime="20231128 22:15:02.843"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.841" endtime="20231128 22:15:02.844"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.846" endtime="20231128 22:15:02.847"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.845" endtime="20231128 22:15:02.848"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.849" endtime="20231128 22:15:02.850"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.848" endtime="20231128 22:15:02.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:02.855" endtime="20231128 22:15:02.856"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:02.854" endtime="20231128 22:15:02.856"/>
</branch>
<status status="PASS" starttime="20231128 22:15:02.792" endtime="20231128 22:15:02.857"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:02.858" level="INFO">Length is 6</msg>
<msg timestamp="20231128 22:15:02.858" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231128 22:15:02.857" endtime="20231128 22:15:02.859"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:02.862" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231128 22:15:02.861" endtime="20231128 22:15:02.862"/>
</kw>
<status status="PASS" starttime="20231128 22:15:02.860" endtime="20231128 22:15:02.863"/>
</branch>
<status status="PASS" starttime="20231128 22:15:02.859" endtime="20231128 22:15:02.864"/>
</if>
<msg timestamp="20231128 22:15:02.864" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231128 22:15:02.765" endtime="20231128 22:15:02.865"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:02.866" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:02.865" endtime="20231128 22:15:02.866"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:02.866" endtime="20231128 22:15:02.976"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:02.977" endtime="20231128 22:15:03.021"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:03.024" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:03.022" endtime="20231128 22:15:03.068"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:03.180" level="INFO">Text: '123123'</msg>
<msg timestamp="20231128 22:15:03.180" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231128 22:15:03.070" endtime="20231128 22:15:03.181"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.183" endtime="20231128 22:15:03.184"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.184" endtime="20231128 22:15:03.187"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:03.181" endtime="20231128 22:15:03.187"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:03.181" endtime="20231128 22:15:03.188"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:03.189" endtime="20231128 22:15:03.279"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:03.280" level="INFO">Length is 6</msg>
<msg timestamp="20231128 22:15:03.280" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231128 22:15:03.280" endtime="20231128 22:15:03.280"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:03.282" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231128 22:15:03.281" endtime="20231128 22:15:03.282"/>
</kw>
<status status="PASS" starttime="20231128 22:15:03.281" endtime="20231128 22:15:03.283"/>
</branch>
<status status="PASS" starttime="20231128 22:15:03.281" endtime="20231128 22:15:03.283"/>
</if>
<status status="PASS" starttime="20231128 22:15:02.641" endtime="20231128 22:15:03.283"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:03.386" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:03.285" endtime="20231128 22:15:03.386"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:03.397" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:03.387" endtime="20231128 22:15:03.397"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:03.398" endtime="20231128 22:15:03.483"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:03.487" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:03.486" endtime="20231128 22:15:03.488"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:03.504" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:03.489" endtime="20231128 22:15:03.504"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.506" endtime="20231128 22:15:03.507"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.508" endtime="20231128 22:15:03.509"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 22:15:03.510" endtime="20231128 22:15:03.510"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:03.505" endtime="20231128 22:15:03.511"/>
</branch>
<status status="PASS" starttime="20231128 22:15:03.505" endtime="20231128 22:15:03.512"/>
</if>
<status status="PASS" starttime="20231128 22:15:03.483" endtime="20231128 22:15:03.512"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 22:15:03.544" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:03.544" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:03.569" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:03.569" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:03.579" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 22:15:03.513" endtime="20231128 22:15:03.580"/>
</kw>
<status status="PASS" starttime="20231128 22:15:03.397" endtime="20231128 22:15:03.580"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.582" endtime="20231128 22:15:03.582"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 22:15:03.583" endtime="20231128 22:15:03.583"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.584" endtime="20231128 22:15:03.586"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:03.581" endtime="20231128 22:15:03.587"/>
</branch>
<status status="PASS" starttime="20231128 22:15:03.397" endtime="20231128 22:15:03.587"/>
</if>
<status status="PASS" starttime="20231128 22:15:03.284" endtime="20231128 22:15:03.587"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:03.590" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:03.589" endtime="20231128 22:15:03.591"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:03.592" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:03.593" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:03.591" endtime="20231128 22:15:03.593"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:03.595" endtime="20231128 22:15:03.596"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:03.594" endtime="20231128 22:15:03.596"/>
</branch>
<status status="PASS" starttime="20231128 22:15:03.593" endtime="20231128 22:15:03.597"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:04.010" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231128 22:15:03.605" endtime="20231128 22:15:04.010"/>
</kw>
<status status="PASS" starttime="20231128 22:15:03.599" endtime="20231128 22:15:04.011"/>
</kw>
<status status="PASS" starttime="20231128 22:15:03.598" endtime="20231128 22:15:04.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:04.012" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231128 22:15:04.012" endtime="20231128 22:15:04.012"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231128 22:15:04.415" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231128 22:15:04.416" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231128 22:15:04.416" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231128 22:15:04.015" endtime="20231128 22:15:04.428"/>
</kw>
<status status="FAIL" starttime="20231128 22:15:04.013" endtime="20231128 22:15:04.429"/>
</kw>
<msg timestamp="20231128 22:15:04.430" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231128 22:15:04.013" endtime="20231128 22:15:04.430"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:04.432" endtime="20231128 22:15:04.432"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:04.430" endtime="20231128 22:15:04.433"/>
</branch>
<status status="PASS" starttime="20231128 22:15:04.430" endtime="20231128 22:15:04.433"/>
</if>
<status status="PASS" starttime="20231128 22:15:03.588" endtime="20231128 22:15:04.435"/>
</kw>
<status status="PASS" starttime="20231128 22:15:01.754" endtime="20231128 22:15:04.436"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:04.438" endtime="20231128 22:15:05.662"/>
</kw>
<status status="PASS" starttime="20231128 22:15:04.437" endtime="20231128 22:15:05.662"/>
</kw>
<kw name="Click &quot;Post&quot; sub menu to &quot;/post&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:05.770" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:05.666" endtime="20231128 22:15:05.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:05.774" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:05.772" endtime="20231128 22:15:05.776"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:05.930" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:05.777" endtime="20231128 22:15:05.931"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:05.933" endtime="20231128 22:15:05.933"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:05.932" endtime="20231128 22:15:05.934"/>
</branch>
<status status="PASS" starttime="20231128 22:15:05.931" endtime="20231128 22:15:05.938"/>
</if>
<status status="PASS" starttime="20231128 22:15:05.665" endtime="20231128 22:15:05.939"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:05.941" endtime="20231128 22:15:06.395"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231128 22:15:06.422" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/post</msg>
<status status="PASS" starttime="20231128 22:15:06.397" endtime="20231128 22:15:06.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 22:15:06.423" endtime="20231128 22:15:06.425"/>
</kw>
<status status="PASS" starttime="20231128 22:15:05.663" endtime="20231128 22:15:06.425"/>
</kw>
<status status="PASS" starttime="20231128 22:15:01.750" endtime="20231128 22:15:06.426"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:06.530" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:06.428" endtime="20231128 22:15:06.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:06.532" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:06.531" endtime="20231128 22:15:06.532"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:06.756" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:06.533" endtime="20231128 22:15:06.756"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:06.758" endtime="20231128 22:15:06.759"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:06.757" endtime="20231128 22:15:06.760"/>
</branch>
<status status="PASS" starttime="20231128 22:15:06.757" endtime="20231128 22:15:06.760"/>
</if>
<status status="PASS" starttime="20231128 22:15:06.427" endtime="20231128 22:15:06.761"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:06.864" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:06.762" endtime="20231128 22:15:06.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:06.875" level="INFO">${element} = //*[contains(@class,'ant-spin-container')]//span[contains(text(),'Cate1')]</msg>
<status status="PASS" starttime="20231128 22:15:06.865" endtime="20231128 22:15:06.876"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:06.904" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:06.880" endtime="20231128 22:15:06.904"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231128 22:15:06.910" endtime="20231128 22:15:06.911"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231128 22:15:06.911" endtime="20231128 22:15:06.912"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231128 22:15:06.913" endtime="20231128 22:15:06.913"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231128 22:15:06.914" endtime="20231128 22:15:06.914"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231128 22:15:06.915" endtime="20231128 22:15:06.916"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:06.908" endtime="20231128 22:15:06.916"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:07.029" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:06.927" endtime="20231128 22:15:07.029"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:07.030" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:07.029" endtime="20231128 22:15:07.030"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:07.043" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:07.030" endtime="20231128 22:15:07.044"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:07.046" endtime="20231128 22:15:07.046"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:07.045" endtime="20231128 22:15:07.047"/>
</branch>
<status status="PASS" starttime="20231128 22:15:07.044" endtime="20231128 22:15:07.048"/>
</if>
<status status="PASS" starttime="20231128 22:15:06.925" endtime="20231128 22:15:07.048"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:07.054" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:07.050" endtime="20231128 22:15:07.055"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:07.057" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:07.057" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:07.056" endtime="20231128 22:15:07.057"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:07.059" endtime="20231128 22:15:07.060"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:07.058" endtime="20231128 22:15:07.060"/>
</branch>
<status status="PASS" starttime="20231128 22:15:07.058" endtime="20231128 22:15:07.061"/>
</if>
<msg timestamp="20231128 22:15:07.062" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:07.049" endtime="20231128 22:15:07.062"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231128 22:15:07.064" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231128 22:15:07.063" endtime="20231128 22:15:07.065"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:07.065" endtime="20231128 22:15:07.248"/>
</kw>
<status status="PASS" starttime="20231128 22:15:06.921" endtime="20231128 22:15:07.248"/>
</kw>
<status status="PASS" starttime="20231128 22:15:06.920" endtime="20231128 22:15:07.249"/>
</branch>
<status status="PASS" starttime="20231128 22:15:06.907" endtime="20231128 22:15:07.250"/>
</if>
<status status="PASS" starttime="20231128 22:15:01.749" endtime="20231128 22:15:07.250"/>
</branch>
<status status="PASS" starttime="20231128 22:15:01.724" endtime="20231128 22:15:07.254"/>
</if>
<status status="PASS" starttime="20231128 22:15:01.548" endtime="20231128 22:15:07.255"/>
</kw>
<kw name="Create a test post with &quot;Cate1&quot; type" sourcename="Create a test post with &quot;${type}&quot; type">
<var>${name1}</var>
<kw name="Click &quot;Tạo mới bài viết&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:07.396" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:07.294" endtime="20231128 22:15:07.396"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:07.444" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:07.396" endtime="20231128 22:15:07.444"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:07.446" endtime="20231128 22:15:07.996"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:07.999" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:07.998" endtime="20231128 22:15:07.999"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:08.031" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:08.000" endtime="20231128 22:15:08.031"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.033" endtime="20231128 22:15:08.034"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.036" endtime="20231128 22:15:08.036"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 22:15:08.037" endtime="20231128 22:15:08.037"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.032" endtime="20231128 22:15:08.038"/>
</branch>
<status status="PASS" starttime="20231128 22:15:08.032" endtime="20231128 22:15:08.038"/>
</if>
<status status="PASS" starttime="20231128 22:15:07.997" endtime="20231128 22:15:08.039"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 22:15:08.091" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:08.091" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:08.110" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:08.111" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:08.121" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 22:15:08.040" endtime="20231128 22:15:08.121"/>
</kw>
<status status="PASS" starttime="20231128 22:15:07.445" endtime="20231128 22:15:08.122"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.123" endtime="20231128 22:15:08.124"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 22:15:08.125" endtime="20231128 22:15:08.125"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.126" endtime="20231128 22:15:08.126"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.123" endtime="20231128 22:15:08.127"/>
</branch>
<status status="PASS" starttime="20231128 22:15:07.445" endtime="20231128 22:15:08.127"/>
</if>
<status status="PASS" starttime="20231128 22:15:07.293" endtime="20231128 22:15:08.128"/>
</kw>
<kw name="Click radio &quot;Loại editor&quot; in line &quot;Block&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231128 22:15:08.131" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại editor"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "Block"...</msg>
<status status="PASS" starttime="20231128 22:15:08.130" endtime="20231128 22:15:08.131"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:08.132" endtime="20231128 22:15:08.415"/>
</kw>
<status status="PASS" starttime="20231128 22:15:08.128" endtime="20231128 22:15:08.416"/>
</kw>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:08.424" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:08.422" endtime="20231128 22:15:08.424"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:08.425" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:08.425" endtime="20231128 22:15:08.426"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:08.427" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:08.426" endtime="20231128 22:15:08.427"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:08.429" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:08.429" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:08.428" endtime="20231128 22:15:08.429"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:08.430" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:08.430" endtime="20231128 22:15:08.431"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:08.431" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:08.432" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:08.431" endtime="20231128 22:15:08.432"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.433" endtime="20231128 22:15:08.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.433" endtime="20231128 22:15:08.434"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.432" endtime="20231128 22:15:08.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.439" endtime="20231128 22:15:08.440"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.441" endtime="20231128 22:15:08.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.443" endtime="20231128 22:15:08.443"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.439" endtime="20231128 22:15:08.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.445" endtime="20231128 22:15:08.445"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.446" endtime="20231128 22:15:08.447"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.444" endtime="20231128 22:15:08.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.448" endtime="20231128 22:15:08.449"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.449" endtime="20231128 22:15:08.450"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.447" endtime="20231128 22:15:08.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.455" endtime="20231128 22:15:08.456"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.453" endtime="20231128 22:15:08.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:08.459" endtime="20231128 22:15:08.460"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.458" endtime="20231128 22:15:08.460"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.461" endtime="20231128 22:15:08.461"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.461" endtime="20231128 22:15:08.462"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.462" endtime="20231128 22:15:08.462"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.460" endtime="20231128 22:15:08.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.463" endtime="20231128 22:15:08.464"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.463" endtime="20231128 22:15:08.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.465" endtime="20231128 22:15:08.466"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.464" endtime="20231128 22:15:08.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.468" endtime="20231128 22:15:08.470"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.466" endtime="20231128 22:15:08.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.472" endtime="20231128 22:15:08.472"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.471" endtime="20231128 22:15:08.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:08.474" endtime="20231128 22:15:08.475"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:08.474" endtime="20231128 22:15:08.476"/>
</branch>
<status status="PASS" starttime="20231128 22:15:08.432" endtime="20231128 22:15:08.477"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:08.478" level="INFO">Length is 5</msg>
<msg timestamp="20231128 22:15:08.479" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231128 22:15:08.477" endtime="20231128 22:15:08.479"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:08.481" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:08.481" endtime="20231128 22:15:08.482"/>
</kw>
<status status="PASS" starttime="20231128 22:15:08.480" endtime="20231128 22:15:08.482"/>
</branch>
<status status="PASS" starttime="20231128 22:15:08.480" endtime="20231128 22:15:08.482"/>
</if>
<msg timestamp="20231128 22:15:08.482" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:08.417" endtime="20231128 22:15:08.483"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231128 22:15:08.484" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231128 22:15:08.483" endtime="20231128 22:15:08.485"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:08.487" endtime="20231128 22:15:08.707"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231128 22:15:08.710" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231128 22:15:08.708" endtime="20231128 22:15:08.711"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:08.713" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:08.712" endtime="20231128 22:15:08.773"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:08.774" endtime="20231128 22:15:09.058"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:09.060" level="INFO">Length is 5</msg>
<msg timestamp="20231128 22:15:09.060" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231128 22:15:09.059" endtime="20231128 22:15:09.061"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:09.064" level="INFO">${STATE["Chuyên mục"]} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:09.062" endtime="20231128 22:15:09.064"/>
</kw>
<status status="PASS" starttime="20231128 22:15:09.061" endtime="20231128 22:15:09.065"/>
</branch>
<status status="PASS" starttime="20231128 22:15:09.061" endtime="20231128 22:15:09.065"/>
</if>
<status status="PASS" starttime="20231128 22:15:08.416" endtime="20231128 22:15:09.066"/>
</kw>
<kw name="Select file in &quot;Ảnh cover&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231128 22:15:09.073" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh cover"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231128 22:15:09.072" endtime="20231128 22:15:09.074"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231128 22:15:09.075" endtime="20231128 22:15:09.170"/>
</kw>
<status status="PASS" starttime="20231128 22:15:09.067" endtime="20231128 22:15:09.170"/>
</kw>
<kw name="Select file in &quot;Ảnh thumbnail&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231128 22:15:09.174" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh thumbnail"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231128 22:15:09.173" endtime="20231128 22:15:09.175"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231128 22:15:09.176" endtime="20231128 22:15:09.231"/>
</kw>
<status status="PASS" starttime="20231128 22:15:09.171" endtime="20231128 22:15:09.232"/>
</kw>
<kw name="Click radio &quot;Định dạng bài viết&quot; in line &quot;Longform&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231128 22:15:09.241" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Định dạng bài viết"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), ...</msg>
<status status="PASS" starttime="20231128 22:15:09.238" endtime="20231128 22:15:09.242"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:09.243" endtime="20231128 22:15:09.436"/>
</kw>
<status status="PASS" starttime="20231128 22:15:09.233" endtime="20231128 22:15:09.437"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Background Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:09.545" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:09.444" endtime="20231128 22:15:09.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:09.547" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:09.546" endtime="20231128 22:15:09.547"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:09.565" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:09.548" endtime="20231128 22:15:09.565"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:09.569" endtime="20231128 22:15:09.571"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.566" endtime="20231128 22:15:09.572"/>
</branch>
<status status="PASS" starttime="20231128 22:15:09.566" endtime="20231128 22:15:09.572"/>
</if>
<status status="PASS" starttime="20231128 22:15:09.439" endtime="20231128 22:15:09.573"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:09.577" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:09.575" endtime="20231128 22:15:09.577"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:09.579" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:09.578" endtime="20231128 22:15:09.579"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:09.580" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:09.579" endtime="20231128 22:15:09.580"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:09.581" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:09.581" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:09.580" endtime="20231128 22:15:09.581"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:09.582" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:09.581" endtime="20231128 22:15:09.582"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:09.583" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:09.583" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:09.582" endtime="20231128 22:15:09.583"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.589" endtime="20231128 22:15:09.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.591" endtime="20231128 22:15:09.592"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.586" endtime="20231128 22:15:09.593"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.594" endtime="20231128 22:15:09.595"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.595" endtime="20231128 22:15:09.595"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.596" endtime="20231128 22:15:09.596"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.593" endtime="20231128 22:15:09.596"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.597" endtime="20231128 22:15:09.597"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.598" endtime="20231128 22:15:09.598"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.596" endtime="20231128 22:15:09.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.599" endtime="20231128 22:15:09.599"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.599" endtime="20231128 22:15:09.600"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.598" endtime="20231128 22:15:09.605"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.607" endtime="20231128 22:15:09.608"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.605" endtime="20231128 22:15:09.609"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:09.611" endtime="20231128 22:15:09.611"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.609" endtime="20231128 22:15:09.612"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.612" endtime="20231128 22:15:09.613"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.613" endtime="20231128 22:15:09.614"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.614" endtime="20231128 22:15:09.614"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.612" endtime="20231128 22:15:09.614"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231128 22:15:09.616" level="INFO">${new_text} = #dd0066</msg>
<status status="PASS" starttime="20231128 22:15:09.615" endtime="20231128 22:15:09.616"/>
</kw>
<status status="PASS" starttime="20231128 22:15:09.615" endtime="20231128 22:15:09.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.621" endtime="20231128 22:15:09.622"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.616" endtime="20231128 22:15:09.623"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.625" endtime="20231128 22:15:09.625"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.624" endtime="20231128 22:15:09.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.626" endtime="20231128 22:15:09.626"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.626" endtime="20231128 22:15:09.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:09.627" endtime="20231128 22:15:09.627"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:09.627" endtime="20231128 22:15:09.627"/>
</branch>
<status status="PASS" starttime="20231128 22:15:09.586" endtime="20231128 22:15:09.628"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:09.628" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:09.629" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:09.628" endtime="20231128 22:15:09.629"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:09.630" level="INFO">${text} = #dd0066</msg>
<status status="PASS" starttime="20231128 22:15:09.630" endtime="20231128 22:15:09.631"/>
</kw>
<status status="PASS" starttime="20231128 22:15:09.629" endtime="20231128 22:15:09.631"/>
</branch>
<status status="PASS" starttime="20231128 22:15:09.629" endtime="20231128 22:15:09.631"/>
</if>
<msg timestamp="20231128 22:15:09.631" level="INFO">${text} = #dd0066</msg>
<status status="PASS" starttime="20231128 22:15:09.574" endtime="20231128 22:15:09.631"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:09.632" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Background Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:09.632" endtime="20231128 22:15:09.632"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:09.633" endtime="20231128 22:15:09.836"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:09.837" endtime="20231128 22:15:09.907"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:09.909" level="INFO">Fills the text '#dd0066' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:09.908" endtime="20231128 22:15:09.977"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:10.031" level="INFO">Text: '#dd0066'</msg>
<msg timestamp="20231128 22:15:10.031" level="INFO">${condition} = #dd0066</msg>
<status status="PASS" starttime="20231128 22:15:09.978" endtime="20231128 22:15:10.031"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.038" endtime="20231128 22:15:10.039"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.040" endtime="20231128 22:15:10.040"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.032" endtime="20231128 22:15:10.041"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:10.032" endtime="20231128 22:15:10.042"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:10.043" endtime="20231128 22:15:10.116"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:10.121" level="INFO">Length is 7</msg>
<msg timestamp="20231128 22:15:10.122" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231128 22:15:10.119" endtime="20231128 22:15:10.122"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:10.125" level="INFO">${STATE["Background Color"]} = #dd0066</msg>
<status status="PASS" starttime="20231128 22:15:10.124" endtime="20231128 22:15:10.125"/>
</kw>
<status status="PASS" starttime="20231128 22:15:10.123" endtime="20231128 22:15:10.127"/>
</branch>
<status status="PASS" starttime="20231128 22:15:10.123" endtime="20231128 22:15:10.128"/>
</if>
<status status="PASS" starttime="20231128 22:15:09.438" endtime="20231128 22:15:10.128"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Title Fore Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:10.234" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:10.132" endtime="20231128 22:15:10.238"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:10.239" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:10.239" endtime="20231128 22:15:10.239"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:10.249" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:10.240" endtime="20231128 22:15:10.249"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:10.254" endtime="20231128 22:15:10.255"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.250" endtime="20231128 22:15:10.255"/>
</branch>
<status status="PASS" starttime="20231128 22:15:10.250" endtime="20231128 22:15:10.256"/>
</if>
<status status="PASS" starttime="20231128 22:15:10.130" endtime="20231128 22:15:10.257"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:10.260" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:10.259" endtime="20231128 22:15:10.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:10.261" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:10.260" endtime="20231128 22:15:10.261"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:10.262" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:10.262" endtime="20231128 22:15:10.262"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:10.264" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:10.264" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:10.263" endtime="20231128 22:15:10.265"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:10.266" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:10.265" endtime="20231128 22:15:10.266"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:10.267" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:10.267" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:10.266" endtime="20231128 22:15:10.267"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.273" endtime="20231128 22:15:10.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.274" endtime="20231128 22:15:10.274"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.272" endtime="20231128 22:15:10.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.276" endtime="20231128 22:15:10.276"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.276" endtime="20231128 22:15:10.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.277" endtime="20231128 22:15:10.277"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.275" endtime="20231128 22:15:10.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.279" endtime="20231128 22:15:10.280"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.280" endtime="20231128 22:15:10.281"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.278" endtime="20231128 22:15:10.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.282" endtime="20231128 22:15:10.283"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.283" endtime="20231128 22:15:10.284"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.281" endtime="20231128 22:15:10.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.288" endtime="20231128 22:15:10.289"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.288" endtime="20231128 22:15:10.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:10.290" endtime="20231128 22:15:10.291"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.290" endtime="20231128 22:15:10.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.292" endtime="20231128 22:15:10.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.292" endtime="20231128 22:15:10.292"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.293" endtime="20231128 22:15:10.293"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.291" endtime="20231128 22:15:10.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231128 22:15:10.295" level="INFO">${new_text} = #cc4422</msg>
<status status="PASS" starttime="20231128 22:15:10.294" endtime="20231128 22:15:10.296"/>
</kw>
<status status="PASS" starttime="20231128 22:15:10.293" endtime="20231128 22:15:10.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.297" endtime="20231128 22:15:10.297"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.296" endtime="20231128 22:15:10.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.298" endtime="20231128 22:15:10.298"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.298" endtime="20231128 22:15:10.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.299" endtime="20231128 22:15:10.299"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.299" endtime="20231128 22:15:10.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.300" endtime="20231128 22:15:10.304"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.300" endtime="20231128 22:15:10.305"/>
</branch>
<status status="PASS" starttime="20231128 22:15:10.271" endtime="20231128 22:15:10.305"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:10.306" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:10.306" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:10.306" endtime="20231128 22:15:10.306"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:10.308" level="INFO">${text} = #cc4422</msg>
<status status="PASS" starttime="20231128 22:15:10.308" endtime="20231128 22:15:10.308"/>
</kw>
<status status="PASS" starttime="20231128 22:15:10.307" endtime="20231128 22:15:10.309"/>
</branch>
<status status="PASS" starttime="20231128 22:15:10.307" endtime="20231128 22:15:10.309"/>
</if>
<msg timestamp="20231128 22:15:10.309" level="INFO">${text} = #cc4422</msg>
<status status="PASS" starttime="20231128 22:15:10.257" endtime="20231128 22:15:10.309"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:10.312" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Title Fore Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:10.310" endtime="20231128 22:15:10.312"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:10.312" endtime="20231128 22:15:10.464"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:10.465" endtime="20231128 22:15:10.523"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:10.526" level="INFO">Fills the text '#cc4422' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:10.524" endtime="20231128 22:15:10.596"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:10.644" level="INFO">Text: '#cc4422'</msg>
<msg timestamp="20231128 22:15:10.644" level="INFO">${condition} = #cc4422</msg>
<status status="PASS" starttime="20231128 22:15:10.597" endtime="20231128 22:15:10.645"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.647" endtime="20231128 22:15:10.648"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:10.648" endtime="20231128 22:15:10.649"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:10.645" endtime="20231128 22:15:10.649"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:10.645" endtime="20231128 22:15:10.650"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:10.653" endtime="20231128 22:15:10.714"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:10.716" level="INFO">Length is 7</msg>
<msg timestamp="20231128 22:15:10.717" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231128 22:15:10.715" endtime="20231128 22:15:10.717"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:10.723" level="INFO">${STATE["Title Fore Color"]} = #cc4422</msg>
<status status="PASS" starttime="20231128 22:15:10.721" endtime="20231128 22:15:10.723"/>
</kw>
<status status="PASS" starttime="20231128 22:15:10.719" endtime="20231128 22:15:10.724"/>
</branch>
<status status="PASS" starttime="20231128 22:15:10.719" endtime="20231128 22:15:10.725"/>
</if>
<status status="PASS" starttime="20231128 22:15:10.129" endtime="20231128 22:15:10.725"/>
</kw>
<kw name="Click switch &quot;Show Title&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231128 22:15:10.729" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Show Title"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231128 22:15:10.727" endtime="20231128 22:15:10.729"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:10.730" endtime="20231128 22:15:10.867"/>
</kw>
<status status="PASS" starttime="20231128 22:15:10.726" endtime="20231128 22:15:10.871"/>
</kw>
<kw name="Click switch &quot;Ghim&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231128 22:15:10.874" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ghim"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231128 22:15:10.873" endtime="20231128 22:15:10.874"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:10.875" endtime="20231128 22:15:11.038"/>
</kw>
<status status="PASS" starttime="20231128 22:15:10.872" endtime="20231128 22:15:11.038"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:11.142" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:11.040" endtime="20231128 22:15:11.142"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:11.143" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:11.143" endtime="20231128 22:15:11.144"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:11.157" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:11.144" endtime="20231128 22:15:11.157"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:11.160" endtime="20231128 22:15:11.160"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.158" endtime="20231128 22:15:11.161"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.158" endtime="20231128 22:15:11.162"/>
</if>
<status status="PASS" starttime="20231128 22:15:11.040" endtime="20231128 22:15:11.162"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:11.166" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:11.165" endtime="20231128 22:15:11.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:11.172" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:11.171" endtime="20231128 22:15:11.172"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:11.174" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:11.173" endtime="20231128 22:15:11.175"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.176" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:11.177" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:11.175" endtime="20231128 22:15:11.177"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:11.180" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:11.178" endtime="20231128 22:15:11.180"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.182" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:11.183" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:11.181" endtime="20231128 22:15:11.183"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.189" endtime="20231128 22:15:11.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.190" endtime="20231128 22:15:11.191"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.187" endtime="20231128 22:15:11.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.194" endtime="20231128 22:15:11.194"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.195" endtime="20231128 22:15:11.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.197" endtime="20231128 22:15:11.197"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.193" endtime="20231128 22:15:11.197"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.199" endtime="20231128 22:15:11.199"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.204" endtime="20231128 22:15:11.205"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.198" endtime="20231128 22:15:11.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.208" endtime="20231128 22:15:11.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.209" endtime="20231128 22:15:11.210"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.206" endtime="20231128 22:15:11.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.212" endtime="20231128 22:15:11.212"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.211" endtime="20231128 22:15:11.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:11.214" endtime="20231128 22:15:11.215"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.213" endtime="20231128 22:15:11.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.221" endtime="20231128 22:15:11.222"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.222" endtime="20231128 22:15:11.223"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.223" endtime="20231128 22:15:11.224"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.216" endtime="20231128 22:15:11.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.225" endtime="20231128 22:15:11.225"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.224" endtime="20231128 22:15:11.226"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.227" endtime="20231128 22:15:11.227"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.226" endtime="20231128 22:15:11.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.229" endtime="20231128 22:15:11.229"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.228" endtime="20231128 22:15:11.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.230" endtime="20231128 22:15:11.230"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.229" endtime="20231128 22:15:11.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.231" endtime="20231128 22:15:11.232"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.230" endtime="20231128 22:15:11.232"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.187" endtime="20231128 22:15:11.237"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.239" level="INFO">Length is 13</msg>
<msg timestamp="20231128 22:15:11.239" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231128 22:15:11.238" endtime="20231128 22:15:11.240"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:11.243" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:11.242" endtime="20231128 22:15:11.244"/>
</kw>
<status status="PASS" starttime="20231128 22:15:11.240" endtime="20231128 22:15:11.244"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.240" endtime="20231128 22:15:11.244"/>
</if>
<msg timestamp="20231128 22:15:11.245" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:11.163" endtime="20231128 22:15:11.245"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:11.247" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:11.246" endtime="20231128 22:15:11.248"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:11.248" endtime="20231128 22:15:11.382"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:11.383" endtime="20231128 22:15:11.438"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:11.440" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:11.439" endtime="20231128 22:15:11.498"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:11.542" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231128 22:15:11.542" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:11.499" endtime="20231128 22:15:11.542"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.544" endtime="20231128 22:15:11.544"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.545" endtime="20231128 22:15:11.545"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.543" endtime="20231128 22:15:11.546"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:11.543" endtime="20231128 22:15:11.546"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:11.547" endtime="20231128 22:15:11.612"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.614" level="INFO">Length is 13</msg>
<msg timestamp="20231128 22:15:11.615" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231128 22:15:11.613" endtime="20231128 22:15:11.615"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:11.621" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:11.620" endtime="20231128 22:15:11.622"/>
</kw>
<status status="PASS" starttime="20231128 22:15:11.616" endtime="20231128 22:15:11.622"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.616" endtime="20231128 22:15:11.623"/>
</if>
<status status="PASS" starttime="20231128 22:15:11.039" endtime="20231128 22:15:11.623"/>
</kw>
<kw name="Enter &quot;text&quot; in textarea &quot;Custom CSS&quot; with &quot;{color:1px;}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:11.728" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:11.626" endtime="20231128 22:15:11.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:11.730" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:11.729" endtime="20231128 22:15:11.730"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:11.742" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:11.731" endtime="20231128 22:15:11.742"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:11.744" endtime="20231128 22:15:11.745"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.743" endtime="20231128 22:15:11.746"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.743" endtime="20231128 22:15:11.746"/>
</if>
<status status="PASS" starttime="20231128 22:15:11.625" endtime="20231128 22:15:11.747"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:11.750" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:11.749" endtime="20231128 22:15:11.750"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:11.752" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:11.751" endtime="20231128 22:15:11.752"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:11.754" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:11.753" endtime="20231128 22:15:11.755"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.756" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:11.756" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:11.755" endtime="20231128 22:15:11.756"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:11.757" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:11.757" endtime="20231128 22:15:11.757"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.758" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:11.758" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:11.758" endtime="20231128 22:15:11.758"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.759" endtime="20231128 22:15:11.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.760" endtime="20231128 22:15:11.761"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.759" endtime="20231128 22:15:11.761"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.763" endtime="20231128 22:15:11.763"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.764" endtime="20231128 22:15:11.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.765" endtime="20231128 22:15:11.765"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.762" endtime="20231128 22:15:11.766"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.769" endtime="20231128 22:15:11.769"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.769" endtime="20231128 22:15:11.770"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.766" endtime="20231128 22:15:11.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.771" endtime="20231128 22:15:11.771"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.771" endtime="20231128 22:15:11.772"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.770" endtime="20231128 22:15:11.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.773" endtime="20231128 22:15:11.773"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.772" endtime="20231128 22:15:11.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:11.774" endtime="20231128 22:15:11.774"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.773" endtime="20231128 22:15:11.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.775" endtime="20231128 22:15:11.775"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.776" endtime="20231128 22:15:11.776"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.777" endtime="20231128 22:15:11.777"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.775" endtime="20231128 22:15:11.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.779" endtime="20231128 22:15:11.779"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.778" endtime="20231128 22:15:11.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.780" endtime="20231128 22:15:11.780"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.780" endtime="20231128 22:15:11.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.781" endtime="20231128 22:15:11.781"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.781" endtime="20231128 22:15:11.782"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.782" endtime="20231128 22:15:11.782"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.782" endtime="20231128 22:15:11.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.784" endtime="20231128 22:15:11.785"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.783" endtime="20231128 22:15:11.785"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.759" endtime="20231128 22:15:11.786"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:11.787" level="INFO">Length is 12</msg>
<msg timestamp="20231128 22:15:11.787" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231128 22:15:11.786" endtime="20231128 22:15:11.787"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:11.789" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:11.788" endtime="20231128 22:15:11.789"/>
</kw>
<status status="PASS" starttime="20231128 22:15:11.787" endtime="20231128 22:15:11.789"/>
</branch>
<status status="PASS" starttime="20231128 22:15:11.787" endtime="20231128 22:15:11.789"/>
</if>
<msg timestamp="20231128 22:15:11.789" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:11.747" endtime="20231128 22:15:11.790"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:11.791" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom CSS"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:11.790" endtime="20231128 22:15:11.791"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:11.792" endtime="20231128 22:15:11.846"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:11.848" level="INFO">Fills the text '{color:1px;}' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:11.847" endtime="20231128 22:15:11.905"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:11.956" level="INFO">Text: '{color:1px;}'</msg>
<msg timestamp="20231128 22:15:11.957" level="INFO">${condition} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:11.906" endtime="20231128 22:15:11.957"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.960" endtime="20231128 22:15:11.960"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:11.961" endtime="20231128 22:15:11.962"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:11.958" endtime="20231128 22:15:11.962"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:11.958" endtime="20231128 22:15:11.963"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:11.964" endtime="20231128 22:15:12.029"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:12.031" level="INFO">Length is 12</msg>
<msg timestamp="20231128 22:15:12.032" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231128 22:15:12.030" endtime="20231128 22:15:12.032"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:12.037" level="INFO">${STATE["Custom CSS"]} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:12.036" endtime="20231128 22:15:12.038"/>
</kw>
<status status="PASS" starttime="20231128 22:15:12.033" endtime="20231128 22:15:12.039"/>
</branch>
<status status="PASS" starttime="20231128 22:15:12.032" endtime="20231128 22:15:12.040"/>
</if>
<status status="PASS" starttime="20231128 22:15:11.624" endtime="20231128 22:15:12.040"/>
</kw>
<kw name="Click &quot;English&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:12.043" endtime="20231128 22:15:12.329"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:12.440" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:12.336" endtime="20231128 22:15:12.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:12.442" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:12.441" endtime="20231128 22:15:12.442"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:12.460" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:12.443" endtime="20231128 22:15:12.462"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:12.464" endtime="20231128 22:15:12.464"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.463" endtime="20231128 22:15:12.464"/>
</branch>
<status status="PASS" starttime="20231128 22:15:12.462" endtime="20231128 22:15:12.465"/>
</if>
<status status="PASS" starttime="20231128 22:15:12.332" endtime="20231128 22:15:12.465"/>
</kw>
<status status="PASS" starttime="20231128 22:15:12.041" endtime="20231128 22:15:12.466"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:12.573" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:12.471" endtime="20231128 22:15:12.573"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:12.575" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:12.574" endtime="20231128 22:15:12.575"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:12.595" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:12.576" endtime="20231128 22:15:12.596"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:12.598" endtime="20231128 22:15:12.598"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.597" endtime="20231128 22:15:12.599"/>
</branch>
<status status="PASS" starttime="20231128 22:15:12.597" endtime="20231128 22:15:12.599"/>
</if>
<status status="PASS" starttime="20231128 22:15:12.470" endtime="20231128 22:15:12.599"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:12.604" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:12.602" endtime="20231128 22:15:12.604"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:12.606" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:12.606" endtime="20231128 22:15:12.607"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:12.608" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:12.607" endtime="20231128 22:15:12.608"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:12.609" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:12.609" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:12.608" endtime="20231128 22:15:12.609"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:12.610" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:12.610" endtime="20231128 22:15:12.611"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:12.611" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:12.612" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:12.611" endtime="20231128 22:15:12.612"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.614" endtime="20231128 22:15:12.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.616" endtime="20231128 22:15:12.618"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.613" endtime="20231128 22:15:12.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:12.623" level="INFO">${random} = Doloremque doloremque.</msg>
<status status="PASS" starttime="20231128 22:15:12.622" endtime="20231128 22:15:12.623"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231128 22:15:12.624" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231128 22:15:12.623" endtime="20231128 22:15:12.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:12.626" level="INFO">${new_text} = PO_11 Doloremque doloremque.</msg>
<status status="PASS" starttime="20231128 22:15:12.625" endtime="20231128 22:15:12.627"/>
</kw>
<status status="PASS" starttime="20231128 22:15:12.620" endtime="20231128 22:15:12.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.628" endtime="20231128 22:15:12.629"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.629" endtime="20231128 22:15:12.630"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.628" endtime="20231128 22:15:12.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.631" endtime="20231128 22:15:12.631"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.632" endtime="20231128 22:15:12.632"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.631" endtime="20231128 22:15:12.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.633" endtime="20231128 22:15:12.633"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.632" endtime="20231128 22:15:12.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:12.639" endtime="20231128 22:15:12.640"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.638" endtime="20231128 22:15:12.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.642" endtime="20231128 22:15:12.642"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.642" endtime="20231128 22:15:12.642"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.643" endtime="20231128 22:15:12.643"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.641" endtime="20231128 22:15:12.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.644" endtime="20231128 22:15:12.644"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.644" endtime="20231128 22:15:12.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.646" endtime="20231128 22:15:12.646"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.645" endtime="20231128 22:15:12.646"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.647" endtime="20231128 22:15:12.648"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.647" endtime="20231128 22:15:12.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.649" endtime="20231128 22:15:12.652"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.649" endtime="20231128 22:15:12.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.654" endtime="20231128 22:15:12.654"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.653" endtime="20231128 22:15:12.655"/>
</branch>
<status status="PASS" starttime="20231128 22:15:12.612" endtime="20231128 22:15:12.656"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:12.657" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:12.657" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:12.656" endtime="20231128 22:15:12.657"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:12.659" level="INFO">${text} = PO_11 Doloremque doloremque.</msg>
<status status="PASS" starttime="20231128 22:15:12.658" endtime="20231128 22:15:12.659"/>
</kw>
<status status="PASS" starttime="20231128 22:15:12.658" endtime="20231128 22:15:12.659"/>
</branch>
<status status="PASS" starttime="20231128 22:15:12.657" endtime="20231128 22:15:12.659"/>
</if>
<msg timestamp="20231128 22:15:12.659" level="INFO">${text} = PO_11 Doloremque doloremque.</msg>
<status status="PASS" starttime="20231128 22:15:12.599" endtime="20231128 22:15:12.660"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:12.661" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:12.660" endtime="20231128 22:15:12.661"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:12.661" endtime="20231128 22:15:12.777"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:12.779" endtime="20231128 22:15:12.822"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:12.824" level="INFO">Fills the text 'PO_11 Doloremque doloremque.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:12.823" endtime="20231128 22:15:12.901"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:12.945" level="INFO">Text: 'PO_11 Doloremque doloremque.'</msg>
<msg timestamp="20231128 22:15:12.945" level="INFO">${condition} = PO_11 Doloremque doloremque.</msg>
<status status="PASS" starttime="20231128 22:15:12.903" endtime="20231128 22:15:12.945"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.947" endtime="20231128 22:15:12.948"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:12.948" endtime="20231128 22:15:12.949"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:12.946" endtime="20231128 22:15:12.949"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:12.946" endtime="20231128 22:15:12.949"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:12.951" endtime="20231128 22:15:13.013"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.015" level="INFO">Length is 28</msg>
<msg timestamp="20231128 22:15:13.015" level="INFO">${cnt} = 28</msg>
<status status="PASS" starttime="20231128 22:15:13.014" endtime="20231128 22:15:13.015"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:13.019" level="INFO">${STATE["Tiêu đề"]} = PO_11 Doloremque doloremque.</msg>
<status status="PASS" starttime="20231128 22:15:13.018" endtime="20231128 22:15:13.020"/>
</kw>
<status status="PASS" starttime="20231128 22:15:13.016" endtime="20231128 22:15:13.020"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.016" endtime="20231128 22:15:13.021"/>
</if>
<status status="PASS" starttime="20231128 22:15:12.467" endtime="20231128 22:15:13.021"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:13.125" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:13.024" endtime="20231128 22:15:13.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:13.127" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:13.126" endtime="20231128 22:15:13.127"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:13.137" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:13.128" endtime="20231128 22:15:13.138"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:13.139" endtime="20231128 22:15:13.139"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.138" endtime="20231128 22:15:13.139"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.138" endtime="20231128 22:15:13.140"/>
</if>
<status status="PASS" starttime="20231128 22:15:13.023" endtime="20231128 22:15:13.140"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:13.143" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:13.142" endtime="20231128 22:15:13.143"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:13.145" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:13.144" endtime="20231128 22:15:13.145"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:13.147" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:13.146" endtime="20231128 22:15:13.148"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.150" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:13.151" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:13.149" endtime="20231128 22:15:13.155"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:13.157" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:13.156" endtime="20231128 22:15:13.157"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.159" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:13.160" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:13.158" endtime="20231128 22:15:13.160"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.162" endtime="20231128 22:15:13.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.164" endtime="20231128 22:15:13.164"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.161" endtime="20231128 22:15:13.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.167" endtime="20231128 22:15:13.168"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.169" endtime="20231128 22:15:13.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.171" endtime="20231128 22:15:13.171"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.166" endtime="20231128 22:15:13.172"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.174" endtime="20231128 22:15:13.175"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.175" endtime="20231128 22:15:13.176"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.173" endtime="20231128 22:15:13.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.178" endtime="20231128 22:15:13.179"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.180" endtime="20231128 22:15:13.180"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.177" endtime="20231128 22:15:13.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.182" endtime="20231128 22:15:13.184"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.181" endtime="20231128 22:15:13.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:13.188" endtime="20231128 22:15:13.188"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.186" endtime="20231128 22:15:13.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.192" endtime="20231128 22:15:13.193"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.196" endtime="20231128 22:15:13.197"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.198" endtime="20231128 22:15:13.199"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.191" endtime="20231128 22:15:13.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.203" endtime="20231128 22:15:13.204"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.202" endtime="20231128 22:15:13.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.206" endtime="20231128 22:15:13.206"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.205" endtime="20231128 22:15:13.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.207" endtime="20231128 22:15:13.208"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.207" endtime="20231128 22:15:13.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.209" endtime="20231128 22:15:13.209"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.208" endtime="20231128 22:15:13.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:13.210" level="INFO">${new_text} = Beatae possimus recusandae iure sint fuga quidem.</msg>
<status status="PASS" starttime="20231128 22:15:13.210" endtime="20231128 22:15:13.210"/>
</kw>
<status status="PASS" starttime="20231128 22:15:13.209" endtime="20231128 22:15:13.211"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.161" endtime="20231128 22:15:13.212"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.213" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:13.213" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:13.212" endtime="20231128 22:15:13.213"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:13.215" level="INFO">${text} = Beatae possimus recusandae iure sint fuga quidem.</msg>
<status status="PASS" starttime="20231128 22:15:13.214" endtime="20231128 22:15:13.215"/>
</kw>
<status status="PASS" starttime="20231128 22:15:13.214" endtime="20231128 22:15:13.215"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.214" endtime="20231128 22:15:13.215"/>
</if>
<msg timestamp="20231128 22:15:13.216" level="INFO">${text} = Beatae possimus recusandae iure sint fuga quidem.</msg>
<status status="PASS" starttime="20231128 22:15:13.141" endtime="20231128 22:15:13.216"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:13.218" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:13.216" endtime="20231128 22:15:13.219"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:13.219" endtime="20231128 22:15:13.336"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:13.338" endtime="20231128 22:15:13.385"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:13.388" level="INFO">Fills the text 'Beatae possimus recusandae iure sint fuga quidem.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:13.386" endtime="20231128 22:15:13.454"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:13.493" level="INFO">Text: 'Beatae possimus recusandae iure sint fuga quidem.'</msg>
<msg timestamp="20231128 22:15:13.494" level="INFO">${condition} = Beatae possimus recusandae iure sint fuga quidem.</msg>
<status status="PASS" starttime="20231128 22:15:13.454" endtime="20231128 22:15:13.494"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.497" endtime="20231128 22:15:13.498"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.499" endtime="20231128 22:15:13.500"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.495" endtime="20231128 22:15:13.501"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:13.495" endtime="20231128 22:15:13.502"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:13.503" endtime="20231128 22:15:13.561"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.564" level="INFO">Length is 49</msg>
<msg timestamp="20231128 22:15:13.565" level="INFO">${cnt} = 49</msg>
<status status="PASS" starttime="20231128 22:15:13.563" endtime="20231128 22:15:13.565"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:13.570" level="INFO">${STATE["Tác giả"]} = Beatae possimus recusandae iure sint fuga quidem.</msg>
<status status="PASS" starttime="20231128 22:15:13.568" endtime="20231128 22:15:13.571"/>
</kw>
<status status="PASS" starttime="20231128 22:15:13.566" endtime="20231128 22:15:13.572"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.566" endtime="20231128 22:15:13.573"/>
</if>
<status status="PASS" starttime="20231128 22:15:13.022" endtime="20231128 22:15:13.573"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:13.679" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:13.577" endtime="20231128 22:15:13.679"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:13.680" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:13.679" endtime="20231128 22:15:13.680"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:13.689" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:13.680" endtime="20231128 22:15:13.690"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:13.692" endtime="20231128 22:15:13.692"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.691" endtime="20231128 22:15:13.693"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.691" endtime="20231128 22:15:13.694"/>
</if>
<status status="PASS" starttime="20231128 22:15:13.576" endtime="20231128 22:15:13.694"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:13.696" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:13.696" endtime="20231128 22:15:13.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:13.697" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:13.697" endtime="20231128 22:15:13.697"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:13.698" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:13.698" endtime="20231128 22:15:13.698"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.699" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:13.699" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:13.699" endtime="20231128 22:15:13.699"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:13.703" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:13.701" endtime="20231128 22:15:13.703"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.705" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:13.706" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:13.704" endtime="20231128 22:15:13.706"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.707" endtime="20231128 22:15:13.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.707" endtime="20231128 22:15:13.708"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.706" endtime="20231128 22:15:13.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.709" endtime="20231128 22:15:13.709"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.709" endtime="20231128 22:15:13.709"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.710" endtime="20231128 22:15:13.710"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.708" endtime="20231128 22:15:13.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.712" endtime="20231128 22:15:13.712"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.713" endtime="20231128 22:15:13.713"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.711" endtime="20231128 22:15:13.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.714" endtime="20231128 22:15:13.714"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.715" endtime="20231128 22:15:13.715"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.713" endtime="20231128 22:15:13.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.716" endtime="20231128 22:15:13.716"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.715" endtime="20231128 22:15:13.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:13.720" endtime="20231128 22:15:13.720"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.720" endtime="20231128 22:15:13.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.721" endtime="20231128 22:15:13.722"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.722" endtime="20231128 22:15:13.722"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.722" endtime="20231128 22:15:13.723"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.721" endtime="20231128 22:15:13.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.724" endtime="20231128 22:15:13.724"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.723" endtime="20231128 22:15:13.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.725" endtime="20231128 22:15:13.725"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.725" endtime="20231128 22:15:13.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.726" endtime="20231128 22:15:13.726"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.726" endtime="20231128 22:15:13.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:13.727" endtime="20231128 22:15:13.727"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:13.727" endtime="20231128 22:15:13.728"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:13.729" level="INFO">${new_text} = Consectetur illum totam dicta nulla suscipit.</msg>
<status status="PASS" starttime="20231128 22:15:13.728" endtime="20231128 22:15:13.729"/>
</kw>
<status status="PASS" starttime="20231128 22:15:13.728" endtime="20231128 22:15:13.730"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.706" endtime="20231128 22:15:13.730"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:13.731" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:13.731" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:13.730" endtime="20231128 22:15:13.732"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:13.736" level="INFO">${text} = Consectetur illum totam dicta nulla suscipit.</msg>
<status status="PASS" starttime="20231128 22:15:13.735" endtime="20231128 22:15:13.736"/>
</kw>
<status status="PASS" starttime="20231128 22:15:13.733" endtime="20231128 22:15:13.737"/>
</branch>
<status status="PASS" starttime="20231128 22:15:13.733" endtime="20231128 22:15:13.737"/>
</if>
<msg timestamp="20231128 22:15:13.737" level="INFO">${text} = Consectetur illum totam dicta nulla suscipit.</msg>
<status status="PASS" starttime="20231128 22:15:13.695" endtime="20231128 22:15:13.737"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:13.738" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:13.738" endtime="20231128 22:15:13.739"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:13.739" endtime="20231128 22:15:13.932"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:13.934" endtime="20231128 22:15:13.976"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:13.978" level="INFO">Fills the text 'Consectetur illum totam dicta nulla suscipit.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:13.977" endtime="20231128 22:15:14.052"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:14.094" level="INFO">Text: 'Consectetur illum totam dicta nulla suscipit.'</msg>
<msg timestamp="20231128 22:15:14.095" level="INFO">${condition} = Consectetur illum totam dicta nulla suscipit.</msg>
<status status="PASS" starttime="20231128 22:15:14.053" endtime="20231128 22:15:14.095"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.097" endtime="20231128 22:15:14.097"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.097" endtime="20231128 22:15:14.098"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.096" endtime="20231128 22:15:14.098"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:14.096" endtime="20231128 22:15:14.098"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:14.099" endtime="20231128 22:15:14.162"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.164" level="INFO">Length is 45</msg>
<msg timestamp="20231128 22:15:14.164" level="INFO">${cnt} = 45</msg>
<status status="PASS" starttime="20231128 22:15:14.163" endtime="20231128 22:15:14.164"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:14.170" level="INFO">${STATE["Mô tả ảnh cover"]} = Consectetur illum totam dicta nulla suscipit.</msg>
<status status="PASS" starttime="20231128 22:15:14.169" endtime="20231128 22:15:14.171"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.165" endtime="20231128 22:15:14.171"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.165" endtime="20231128 22:15:14.172"/>
</if>
<status status="PASS" starttime="20231128 22:15:13.575" endtime="20231128 22:15:14.172"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:14.277" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:14.175" endtime="20231128 22:15:14.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:14.278" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:14.278" endtime="20231128 22:15:14.278"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:14.288" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:14.279" endtime="20231128 22:15:14.289"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:14.290" endtime="20231128 22:15:14.291"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.289" endtime="20231128 22:15:14.291"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.289" endtime="20231128 22:15:14.292"/>
</if>
<status status="PASS" starttime="20231128 22:15:14.174" endtime="20231128 22:15:14.292"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:14.295" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:14.294" endtime="20231128 22:15:14.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:14.297" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:14.296" endtime="20231128 22:15:14.297"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:14.299" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:14.298" endtime="20231128 22:15:14.299"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.301" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:14.302" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:14.300" endtime="20231128 22:15:14.302"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:14.304" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:14.303" endtime="20231128 22:15:14.304"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.306" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:14.306" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:14.305" endtime="20231128 22:15:14.307"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.309" endtime="20231128 22:15:14.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.310" endtime="20231128 22:15:14.311"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.308" endtime="20231128 22:15:14.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.313" endtime="20231128 22:15:14.313"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.314" endtime="20231128 22:15:14.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.315" endtime="20231128 22:15:14.315"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.312" endtime="20231128 22:15:14.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.319" endtime="20231128 22:15:14.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.321" endtime="20231128 22:15:14.321"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.317" endtime="20231128 22:15:14.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.323" endtime="20231128 22:15:14.323"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.324" endtime="20231128 22:15:14.325"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.322" endtime="20231128 22:15:14.325"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:14.327" level="INFO">${new_text} = Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.</msg>
<status status="PASS" starttime="20231128 22:15:14.326" endtime="20231128 22:15:14.327"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.325" endtime="20231128 22:15:14.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:14.328" endtime="20231128 22:15:14.328"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.327" endtime="20231128 22:15:14.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.329" endtime="20231128 22:15:14.329"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.329" endtime="20231128 22:15:14.330"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.330" endtime="20231128 22:15:14.330"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.328" endtime="20231128 22:15:14.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.331" endtime="20231128 22:15:14.331"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.331" endtime="20231128 22:15:14.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.332" endtime="20231128 22:15:14.332"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.332" endtime="20231128 22:15:14.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.333" endtime="20231128 22:15:14.333"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.333" endtime="20231128 22:15:14.333"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.335" endtime="20231128 22:15:14.337"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.334" endtime="20231128 22:15:14.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.338" endtime="20231128 22:15:14.339"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.337" endtime="20231128 22:15:14.339"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.307" endtime="20231128 22:15:14.340"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.340" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:14.341" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:14.340" endtime="20231128 22:15:14.341"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:14.342" level="INFO">${text} = Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.</msg>
<status status="PASS" starttime="20231128 22:15:14.342" endtime="20231128 22:15:14.343"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.341" endtime="20231128 22:15:14.343"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.341" endtime="20231128 22:15:14.343"/>
</if>
<msg timestamp="20231128 22:15:14.343" level="INFO">${text} = Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.</msg>
<status status="PASS" starttime="20231128 22:15:14.293" endtime="20231128 22:15:14.344"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:14.345" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:14.344" endtime="20231128 22:15:14.346"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:14.346" endtime="20231128 22:15:14.395"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:14.397" level="INFO">Fills the text 'Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:14.396" endtime="20231128 22:15:14.463"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:14.514" level="INFO">Text: 'Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.'</msg>
<msg timestamp="20231128 22:15:14.515" level="INFO">${condition} = Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.</msg>
<status status="PASS" starttime="20231128 22:15:14.464" endtime="20231128 22:15:14.515"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.520" endtime="20231128 22:15:14.521"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.522" endtime="20231128 22:15:14.523"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.516" endtime="20231128 22:15:14.523"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:14.516" endtime="20231128 22:15:14.525"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:14.526" endtime="20231128 22:15:14.596"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.598" level="INFO">Length is 73</msg>
<msg timestamp="20231128 22:15:14.599" level="INFO">${cnt} = 73</msg>
<status status="PASS" starttime="20231128 22:15:14.597" endtime="20231128 22:15:14.599"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:14.606" level="INFO">${STATE["Giới thiệu"]} = Repellat illo odit ipsam. Veritatis aut voluptatibus sint quas vitae rem.</msg>
<status status="PASS" starttime="20231128 22:15:14.603" endtime="20231128 22:15:14.606"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.600" endtime="20231128 22:15:14.607"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.600" endtime="20231128 22:15:14.608"/>
</if>
<status status="PASS" starttime="20231128 22:15:14.173" endtime="20231128 22:15:14.608"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:14.713" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:14.612" endtime="20231128 22:15:14.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:14.715" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:14.714" endtime="20231128 22:15:14.716"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:14.753" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:14.716" endtime="20231128 22:15:14.753"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:14.755" endtime="20231128 22:15:14.756"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.754" endtime="20231128 22:15:14.756"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.754" endtime="20231128 22:15:14.757"/>
</if>
<status status="PASS" starttime="20231128 22:15:14.611" endtime="20231128 22:15:14.757"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:14.760" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:14.759" endtime="20231128 22:15:14.760"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:14.761" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:14.761" endtime="20231128 22:15:14.762"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:14.763" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:14.762" endtime="20231128 22:15:14.764"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.765" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:14.766" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:14.764" endtime="20231128 22:15:14.766"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:14.769" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:14.767" endtime="20231128 22:15:14.769"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.771" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:14.772" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:14.770" endtime="20231128 22:15:14.772"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.774" endtime="20231128 22:15:14.775"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.775" endtime="20231128 22:15:14.776"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.773" endtime="20231128 22:15:14.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.778" endtime="20231128 22:15:14.779"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.779" endtime="20231128 22:15:14.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.781" endtime="20231128 22:15:14.781"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.777" endtime="20231128 22:15:14.782"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.783" endtime="20231128 22:15:14.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.786" endtime="20231128 22:15:14.786"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.782" endtime="20231128 22:15:14.787"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.789" endtime="20231128 22:15:14.789"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.790" endtime="20231128 22:15:14.791"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.788" endtime="20231128 22:15:14.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:14.795" level="INFO">${new_text} = Accusamus veniam hic pariatur quidem inventore cumque. Non numquam ea velit et quis quas. Repellendus tenetur quam tenetur totam fugit deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:14.793" endtime="20231128 22:15:14.795"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.792" endtime="20231128 22:15:14.796"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:14.797" endtime="20231128 22:15:14.798"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.796" endtime="20231128 22:15:14.798"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.799" endtime="20231128 22:15:14.799"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.800" endtime="20231128 22:15:14.802"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.803" endtime="20231128 22:15:14.804"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.798" endtime="20231128 22:15:14.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.806" endtime="20231128 22:15:14.807"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.805" endtime="20231128 22:15:14.807"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.808" endtime="20231128 22:15:14.809"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.808" endtime="20231128 22:15:14.809"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.811" endtime="20231128 22:15:14.811"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.810" endtime="20231128 22:15:14.812"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.813" endtime="20231128 22:15:14.813"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.812" endtime="20231128 22:15:14.814"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:14.815" endtime="20231128 22:15:14.815"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:14.814" endtime="20231128 22:15:14.816"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.773" endtime="20231128 22:15:14.819"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:14.830" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:14.831" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:14.829" endtime="20231128 22:15:14.832"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:14.838" level="INFO">${text} = Accusamus veniam hic pariatur quidem inventore cumque. Non numquam ea velit et quis quas. Repellendus tenetur quam tenetur totam fugit deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:14.836" endtime="20231128 22:15:14.838"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.834" endtime="20231128 22:15:14.839"/>
</branch>
<status status="PASS" starttime="20231128 22:15:14.833" endtime="20231128 22:15:14.840"/>
</if>
<msg timestamp="20231128 22:15:14.841" level="INFO">${text} = Accusamus veniam hic pariatur quidem inventore cumque. Non numquam ea velit et quis quas. Repellendus tenetur quam tenetur totam fugit deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:14.757" endtime="20231128 22:15:14.841"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231128 22:15:14.844" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231128 22:15:14.842" endtime="20231128 22:15:14.844"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:14.845" endtime="20231128 22:15:14.911"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:14.913" level="INFO">Fills the text 'Accusamus veniam hic pariatur quidem inventore cumque. Non numquam ea velit et quis quas. Repellendus tenetur quam tenetur totam fugit deleniti.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:14.912" endtime="20231128 22:15:14.972"/>
</kw>
<status status="PASS" starttime="20231128 22:15:14.609" endtime="20231128 22:15:14.974"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:15.080" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:14.978" endtime="20231128 22:15:15.080"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:15.082" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:15.081" endtime="20231128 22:15:15.082"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:15.094" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:15.083" endtime="20231128 22:15:15.094"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:15.096" endtime="20231128 22:15:15.097"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.095" endtime="20231128 22:15:15.097"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.095" endtime="20231128 22:15:15.098"/>
</if>
<status status="PASS" starttime="20231128 22:15:14.976" endtime="20231128 22:15:15.098"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:15.104" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:15.101" endtime="20231128 22:15:15.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:15.106" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:15.105" endtime="20231128 22:15:15.106"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:15.108" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:15.107" endtime="20231128 22:15:15.109"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.110" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:15.111" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:15.109" endtime="20231128 22:15:15.111"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:15.113" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:15.112" endtime="20231128 22:15:15.113"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.115" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:15.115" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:15.114" endtime="20231128 22:15:15.115"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.123" endtime="20231128 22:15:15.123"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.124" endtime="20231128 22:15:15.125"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.116" endtime="20231128 22:15:15.126"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.127" endtime="20231128 22:15:15.128"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.129" endtime="20231128 22:15:15.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.131" endtime="20231128 22:15:15.132"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.126" endtime="20231128 22:15:15.132"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.139" endtime="20231128 22:15:15.139"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.140" endtime="20231128 22:15:15.141"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.137" endtime="20231128 22:15:15.141"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.143" endtime="20231128 22:15:15.144"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.145" endtime="20231128 22:15:15.145"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.142" endtime="20231128 22:15:15.146"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.148" endtime="20231128 22:15:15.148"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.146" endtime="20231128 22:15:15.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:15.154" endtime="20231128 22:15:15.155"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.153" endtime="20231128 22:15:15.155"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.160" endtime="20231128 22:15:15.161"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.162" endtime="20231128 22:15:15.163"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.164" endtime="20231128 22:15:15.164"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.156" endtime="20231128 22:15:15.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.169" endtime="20231128 22:15:15.171"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.165" endtime="20231128 22:15:15.171"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.173" endtime="20231128 22:15:15.174"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.172" endtime="20231128 22:15:15.174"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.175" endtime="20231128 22:15:15.176"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.174" endtime="20231128 22:15:15.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.178" endtime="20231128 22:15:15.179"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.177" endtime="20231128 22:15:15.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:15.182" level="INFO">${new_text} = Voluptatem distinctio expedita.</msg>
<status status="PASS" starttime="20231128 22:15:15.181" endtime="20231128 22:15:15.182"/>
</kw>
<status status="PASS" starttime="20231128 22:15:15.180" endtime="20231128 22:15:15.186"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.116" endtime="20231128 22:15:15.187"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.189" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:15.189" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:15.188" endtime="20231128 22:15:15.190"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:15.193" level="INFO">${text} = Voluptatem distinctio expedita.</msg>
<status status="PASS" starttime="20231128 22:15:15.192" endtime="20231128 22:15:15.193"/>
</kw>
<status status="PASS" starttime="20231128 22:15:15.190" endtime="20231128 22:15:15.194"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.190" endtime="20231128 22:15:15.195"/>
</if>
<msg timestamp="20231128 22:15:15.195" level="INFO">${text} = Voluptatem distinctio expedita.</msg>
<status status="PASS" starttime="20231128 22:15:15.099" endtime="20231128 22:15:15.196"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:15.198" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:15.196" endtime="20231128 22:15:15.198"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:15.214" endtime="20231128 22:15:15.346"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:15.348" endtime="20231128 22:15:15.402"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:15.405" level="INFO">Fills the text 'Voluptatem distinctio expedita.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:15.403" endtime="20231128 22:15:15.460"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:15.496" level="INFO">Text: 'Voluptatem distinctio expedita.'</msg>
<msg timestamp="20231128 22:15:15.496" level="INFO">${condition} = Voluptatem distinctio expedita.</msg>
<status status="PASS" starttime="20231128 22:15:15.461" endtime="20231128 22:15:15.497"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.502" endtime="20231128 22:15:15.503"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.505" endtime="20231128 22:15:15.505"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.497" endtime="20231128 22:15:15.506"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:15.497" endtime="20231128 22:15:15.507"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:15.508" endtime="20231128 22:15:15.579"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.581" level="INFO">Length is 31</msg>
<msg timestamp="20231128 22:15:15.582" level="INFO">${cnt} = 31</msg>
<status status="PASS" starttime="20231128 22:15:15.580" endtime="20231128 22:15:15.582"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:15.589" level="INFO">${STATE["Tiêu đề SEO"]} = Voluptatem distinctio expedita.</msg>
<status status="PASS" starttime="20231128 22:15:15.587" endtime="20231128 22:15:15.590"/>
</kw>
<status status="PASS" starttime="20231128 22:15:15.586" endtime="20231128 22:15:15.590"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.585" endtime="20231128 22:15:15.591"/>
</if>
<status status="PASS" starttime="20231128 22:15:14.975" endtime="20231128 22:15:15.591"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:15.696" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:15.594" endtime="20231128 22:15:15.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:15.698" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:15.697" endtime="20231128 22:15:15.698"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:15.709" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:15.699" endtime="20231128 22:15:15.709"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:15.711" endtime="20231128 22:15:15.712"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.710" endtime="20231128 22:15:15.712"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.710" endtime="20231128 22:15:15.713"/>
</if>
<status status="PASS" starttime="20231128 22:15:15.593" endtime="20231128 22:15:15.713"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:15.717" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:15.716" endtime="20231128 22:15:15.717"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:15.719" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:15.718" endtime="20231128 22:15:15.720"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:15.722" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:15.720" endtime="20231128 22:15:15.722"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.724" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:15.725" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:15.723" endtime="20231128 22:15:15.725"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:15.727" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:15.726" endtime="20231128 22:15:15.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.729" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:15.729" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:15.728" endtime="20231128 22:15:15.730"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.731" endtime="20231128 22:15:15.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.735" endtime="20231128 22:15:15.736"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.730" endtime="20231128 22:15:15.736"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.738" endtime="20231128 22:15:15.739"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.740" endtime="20231128 22:15:15.740"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.741" endtime="20231128 22:15:15.742"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.737" endtime="20231128 22:15:15.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.744" endtime="20231128 22:15:15.745"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.746" endtime="20231128 22:15:15.747"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.743" endtime="20231128 22:15:15.747"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.748" endtime="20231128 22:15:15.749"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.750" endtime="20231128 22:15:15.751"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.748" endtime="20231128 22:15:15.752"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.754" endtime="20231128 22:15:15.754"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.753" endtime="20231128 22:15:15.755"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:15.756" endtime="20231128 22:15:15.757"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.756" endtime="20231128 22:15:15.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.759" endtime="20231128 22:15:15.759"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.760" endtime="20231128 22:15:15.761"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.762" endtime="20231128 22:15:15.762"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.758" endtime="20231128 22:15:15.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.765" endtime="20231128 22:15:15.765"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.764" endtime="20231128 22:15:15.766"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.769" endtime="20231128 22:15:15.770"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.768" endtime="20231128 22:15:15.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.772" endtime="20231128 22:15:15.772"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.771" endtime="20231128 22:15:15.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:15.774" endtime="20231128 22:15:15.775"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:15.773" endtime="20231128 22:15:15.775"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:15.778" level="INFO">${new_text} = Earum nisi ipsum.</msg>
<status status="PASS" starttime="20231128 22:15:15.777" endtime="20231128 22:15:15.778"/>
</kw>
<status status="PASS" starttime="20231128 22:15:15.776" endtime="20231128 22:15:15.779"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.730" endtime="20231128 22:15:15.780"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:15.781" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:15.781" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:15.780" endtime="20231128 22:15:15.782"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:15.785" level="INFO">${text} = Earum nisi ipsum.</msg>
<status status="PASS" starttime="20231128 22:15:15.783" endtime="20231128 22:15:15.785"/>
</kw>
<status status="PASS" starttime="20231128 22:15:15.782" endtime="20231128 22:15:15.786"/>
</branch>
<status status="PASS" starttime="20231128 22:15:15.782" endtime="20231128 22:15:15.786"/>
</if>
<msg timestamp="20231128 22:15:15.787" level="INFO">${text} = Earum nisi ipsum.</msg>
<status status="PASS" starttime="20231128 22:15:15.714" endtime="20231128 22:15:15.788"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:15.790" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:15.789" endtime="20231128 22:15:15.791"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:15.791" endtime="20231128 22:15:15.888"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:15.889" endtime="20231128 22:15:15.931"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:15.934" level="INFO">Fills the text 'Earum nisi ipsum.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:15.932" endtime="20231128 22:15:15.998"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:16.042" level="INFO">Text: 'Earum nisi ipsum.'</msg>
<msg timestamp="20231128 22:15:16.043" level="INFO">${condition} = Earum nisi ipsum.</msg>
<status status="PASS" starttime="20231128 22:15:15.999" endtime="20231128 22:15:16.043"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.046" endtime="20231128 22:15:16.046"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.047" endtime="20231128 22:15:16.048"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.044" endtime="20231128 22:15:16.048"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:16.044" endtime="20231128 22:15:16.049"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:16.050" endtime="20231128 22:15:16.113"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:16.115" level="INFO">Length is 17</msg>
<msg timestamp="20231128 22:15:16.115" level="INFO">${cnt} = 17</msg>
<status status="PASS" starttime="20231128 22:15:16.114" endtime="20231128 22:15:16.116"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:16.121" level="INFO">${STATE["Từ khóa SEO"]} = Earum nisi ipsum.</msg>
<status status="PASS" starttime="20231128 22:15:16.120" endtime="20231128 22:15:16.122"/>
</kw>
<status status="PASS" starttime="20231128 22:15:16.118" endtime="20231128 22:15:16.123"/>
</branch>
<status status="PASS" starttime="20231128 22:15:16.118" endtime="20231128 22:15:16.124"/>
</if>
<status status="PASS" starttime="20231128 22:15:15.592" endtime="20231128 22:15:16.124"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:16.228" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:16.126" endtime="20231128 22:15:16.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:16.230" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:16.229" endtime="20231128 22:15:16.230"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:16.241" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:16.231" endtime="20231128 22:15:16.242"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:16.242" endtime="20231128 22:15:16.243"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.242" endtime="20231128 22:15:16.243"/>
</branch>
<status status="PASS" starttime="20231128 22:15:16.242" endtime="20231128 22:15:16.243"/>
</if>
<status status="PASS" starttime="20231128 22:15:16.126" endtime="20231128 22:15:16.243"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:16.245" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:16.244" endtime="20231128 22:15:16.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:16.246" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:16.245" endtime="20231128 22:15:16.246"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:16.247" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:16.246" endtime="20231128 22:15:16.247"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:16.249" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:16.250" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:16.248" endtime="20231128 22:15:16.250"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:16.255" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:16.252" endtime="20231128 22:15:16.256"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:16.258" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:16.259" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:16.257" endtime="20231128 22:15:16.259"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.261" endtime="20231128 22:15:16.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.263" endtime="20231128 22:15:16.264"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.260" endtime="20231128 22:15:16.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.266" endtime="20231128 22:15:16.267"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.269" endtime="20231128 22:15:16.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.274" endtime="20231128 22:15:16.275"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.265" endtime="20231128 22:15:16.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.278" endtime="20231128 22:15:16.279"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.280" endtime="20231128 22:15:16.280"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.277" endtime="20231128 22:15:16.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.283" endtime="20231128 22:15:16.284"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.287" endtime="20231128 22:15:16.288"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.281" endtime="20231128 22:15:16.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:16.291" level="INFO">${new_text} = Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.</msg>
<status status="PASS" starttime="20231128 22:15:16.290" endtime="20231128 22:15:16.292"/>
</kw>
<status status="PASS" starttime="20231128 22:15:16.289" endtime="20231128 22:15:16.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:16.294" endtime="20231128 22:15:16.294"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.293" endtime="20231128 22:15:16.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.297" endtime="20231128 22:15:16.297"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.298" endtime="20231128 22:15:16.299"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.299" endtime="20231128 22:15:16.299"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.296" endtime="20231128 22:15:16.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.302" endtime="20231128 22:15:16.303"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.300" endtime="20231128 22:15:16.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.304" endtime="20231128 22:15:16.305"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.303" endtime="20231128 22:15:16.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.306" endtime="20231128 22:15:16.306"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.305" endtime="20231128 22:15:16.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.307" endtime="20231128 22:15:16.307"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.306" endtime="20231128 22:15:16.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.308" endtime="20231128 22:15:16.308"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.307" endtime="20231128 22:15:16.308"/>
</branch>
<status status="PASS" starttime="20231128 22:15:16.260" endtime="20231128 22:15:16.308"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:16.309" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:16.310" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:16.309" endtime="20231128 22:15:16.310"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:16.312" level="INFO">${text} = Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.</msg>
<status status="PASS" starttime="20231128 22:15:16.311" endtime="20231128 22:15:16.312"/>
</kw>
<status status="PASS" starttime="20231128 22:15:16.311" endtime="20231128 22:15:16.313"/>
</branch>
<status status="PASS" starttime="20231128 22:15:16.311" endtime="20231128 22:15:16.313"/>
</if>
<msg timestamp="20231128 22:15:16.313" level="INFO">${text} = Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.</msg>
<status status="PASS" starttime="20231128 22:15:16.244" endtime="20231128 22:15:16.313"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:16.315" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:16.314" endtime="20231128 22:15:16.315"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:16.315" endtime="20231128 22:15:16.365"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:16.369" level="INFO">Fills the text 'Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:16.366" endtime="20231128 22:15:16.430"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:16.478" level="INFO">Text: 'Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.'</msg>
<msg timestamp="20231128 22:15:16.478" level="INFO">${condition} = Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.</msg>
<status status="PASS" starttime="20231128 22:15:16.431" endtime="20231128 22:15:16.479"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.481" endtime="20231128 22:15:16.482"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:16.483" endtime="20231128 22:15:16.484"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.479" endtime="20231128 22:15:16.485"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:16.479" endtime="20231128 22:15:16.486"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:16.487" endtime="20231128 22:15:16.563"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:16.564" level="INFO">Length is 72</msg>
<msg timestamp="20231128 22:15:16.564" level="INFO">${cnt} = 72</msg>
<status status="PASS" starttime="20231128 22:15:16.563" endtime="20231128 22:15:16.564"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:16.569" level="INFO">${STATE["Mô tả SEO"]} = Odit officia nam harum. Expedita adipisci molestiae reprehenderit dicta.</msg>
<status status="PASS" starttime="20231128 22:15:16.566" endtime="20231128 22:15:16.570"/>
</kw>
<status status="PASS" starttime="20231128 22:15:16.565" endtime="20231128 22:15:16.570"/>
</branch>
<status status="PASS" starttime="20231128 22:15:16.565" endtime="20231128 22:15:16.571"/>
</if>
<status status="PASS" starttime="20231128 22:15:16.125" endtime="20231128 22:15:16.571"/>
</kw>
<kw name="Click &quot;Tiếng Việt&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:16.575" endtime="20231128 22:15:16.858"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:16.961" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:16.860" endtime="20231128 22:15:16.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:16.962" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:16.962" endtime="20231128 22:15:16.962"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:16.991" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:16.963" endtime="20231128 22:15:16.992"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:16.993" endtime="20231128 22:15:16.993"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:16.992" endtime="20231128 22:15:16.993"/>
</branch>
<status status="PASS" starttime="20231128 22:15:16.992" endtime="20231128 22:15:16.994"/>
</if>
<status status="PASS" starttime="20231128 22:15:16.858" endtime="20231128 22:15:16.994"/>
</kw>
<status status="PASS" starttime="20231128 22:15:16.573" endtime="20231128 22:15:16.994"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:17.097" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:16.995" endtime="20231128 22:15:17.097"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.098" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:17.097" endtime="20231128 22:15:17.098"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:17.122" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:17.099" endtime="20231128 22:15:17.123"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:17.125" endtime="20231128 22:15:17.125"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.124" endtime="20231128 22:15:17.125"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.124" endtime="20231128 22:15:17.126"/>
</if>
<status status="PASS" starttime="20231128 22:15:16.995" endtime="20231128 22:15:17.126"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.127" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:17.127" endtime="20231128 22:15:17.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.128" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:17.128" endtime="20231128 22:15:17.128"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:17.129" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:17.129" endtime="20231128 22:15:17.129"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.130" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:17.130" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:17.130" endtime="20231128 22:15:17.130"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:17.132" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:17.131" endtime="20231128 22:15:17.132"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.135" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:17.135" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:17.133" endtime="20231128 22:15:17.136"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.137" endtime="20231128 22:15:17.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.137" endtime="20231128 22:15:17.138"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.136" endtime="20231128 22:15:17.138"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:17.139" level="INFO">${random} = Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.139" endtime="20231128 22:15:17.139"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231128 22:15:17.140" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231128 22:15:17.140" endtime="20231128 22:15:17.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.142" level="INFO">${new_text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.141" endtime="20231128 22:15:17.142"/>
</kw>
<status status="PASS" starttime="20231128 22:15:17.138" endtime="20231128 22:15:17.142"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.143" endtime="20231128 22:15:17.143"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.143" endtime="20231128 22:15:17.143"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.142" endtime="20231128 22:15:17.143"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.144" endtime="20231128 22:15:17.144"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.144" endtime="20231128 22:15:17.145"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.144" endtime="20231128 22:15:17.145"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.145" endtime="20231128 22:15:17.146"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.145" endtime="20231128 22:15:17.146"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:17.146" endtime="20231128 22:15:17.147"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.146" endtime="20231128 22:15:17.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.149" endtime="20231128 22:15:17.151"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.152" endtime="20231128 22:15:17.153"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.154" endtime="20231128 22:15:17.154"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.148" endtime="20231128 22:15:17.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.155" endtime="20231128 22:15:17.155"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.155" endtime="20231128 22:15:17.156"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.156" endtime="20231128 22:15:17.156"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.156" endtime="20231128 22:15:17.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.157" endtime="20231128 22:15:17.157"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.157" endtime="20231128 22:15:17.158"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.158" endtime="20231128 22:15:17.158"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.158" endtime="20231128 22:15:17.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.159" endtime="20231128 22:15:17.160"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.159" endtime="20231128 22:15:17.160"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.136" endtime="20231128 22:15:17.160"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.161" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:17.161" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:17.160" endtime="20231128 22:15:17.161"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:17.162" level="INFO">${text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.162" endtime="20231128 22:15:17.163"/>
</kw>
<status status="PASS" starttime="20231128 22:15:17.161" endtime="20231128 22:15:17.163"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.161" endtime="20231128 22:15:17.163"/>
</if>
<msg timestamp="20231128 22:15:17.164" level="INFO">${text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.126" endtime="20231128 22:15:17.164"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:17.165" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:17.165" endtime="20231128 22:15:17.166"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:17.166" endtime="20231128 22:15:17.269"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:17.271" endtime="20231128 22:15:17.310"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:17.312" level="INFO">Fills the text 'PO_11 Optio animi accusantium totam.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:17.311" endtime="20231128 22:15:17.381"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:17.428" level="INFO">Text: 'PO_11 Optio animi accusantium totam.'</msg>
<msg timestamp="20231128 22:15:17.428" level="INFO">${condition} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.382" endtime="20231128 22:15:17.429"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.431" endtime="20231128 22:15:17.432"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.434" endtime="20231128 22:15:17.435"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.429" endtime="20231128 22:15:17.436"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:17.429" endtime="20231128 22:15:17.437"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:17.438" endtime="20231128 22:15:17.495"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.497" level="INFO">Length is 36</msg>
<msg timestamp="20231128 22:15:17.497" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20231128 22:15:17.496" endtime="20231128 22:15:17.498"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:17.502" level="INFO">${STATE["Tiêu đề"]} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.500" endtime="20231128 22:15:17.502"/>
</kw>
<status status="PASS" starttime="20231128 22:15:17.499" endtime="20231128 22:15:17.503"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.498" endtime="20231128 22:15:17.503"/>
</if>
<status status="PASS" starttime="20231128 22:15:16.994" endtime="20231128 22:15:17.504"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:17.508" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231128 22:15:17.507" endtime="20231128 22:15:17.508"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.510" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:17.510" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 22:15:17.509" endtime="20231128 22:15:17.510"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.514" level="INFO">${text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.512" endtime="20231128 22:15:17.515"/>
</kw>
<status status="PASS" starttime="20231128 22:15:17.511" endtime="20231128 22:15:17.515"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.511" endtime="20231128 22:15:17.516"/>
</if>
<msg timestamp="20231128 22:15:17.517" level="INFO">${text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.505" endtime="20231128 22:15:17.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.520" level="INFO">${name} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:17.519" endtime="20231128 22:15:17.520"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:17.624" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:17.523" endtime="20231128 22:15:17.625"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.627" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:17.626" endtime="20231128 22:15:17.627"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:17.639" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:17.628" endtime="20231128 22:15:17.640"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:17.642" endtime="20231128 22:15:17.642"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.641" endtime="20231128 22:15:17.643"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.640" endtime="20231128 22:15:17.643"/>
</if>
<status status="PASS" starttime="20231128 22:15:17.522" endtime="20231128 22:15:17.644"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.647" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:17.646" endtime="20231128 22:15:17.647"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:17.649" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:17.648" endtime="20231128 22:15:17.649"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:17.652" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:17.651" endtime="20231128 22:15:17.653"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.655" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:17.655" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:17.654" endtime="20231128 22:15:17.656"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:17.658" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:17.657" endtime="20231128 22:15:17.658"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.660" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:17.661" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:17.659" endtime="20231128 22:15:17.661"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.664" endtime="20231128 22:15:17.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.665" endtime="20231128 22:15:17.666"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.662" endtime="20231128 22:15:17.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.674" endtime="20231128 22:15:17.676"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.677" endtime="20231128 22:15:17.678"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.679" endtime="20231128 22:15:17.680"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.667" endtime="20231128 22:15:17.680"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.683" endtime="20231128 22:15:17.684"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.685" endtime="20231128 22:15:17.685"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.681" endtime="20231128 22:15:17.685"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.686" endtime="20231128 22:15:17.687"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.687" endtime="20231128 22:15:17.688"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.686" endtime="20231128 22:15:17.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.691" endtime="20231128 22:15:17.691"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.689" endtime="20231128 22:15:17.692"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:17.693" endtime="20231128 22:15:17.694"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.692" endtime="20231128 22:15:17.694"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.696" endtime="20231128 22:15:17.697"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.698" endtime="20231128 22:15:17.698"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.699" endtime="20231128 22:15:17.701"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.695" endtime="20231128 22:15:17.701"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.703" endtime="20231128 22:15:17.704"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.702" endtime="20231128 22:15:17.704"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.706" endtime="20231128 22:15:17.707"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.705" endtime="20231128 22:15:17.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.711" endtime="20231128 22:15:17.711"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.710" endtime="20231128 22:15:17.712"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:17.713" endtime="20231128 22:15:17.714"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:17.712" endtime="20231128 22:15:17.714"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:17.717" level="INFO">${new_text} = Delectus tenetur aliquid cumque velit.</msg>
<status status="PASS" starttime="20231128 22:15:17.716" endtime="20231128 22:15:17.718"/>
</kw>
<status status="PASS" starttime="20231128 22:15:17.715" endtime="20231128 22:15:17.718"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.662" endtime="20231128 22:15:17.719"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:17.720" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:17.721" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:17.720" endtime="20231128 22:15:17.721"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:17.724" level="INFO">${text} = Delectus tenetur aliquid cumque velit.</msg>
<status status="PASS" starttime="20231128 22:15:17.723" endtime="20231128 22:15:17.724"/>
</kw>
<status status="PASS" starttime="20231128 22:15:17.722" endtime="20231128 22:15:17.724"/>
</branch>
<status status="PASS" starttime="20231128 22:15:17.722" endtime="20231128 22:15:17.725"/>
</if>
<msg timestamp="20231128 22:15:17.725" level="INFO">${text} = Delectus tenetur aliquid cumque velit.</msg>
<status status="PASS" starttime="20231128 22:15:17.644" endtime="20231128 22:15:17.725"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:17.726" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:17.726" endtime="20231128 22:15:17.727"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:17.727" endtime="20231128 22:15:17.831"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:17.832" endtime="20231128 22:15:17.877"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:17.879" level="INFO">Fills the text 'Delectus tenetur aliquid cumque velit.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:17.878" endtime="20231128 22:15:17.953"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:17.998" level="INFO">Text: 'Delectus tenetur aliquid cumque velit.'</msg>
<msg timestamp="20231128 22:15:17.999" level="INFO">${condition} = Delectus tenetur aliquid cumque velit.</msg>
<status status="PASS" starttime="20231128 22:15:17.954" endtime="20231128 22:15:18.000"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.005" endtime="20231128 22:15:18.005"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.006" endtime="20231128 22:15:18.007"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.002" endtime="20231128 22:15:18.007"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:18.002" endtime="20231128 22:15:18.008"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:18.009" endtime="20231128 22:15:18.080"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.081" level="INFO">Length is 38</msg>
<msg timestamp="20231128 22:15:18.082" level="INFO">${cnt} = 38</msg>
<status status="PASS" starttime="20231128 22:15:18.081" endtime="20231128 22:15:18.082"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:18.088" level="INFO">${STATE["Tác giả"]} = Delectus tenetur aliquid cumque velit.</msg>
<status status="PASS" starttime="20231128 22:15:18.086" endtime="20231128 22:15:18.088"/>
</kw>
<status status="PASS" starttime="20231128 22:15:18.085" endtime="20231128 22:15:18.089"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.083" endtime="20231128 22:15:18.089"/>
</if>
<status status="PASS" starttime="20231128 22:15:17.521" endtime="20231128 22:15:18.090"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:18.194" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:18.093" endtime="20231128 22:15:18.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:18.195" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:18.194" endtime="20231128 22:15:18.195"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:18.204" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:18.195" endtime="20231128 22:15:18.205"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:18.207" endtime="20231128 22:15:18.207"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.206" endtime="20231128 22:15:18.208"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.206" endtime="20231128 22:15:18.208"/>
</if>
<status status="PASS" starttime="20231128 22:15:18.092" endtime="20231128 22:15:18.209"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:18.211" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:18.211" endtime="20231128 22:15:18.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:18.213" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:18.212" endtime="20231128 22:15:18.213"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:18.214" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:18.213" endtime="20231128 22:15:18.214"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.215" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:18.215" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:18.214" endtime="20231128 22:15:18.215"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:18.217" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:18.216" endtime="20231128 22:15:18.218"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.219" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:18.220" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:18.218" endtime="20231128 22:15:18.220"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.221" endtime="20231128 22:15:18.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.222" endtime="20231128 22:15:18.222"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.221" endtime="20231128 22:15:18.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.223" endtime="20231128 22:15:18.224"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.224" endtime="20231128 22:15:18.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.225" endtime="20231128 22:15:18.225"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.223" endtime="20231128 22:15:18.225"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.226" endtime="20231128 22:15:18.226"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.226" endtime="20231128 22:15:18.226"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.225" endtime="20231128 22:15:18.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.227" endtime="20231128 22:15:18.228"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.228" endtime="20231128 22:15:18.228"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.227" endtime="20231128 22:15:18.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:18.230" level="INFO">${new_text} = Ipsam corrupti laborum. Eaque temporibus minima modi.</msg>
<status status="PASS" starttime="20231128 22:15:18.229" endtime="20231128 22:15:18.230"/>
</kw>
<status status="PASS" starttime="20231128 22:15:18.229" endtime="20231128 22:15:18.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:18.231" endtime="20231128 22:15:18.231"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.230" endtime="20231128 22:15:18.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.232" endtime="20231128 22:15:18.232"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.233" endtime="20231128 22:15:18.234"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.235" endtime="20231128 22:15:18.235"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.231" endtime="20231128 22:15:18.235"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.236" endtime="20231128 22:15:18.237"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.235" endtime="20231128 22:15:18.237"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.238" endtime="20231128 22:15:18.238"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.238" endtime="20231128 22:15:18.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.239" endtime="20231128 22:15:18.240"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.239" endtime="20231128 22:15:18.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.240" endtime="20231128 22:15:18.241"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.240" endtime="20231128 22:15:18.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.241" endtime="20231128 22:15:18.242"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.241" endtime="20231128 22:15:18.242"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.221" endtime="20231128 22:15:18.242"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.243" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:18.243" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:18.242" endtime="20231128 22:15:18.243"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:18.245" level="INFO">${text} = Ipsam corrupti laborum. Eaque temporibus minima modi.</msg>
<status status="PASS" starttime="20231128 22:15:18.244" endtime="20231128 22:15:18.245"/>
</kw>
<status status="PASS" starttime="20231128 22:15:18.244" endtime="20231128 22:15:18.246"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.243" endtime="20231128 22:15:18.246"/>
</if>
<msg timestamp="20231128 22:15:18.247" level="INFO">${text} = Ipsam corrupti laborum. Eaque temporibus minima modi.</msg>
<status status="PASS" starttime="20231128 22:15:18.209" endtime="20231128 22:15:18.247"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:18.248" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:18.248" endtime="20231128 22:15:18.249"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:18.250" endtime="20231128 22:15:18.447"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:18.448" endtime="20231128 22:15:18.492"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:18.493" level="INFO">Fills the text 'Ipsam corrupti laborum. Eaque temporibus minima modi.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:18.492" endtime="20231128 22:15:18.567"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:18.644" level="INFO">Text: 'Ipsam corrupti laborum. Eaque temporibus minima modi.'</msg>
<msg timestamp="20231128 22:15:18.644" level="INFO">${condition} = Ipsam corrupti laborum. Eaque temporibus minima modi.</msg>
<status status="PASS" starttime="20231128 22:15:18.569" endtime="20231128 22:15:18.644"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.646" endtime="20231128 22:15:18.646"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.647" endtime="20231128 22:15:18.648"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.645" endtime="20231128 22:15:18.648"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:18.645" endtime="20231128 22:15:18.648"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:18.649" endtime="20231128 22:15:18.729"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.731" level="INFO">Length is 53</msg>
<msg timestamp="20231128 22:15:18.731" level="INFO">${cnt} = 53</msg>
<status status="PASS" starttime="20231128 22:15:18.730" endtime="20231128 22:15:18.732"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:18.739" level="INFO">${STATE["Mô tả ảnh cover"]} = Ipsam corrupti laborum. Eaque temporibus minima modi.</msg>
<status status="PASS" starttime="20231128 22:15:18.737" endtime="20231128 22:15:18.739"/>
</kw>
<status status="PASS" starttime="20231128 22:15:18.735" endtime="20231128 22:15:18.740"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.735" endtime="20231128 22:15:18.741"/>
</if>
<status status="PASS" starttime="20231128 22:15:18.090" endtime="20231128 22:15:18.741"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:18.847" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:18.744" endtime="20231128 22:15:18.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:18.848" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:18.847" endtime="20231128 22:15:18.848"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:18.858" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:18.848" endtime="20231128 22:15:18.859"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:18.860" endtime="20231128 22:15:18.860"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.860" endtime="20231128 22:15:18.860"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.859" endtime="20231128 22:15:18.862"/>
</if>
<status status="PASS" starttime="20231128 22:15:18.743" endtime="20231128 22:15:18.862"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:18.864" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:18.864" endtime="20231128 22:15:18.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:18.865" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:18.865" endtime="20231128 22:15:18.865"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:18.867" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:18.866" endtime="20231128 22:15:18.868"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.869" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:18.870" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:18.869" endtime="20231128 22:15:18.870"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:18.871" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:18.870" endtime="20231128 22:15:18.871"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.872" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:18.873" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:18.872" endtime="20231128 22:15:18.873"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.874" endtime="20231128 22:15:18.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.874" endtime="20231128 22:15:18.874"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.873" endtime="20231128 22:15:18.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.875" endtime="20231128 22:15:18.875"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.876" endtime="20231128 22:15:18.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.876" endtime="20231128 22:15:18.877"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.875" endtime="20231128 22:15:18.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.877" endtime="20231128 22:15:18.878"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.878" endtime="20231128 22:15:18.878"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.877" endtime="20231128 22:15:18.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.879" endtime="20231128 22:15:18.879"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.880" endtime="20231128 22:15:18.880"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.879" endtime="20231128 22:15:18.880"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:18.881" level="INFO">${new_text} = Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.</msg>
<status status="PASS" starttime="20231128 22:15:18.881" endtime="20231128 22:15:18.881"/>
</kw>
<status status="PASS" starttime="20231128 22:15:18.880" endtime="20231128 22:15:18.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:18.882" endtime="20231128 22:15:18.882"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.882" endtime="20231128 22:15:18.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.884" endtime="20231128 22:15:18.885"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.886" endtime="20231128 22:15:18.886"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.887" endtime="20231128 22:15:18.887"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.883" endtime="20231128 22:15:18.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.889" endtime="20231128 22:15:18.890"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.889" endtime="20231128 22:15:18.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.890" endtime="20231128 22:15:18.891"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.890" endtime="20231128 22:15:18.891"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.891" endtime="20231128 22:15:18.892"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.891" endtime="20231128 22:15:18.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.893" endtime="20231128 22:15:18.893"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.892" endtime="20231128 22:15:18.893"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:18.894" endtime="20231128 22:15:18.894"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:18.894" endtime="20231128 22:15:18.894"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.873" endtime="20231128 22:15:18.896"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:18.896" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:18.897" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:18.896" endtime="20231128 22:15:18.897"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:18.898" level="INFO">${text} = Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.</msg>
<status status="PASS" starttime="20231128 22:15:18.898" endtime="20231128 22:15:18.898"/>
</kw>
<status status="PASS" starttime="20231128 22:15:18.897" endtime="20231128 22:15:18.899"/>
</branch>
<status status="PASS" starttime="20231128 22:15:18.897" endtime="20231128 22:15:18.899"/>
</if>
<msg timestamp="20231128 22:15:18.900" level="INFO">${text} = Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.</msg>
<status status="PASS" starttime="20231128 22:15:18.863" endtime="20231128 22:15:18.901"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:18.903" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:18.902" endtime="20231128 22:15:18.903"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:18.904" endtime="20231128 22:15:18.949"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:18.952" level="INFO">Fills the text 'Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:18.950" endtime="20231128 22:15:19.014"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:19.061" level="INFO">Text: 'Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.'</msg>
<msg timestamp="20231128 22:15:19.061" level="INFO">${condition} = Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.</msg>
<status status="PASS" starttime="20231128 22:15:19.016" endtime="20231128 22:15:19.062"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.064" endtime="20231128 22:15:19.065"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.066" endtime="20231128 22:15:19.068"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.062" endtime="20231128 22:15:19.068"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:19.062" endtime="20231128 22:15:19.069"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:19.071" endtime="20231128 22:15:19.145"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.147" level="INFO">Length is 192</msg>
<msg timestamp="20231128 22:15:19.148" level="INFO">${cnt} = 192</msg>
<status status="PASS" starttime="20231128 22:15:19.146" endtime="20231128 22:15:19.148"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:19.154" level="INFO">${STATE["Giới thiệu"]} = Autem animi tempora libero minus sapiente. Nobis soluta itaque occaecati sint. Saepe vitae quibusdam quisquam vero dolores ducimus. Doloremque doloremque beatae fugiat impedit natus voluptate.</msg>
<status status="PASS" starttime="20231128 22:15:19.152" endtime="20231128 22:15:19.154"/>
</kw>
<status status="PASS" starttime="20231128 22:15:19.149" endtime="20231128 22:15:19.155"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.149" endtime="20231128 22:15:19.156"/>
</if>
<status status="PASS" starttime="20231128 22:15:18.742" endtime="20231128 22:15:19.156"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:19.261" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:19.160" endtime="20231128 22:15:19.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:19.263" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:19.262" endtime="20231128 22:15:19.263"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:19.292" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:19.264" endtime="20231128 22:15:19.293"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:19.295" endtime="20231128 22:15:19.295"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.294" endtime="20231128 22:15:19.296"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.293" endtime="20231128 22:15:19.296"/>
</if>
<status status="PASS" starttime="20231128 22:15:19.159" endtime="20231128 22:15:19.297"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:19.301" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:19.299" endtime="20231128 22:15:19.301"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:19.303" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:19.302" endtime="20231128 22:15:19.303"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:19.305" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:19.304" endtime="20231128 22:15:19.306"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.308" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:19.308" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:19.306" endtime="20231128 22:15:19.309"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:19.310" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:19.309" endtime="20231128 22:15:19.311"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.313" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:19.313" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:19.312" endtime="20231128 22:15:19.314"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.316" endtime="20231128 22:15:19.317"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.318" endtime="20231128 22:15:19.319"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.315" endtime="20231128 22:15:19.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.321" endtime="20231128 22:15:19.321"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.322" endtime="20231128 22:15:19.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.323" endtime="20231128 22:15:19.324"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.320" endtime="20231128 22:15:19.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.325" endtime="20231128 22:15:19.326"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.326" endtime="20231128 22:15:19.326"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.325" endtime="20231128 22:15:19.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.328" endtime="20231128 22:15:19.329"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.330" endtime="20231128 22:15:19.331"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.327" endtime="20231128 22:15:19.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:19.336" level="INFO">${new_text} = Rem reprehenderit tenetur at cupiditate fuga voluptatibus aliquid. Minima cupiditate nam adipisci omnis natus.</msg>
<status status="PASS" starttime="20231128 22:15:19.335" endtime="20231128 22:15:19.337"/>
</kw>
<status status="PASS" starttime="20231128 22:15:19.332" endtime="20231128 22:15:19.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:19.339" endtime="20231128 22:15:19.340"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.338" endtime="20231128 22:15:19.340"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.341" endtime="20231128 22:15:19.342"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.343" endtime="20231128 22:15:19.343"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.344" endtime="20231128 22:15:19.344"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.341" endtime="20231128 22:15:19.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.346" endtime="20231128 22:15:19.347"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.345" endtime="20231128 22:15:19.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.348" endtime="20231128 22:15:19.350"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.348" endtime="20231128 22:15:19.351"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.352" endtime="20231128 22:15:19.355"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.351" endtime="20231128 22:15:19.356"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.357" endtime="20231128 22:15:19.358"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.357" endtime="20231128 22:15:19.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.360" endtime="20231128 22:15:19.361"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.359" endtime="20231128 22:15:19.361"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.314" endtime="20231128 22:15:19.362"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.363" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:19.364" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:19.362" endtime="20231128 22:15:19.364"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:19.369" level="INFO">${text} = Rem reprehenderit tenetur at cupiditate fuga voluptatibus aliquid. Minima cupiditate nam adipisci omnis natus.</msg>
<status status="PASS" starttime="20231128 22:15:19.366" endtime="20231128 22:15:19.369"/>
</kw>
<status status="PASS" starttime="20231128 22:15:19.365" endtime="20231128 22:15:19.370"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.365" endtime="20231128 22:15:19.371"/>
</if>
<msg timestamp="20231128 22:15:19.371" level="INFO">${text} = Rem reprehenderit tenetur at cupiditate fuga voluptatibus aliquid. Minima cupiditate nam adipisci omnis natus.</msg>
<status status="PASS" starttime="20231128 22:15:19.298" endtime="20231128 22:15:19.372"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231128 22:15:19.374" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231128 22:15:19.372" endtime="20231128 22:15:19.374"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:19.375" endtime="20231128 22:15:19.442"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:19.445" level="INFO">Fills the text 'Rem reprehenderit tenetur at cupiditate fuga voluptatibus aliquid. Minima cupiditate nam adipisci omnis natus.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:19.443" endtime="20231128 22:15:19.497"/>
</kw>
<status status="PASS" starttime="20231128 22:15:19.158" endtime="20231128 22:15:19.498"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:19.606" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:19.504" endtime="20231128 22:15:19.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:19.608" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:19.607" endtime="20231128 22:15:19.608"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:19.619" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:19.609" endtime="20231128 22:15:19.619"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:19.621" endtime="20231128 22:15:19.621"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.620" endtime="20231128 22:15:19.622"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.620" endtime="20231128 22:15:19.622"/>
</if>
<status status="PASS" starttime="20231128 22:15:19.502" endtime="20231128 22:15:19.623"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:19.627" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:19.626" endtime="20231128 22:15:19.627"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:19.629" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:19.628" endtime="20231128 22:15:19.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:19.631" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:19.630" endtime="20231128 22:15:19.632"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.636" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:19.638" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:19.633" endtime="20231128 22:15:19.638"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:19.640" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:19.639" endtime="20231128 22:15:19.641"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.642" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:19.643" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:19.642" endtime="20231128 22:15:19.643"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.645" endtime="20231128 22:15:19.645"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.646" endtime="20231128 22:15:19.647"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.644" endtime="20231128 22:15:19.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.648" endtime="20231128 22:15:19.649"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.653" endtime="20231128 22:15:19.654"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.655" endtime="20231128 22:15:19.656"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.647" endtime="20231128 22:15:19.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.658" endtime="20231128 22:15:19.658"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.659" endtime="20231128 22:15:19.660"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.657" endtime="20231128 22:15:19.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.662" endtime="20231128 22:15:19.663"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.663" endtime="20231128 22:15:19.664"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.661" endtime="20231128 22:15:19.664"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.666" endtime="20231128 22:15:19.669"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.665" endtime="20231128 22:15:19.670"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:19.672" endtime="20231128 22:15:19.673"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.671" endtime="20231128 22:15:19.673"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.675" endtime="20231128 22:15:19.675"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.676" endtime="20231128 22:15:19.677"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.680" endtime="20231128 22:15:19.681"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.674" endtime="20231128 22:15:19.681"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.688" endtime="20231128 22:15:19.690"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.682" endtime="20231128 22:15:19.691"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.696" endtime="20231128 22:15:19.697"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.694" endtime="20231128 22:15:19.697"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.699" endtime="20231128 22:15:19.699"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.698" endtime="20231128 22:15:19.704"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.706" endtime="20231128 22:15:19.706"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.705" endtime="20231128 22:15:19.707"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:19.710" level="INFO">${new_text} = Blanditiis magnam libero error beatae.</msg>
<status status="PASS" starttime="20231128 22:15:19.709" endtime="20231128 22:15:19.710"/>
</kw>
<status status="PASS" starttime="20231128 22:15:19.708" endtime="20231128 22:15:19.711"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.644" endtime="20231128 22:15:19.711"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:19.713" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:19.713" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:19.712" endtime="20231128 22:15:19.714"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:19.720" level="INFO">${text} = Blanditiis magnam libero error beatae.</msg>
<status status="PASS" starttime="20231128 22:15:19.715" endtime="20231128 22:15:19.721"/>
</kw>
<status status="PASS" starttime="20231128 22:15:19.714" endtime="20231128 22:15:19.721"/>
</branch>
<status status="PASS" starttime="20231128 22:15:19.714" endtime="20231128 22:15:19.722"/>
</if>
<msg timestamp="20231128 22:15:19.723" level="INFO">${text} = Blanditiis magnam libero error beatae.</msg>
<status status="PASS" starttime="20231128 22:15:19.624" endtime="20231128 22:15:19.723"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:19.725" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:19.724" endtime="20231128 22:15:19.726"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:19.727" endtime="20231128 22:15:19.811"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:19.812" endtime="20231128 22:15:19.860"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:19.861" level="INFO">Fills the text 'Blanditiis magnam libero error beatae.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:19.860" endtime="20231128 22:15:19.930"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:19.978" level="INFO">Text: 'Blanditiis magnam libero error beatae.'</msg>
<msg timestamp="20231128 22:15:19.979" level="INFO">${condition} = Blanditiis magnam libero error beatae.</msg>
<status status="PASS" starttime="20231128 22:15:19.931" endtime="20231128 22:15:19.979"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.982" endtime="20231128 22:15:19.982"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:19.983" endtime="20231128 22:15:19.985"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:19.980" endtime="20231128 22:15:19.987"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:19.980" endtime="20231128 22:15:19.988"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:19.989" endtime="20231128 22:15:20.064"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.066" level="INFO">Length is 38</msg>
<msg timestamp="20231128 22:15:20.068" level="INFO">${cnt} = 38</msg>
<status status="PASS" starttime="20231128 22:15:20.065" endtime="20231128 22:15:20.068"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:20.073" level="INFO">${STATE["Tiêu đề SEO"]} = Blanditiis magnam libero error beatae.</msg>
<status status="PASS" starttime="20231128 22:15:20.071" endtime="20231128 22:15:20.074"/>
</kw>
<status status="PASS" starttime="20231128 22:15:20.070" endtime="20231128 22:15:20.074"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.069" endtime="20231128 22:15:20.075"/>
</if>
<status status="PASS" starttime="20231128 22:15:19.499" endtime="20231128 22:15:20.075"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:20.180" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:20.078" endtime="20231128 22:15:20.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:20.182" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:20.181" endtime="20231128 22:15:20.182"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:20.192" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:20.183" endtime="20231128 22:15:20.193"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:20.195" endtime="20231128 22:15:20.195"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.194" endtime="20231128 22:15:20.196"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.193" endtime="20231128 22:15:20.196"/>
</if>
<status status="PASS" starttime="20231128 22:15:20.077" endtime="20231128 22:15:20.197"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:20.200" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:20.199" endtime="20231128 22:15:20.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:20.202" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:20.202" endtime="20231128 22:15:20.203"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:20.205" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:20.204" endtime="20231128 22:15:20.205"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.207" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:20.208" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:20.206" endtime="20231128 22:15:20.208"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:20.211" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:20.209" endtime="20231128 22:15:20.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.213" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:20.214" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:20.212" endtime="20231128 22:15:20.214"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.217" endtime="20231128 22:15:20.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.218" endtime="20231128 22:15:20.219"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.215" endtime="20231128 22:15:20.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.221" endtime="20231128 22:15:20.222"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.223" endtime="20231128 22:15:20.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.224" endtime="20231128 22:15:20.225"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.220" endtime="20231128 22:15:20.225"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.227" endtime="20231128 22:15:20.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.228" endtime="20231128 22:15:20.228"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.226" endtime="20231128 22:15:20.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.230" endtime="20231128 22:15:20.231"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.231" endtime="20231128 22:15:20.232"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.229" endtime="20231128 22:15:20.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.253" endtime="20231128 22:15:20.254"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.234" endtime="20231128 22:15:20.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:20.256" endtime="20231128 22:15:20.256"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.255" endtime="20231128 22:15:20.257"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.258" endtime="20231128 22:15:20.259"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.261" endtime="20231128 22:15:20.261"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.262" endtime="20231128 22:15:20.263"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.257" endtime="20231128 22:15:20.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.265" endtime="20231128 22:15:20.265"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.264" endtime="20231128 22:15:20.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.269" endtime="20231128 22:15:20.270"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.267" endtime="20231128 22:15:20.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.272" endtime="20231128 22:15:20.272"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.271" endtime="20231128 22:15:20.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.274" endtime="20231128 22:15:20.275"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.273" endtime="20231128 22:15:20.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:20.278" level="INFO">${new_text} = Reprehenderit nihil ratione.</msg>
<status status="PASS" starttime="20231128 22:15:20.277" endtime="20231128 22:15:20.278"/>
</kw>
<status status="PASS" starttime="20231128 22:15:20.276" endtime="20231128 22:15:20.278"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.215" endtime="20231128 22:15:20.279"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.281" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:20.282" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:20.280" endtime="20231128 22:15:20.282"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:20.288" level="INFO">${text} = Reprehenderit nihil ratione.</msg>
<status status="PASS" starttime="20231128 22:15:20.286" endtime="20231128 22:15:20.289"/>
</kw>
<status status="PASS" starttime="20231128 22:15:20.283" endtime="20231128 22:15:20.290"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.283" endtime="20231128 22:15:20.290"/>
</if>
<msg timestamp="20231128 22:15:20.291" level="INFO">${text} = Reprehenderit nihil ratione.</msg>
<status status="PASS" starttime="20231128 22:15:20.197" endtime="20231128 22:15:20.291"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:20.294" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:20.292" endtime="20231128 22:15:20.294"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:20.295" endtime="20231128 22:15:20.369"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:20.370" endtime="20231128 22:15:20.409"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:20.411" level="INFO">Fills the text 'Reprehenderit nihil ratione.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:20.410" endtime="20231128 22:15:20.474"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:20.520" level="INFO">Text: 'Reprehenderit nihil ratione.'</msg>
<msg timestamp="20231128 22:15:20.520" level="INFO">${condition} = Reprehenderit nihil ratione.</msg>
<status status="PASS" starttime="20231128 22:15:20.475" endtime="20231128 22:15:20.521"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.523" endtime="20231128 22:15:20.524"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.525" endtime="20231128 22:15:20.525"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.521" endtime="20231128 22:15:20.526"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:20.521" endtime="20231128 22:15:20.526"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:20.527" endtime="20231128 22:15:20.612"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.614" level="INFO">Length is 28</msg>
<msg timestamp="20231128 22:15:20.615" level="INFO">${cnt} = 28</msg>
<status status="PASS" starttime="20231128 22:15:20.613" endtime="20231128 22:15:20.615"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:20.620" level="INFO">${STATE["Từ khóa SEO"]} = Reprehenderit nihil ratione.</msg>
<status status="PASS" starttime="20231128 22:15:20.619" endtime="20231128 22:15:20.621"/>
</kw>
<status status="PASS" starttime="20231128 22:15:20.617" endtime="20231128 22:15:20.621"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.616" endtime="20231128 22:15:20.622"/>
</if>
<status status="PASS" starttime="20231128 22:15:20.076" endtime="20231128 22:15:20.622"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:20.727" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:20.625" endtime="20231128 22:15:20.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:20.728" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:20.727" endtime="20231128 22:15:20.729"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:20.740" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:20.729" endtime="20231128 22:15:20.741"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:20.742" endtime="20231128 22:15:20.743"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.742" endtime="20231128 22:15:20.743"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.741" endtime="20231128 22:15:20.744"/>
</if>
<status status="PASS" starttime="20231128 22:15:20.624" endtime="20231128 22:15:20.744"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:20.747" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:20.746" endtime="20231128 22:15:20.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:20.749" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:20.748" endtime="20231128 22:15:20.750"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:20.752" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:20.751" endtime="20231128 22:15:20.752"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.759" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:20.759" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:20.758" endtime="20231128 22:15:20.760"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:20.761" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:20.760" endtime="20231128 22:15:20.762"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.763" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:20.764" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:20.763" endtime="20231128 22:15:20.764"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.765" endtime="20231128 22:15:20.765"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.765" endtime="20231128 22:15:20.766"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.764" endtime="20231128 22:15:20.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.769" endtime="20231128 22:15:20.769"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.770" endtime="20231128 22:15:20.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.771" endtime="20231128 22:15:20.772"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.768" endtime="20231128 22:15:20.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.773" endtime="20231128 22:15:20.774"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.775" endtime="20231128 22:15:20.775"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.773" endtime="20231128 22:15:20.775"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.777" endtime="20231128 22:15:20.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.778" endtime="20231128 22:15:20.779"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.776" endtime="20231128 22:15:20.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:20.781" level="INFO">${new_text} = Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.</msg>
<status status="PASS" starttime="20231128 22:15:20.780" endtime="20231128 22:15:20.781"/>
</kw>
<status status="PASS" starttime="20231128 22:15:20.779" endtime="20231128 22:15:20.781"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:20.782" endtime="20231128 22:15:20.782"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.782" endtime="20231128 22:15:20.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.785" endtime="20231128 22:15:20.785"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.786" endtime="20231128 22:15:20.787"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.787" endtime="20231128 22:15:20.788"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.784" endtime="20231128 22:15:20.789"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.790" endtime="20231128 22:15:20.790"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.789" endtime="20231128 22:15:20.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.791" endtime="20231128 22:15:20.791"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.790" endtime="20231128 22:15:20.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.792" endtime="20231128 22:15:20.792"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.791" endtime="20231128 22:15:20.792"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.793" endtime="20231128 22:15:20.794"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.792" endtime="20231128 22:15:20.794"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.795" endtime="20231128 22:15:20.796"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.795" endtime="20231128 22:15:20.796"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.764" endtime="20231128 22:15:20.797"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:20.798" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:20.799" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:20.797" endtime="20231128 22:15:20.801"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:20.805" level="INFO">${text} = Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.</msg>
<status status="PASS" starttime="20231128 22:15:20.803" endtime="20231128 22:15:20.805"/>
</kw>
<status status="PASS" starttime="20231128 22:15:20.802" endtime="20231128 22:15:20.806"/>
</branch>
<status status="PASS" starttime="20231128 22:15:20.802" endtime="20231128 22:15:20.807"/>
</if>
<msg timestamp="20231128 22:15:20.808" level="INFO">${text} = Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.</msg>
<status status="PASS" starttime="20231128 22:15:20.745" endtime="20231128 22:15:20.809"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:20.811" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:20.810" endtime="20231128 22:15:20.812"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:20.812" endtime="20231128 22:15:20.862"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:20.864" level="INFO">Fills the text 'Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:20.863" endtime="20231128 22:15:20.923"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:20.971" level="INFO">Text: 'Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.'</msg>
<msg timestamp="20231128 22:15:20.971" level="INFO">${condition} = Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.</msg>
<status status="PASS" starttime="20231128 22:15:20.924" endtime="20231128 22:15:20.972"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.974" endtime="20231128 22:15:20.975"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:20.976" endtime="20231128 22:15:20.977"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:20.972" endtime="20231128 22:15:20.977"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:20.972" endtime="20231128 22:15:20.978"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:20.979" endtime="20231128 22:15:21.045"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:21.046" level="INFO">Length is 119</msg>
<msg timestamp="20231128 22:15:21.047" level="INFO">${cnt} = 119</msg>
<status status="PASS" starttime="20231128 22:15:21.046" endtime="20231128 22:15:21.047"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:21.055" level="INFO">${STATE["Mô tả SEO"]} = Provident maxime suscipit nostrum ipsa officiis. Quas atque amet nesciunt magnam. Sequi blanditiis odio aliquam cumque.</msg>
<status status="PASS" starttime="20231128 22:15:21.053" endtime="20231128 22:15:21.055"/>
</kw>
<status status="PASS" starttime="20231128 22:15:21.048" endtime="20231128 22:15:21.056"/>
</branch>
<status status="PASS" starttime="20231128 22:15:21.048" endtime="20231128 22:15:21.057"/>
</if>
<status status="PASS" starttime="20231128 22:15:20.623" endtime="20231128 22:15:21.057"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:21.161" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:21.059" endtime="20231128 22:15:21.161"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:21.172" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:21.162" endtime="20231128 22:15:21.172"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:21.173" endtime="20231128 22:15:21.340"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:21.343" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:21.342" endtime="20231128 22:15:21.344"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:21.376" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:21.345" endtime="20231128 22:15:21.376"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:21.378" endtime="20231128 22:15:21.379"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 22:15:21.380" endtime="20231128 22:15:21.381"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 22:15:21.382" endtime="20231128 22:15:21.383"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:21.377" endtime="20231128 22:15:21.386"/>
</branch>
<status status="PASS" starttime="20231128 22:15:21.377" endtime="20231128 22:15:21.387"/>
</if>
<status status="PASS" starttime="20231128 22:15:21.341" endtime="20231128 22:15:21.387"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 22:15:21.805" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:21.805" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:22.081" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:22.081" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:22.094" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 22:15:21.391" endtime="20231128 22:15:22.095"/>
</kw>
<status status="PASS" starttime="20231128 22:15:21.173" endtime="20231128 22:15:22.097"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:22.103" endtime="20231128 22:15:22.105"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 22:15:22.108" endtime="20231128 22:15:22.110"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 22:15:22.110" endtime="20231128 22:15:22.111"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:22.101" endtime="20231128 22:15:22.112"/>
</branch>
<status status="PASS" starttime="20231128 22:15:21.172" endtime="20231128 22:15:22.113"/>
</if>
<status status="PASS" starttime="20231128 22:15:21.058" endtime="20231128 22:15:22.113"/>
</kw>
<kw name="User look message &quot;Thêm mới bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:22.126" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:22.120" endtime="20231128 22:15:22.127"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:22.130" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:22.131" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:22.129" endtime="20231128 22:15:22.131"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:22.139" endtime="20231128 22:15:22.140"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:22.132" endtime="20231128 22:15:22.141"/>
</branch>
<status status="PASS" starttime="20231128 22:15:22.132" endtime="20231128 22:15:22.142"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:22.246" level="INFO">Text: 'Thêm mới bài viết thành công'</msg>
<status status="PASS" starttime="20231128 22:15:22.162" endtime="20231128 22:15:22.247"/>
</kw>
<status status="PASS" starttime="20231128 22:15:22.156" endtime="20231128 22:15:22.248"/>
</kw>
<status status="PASS" starttime="20231128 22:15:22.144" endtime="20231128 22:15:22.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:22.254" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231128 22:15:22.252" endtime="20231128 22:15:22.255"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231128 22:15:22.695" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231128 22:15:22.695" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231128 22:15:22.696" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231128 22:15:22.264" endtime="20231128 22:15:22.703"/>
</kw>
<status status="FAIL" starttime="20231128 22:15:22.260" endtime="20231128 22:15:22.703"/>
</kw>
<msg timestamp="20231128 22:15:22.704" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231128 22:15:22.256" endtime="20231128 22:15:22.704"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:22.706" endtime="20231128 22:15:22.707"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:22.705" endtime="20231128 22:15:22.708"/>
</branch>
<status status="PASS" starttime="20231128 22:15:22.705" endtime="20231128 22:15:22.708"/>
</if>
<status status="PASS" starttime="20231128 22:15:22.114" endtime="20231128 22:15:22.709"/>
</kw>
<msg timestamp="20231128 22:15:22.710" level="INFO">${name1} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:07.291" endtime="20231128 22:15:22.710"/>
</kw>
<kw name="Create a test post with &quot;Cate1&quot; type" sourcename="Create a test post with &quot;${type}&quot; type">
<kw name="Click &quot;Tạo mới bài viết&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:22.819" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:22.717" endtime="20231128 22:15:22.819"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:22.827" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:22.819" endtime="20231128 22:15:22.827"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:22.829" endtime="20231128 22:15:23.442"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:23.445" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:23.445" endtime="20231128 22:15:23.446"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:23.464" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:23.447" endtime="20231128 22:15:23.464"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.468" endtime="20231128 22:15:23.468"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.469" endtime="20231128 22:15:23.470"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 22:15:23.471" endtime="20231128 22:15:23.471"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.465" endtime="20231128 22:15:23.472"/>
</branch>
<status status="PASS" starttime="20231128 22:15:23.465" endtime="20231128 22:15:23.472"/>
</if>
<status status="PASS" starttime="20231128 22:15:23.444" endtime="20231128 22:15:23.473"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 22:15:23.511" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:23.511" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:23.545" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:23.546" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:23.560" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 22:15:23.473" endtime="20231128 22:15:23.562"/>
</kw>
<status status="PASS" starttime="20231128 22:15:22.828" endtime="20231128 22:15:23.562"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.564" endtime="20231128 22:15:23.564"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 22:15:23.565" endtime="20231128 22:15:23.565"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.570" endtime="20231128 22:15:23.571"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.563" endtime="20231128 22:15:23.572"/>
</branch>
<status status="PASS" starttime="20231128 22:15:22.828" endtime="20231128 22:15:23.573"/>
</if>
<status status="PASS" starttime="20231128 22:15:22.714" endtime="20231128 22:15:23.574"/>
</kw>
<kw name="Click radio &quot;Loại editor&quot; in line &quot;Block&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231128 22:15:23.579" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại editor"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "Block"...</msg>
<status status="PASS" starttime="20231128 22:15:23.577" endtime="20231128 22:15:23.579"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:23.580" endtime="20231128 22:15:23.949"/>
</kw>
<status status="PASS" starttime="20231128 22:15:23.576" endtime="20231128 22:15:23.950"/>
</kw>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:23.954" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:23.953" endtime="20231128 22:15:23.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:23.956" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:23.955" endtime="20231128 22:15:23.956"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:23.957" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:23.957" endtime="20231128 22:15:23.957"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:23.958" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:23.958" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:23.958" endtime="20231128 22:15:23.959"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:23.959" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:23.959" endtime="20231128 22:15:23.960"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:23.960" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:23.960" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:23.960" endtime="20231128 22:15:23.961"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.961" endtime="20231128 22:15:23.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.962" endtime="20231128 22:15:23.962"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.961" endtime="20231128 22:15:23.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.963" endtime="20231128 22:15:23.963"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.964" endtime="20231128 22:15:23.964"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.964" endtime="20231128 22:15:23.964"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.963" endtime="20231128 22:15:23.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.965" endtime="20231128 22:15:23.966"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.968" endtime="20231128 22:15:23.969"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.965" endtime="20231128 22:15:23.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.971" endtime="20231128 22:15:23.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.972" endtime="20231128 22:15:23.973"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.970" endtime="20231128 22:15:23.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.974" endtime="20231128 22:15:23.974"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.973" endtime="20231128 22:15:23.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:23.975" endtime="20231128 22:15:23.975"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.975" endtime="20231128 22:15:23.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.976" endtime="20231128 22:15:23.977"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.977" endtime="20231128 22:15:23.978"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.978" endtime="20231128 22:15:23.979"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.976" endtime="20231128 22:15:23.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.979" endtime="20231128 22:15:23.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.979" endtime="20231128 22:15:23.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.981" endtime="20231128 22:15:23.981"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.980" endtime="20231128 22:15:23.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.984" endtime="20231128 22:15:23.985"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.981" endtime="20231128 22:15:23.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.986" endtime="20231128 22:15:23.987"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.986" endtime="20231128 22:15:23.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:23.989" endtime="20231128 22:15:23.989"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:23.988" endtime="20231128 22:15:23.990"/>
</branch>
<status status="PASS" starttime="20231128 22:15:23.961" endtime="20231128 22:15:23.990"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:23.990" level="INFO">Length is 5</msg>
<msg timestamp="20231128 22:15:23.991" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231128 22:15:23.990" endtime="20231128 22:15:23.991"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:23.992" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:23.992" endtime="20231128 22:15:23.992"/>
</kw>
<status status="PASS" starttime="20231128 22:15:23.991" endtime="20231128 22:15:23.993"/>
</branch>
<status status="PASS" starttime="20231128 22:15:23.991" endtime="20231128 22:15:23.993"/>
</if>
<msg timestamp="20231128 22:15:23.993" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:23.953" endtime="20231128 22:15:23.993"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231128 22:15:23.994" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231128 22:15:23.993" endtime="20231128 22:15:23.994"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:23.995" endtime="20231128 22:15:24.139"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231128 22:15:24.142" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231128 22:15:24.140" endtime="20231128 22:15:24.142"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:24.145" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:24.143" endtime="20231128 22:15:24.228"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:24.229" endtime="20231128 22:15:24.427"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:24.428" level="INFO">Length is 5</msg>
<msg timestamp="20231128 22:15:24.428" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231128 22:15:24.427" endtime="20231128 22:15:24.428"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:24.430" level="INFO">${STATE["Chuyên mục"]} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:24.429" endtime="20231128 22:15:24.430"/>
</kw>
<status status="PASS" starttime="20231128 22:15:24.429" endtime="20231128 22:15:24.430"/>
</branch>
<status status="PASS" starttime="20231128 22:15:24.429" endtime="20231128 22:15:24.431"/>
</if>
<status status="PASS" starttime="20231128 22:15:23.952" endtime="20231128 22:15:24.431"/>
</kw>
<kw name="Select file in &quot;Ảnh cover&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231128 22:15:24.437" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh cover"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231128 22:15:24.432" endtime="20231128 22:15:24.437"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231128 22:15:24.439" endtime="20231128 22:15:24.486"/>
</kw>
<status status="PASS" starttime="20231128 22:15:24.431" endtime="20231128 22:15:24.487"/>
</kw>
<kw name="Select file in &quot;Ảnh thumbnail&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231128 22:15:24.491" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh thumbnail"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231128 22:15:24.489" endtime="20231128 22:15:24.492"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231128 22:15:24.493" endtime="20231128 22:15:24.562"/>
</kw>
<status status="PASS" starttime="20231128 22:15:24.488" endtime="20231128 22:15:24.562"/>
</kw>
<kw name="Click radio &quot;Định dạng bài viết&quot; in line &quot;Longform&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231128 22:15:24.568" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Định dạng bài viết"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), ...</msg>
<status status="PASS" starttime="20231128 22:15:24.565" endtime="20231128 22:15:24.568"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:24.569" endtime="20231128 22:15:24.806"/>
</kw>
<status status="PASS" starttime="20231128 22:15:24.563" endtime="20231128 22:15:24.807"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Background Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:24.911" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:24.810" endtime="20231128 22:15:24.911"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:24.912" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:24.911" endtime="20231128 22:15:24.912"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:24.928" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:24.912" endtime="20231128 22:15:24.929"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:24.930" endtime="20231128 22:15:24.931"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.930" endtime="20231128 22:15:24.931"/>
</branch>
<status status="PASS" starttime="20231128 22:15:24.929" endtime="20231128 22:15:24.932"/>
</if>
<status status="PASS" starttime="20231128 22:15:24.809" endtime="20231128 22:15:24.935"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:24.940" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:24.939" endtime="20231128 22:15:24.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:24.942" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:24.942" endtime="20231128 22:15:24.943"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:24.944" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:24.943" endtime="20231128 22:15:24.944"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:24.945" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:24.945" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:24.945" endtime="20231128 22:15:24.945"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:24.946" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:24.946" endtime="20231128 22:15:24.946"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:24.947" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:24.947" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:24.947" endtime="20231128 22:15:24.947"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.948" endtime="20231128 22:15:24.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.952" endtime="20231128 22:15:24.954"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.948" endtime="20231128 22:15:24.954"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.956" endtime="20231128 22:15:24.956"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.957" endtime="20231128 22:15:24.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.958" endtime="20231128 22:15:24.959"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.955" endtime="20231128 22:15:24.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.960" endtime="20231128 22:15:24.961"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.961" endtime="20231128 22:15:24.961"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.960" endtime="20231128 22:15:24.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.962" endtime="20231128 22:15:24.962"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.963" endtime="20231128 22:15:24.963"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.962" endtime="20231128 22:15:24.963"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.964" endtime="20231128 22:15:24.964"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.963" endtime="20231128 22:15:24.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:24.965" endtime="20231128 22:15:24.969"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.964" endtime="20231128 22:15:24.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.972" endtime="20231128 22:15:24.972"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.973" endtime="20231128 22:15:24.974"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.975" endtime="20231128 22:15:24.975"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.971" endtime="20231128 22:15:24.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231128 22:15:24.976" level="INFO">${new_text} = #996666</msg>
<status status="PASS" starttime="20231128 22:15:24.976" endtime="20231128 22:15:24.977"/>
</kw>
<status status="PASS" starttime="20231128 22:15:24.976" endtime="20231128 22:15:24.977"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.977" endtime="20231128 22:15:24.978"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.977" endtime="20231128 22:15:24.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.978" endtime="20231128 22:15:24.979"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.978" endtime="20231128 22:15:24.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.979" endtime="20231128 22:15:24.979"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.979" endtime="20231128 22:15:24.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:24.980" endtime="20231128 22:15:24.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:24.980" endtime="20231128 22:15:24.981"/>
</branch>
<status status="PASS" starttime="20231128 22:15:24.948" endtime="20231128 22:15:24.981"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:24.981" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:24.982" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:24.981" endtime="20231128 22:15:24.986"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:24.990" level="INFO">${text} = #996666</msg>
<status status="PASS" starttime="20231128 22:15:24.989" endtime="20231128 22:15:24.990"/>
</kw>
<status status="PASS" starttime="20231128 22:15:24.987" endtime="20231128 22:15:24.990"/>
</branch>
<status status="PASS" starttime="20231128 22:15:24.987" endtime="20231128 22:15:24.991"/>
</if>
<msg timestamp="20231128 22:15:24.991" level="INFO">${text} = #996666</msg>
<status status="PASS" starttime="20231128 22:15:24.937" endtime="20231128 22:15:24.991"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:24.992" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Background Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:24.991" endtime="20231128 22:15:24.992"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:24.992" endtime="20231128 22:15:25.153"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:25.154" endtime="20231128 22:15:25.215"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:25.222" level="INFO">Fills the text '#996666' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:25.220" endtime="20231128 22:15:25.285"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:25.354" level="INFO">Text: '#996666'</msg>
<msg timestamp="20231128 22:15:25.354" level="INFO">${condition} = #996666</msg>
<status status="PASS" starttime="20231128 22:15:25.286" endtime="20231128 22:15:25.355"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.357" endtime="20231128 22:15:25.358"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.359" endtime="20231128 22:15:25.360"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.355" endtime="20231128 22:15:25.360"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:25.355" endtime="20231128 22:15:25.361"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:25.362" endtime="20231128 22:15:25.427"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:25.429" level="INFO">Length is 7</msg>
<msg timestamp="20231128 22:15:25.430" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231128 22:15:25.428" endtime="20231128 22:15:25.430"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:25.437" level="INFO">${STATE["Background Color"]} = #996666</msg>
<status status="PASS" starttime="20231128 22:15:25.435" endtime="20231128 22:15:25.437"/>
</kw>
<status status="PASS" starttime="20231128 22:15:25.431" endtime="20231128 22:15:25.438"/>
</branch>
<status status="PASS" starttime="20231128 22:15:25.431" endtime="20231128 22:15:25.438"/>
</if>
<status status="PASS" starttime="20231128 22:15:24.808" endtime="20231128 22:15:25.439"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Title Fore Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:25.545" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:25.443" endtime="20231128 22:15:25.545"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:25.546" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:25.545" endtime="20231128 22:15:25.546"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:25.557" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:25.547" endtime="20231128 22:15:25.558"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:25.560" endtime="20231128 22:15:25.560"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.559" endtime="20231128 22:15:25.561"/>
</branch>
<status status="PASS" starttime="20231128 22:15:25.558" endtime="20231128 22:15:25.562"/>
</if>
<status status="PASS" starttime="20231128 22:15:25.441" endtime="20231128 22:15:25.562"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:25.564" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:25.564" endtime="20231128 22:15:25.564"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:25.568" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:25.565" endtime="20231128 22:15:25.569"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:25.571" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:25.570" endtime="20231128 22:15:25.571"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:25.572" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:25.573" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:25.571" endtime="20231128 22:15:25.573"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:25.574" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:25.573" endtime="20231128 22:15:25.574"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:25.575" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:25.575" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:25.574" endtime="20231128 22:15:25.575"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.576" endtime="20231128 22:15:25.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.577" endtime="20231128 22:15:25.577"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.575" endtime="20231128 22:15:25.578"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.579" endtime="20231128 22:15:25.579"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.580" endtime="20231128 22:15:25.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.581" endtime="20231128 22:15:25.581"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.578" endtime="20231128 22:15:25.581"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.585" endtime="20231128 22:15:25.585"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.586" endtime="20231128 22:15:25.587"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.581" endtime="20231128 22:15:25.587"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.588" endtime="20231128 22:15:25.589"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.589" endtime="20231128 22:15:25.589"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.588" endtime="20231128 22:15:25.589"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.590" endtime="20231128 22:15:25.590"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.590" endtime="20231128 22:15:25.590"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:25.591" endtime="20231128 22:15:25.592"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.591" endtime="20231128 22:15:25.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.593" endtime="20231128 22:15:25.593"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.593" endtime="20231128 22:15:25.593"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.594" endtime="20231128 22:15:25.594"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.592" endtime="20231128 22:15:25.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231128 22:15:25.595" level="INFO">${new_text} = #bbffdd</msg>
<status status="PASS" starttime="20231128 22:15:25.595" endtime="20231128 22:15:25.595"/>
</kw>
<status status="PASS" starttime="20231128 22:15:25.594" endtime="20231128 22:15:25.596"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.596" endtime="20231128 22:15:25.596"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.596" endtime="20231128 22:15:25.597"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.597" endtime="20231128 22:15:25.597"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.597" endtime="20231128 22:15:25.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.598" endtime="20231128 22:15:25.600"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.598" endtime="20231128 22:15:25.601"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.601" endtime="20231128 22:15:25.602"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.601" endtime="20231128 22:15:25.602"/>
</branch>
<status status="PASS" starttime="20231128 22:15:25.575" endtime="20231128 22:15:25.603"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:25.604" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:25.604" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:25.603" endtime="20231128 22:15:25.604"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:25.605" level="INFO">${text} = #bbffdd</msg>
<status status="PASS" starttime="20231128 22:15:25.605" endtime="20231128 22:15:25.606"/>
</kw>
<status status="PASS" starttime="20231128 22:15:25.604" endtime="20231128 22:15:25.606"/>
</branch>
<status status="PASS" starttime="20231128 22:15:25.604" endtime="20231128 22:15:25.606"/>
</if>
<msg timestamp="20231128 22:15:25.606" level="INFO">${text} = #bbffdd</msg>
<status status="PASS" starttime="20231128 22:15:25.563" endtime="20231128 22:15:25.606"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:25.608" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Title Fore Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:25.607" endtime="20231128 22:15:25.608"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:25.609" endtime="20231128 22:15:25.753"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:25.754" endtime="20231128 22:15:25.798"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:25.801" level="INFO">Fills the text '#bbffdd' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:25.799" endtime="20231128 22:15:25.863"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:25.908" level="INFO">Text: '#bbffdd'</msg>
<msg timestamp="20231128 22:15:25.909" level="INFO">${condition} = #bbffdd</msg>
<status status="PASS" starttime="20231128 22:15:25.864" endtime="20231128 22:15:25.909"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.911" endtime="20231128 22:15:25.911"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:25.912" endtime="20231128 22:15:25.912"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:25.909" endtime="20231128 22:15:25.913"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:25.909" endtime="20231128 22:15:25.913"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:25.914" endtime="20231128 22:15:25.977"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:25.979" level="INFO">Length is 7</msg>
<msg timestamp="20231128 22:15:25.979" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231128 22:15:25.978" endtime="20231128 22:15:25.979"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:25.984" level="INFO">${STATE["Title Fore Color"]} = #bbffdd</msg>
<status status="PASS" starttime="20231128 22:15:25.981" endtime="20231128 22:15:25.985"/>
</kw>
<status status="PASS" starttime="20231128 22:15:25.980" endtime="20231128 22:15:25.985"/>
</branch>
<status status="PASS" starttime="20231128 22:15:25.980" endtime="20231128 22:15:25.986"/>
</if>
<status status="PASS" starttime="20231128 22:15:25.440" endtime="20231128 22:15:25.986"/>
</kw>
<kw name="Click switch &quot;Show Title&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231128 22:15:25.989" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Show Title"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231128 22:15:25.988" endtime="20231128 22:15:25.990"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:25.991" endtime="20231128 22:15:26.113"/>
</kw>
<status status="PASS" starttime="20231128 22:15:25.987" endtime="20231128 22:15:26.114"/>
</kw>
<kw name="Click switch &quot;Ghim&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231128 22:15:26.122" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ghim"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231128 22:15:26.119" endtime="20231128 22:15:26.122"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:26.123" endtime="20231128 22:15:26.275"/>
</kw>
<status status="PASS" starttime="20231128 22:15:26.116" endtime="20231128 22:15:26.275"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:26.378" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:26.277" endtime="20231128 22:15:26.378"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:26.379" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:26.379" endtime="20231128 22:15:26.379"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:26.401" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:26.379" endtime="20231128 22:15:26.401"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:26.403" endtime="20231128 22:15:26.404"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.403" endtime="20231128 22:15:26.404"/>
</branch>
<status status="PASS" starttime="20231128 22:15:26.402" endtime="20231128 22:15:26.404"/>
</if>
<status status="PASS" starttime="20231128 22:15:26.276" endtime="20231128 22:15:26.405"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:26.408" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:26.407" endtime="20231128 22:15:26.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:26.410" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:26.409" endtime="20231128 22:15:26.410"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:26.411" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:26.411" endtime="20231128 22:15:26.412"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:26.412" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:26.413" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:26.412" endtime="20231128 22:15:26.413"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:26.414" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:26.413" endtime="20231128 22:15:26.414"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:26.414" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:26.415" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:26.414" endtime="20231128 22:15:26.415"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.420" endtime="20231128 22:15:26.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.422" endtime="20231128 22:15:26.423"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.415" endtime="20231128 22:15:26.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.424" endtime="20231128 22:15:26.424"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.425" endtime="20231128 22:15:26.425"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.426" endtime="20231128 22:15:26.426"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.424" endtime="20231128 22:15:26.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.427" endtime="20231128 22:15:26.427"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.427" endtime="20231128 22:15:26.428"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.426" endtime="20231128 22:15:26.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.428" endtime="20231128 22:15:26.429"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.429" endtime="20231128 22:15:26.429"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.428" endtime="20231128 22:15:26.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.430" endtime="20231128 22:15:26.430"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.430" endtime="20231128 22:15:26.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:26.431" endtime="20231128 22:15:26.432"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.431" endtime="20231128 22:15:26.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.439" endtime="20231128 22:15:26.439"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.440" endtime="20231128 22:15:26.441"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.441" endtime="20231128 22:15:26.442"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.437" endtime="20231128 22:15:26.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.443" endtime="20231128 22:15:26.443"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.442" endtime="20231128 22:15:26.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.444" endtime="20231128 22:15:26.445"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.444" endtime="20231128 22:15:26.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.446" endtime="20231128 22:15:26.447"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.445" endtime="20231128 22:15:26.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.448" endtime="20231128 22:15:26.448"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.447" endtime="20231128 22:15:26.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.453" endtime="20231128 22:15:26.454"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.452" endtime="20231128 22:15:26.455"/>
</branch>
<status status="PASS" starttime="20231128 22:15:26.415" endtime="20231128 22:15:26.455"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:26.456" level="INFO">Length is 13</msg>
<msg timestamp="20231128 22:15:26.457" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231128 22:15:26.456" endtime="20231128 22:15:26.457"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:26.460" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:26.458" endtime="20231128 22:15:26.460"/>
</kw>
<status status="PASS" starttime="20231128 22:15:26.458" endtime="20231128 22:15:26.460"/>
</branch>
<status status="PASS" starttime="20231128 22:15:26.457" endtime="20231128 22:15:26.460"/>
</if>
<msg timestamp="20231128 22:15:26.461" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:26.406" endtime="20231128 22:15:26.461"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:26.462" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:26.461" endtime="20231128 22:15:26.462"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:26.462" endtime="20231128 22:15:26.598"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:26.602" endtime="20231128 22:15:26.643"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:26.645" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:26.644" endtime="20231128 22:15:26.715"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:26.757" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231128 22:15:26.758" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:26.717" endtime="20231128 22:15:26.758"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.760" endtime="20231128 22:15:26.760"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.760" endtime="20231128 22:15:26.761"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.758" endtime="20231128 22:15:26.761"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:26.758" endtime="20231128 22:15:26.762"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:26.762" endtime="20231128 22:15:26.827"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:26.829" level="INFO">Length is 13</msg>
<msg timestamp="20231128 22:15:26.830" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231128 22:15:26.828" endtime="20231128 22:15:26.830"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:26.837" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231128 22:15:26.836" endtime="20231128 22:15:26.838"/>
</kw>
<status status="PASS" starttime="20231128 22:15:26.831" endtime="20231128 22:15:26.838"/>
</branch>
<status status="PASS" starttime="20231128 22:15:26.831" endtime="20231128 22:15:26.839"/>
</if>
<status status="PASS" starttime="20231128 22:15:26.276" endtime="20231128 22:15:26.839"/>
</kw>
<kw name="Enter &quot;text&quot; in textarea &quot;Custom CSS&quot; with &quot;{color:1px;}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:26.944" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:26.843" endtime="20231128 22:15:26.944"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:26.946" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:26.945" endtime="20231128 22:15:26.947"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:26.960" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:26.948" endtime="20231128 22:15:26.961"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:26.962" endtime="20231128 22:15:26.962"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.961" endtime="20231128 22:15:26.963"/>
</branch>
<status status="PASS" starttime="20231128 22:15:26.961" endtime="20231128 22:15:26.963"/>
</if>
<status status="PASS" starttime="20231128 22:15:26.842" endtime="20231128 22:15:26.964"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:26.967" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:26.966" endtime="20231128 22:15:26.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:26.969" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:26.969" endtime="20231128 22:15:26.970"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:26.972" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:26.971" endtime="20231128 22:15:26.972"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:26.974" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:26.974" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:26.973" endtime="20231128 22:15:26.975"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:26.977" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:26.975" endtime="20231128 22:15:26.977"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:26.979" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:26.979" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:26.978" endtime="20231128 22:15:26.980"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.982" endtime="20231128 22:15:26.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.984" endtime="20231128 22:15:26.985"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.980" endtime="20231128 22:15:26.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.987" endtime="20231128 22:15:26.988"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.989" endtime="20231128 22:15:26.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.990" endtime="20231128 22:15:26.991"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.986" endtime="20231128 22:15:26.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.993" endtime="20231128 22:15:26.993"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.994" endtime="20231128 22:15:26.995"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.992" endtime="20231128 22:15:26.996"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.997" endtime="20231128 22:15:26.998"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:26.999" endtime="20231128 22:15:27.001"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:26.996" endtime="20231128 22:15:27.001"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.014" endtime="20231128 22:15:27.014"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.012" endtime="20231128 22:15:27.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:27.018" endtime="20231128 22:15:27.019"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.017" endtime="20231128 22:15:27.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.021" endtime="20231128 22:15:27.022"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.023" endtime="20231128 22:15:27.024"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.025" endtime="20231128 22:15:27.026"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.020" endtime="20231128 22:15:27.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.029" endtime="20231128 22:15:27.030"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.027" endtime="20231128 22:15:27.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.033" endtime="20231128 22:15:27.034"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.031" endtime="20231128 22:15:27.035"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.036" endtime="20231128 22:15:27.037"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.035" endtime="20231128 22:15:27.038"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.039" endtime="20231128 22:15:27.040"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.038" endtime="20231128 22:15:27.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.042" endtime="20231128 22:15:27.043"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.041" endtime="20231128 22:15:27.043"/>
</branch>
<status status="PASS" starttime="20231128 22:15:26.980" endtime="20231128 22:15:27.044"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:27.055" level="INFO">Length is 12</msg>
<msg timestamp="20231128 22:15:27.056" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231128 22:15:27.045" endtime="20231128 22:15:27.056"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:27.078" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:27.058" endtime="20231128 22:15:27.079"/>
</kw>
<status status="PASS" starttime="20231128 22:15:27.057" endtime="20231128 22:15:27.080"/>
</branch>
<status status="PASS" starttime="20231128 22:15:27.057" endtime="20231128 22:15:27.081"/>
</if>
<msg timestamp="20231128 22:15:27.086" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:26.964" endtime="20231128 22:15:27.086"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:27.090" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom CSS"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:27.087" endtime="20231128 22:15:27.090"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:27.091" endtime="20231128 22:15:27.147"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:27.150" level="INFO">Fills the text '{color:1px;}' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:27.148" endtime="20231128 22:15:27.203"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:27.244" level="INFO">Text: '{color:1px;}'</msg>
<msg timestamp="20231128 22:15:27.245" level="INFO">${condition} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:27.204" endtime="20231128 22:15:27.246"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.251" endtime="20231128 22:15:27.252"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.253" endtime="20231128 22:15:27.254"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.246" endtime="20231128 22:15:27.255"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:27.246" endtime="20231128 22:15:27.255"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:27.257" endtime="20231128 22:15:27.328"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:27.329" level="INFO">Length is 12</msg>
<msg timestamp="20231128 22:15:27.330" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231128 22:15:27.329" endtime="20231128 22:15:27.330"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:27.337" level="INFO">${STATE["Custom CSS"]} = {color:1px;}</msg>
<status status="PASS" starttime="20231128 22:15:27.335" endtime="20231128 22:15:27.338"/>
</kw>
<status status="PASS" starttime="20231128 22:15:27.331" endtime="20231128 22:15:27.338"/>
</branch>
<status status="PASS" starttime="20231128 22:15:27.331" endtime="20231128 22:15:27.339"/>
</if>
<status status="PASS" starttime="20231128 22:15:26.840" endtime="20231128 22:15:27.340"/>
</kw>
<kw name="Click &quot;English&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:27.343" endtime="20231128 22:15:27.622"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:27.725" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:27.624" endtime="20231128 22:15:27.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:27.726" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:27.725" endtime="20231128 22:15:27.726"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:27.740" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:27.727" endtime="20231128 22:15:27.740"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:27.743" endtime="20231128 22:15:27.744"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.742" endtime="20231128 22:15:27.744"/>
</branch>
<status status="PASS" starttime="20231128 22:15:27.742" endtime="20231128 22:15:27.745"/>
</if>
<status status="PASS" starttime="20231128 22:15:27.623" endtime="20231128 22:15:27.745"/>
</kw>
<status status="PASS" starttime="20231128 22:15:27.341" endtime="20231128 22:15:27.746"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:27.853" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:27.751" endtime="20231128 22:15:27.853"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:27.854" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:27.853" endtime="20231128 22:15:27.854"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:27.867" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:27.854" endtime="20231128 22:15:27.868"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:27.870" endtime="20231128 22:15:27.870"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.868" endtime="20231128 22:15:27.871"/>
</branch>
<status status="PASS" starttime="20231128 22:15:27.868" endtime="20231128 22:15:27.871"/>
</if>
<status status="PASS" starttime="20231128 22:15:27.748" endtime="20231128 22:15:27.872"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:27.876" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:27.875" endtime="20231128 22:15:27.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:27.877" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:27.877" endtime="20231128 22:15:27.878"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:27.880" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:27.879" endtime="20231128 22:15:27.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:27.881" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:27.881" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:27.880" endtime="20231128 22:15:27.881"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:27.885" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:27.883" endtime="20231128 22:15:27.886"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:27.887" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:27.887" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:27.886" endtime="20231128 22:15:27.887"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.888" endtime="20231128 22:15:27.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.889" endtime="20231128 22:15:27.889"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.888" endtime="20231128 22:15:27.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:27.891" level="INFO">${random} = Ea reprehenderit explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:27.890" endtime="20231128 22:15:27.891"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231128 22:15:27.892" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231128 22:15:27.891" endtime="20231128 22:15:27.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:27.893" level="INFO">${new_text} = PO_11 Ea reprehenderit explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:27.892" endtime="20231128 22:15:27.894"/>
</kw>
<status status="PASS" starttime="20231128 22:15:27.890" endtime="20231128 22:15:27.894"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.895" endtime="20231128 22:15:27.896"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.896" endtime="20231128 22:15:27.897"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.894" endtime="20231128 22:15:27.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.899" endtime="20231128 22:15:27.901"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.901" endtime="20231128 22:15:27.901"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.898" endtime="20231128 22:15:27.902"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.902" endtime="20231128 22:15:27.903"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.902" endtime="20231128 22:15:27.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:27.904" endtime="20231128 22:15:27.904"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.904" endtime="20231128 22:15:27.905"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.905" endtime="20231128 22:15:27.906"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.906" endtime="20231128 22:15:27.906"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.907" endtime="20231128 22:15:27.907"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.905" endtime="20231128 22:15:27.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.908" endtime="20231128 22:15:27.908"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.907" endtime="20231128 22:15:27.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.910" endtime="20231128 22:15:27.912"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.908" endtime="20231128 22:15:27.912"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.913" endtime="20231128 22:15:27.914"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.912" endtime="20231128 22:15:27.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.919" endtime="20231128 22:15:27.919"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.915" endtime="20231128 22:15:27.920"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:27.920" endtime="20231128 22:15:27.920"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:27.920" endtime="20231128 22:15:27.921"/>
</branch>
<status status="PASS" starttime="20231128 22:15:27.888" endtime="20231128 22:15:27.921"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:27.922" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:27.922" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:27.921" endtime="20231128 22:15:27.922"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:27.923" level="INFO">${text} = PO_11 Ea reprehenderit explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:27.923" endtime="20231128 22:15:27.923"/>
</kw>
<status status="PASS" starttime="20231128 22:15:27.922" endtime="20231128 22:15:27.924"/>
</branch>
<status status="PASS" starttime="20231128 22:15:27.922" endtime="20231128 22:15:27.925"/>
</if>
<msg timestamp="20231128 22:15:27.925" level="INFO">${text} = PO_11 Ea reprehenderit explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:27.873" endtime="20231128 22:15:27.925"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:27.927" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:27.926" endtime="20231128 22:15:27.927"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:27.928" endtime="20231128 22:15:28.014"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:28.016" endtime="20231128 22:15:28.061"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:28.063" level="INFO">Fills the text 'PO_11 Ea reprehenderit explicabo.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:28.062" endtime="20231128 22:15:28.135"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:28.178" level="INFO">Text: 'PO_11 Ea reprehenderit explicabo.'</msg>
<msg timestamp="20231128 22:15:28.179" level="INFO">${condition} = PO_11 Ea reprehenderit explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:28.138" endtime="20231128 22:15:28.179"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.184" endtime="20231128 22:15:28.185"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.186" endtime="20231128 22:15:28.187"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.180" endtime="20231128 22:15:28.188"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:28.180" endtime="20231128 22:15:28.188"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:28.189" endtime="20231128 22:15:28.260"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.262" level="INFO">Length is 33</msg>
<msg timestamp="20231128 22:15:28.262" level="INFO">${cnt} = 33</msg>
<status status="PASS" starttime="20231128 22:15:28.261" endtime="20231128 22:15:28.262"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:28.267" level="INFO">${STATE["Tiêu đề"]} = PO_11 Ea reprehenderit explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:28.264" endtime="20231128 22:15:28.268"/>
</kw>
<status status="PASS" starttime="20231128 22:15:28.263" endtime="20231128 22:15:28.268"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.263" endtime="20231128 22:15:28.269"/>
</if>
<status status="PASS" starttime="20231128 22:15:27.747" endtime="20231128 22:15:28.270"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:28.374" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:28.273" endtime="20231128 22:15:28.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:28.376" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:28.375" endtime="20231128 22:15:28.376"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:28.396" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:28.377" endtime="20231128 22:15:28.397"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:28.397" endtime="20231128 22:15:28.398"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.397" endtime="20231128 22:15:28.398"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.397" endtime="20231128 22:15:28.399"/>
</if>
<status status="PASS" starttime="20231128 22:15:28.272" endtime="20231128 22:15:28.399"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:28.401" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:28.400" endtime="20231128 22:15:28.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:28.402" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:28.402" endtime="20231128 22:15:28.402"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:28.403" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:28.403" endtime="20231128 22:15:28.403"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.404" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:28.404" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:28.403" endtime="20231128 22:15:28.404"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:28.405" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:28.405" endtime="20231128 22:15:28.405"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.406" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:28.406" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:28.405" endtime="20231128 22:15:28.406"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.407" endtime="20231128 22:15:28.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.408" endtime="20231128 22:15:28.408"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.406" endtime="20231128 22:15:28.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.409" endtime="20231128 22:15:28.409"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.410" endtime="20231128 22:15:28.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.411" endtime="20231128 22:15:28.411"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.408" endtime="20231128 22:15:28.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.412" endtime="20231128 22:15:28.412"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.413" endtime="20231128 22:15:28.413"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.412" endtime="20231128 22:15:28.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.414" endtime="20231128 22:15:28.414"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.415" endtime="20231128 22:15:28.416"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.413" endtime="20231128 22:15:28.416"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.417" endtime="20231128 22:15:28.417"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.416" endtime="20231128 22:15:28.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:28.418" endtime="20231128 22:15:28.419"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.418" endtime="20231128 22:15:28.419"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.420" endtime="20231128 22:15:28.420"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.420" endtime="20231128 22:15:28.421"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.421" endtime="20231128 22:15:28.421"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.419" endtime="20231128 22:15:28.422"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.422" endtime="20231128 22:15:28.423"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.422" endtime="20231128 22:15:28.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.424" endtime="20231128 22:15:28.424"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.423" endtime="20231128 22:15:28.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.425" endtime="20231128 22:15:28.425"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.425" endtime="20231128 22:15:28.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.427" endtime="20231128 22:15:28.428"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.426" endtime="20231128 22:15:28.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:28.429" level="INFO">${new_text} = Hic accusantium expedita praesentium tempora numquam totam debitis.</msg>
<status status="PASS" starttime="20231128 22:15:28.429" endtime="20231128 22:15:28.429"/>
</kw>
<status status="PASS" starttime="20231128 22:15:28.428" endtime="20231128 22:15:28.429"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.406" endtime="20231128 22:15:28.430"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.430" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:28.430" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:28.430" endtime="20231128 22:15:28.431"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:28.433" level="INFO">${text} = Hic accusantium expedita praesentium tempora numquam totam debitis.</msg>
<status status="PASS" starttime="20231128 22:15:28.433" endtime="20231128 22:15:28.434"/>
</kw>
<status status="PASS" starttime="20231128 22:15:28.431" endtime="20231128 22:15:28.434"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.431" endtime="20231128 22:15:28.434"/>
</if>
<msg timestamp="20231128 22:15:28.434" level="INFO">${text} = Hic accusantium expedita praesentium tempora numquam totam debitis.</msg>
<status status="PASS" starttime="20231128 22:15:28.400" endtime="20231128 22:15:28.434"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:28.435" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:28.435" endtime="20231128 22:15:28.436"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:28.436" endtime="20231128 22:15:28.547"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:28.548" endtime="20231128 22:15:28.591"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:28.593" level="INFO">Fills the text 'Hic accusantium expedita praesentium tempora numquam totam debitis.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:28.592" endtime="20231128 22:15:28.667"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:28.703" level="INFO">Text: 'Hic accusantium expedita praesentium tempora numquam totam debitis.'</msg>
<msg timestamp="20231128 22:15:28.704" level="INFO">${condition} = Hic accusantium expedita praesentium tempora numquam totam debitis.</msg>
<status status="PASS" starttime="20231128 22:15:28.668" endtime="20231128 22:15:28.704"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.707" endtime="20231128 22:15:28.707"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.708" endtime="20231128 22:15:28.709"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.705" endtime="20231128 22:15:28.709"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:28.705" endtime="20231128 22:15:28.710"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:28.711" endtime="20231128 22:15:28.776"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.777" level="INFO">Length is 67</msg>
<msg timestamp="20231128 22:15:28.778" level="INFO">${cnt} = 67</msg>
<status status="PASS" starttime="20231128 22:15:28.776" endtime="20231128 22:15:28.778"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:28.781" level="INFO">${STATE["Tác giả"]} = Hic accusantium expedita praesentium tempora numquam totam debitis.</msg>
<status status="PASS" starttime="20231128 22:15:28.780" endtime="20231128 22:15:28.782"/>
</kw>
<status status="PASS" starttime="20231128 22:15:28.779" endtime="20231128 22:15:28.783"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.778" endtime="20231128 22:15:28.783"/>
</if>
<status status="PASS" starttime="20231128 22:15:28.270" endtime="20231128 22:15:28.784"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:28.888" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:28.786" endtime="20231128 22:15:28.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:28.890" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:28.889" endtime="20231128 22:15:28.890"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:28.901" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:28.891" endtime="20231128 22:15:28.901"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:28.903" endtime="20231128 22:15:28.903"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.902" endtime="20231128 22:15:28.903"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.902" endtime="20231128 22:15:28.904"/>
</if>
<status status="PASS" starttime="20231128 22:15:28.785" endtime="20231128 22:15:28.904"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:28.906" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:28.906" endtime="20231128 22:15:28.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:28.908" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:28.907" endtime="20231128 22:15:28.908"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:28.910" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:28.909" endtime="20231128 22:15:28.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.913" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:28.914" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:28.912" endtime="20231128 22:15:28.914"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:28.918" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:28.916" endtime="20231128 22:15:28.918"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.920" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:28.921" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:28.919" endtime="20231128 22:15:28.921"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.923" endtime="20231128 22:15:28.923"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.924" endtime="20231128 22:15:28.924"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.922" endtime="20231128 22:15:28.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.926" endtime="20231128 22:15:28.927"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.927" endtime="20231128 22:15:28.928"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.929" endtime="20231128 22:15:28.929"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.925" endtime="20231128 22:15:28.930"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.930" endtime="20231128 22:15:28.931"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.931" endtime="20231128 22:15:28.931"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.930" endtime="20231128 22:15:28.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.935" endtime="20231128 22:15:28.935"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.936" endtime="20231128 22:15:28.937"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.934" endtime="20231128 22:15:28.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.938" endtime="20231128 22:15:28.939"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.938" endtime="20231128 22:15:28.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:28.941" endtime="20231128 22:15:28.941"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.940" endtime="20231128 22:15:28.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.942" endtime="20231128 22:15:28.943"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.943" endtime="20231128 22:15:28.943"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.944" endtime="20231128 22:15:28.944"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.942" endtime="20231128 22:15:28.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.946" endtime="20231128 22:15:28.946"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.945" endtime="20231128 22:15:28.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.948" endtime="20231128 22:15:28.948"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.947" endtime="20231128 22:15:28.949"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.951" endtime="20231128 22:15:28.951"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.950" endtime="20231128 22:15:28.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:28.953" endtime="20231128 22:15:28.953"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:28.952" endtime="20231128 22:15:28.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:28.954" level="INFO">${new_text} = Rerum iusto ducimus exercitationem at.</msg>
<status status="PASS" starttime="20231128 22:15:28.954" endtime="20231128 22:15:28.955"/>
</kw>
<status status="PASS" starttime="20231128 22:15:28.953" endtime="20231128 22:15:28.955"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.921" endtime="20231128 22:15:28.955"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:28.956" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:28.956" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:28.955" endtime="20231128 22:15:28.956"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:28.958" level="INFO">${text} = Rerum iusto ducimus exercitationem at.</msg>
<status status="PASS" starttime="20231128 22:15:28.958" endtime="20231128 22:15:28.959"/>
</kw>
<status status="PASS" starttime="20231128 22:15:28.957" endtime="20231128 22:15:28.959"/>
</branch>
<status status="PASS" starttime="20231128 22:15:28.957" endtime="20231128 22:15:28.959"/>
</if>
<msg timestamp="20231128 22:15:28.959" level="INFO">${text} = Rerum iusto ducimus exercitationem at.</msg>
<status status="PASS" starttime="20231128 22:15:28.905" endtime="20231128 22:15:28.960"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:28.961" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:28.960" endtime="20231128 22:15:28.961"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:28.961" endtime="20231128 22:15:29.147"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:29.149" endtime="20231128 22:15:29.194"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:29.196" level="INFO">Fills the text 'Rerum iusto ducimus exercitationem at.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:29.195" endtime="20231128 22:15:29.264"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:29.305" level="INFO">Text: 'Rerum iusto ducimus exercitationem at.'</msg>
<msg timestamp="20231128 22:15:29.305" level="INFO">${condition} = Rerum iusto ducimus exercitationem at.</msg>
<status status="PASS" starttime="20231128 22:15:29.267" endtime="20231128 22:15:29.306"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.308" endtime="20231128 22:15:29.308"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.309" endtime="20231128 22:15:29.309"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.306" endtime="20231128 22:15:29.310"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:29.306" endtime="20231128 22:15:29.310"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:29.311" endtime="20231128 22:15:29.377"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.379" level="INFO">Length is 38</msg>
<msg timestamp="20231128 22:15:29.379" level="INFO">${cnt} = 38</msg>
<status status="PASS" starttime="20231128 22:15:29.378" endtime="20231128 22:15:29.380"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:29.385" level="INFO">${STATE["Mô tả ảnh cover"]} = Rerum iusto ducimus exercitationem at.</msg>
<status status="PASS" starttime="20231128 22:15:29.382" endtime="20231128 22:15:29.385"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.380" endtime="20231128 22:15:29.386"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.380" endtime="20231128 22:15:29.387"/>
</if>
<status status="PASS" starttime="20231128 22:15:28.784" endtime="20231128 22:15:29.387"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:29.491" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:29.391" endtime="20231128 22:15:29.491"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:29.492" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:29.491" endtime="20231128 22:15:29.492"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:29.501" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:29.492" endtime="20231128 22:15:29.502"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:29.503" endtime="20231128 22:15:29.504"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.502" endtime="20231128 22:15:29.505"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.502" endtime="20231128 22:15:29.505"/>
</if>
<status status="PASS" starttime="20231128 22:15:29.389" endtime="20231128 22:15:29.506"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:29.508" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:29.508" endtime="20231128 22:15:29.508"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:29.509" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:29.509" endtime="20231128 22:15:29.509"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:29.511" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:29.510" endtime="20231128 22:15:29.511"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.512" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:29.512" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:29.512" endtime="20231128 22:15:29.513"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:29.514" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:29.513" endtime="20231128 22:15:29.514"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.515" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:29.515" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:29.514" endtime="20231128 22:15:29.516"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.518" endtime="20231128 22:15:29.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.519" endtime="20231128 22:15:29.520"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.517" endtime="20231128 22:15:29.520"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.521" endtime="20231128 22:15:29.521"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.521" endtime="20231128 22:15:29.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.522" endtime="20231128 22:15:29.522"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.520" endtime="20231128 22:15:29.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.523" endtime="20231128 22:15:29.523"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.524" endtime="20231128 22:15:29.524"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.523" endtime="20231128 22:15:29.524"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.525" endtime="20231128 22:15:29.525"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.525" endtime="20231128 22:15:29.526"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.524" endtime="20231128 22:15:29.526"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:29.528" level="INFO">${new_text} = Sint sed ipsa sit modi. Unde animi illo maxime.</msg>
<status status="PASS" starttime="20231128 22:15:29.526" endtime="20231128 22:15:29.528"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.526" endtime="20231128 22:15:29.529"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:29.530" endtime="20231128 22:15:29.530"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.529" endtime="20231128 22:15:29.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.531" endtime="20231128 22:15:29.531"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.532" endtime="20231128 22:15:29.533"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.533" endtime="20231128 22:15:29.534"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.530" endtime="20231128 22:15:29.534"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.534" endtime="20231128 22:15:29.535"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.534" endtime="20231128 22:15:29.535"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.535" endtime="20231128 22:15:29.536"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.535" endtime="20231128 22:15:29.536"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.536" endtime="20231128 22:15:29.537"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.536" endtime="20231128 22:15:29.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.537" endtime="20231128 22:15:29.538"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.537" endtime="20231128 22:15:29.538"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.540" endtime="20231128 22:15:29.540"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.539" endtime="20231128 22:15:29.540"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.517" endtime="20231128 22:15:29.541"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.542" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:29.542" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:29.541" endtime="20231128 22:15:29.542"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:29.544" level="INFO">${text} = Sint sed ipsa sit modi. Unde animi illo maxime.</msg>
<status status="PASS" starttime="20231128 22:15:29.543" endtime="20231128 22:15:29.544"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.543" endtime="20231128 22:15:29.544"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.542" endtime="20231128 22:15:29.544"/>
</if>
<msg timestamp="20231128 22:15:29.545" level="INFO">${text} = Sint sed ipsa sit modi. Unde animi illo maxime.</msg>
<status status="PASS" starttime="20231128 22:15:29.506" endtime="20231128 22:15:29.545"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:29.546" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:29.545" endtime="20231128 22:15:29.546"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:29.546" endtime="20231128 22:15:29.595"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:29.597" level="INFO">Fills the text 'Sint sed ipsa sit modi. Unde animi illo maxime.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:29.596" endtime="20231128 22:15:29.662"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:29.703" level="INFO">Text: 'Sint sed ipsa sit modi. Unde animi illo maxime.'</msg>
<msg timestamp="20231128 22:15:29.703" level="INFO">${condition} = Sint sed ipsa sit modi. Unde animi illo maxime.</msg>
<status status="PASS" starttime="20231128 22:15:29.664" endtime="20231128 22:15:29.704"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.706" endtime="20231128 22:15:29.707"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.708" endtime="20231128 22:15:29.708"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.704" endtime="20231128 22:15:29.709"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:29.704" endtime="20231128 22:15:29.709"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:29.710" endtime="20231128 22:15:29.777"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.779" level="INFO">Length is 47</msg>
<msg timestamp="20231128 22:15:29.780" level="INFO">${cnt} = 47</msg>
<status status="PASS" starttime="20231128 22:15:29.778" endtime="20231128 22:15:29.780"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:29.785" level="INFO">${STATE["Giới thiệu"]} = Sint sed ipsa sit modi. Unde animi illo maxime.</msg>
<status status="PASS" starttime="20231128 22:15:29.783" endtime="20231128 22:15:29.785"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.782" endtime="20231128 22:15:29.786"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.781" endtime="20231128 22:15:29.786"/>
</if>
<status status="PASS" starttime="20231128 22:15:29.388" endtime="20231128 22:15:29.787"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:29.892" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:29.791" endtime="20231128 22:15:29.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:29.894" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:29.893" endtime="20231128 22:15:29.894"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:29.906" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:29.895" endtime="20231128 22:15:29.907"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:29.909" endtime="20231128 22:15:29.910"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.908" endtime="20231128 22:15:29.910"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.908" endtime="20231128 22:15:29.911"/>
</if>
<status status="PASS" starttime="20231128 22:15:29.789" endtime="20231128 22:15:29.911"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:29.914" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:29.913" endtime="20231128 22:15:29.915"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:29.918" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:29.917" endtime="20231128 22:15:29.918"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:29.921" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:29.919" endtime="20231128 22:15:29.921"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.923" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:29.924" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:29.922" endtime="20231128 22:15:29.924"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:29.927" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:29.925" endtime="20231128 22:15:29.927"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.928" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:29.929" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:29.928" endtime="20231128 22:15:29.929"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.931" endtime="20231128 22:15:29.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.934" endtime="20231128 22:15:29.935"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.930" endtime="20231128 22:15:29.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.937" endtime="20231128 22:15:29.938"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.938" endtime="20231128 22:15:29.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.940" endtime="20231128 22:15:29.940"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.936" endtime="20231128 22:15:29.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.942" endtime="20231128 22:15:29.943"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.944" endtime="20231128 22:15:29.944"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.941" endtime="20231128 22:15:29.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.947" endtime="20231128 22:15:29.947"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.948" endtime="20231128 22:15:29.950"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.945" endtime="20231128 22:15:29.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:29.968" level="INFO">${new_text} = Rem fugiat ex neque odio aspernatur. Veritatis eaque voluptatum similique ad fuga adipisci. Commodi impedit repudiandae blanditiis eveniet.</msg>
<status status="PASS" starttime="20231128 22:15:29.966" endtime="20231128 22:15:29.969"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.951" endtime="20231128 22:15:29.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:29.970" endtime="20231128 22:15:29.971"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.970" endtime="20231128 22:15:29.972"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.973" endtime="20231128 22:15:29.973"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.974" endtime="20231128 22:15:29.975"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.975" endtime="20231128 22:15:29.976"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.972" endtime="20231128 22:15:29.976"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.977" endtime="20231128 22:15:29.978"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.977" endtime="20231128 22:15:29.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.980" endtime="20231128 22:15:29.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.979" endtime="20231128 22:15:29.981"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.983" endtime="20231128 22:15:29.983"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.982" endtime="20231128 22:15:29.984"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.985" endtime="20231128 22:15:29.986"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.984" endtime="20231128 22:15:29.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:29.987" endtime="20231128 22:15:29.988"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:29.987" endtime="20231128 22:15:29.988"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.930" endtime="20231128 22:15:29.989"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:29.990" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:29.991" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:29.989" endtime="20231128 22:15:29.991"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:29.994" level="INFO">${text} = Rem fugiat ex neque odio aspernatur. Veritatis eaque voluptatum similique ad fuga adipisci. Commodi impedit repudiandae blanditiis eveniet.</msg>
<status status="PASS" starttime="20231128 22:15:29.993" endtime="20231128 22:15:29.994"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.992" endtime="20231128 22:15:29.995"/>
</branch>
<status status="PASS" starttime="20231128 22:15:29.991" endtime="20231128 22:15:29.996"/>
</if>
<msg timestamp="20231128 22:15:29.996" level="INFO">${text} = Rem fugiat ex neque odio aspernatur. Veritatis eaque voluptatum similique ad fuga adipisci. Commodi impedit repudiandae blanditiis eveniet.</msg>
<status status="PASS" starttime="20231128 22:15:29.912" endtime="20231128 22:15:30.017"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231128 22:15:30.020" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231128 22:15:30.018" endtime="20231128 22:15:30.020"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:30.021" endtime="20231128 22:15:30.087"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:30.088" level="INFO">Fills the text 'Rem fugiat ex neque odio aspernatur. Veritatis eaque voluptatum similique ad fuga adipisci. Commodi impedit repudiandae blanditiis eveniet.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:30.087" endtime="20231128 22:15:30.140"/>
</kw>
<status status="PASS" starttime="20231128 22:15:29.787" endtime="20231128 22:15:30.142"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:30.247" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:30.145" endtime="20231128 22:15:30.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:30.251" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:30.249" endtime="20231128 22:15:30.252"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:30.263" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:30.253" endtime="20231128 22:15:30.263"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:30.264" endtime="20231128 22:15:30.265"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.264" endtime="20231128 22:15:30.267"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.264" endtime="20231128 22:15:30.268"/>
</if>
<status status="PASS" starttime="20231128 22:15:30.144" endtime="20231128 22:15:30.268"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:30.272" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:30.271" endtime="20231128 22:15:30.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:30.274" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:30.273" endtime="20231128 22:15:30.274"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:30.276" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:30.275" endtime="20231128 22:15:30.276"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.278" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:30.279" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:30.277" endtime="20231128 22:15:30.279"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:30.281" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:30.280" endtime="20231128 22:15:30.281"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.287" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:30.288" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:30.286" endtime="20231128 22:15:30.288"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.290" endtime="20231128 22:15:30.291"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.292" endtime="20231128 22:15:30.293"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.289" endtime="20231128 22:15:30.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.295" endtime="20231128 22:15:30.296"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.296" endtime="20231128 22:15:30.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.298" endtime="20231128 22:15:30.301"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.294" endtime="20231128 22:15:30.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.304" endtime="20231128 22:15:30.305"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.306" endtime="20231128 22:15:30.307"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.303" endtime="20231128 22:15:30.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.309" endtime="20231128 22:15:30.310"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.310" endtime="20231128 22:15:30.322"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.308" endtime="20231128 22:15:30.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.324" endtime="20231128 22:15:30.325"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.323" endtime="20231128 22:15:30.325"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:30.327" endtime="20231128 22:15:30.328"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.326" endtime="20231128 22:15:30.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.358" endtime="20231128 22:15:30.359"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.359" endtime="20231128 22:15:30.360"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.361" endtime="20231128 22:15:30.362"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.329" endtime="20231128 22:15:30.363"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.368" endtime="20231128 22:15:30.368"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.364" endtime="20231128 22:15:30.369"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.372" endtime="20231128 22:15:30.373"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.370" endtime="20231128 22:15:30.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.375" endtime="20231128 22:15:30.376"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.374" endtime="20231128 22:15:30.376"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.378" endtime="20231128 22:15:30.378"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.377" endtime="20231128 22:15:30.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:30.384" level="INFO">${new_text} = Qui omnis numquam autem.</msg>
<status status="PASS" starttime="20231128 22:15:30.381" endtime="20231128 22:15:30.385"/>
</kw>
<status status="PASS" starttime="20231128 22:15:30.380" endtime="20231128 22:15:30.385"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.289" endtime="20231128 22:15:30.386"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.387" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:30.388" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:30.386" endtime="20231128 22:15:30.388"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:30.391" level="INFO">${text} = Qui omnis numquam autem.</msg>
<status status="PASS" starttime="20231128 22:15:30.390" endtime="20231128 22:15:30.392"/>
</kw>
<status status="PASS" starttime="20231128 22:15:30.389" endtime="20231128 22:15:30.392"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.389" endtime="20231128 22:15:30.393"/>
</if>
<msg timestamp="20231128 22:15:30.394" level="INFO">${text} = Qui omnis numquam autem.</msg>
<status status="PASS" starttime="20231128 22:15:30.269" endtime="20231128 22:15:30.394"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:30.403" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:30.395" endtime="20231128 22:15:30.403"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:30.404" endtime="20231128 22:15:30.519"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:30.520" endtime="20231128 22:15:30.568"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:30.569" level="INFO">Fills the text 'Qui omnis numquam autem.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:30.568" endtime="20231128 22:15:30.651"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:30.695" level="INFO">Text: 'Qui omnis numquam autem.'</msg>
<msg timestamp="20231128 22:15:30.695" level="INFO">${condition} = Qui omnis numquam autem.</msg>
<status status="PASS" starttime="20231128 22:15:30.652" endtime="20231128 22:15:30.696"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.697" endtime="20231128 22:15:30.698"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.699" endtime="20231128 22:15:30.700"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.696" endtime="20231128 22:15:30.700"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:30.696" endtime="20231128 22:15:30.701"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:30.702" endtime="20231128 22:15:30.776"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.777" level="INFO">Length is 24</msg>
<msg timestamp="20231128 22:15:30.777" level="INFO">${cnt} = 24</msg>
<status status="PASS" starttime="20231128 22:15:30.776" endtime="20231128 22:15:30.777"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:30.778" level="INFO">${STATE["Tiêu đề SEO"]} = Qui omnis numquam autem.</msg>
<status status="PASS" starttime="20231128 22:15:30.778" endtime="20231128 22:15:30.778"/>
</kw>
<status status="PASS" starttime="20231128 22:15:30.777" endtime="20231128 22:15:30.779"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.777" endtime="20231128 22:15:30.779"/>
</if>
<status status="PASS" starttime="20231128 22:15:30.143" endtime="20231128 22:15:30.779"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:30.881" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:30.780" endtime="20231128 22:15:30.882"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:30.884" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:30.883" endtime="20231128 22:15:30.884"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:30.894" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:30.885" endtime="20231128 22:15:30.895"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:30.896" endtime="20231128 22:15:30.896"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.896" endtime="20231128 22:15:30.897"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.895" endtime="20231128 22:15:30.897"/>
</if>
<status status="PASS" starttime="20231128 22:15:30.780" endtime="20231128 22:15:30.897"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:30.900" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:30.900" endtime="20231128 22:15:30.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:30.902" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:30.901" endtime="20231128 22:15:30.902"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:30.904" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:30.902" endtime="20231128 22:15:30.904"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.906" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:30.907" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:30.905" endtime="20231128 22:15:30.907"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:30.909" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:30.908" endtime="20231128 22:15:30.910"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.911" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:30.912" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:30.910" endtime="20231128 22:15:30.912"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.914" endtime="20231128 22:15:30.916"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.917" endtime="20231128 22:15:30.918"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.913" endtime="20231128 22:15:30.918"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.920" endtime="20231128 22:15:30.920"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.921" endtime="20231128 22:15:30.922"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.922" endtime="20231128 22:15:30.922"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.919" endtime="20231128 22:15:30.923"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.923" endtime="20231128 22:15:30.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.924" endtime="20231128 22:15:30.924"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.923" endtime="20231128 22:15:30.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.926" endtime="20231128 22:15:30.927"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.927" endtime="20231128 22:15:30.928"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.925" endtime="20231128 22:15:30.928"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.929" endtime="20231128 22:15:30.929"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.928" endtime="20231128 22:15:30.929"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:30.930" endtime="20231128 22:15:30.930"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.929" endtime="20231128 22:15:30.930"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.931" endtime="20231128 22:15:30.932"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.933" endtime="20231128 22:15:30.933"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.934" endtime="20231128 22:15:30.934"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.930" endtime="20231128 22:15:30.934"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.935" endtime="20231128 22:15:30.936"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.934" endtime="20231128 22:15:30.936"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.937" endtime="20231128 22:15:30.937"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.936" endtime="20231128 22:15:30.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.939" endtime="20231128 22:15:30.939"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.938" endtime="20231128 22:15:30.939"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:30.940" endtime="20231128 22:15:30.941"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:30.940" endtime="20231128 22:15:30.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:30.943" level="INFO">${new_text} = Dolore quia sint fugiat soluta.</msg>
<status status="PASS" starttime="20231128 22:15:30.942" endtime="20231128 22:15:30.943"/>
</kw>
<status status="PASS" starttime="20231128 22:15:30.941" endtime="20231128 22:15:30.944"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.912" endtime="20231128 22:15:30.944"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:30.945" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:30.945" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:30.944" endtime="20231128 22:15:30.945"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:30.947" level="INFO">${text} = Dolore quia sint fugiat soluta.</msg>
<status status="PASS" starttime="20231128 22:15:30.946" endtime="20231128 22:15:30.947"/>
</kw>
<status status="PASS" starttime="20231128 22:15:30.946" endtime="20231128 22:15:30.947"/>
</branch>
<status status="PASS" starttime="20231128 22:15:30.946" endtime="20231128 22:15:30.949"/>
</if>
<msg timestamp="20231128 22:15:30.949" level="INFO">${text} = Dolore quia sint fugiat soluta.</msg>
<status status="PASS" starttime="20231128 22:15:30.897" endtime="20231128 22:15:30.950"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:30.951" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:30.950" endtime="20231128 22:15:30.951"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:30.951" endtime="20231128 22:15:31.050"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:31.051" endtime="20231128 22:15:31.091"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:31.094" level="INFO">Fills the text 'Dolore quia sint fugiat soluta.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:31.093" endtime="20231128 22:15:31.165"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:31.208" level="INFO">Text: 'Dolore quia sint fugiat soluta.'</msg>
<msg timestamp="20231128 22:15:31.208" level="INFO">${condition} = Dolore quia sint fugiat soluta.</msg>
<status status="PASS" starttime="20231128 22:15:31.167" endtime="20231128 22:15:31.208"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.210" endtime="20231128 22:15:31.211"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.212" endtime="20231128 22:15:31.212"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.209" endtime="20231128 22:15:31.213"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:31.209" endtime="20231128 22:15:31.213"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:31.213" endtime="20231128 22:15:31.275"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:31.277" level="INFO">Length is 31</msg>
<msg timestamp="20231128 22:15:31.277" level="INFO">${cnt} = 31</msg>
<status status="PASS" starttime="20231128 22:15:31.276" endtime="20231128 22:15:31.277"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:31.280" level="INFO">${STATE["Từ khóa SEO"]} = Dolore quia sint fugiat soluta.</msg>
<status status="PASS" starttime="20231128 22:15:31.279" endtime="20231128 22:15:31.280"/>
</kw>
<status status="PASS" starttime="20231128 22:15:31.278" endtime="20231128 22:15:31.281"/>
</branch>
<status status="PASS" starttime="20231128 22:15:31.278" endtime="20231128 22:15:31.282"/>
</if>
<status status="PASS" starttime="20231128 22:15:30.779" endtime="20231128 22:15:31.282"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:31.387" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:31.285" endtime="20231128 22:15:31.387"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:31.389" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:31.388" endtime="20231128 22:15:31.389"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:31.399" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:31.390" endtime="20231128 22:15:31.400"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:31.401" endtime="20231128 22:15:31.401"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.401" endtime="20231128 22:15:31.402"/>
</branch>
<status status="PASS" starttime="20231128 22:15:31.400" endtime="20231128 22:15:31.402"/>
</if>
<status status="PASS" starttime="20231128 22:15:31.284" endtime="20231128 22:15:31.402"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:31.405" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:31.404" endtime="20231128 22:15:31.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:31.407" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:31.406" endtime="20231128 22:15:31.407"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:31.409" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:31.408" endtime="20231128 22:15:31.410"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:31.412" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:31.412" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:31.411" endtime="20231128 22:15:31.413"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:31.421" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:31.419" endtime="20231128 22:15:31.422"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:31.423" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:31.424" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:31.422" endtime="20231128 22:15:31.424"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.426" endtime="20231128 22:15:31.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.427" endtime="20231128 22:15:31.428"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.425" endtime="20231128 22:15:31.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.430" endtime="20231128 22:15:31.431"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.432" endtime="20231128 22:15:31.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.434" endtime="20231128 22:15:31.434"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.429" endtime="20231128 22:15:31.435"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.436" endtime="20231128 22:15:31.437"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.438" endtime="20231128 22:15:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.435" endtime="20231128 22:15:31.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.440" endtime="20231128 22:15:31.441"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.441" endtime="20231128 22:15:31.441"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.439" endtime="20231128 22:15:31.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:31.444" level="INFO">${new_text} = Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.</msg>
<status status="PASS" starttime="20231128 22:15:31.443" endtime="20231128 22:15:31.444"/>
</kw>
<status status="PASS" starttime="20231128 22:15:31.442" endtime="20231128 22:15:31.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:31.446" endtime="20231128 22:15:31.447"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.446" endtime="20231128 22:15:31.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.449" endtime="20231128 22:15:31.450"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.451" endtime="20231128 22:15:31.452"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.452" endtime="20231128 22:15:31.453"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.448" endtime="20231128 22:15:31.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.456" endtime="20231128 22:15:31.457"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.455" endtime="20231128 22:15:31.458"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.460" endtime="20231128 22:15:31.461"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.459" endtime="20231128 22:15:31.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.463" endtime="20231128 22:15:31.464"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.462" endtime="20231128 22:15:31.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.467" endtime="20231128 22:15:31.467"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.465" endtime="20231128 22:15:31.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.469" endtime="20231128 22:15:31.470"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.468" endtime="20231128 22:15:31.470"/>
</branch>
<status status="PASS" starttime="20231128 22:15:31.425" endtime="20231128 22:15:31.470"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:31.472" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:31.473" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:31.471" endtime="20231128 22:15:31.473"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:31.476" level="INFO">${text} = Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.</msg>
<status status="PASS" starttime="20231128 22:15:31.475" endtime="20231128 22:15:31.476"/>
</kw>
<status status="PASS" starttime="20231128 22:15:31.474" endtime="20231128 22:15:31.477"/>
</branch>
<status status="PASS" starttime="20231128 22:15:31.474" endtime="20231128 22:15:31.478"/>
</if>
<msg timestamp="20231128 22:15:31.478" level="INFO">${text} = Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.</msg>
<status status="PASS" starttime="20231128 22:15:31.403" endtime="20231128 22:15:31.478"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:31.480" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:31.479" endtime="20231128 22:15:31.480"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:31.481" endtime="20231128 22:15:31.534"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:31.537" level="INFO">Fills the text 'Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:31.535" endtime="20231128 22:15:31.605"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:31.650" level="INFO">Text: 'Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.'</msg>
<msg timestamp="20231128 22:15:31.651" level="INFO">${condition} = Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.</msg>
<status status="PASS" starttime="20231128 22:15:31.606" endtime="20231128 22:15:31.652"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.654" endtime="20231128 22:15:31.655"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:31.655" endtime="20231128 22:15:31.656"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:31.652" endtime="20231128 22:15:31.656"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:31.652" endtime="20231128 22:15:31.657"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:31.658" endtime="20231128 22:15:31.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:31.728" level="INFO">Length is 126</msg>
<msg timestamp="20231128 22:15:31.729" level="INFO">${cnt} = 126</msg>
<status status="PASS" starttime="20231128 22:15:31.728" endtime="20231128 22:15:31.729"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:31.734" level="INFO">${STATE["Mô tả SEO"]} = Rem ullam perspiciatis quisquam ut. Voluptatem sapiente excepturi maxime quod aliquid. Nam laudantium praesentium sed quae et.</msg>
<status status="PASS" starttime="20231128 22:15:31.732" endtime="20231128 22:15:31.735"/>
</kw>
<status status="PASS" starttime="20231128 22:15:31.730" endtime="20231128 22:15:31.736"/>
</branch>
<status status="PASS" starttime="20231128 22:15:31.730" endtime="20231128 22:15:31.736"/>
</if>
<status status="PASS" starttime="20231128 22:15:31.283" endtime="20231128 22:15:31.737"/>
</kw>
<kw name="Click &quot;Tiếng Việt&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:31.739" endtime="20231128 22:15:31.975"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:32.079" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:31.978" endtime="20231128 22:15:32.079"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.080" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:32.079" endtime="20231128 22:15:32.080"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:32.101" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:32.080" endtime="20231128 22:15:32.101"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:32.104" endtime="20231128 22:15:32.105"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.103" endtime="20231128 22:15:32.105"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.102" endtime="20231128 22:15:32.106"/>
</if>
<status status="PASS" starttime="20231128 22:15:31.976" endtime="20231128 22:15:32.106"/>
</kw>
<status status="PASS" starttime="20231128 22:15:31.738" endtime="20231128 22:15:32.107"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:32.212" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:32.109" endtime="20231128 22:15:32.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.213" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:32.212" endtime="20231128 22:15:32.213"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:32.225" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:32.213" endtime="20231128 22:15:32.225"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:32.227" endtime="20231128 22:15:32.227"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.226" endtime="20231128 22:15:32.228"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.226" endtime="20231128 22:15:32.228"/>
</if>
<status status="PASS" starttime="20231128 22:15:32.108" endtime="20231128 22:15:32.229"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.234" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:32.232" endtime="20231128 22:15:32.235"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.237" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:32.236" endtime="20231128 22:15:32.237"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:32.238" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:32.238" endtime="20231128 22:15:32.239"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.239" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:32.240" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:32.239" endtime="20231128 22:15:32.240"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:32.241" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:32.240" endtime="20231128 22:15:32.241"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.242" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:32.242" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:32.241" endtime="20231128 22:15:32.242"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.243" endtime="20231128 22:15:32.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.243" endtime="20231128 22:15:32.244"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.242" endtime="20231128 22:15:32.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:32.245" level="INFO">${random} = Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.245" endtime="20231128 22:15:32.245"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231128 22:15:32.246" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231128 22:15:32.246" endtime="20231128 22:15:32.246"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.250" level="INFO">${new_text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.247" endtime="20231128 22:15:32.250"/>
</kw>
<status status="PASS" starttime="20231128 22:15:32.244" endtime="20231128 22:15:32.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.252" endtime="20231128 22:15:32.253"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.253" endtime="20231128 22:15:32.254"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.252" endtime="20231128 22:15:32.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.256" endtime="20231128 22:15:32.256"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.256" endtime="20231128 22:15:32.256"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.255" endtime="20231128 22:15:32.257"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.257" endtime="20231128 22:15:32.258"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.257" endtime="20231128 22:15:32.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:32.258" endtime="20231128 22:15:32.259"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.258" endtime="20231128 22:15:32.259"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.259" endtime="20231128 22:15:32.260"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.260" endtime="20231128 22:15:32.260"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.260" endtime="20231128 22:15:32.261"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.259" endtime="20231128 22:15:32.261"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.261" endtime="20231128 22:15:32.262"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.261" endtime="20231128 22:15:32.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.262" endtime="20231128 22:15:32.263"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.262" endtime="20231128 22:15:32.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.263" endtime="20231128 22:15:32.264"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.263" endtime="20231128 22:15:32.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.267" endtime="20231128 22:15:32.268"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.266" endtime="20231128 22:15:32.268"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.270" endtime="20231128 22:15:32.270"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.269" endtime="20231128 22:15:32.270"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.242" endtime="20231128 22:15:32.271"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.271" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:32.272" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:32.271" endtime="20231128 22:15:32.272"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:32.273" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.273" endtime="20231128 22:15:32.273"/>
</kw>
<status status="PASS" starttime="20231128 22:15:32.272" endtime="20231128 22:15:32.273"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.272" endtime="20231128 22:15:32.274"/>
</if>
<msg timestamp="20231128 22:15:32.274" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.230" endtime="20231128 22:15:32.274"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:32.275" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:32.274" endtime="20231128 22:15:32.275"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:32.276" endtime="20231128 22:15:32.393"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:32.394" endtime="20231128 22:15:32.431"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:32.434" level="INFO">Fills the text 'PO_11 Aperiam.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:32.433" endtime="20231128 22:15:32.493"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:32.532" level="INFO">Text: 'PO_11 Aperiam.'</msg>
<msg timestamp="20231128 22:15:32.533" level="INFO">${condition} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.494" endtime="20231128 22:15:32.533"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.535" endtime="20231128 22:15:32.536"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.536" endtime="20231128 22:15:32.537"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.533" endtime="20231128 22:15:32.537"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:32.533" endtime="20231128 22:15:32.538"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:32.539" endtime="20231128 22:15:32.609"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.612" level="INFO">Length is 14</msg>
<msg timestamp="20231128 22:15:32.612" level="INFO">${cnt} = 14</msg>
<status status="PASS" starttime="20231128 22:15:32.611" endtime="20231128 22:15:32.613"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:32.618" level="INFO">${STATE["Tiêu đề"]} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.616" endtime="20231128 22:15:32.619"/>
</kw>
<status status="PASS" starttime="20231128 22:15:32.613" endtime="20231128 22:15:32.619"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.613" endtime="20231128 22:15:32.620"/>
</if>
<status status="PASS" starttime="20231128 22:15:32.107" endtime="20231128 22:15:32.620"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:32.624" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231128 22:15:32.622" endtime="20231128 22:15:32.624"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.626" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:32.627" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 22:15:32.625" endtime="20231128 22:15:32.627"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.633" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.629" endtime="20231128 22:15:32.633"/>
</kw>
<status status="PASS" starttime="20231128 22:15:32.628" endtime="20231128 22:15:32.634"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.628" endtime="20231128 22:15:32.635"/>
</if>
<msg timestamp="20231128 22:15:32.636" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.621" endtime="20231128 22:15:32.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.638" level="INFO">${name} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:32.637" endtime="20231128 22:15:32.639"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:32.743" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:32.642" endtime="20231128 22:15:32.743"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.744" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:32.744" endtime="20231128 22:15:32.744"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:32.754" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:32.745" endtime="20231128 22:15:32.755"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:32.757" endtime="20231128 22:15:32.757"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.756" endtime="20231128 22:15:32.758"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.755" endtime="20231128 22:15:32.758"/>
</if>
<status status="PASS" starttime="20231128 22:15:32.641" endtime="20231128 22:15:32.759"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.762" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:32.761" endtime="20231128 22:15:32.762"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:32.763" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:32.763" endtime="20231128 22:15:32.764"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:32.766" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:32.764" endtime="20231128 22:15:32.766"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.767" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:32.768" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:32.767" endtime="20231128 22:15:32.768"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:32.770" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:32.769" endtime="20231128 22:15:32.770"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.771" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:32.771" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:32.770" endtime="20231128 22:15:32.771"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.772" endtime="20231128 22:15:32.773"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.773" endtime="20231128 22:15:32.773"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.772" endtime="20231128 22:15:32.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.774" endtime="20231128 22:15:32.774"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.775" endtime="20231128 22:15:32.775"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.775" endtime="20231128 22:15:32.776"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.774" endtime="20231128 22:15:32.776"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.776" endtime="20231128 22:15:32.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.777" endtime="20231128 22:15:32.777"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.776" endtime="20231128 22:15:32.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.778" endtime="20231128 22:15:32.778"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.779" endtime="20231128 22:15:32.779"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.778" endtime="20231128 22:15:32.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.780" endtime="20231128 22:15:32.780"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.779" endtime="20231128 22:15:32.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:32.782" endtime="20231128 22:15:32.783"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.781" endtime="20231128 22:15:32.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.784" endtime="20231128 22:15:32.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.785" endtime="20231128 22:15:32.785"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.785" endtime="20231128 22:15:32.786"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.784" endtime="20231128 22:15:32.786"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.787" endtime="20231128 22:15:32.787"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.786" endtime="20231128 22:15:32.787"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.788" endtime="20231128 22:15:32.789"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.787" endtime="20231128 22:15:32.789"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.791" endtime="20231128 22:15:32.791"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.790" endtime="20231128 22:15:32.792"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:32.793" endtime="20231128 22:15:32.794"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:32.792" endtime="20231128 22:15:32.794"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:32.796" level="INFO">${new_text} = Incidunt praesentium dolorem sequi aut atque.</msg>
<status status="PASS" starttime="20231128 22:15:32.795" endtime="20231128 22:15:32.796"/>
</kw>
<status status="PASS" starttime="20231128 22:15:32.794" endtime="20231128 22:15:32.796"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.772" endtime="20231128 22:15:32.796"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:32.798" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:32.799" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:32.797" endtime="20231128 22:15:32.799"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:32.830" level="INFO">${text} = Incidunt praesentium dolorem sequi aut atque.</msg>
<status status="PASS" starttime="20231128 22:15:32.829" endtime="20231128 22:15:32.831"/>
</kw>
<status status="PASS" starttime="20231128 22:15:32.800" endtime="20231128 22:15:32.832"/>
</branch>
<status status="PASS" starttime="20231128 22:15:32.800" endtime="20231128 22:15:32.833"/>
</if>
<msg timestamp="20231128 22:15:32.833" level="INFO">${text} = Incidunt praesentium dolorem sequi aut atque.</msg>
<status status="PASS" starttime="20231128 22:15:32.759" endtime="20231128 22:15:32.833"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:32.834" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:32.833" endtime="20231128 22:15:32.834"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:32.835" endtime="20231128 22:15:32.929"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:32.930" endtime="20231128 22:15:32.978"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:32.980" level="INFO">Fills the text 'Incidunt praesentium dolorem sequi aut atque.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:32.979" endtime="20231128 22:15:33.034"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:33.075" level="INFO">Text: 'Incidunt praesentium dolorem sequi aut atque.'</msg>
<msg timestamp="20231128 22:15:33.075" level="INFO">${condition} = Incidunt praesentium dolorem sequi aut atque.</msg>
<status status="PASS" starttime="20231128 22:15:33.035" endtime="20231128 22:15:33.076"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.077" endtime="20231128 22:15:33.077"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.078" endtime="20231128 22:15:33.079"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.076" endtime="20231128 22:15:33.079"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:33.076" endtime="20231128 22:15:33.079"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:33.080" endtime="20231128 22:15:33.147"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.150" level="INFO">Length is 45</msg>
<msg timestamp="20231128 22:15:33.151" level="INFO">${cnt} = 45</msg>
<status status="PASS" starttime="20231128 22:15:33.149" endtime="20231128 22:15:33.151"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:33.154" level="INFO">${STATE["Tác giả"]} = Incidunt praesentium dolorem sequi aut atque.</msg>
<status status="PASS" starttime="20231128 22:15:33.153" endtime="20231128 22:15:33.155"/>
</kw>
<status status="PASS" starttime="20231128 22:15:33.152" endtime="20231128 22:15:33.155"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.152" endtime="20231128 22:15:33.156"/>
</if>
<status status="PASS" starttime="20231128 22:15:32.639" endtime="20231128 22:15:33.156"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:33.260" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:33.159" endtime="20231128 22:15:33.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:33.262" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:33.261" endtime="20231128 22:15:33.262"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:33.273" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:33.263" endtime="20231128 22:15:33.273"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:33.275" endtime="20231128 22:15:33.275"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.274" endtime="20231128 22:15:33.276"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.274" endtime="20231128 22:15:33.276"/>
</if>
<status status="PASS" starttime="20231128 22:15:33.158" endtime="20231128 22:15:33.277"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:33.280" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:33.279" endtime="20231128 22:15:33.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:33.284" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:33.282" endtime="20231128 22:15:33.284"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:33.286" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:33.285" endtime="20231128 22:15:33.294"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.296" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:33.297" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:33.295" endtime="20231128 22:15:33.297"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:33.300" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:33.298" endtime="20231128 22:15:33.301"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.302" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:33.303" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:33.302" endtime="20231128 22:15:33.303"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.305" endtime="20231128 22:15:33.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.306" endtime="20231128 22:15:33.307"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.304" endtime="20231128 22:15:33.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.309" endtime="20231128 22:15:33.310"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.310" endtime="20231128 22:15:33.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.311" endtime="20231128 22:15:33.311"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.308" endtime="20231128 22:15:33.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.312" endtime="20231128 22:15:33.312"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.313" endtime="20231128 22:15:33.313"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.312" endtime="20231128 22:15:33.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.314" endtime="20231128 22:15:33.314"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.314" endtime="20231128 22:15:33.315"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.313" endtime="20231128 22:15:33.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:33.318" level="INFO">${new_text} = Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.</msg>
<status status="PASS" starttime="20231128 22:15:33.317" endtime="20231128 22:15:33.318"/>
</kw>
<status status="PASS" starttime="20231128 22:15:33.317" endtime="20231128 22:15:33.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:33.320" endtime="20231128 22:15:33.321"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.319" endtime="20231128 22:15:33.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.322" endtime="20231128 22:15:33.323"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.323" endtime="20231128 22:15:33.324"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.325" endtime="20231128 22:15:33.326"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.322" endtime="20231128 22:15:33.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.327" endtime="20231128 22:15:33.328"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.327" endtime="20231128 22:15:33.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.328" endtime="20231128 22:15:33.329"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.328" endtime="20231128 22:15:33.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.330" endtime="20231128 22:15:33.331"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.330" endtime="20231128 22:15:33.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.334" endtime="20231128 22:15:33.334"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.332" endtime="20231128 22:15:33.335"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.336" endtime="20231128 22:15:33.336"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.335" endtime="20231128 22:15:33.336"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.304" endtime="20231128 22:15:33.337"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.337" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:33.338" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:33.337" endtime="20231128 22:15:33.338"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:33.340" level="INFO">${text} = Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.</msg>
<status status="PASS" starttime="20231128 22:15:33.339" endtime="20231128 22:15:33.340"/>
</kw>
<status status="PASS" starttime="20231128 22:15:33.338" endtime="20231128 22:15:33.341"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.338" endtime="20231128 22:15:33.341"/>
</if>
<msg timestamp="20231128 22:15:33.341" level="INFO">${text} = Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.</msg>
<status status="PASS" starttime="20231128 22:15:33.277" endtime="20231128 22:15:33.342"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:33.343" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:33.342" endtime="20231128 22:15:33.343"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:33.343" endtime="20231128 22:15:33.514"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:33.516" endtime="20231128 22:15:33.561"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:33.564" level="INFO">Fills the text 'Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:33.562" endtime="20231128 22:15:33.618"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:33.660" level="INFO">Text: 'Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.'</msg>
<msg timestamp="20231128 22:15:33.661" level="INFO">${condition} = Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.</msg>
<status status="PASS" starttime="20231128 22:15:33.619" endtime="20231128 22:15:33.661"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.664" endtime="20231128 22:15:33.664"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.667" endtime="20231128 22:15:33.667"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.662" endtime="20231128 22:15:33.668"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:33.662" endtime="20231128 22:15:33.669"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:33.669" endtime="20231128 22:15:33.746"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.747" level="INFO">Length is 76</msg>
<msg timestamp="20231128 22:15:33.749" level="INFO">${cnt} = 76</msg>
<status status="PASS" starttime="20231128 22:15:33.746" endtime="20231128 22:15:33.750"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:33.754" level="INFO">${STATE["Mô tả ảnh cover"]} = Fugiat quos at debitis qui veniam corporis. Omnis eum beatae sequi mollitia.</msg>
<status status="PASS" starttime="20231128 22:15:33.752" endtime="20231128 22:15:33.754"/>
</kw>
<status status="PASS" starttime="20231128 22:15:33.751" endtime="20231128 22:15:33.755"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.751" endtime="20231128 22:15:33.756"/>
</if>
<status status="PASS" starttime="20231128 22:15:33.157" endtime="20231128 22:15:33.756"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:33.860" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:33.759" endtime="20231128 22:15:33.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:33.861" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:33.860" endtime="20231128 22:15:33.861"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:33.871" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:33.862" endtime="20231128 22:15:33.872"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:33.873" endtime="20231128 22:15:33.874"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.873" endtime="20231128 22:15:33.875"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.872" endtime="20231128 22:15:33.876"/>
</if>
<status status="PASS" starttime="20231128 22:15:33.758" endtime="20231128 22:15:33.876"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:33.879" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:33.878" endtime="20231128 22:15:33.879"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:33.880" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:33.879" endtime="20231128 22:15:33.880"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:33.881" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:33.880" endtime="20231128 22:15:33.881"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.883" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:33.883" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:33.882" endtime="20231128 22:15:33.884"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:33.885" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:33.884" endtime="20231128 22:15:33.885"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.886" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:33.886" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:33.886" endtime="20231128 22:15:33.886"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.887" endtime="20231128 22:15:33.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.888" endtime="20231128 22:15:33.888"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.887" endtime="20231128 22:15:33.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.890" endtime="20231128 22:15:33.890"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.891" endtime="20231128 22:15:33.891"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.892" endtime="20231128 22:15:33.892"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.889" endtime="20231128 22:15:33.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.893" endtime="20231128 22:15:33.893"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.893" endtime="20231128 22:15:33.894"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.892" endtime="20231128 22:15:33.894"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.895" endtime="20231128 22:15:33.895"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.895" endtime="20231128 22:15:33.896"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.894" endtime="20231128 22:15:33.896"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:33.897" level="INFO">${new_text} = Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.</msg>
<status status="PASS" starttime="20231128 22:15:33.897" endtime="20231128 22:15:33.898"/>
</kw>
<status status="PASS" starttime="20231128 22:15:33.896" endtime="20231128 22:15:33.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:33.900" endtime="20231128 22:15:33.900"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.900" endtime="20231128 22:15:33.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.901" endtime="20231128 22:15:33.901"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.902" endtime="20231128 22:15:33.902"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.902" endtime="20231128 22:15:33.903"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.901" endtime="20231128 22:15:33.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.904" endtime="20231128 22:15:33.904"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.903" endtime="20231128 22:15:33.905"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.906" endtime="20231128 22:15:33.906"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.905" endtime="20231128 22:15:33.906"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.907" endtime="20231128 22:15:33.907"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.907" endtime="20231128 22:15:33.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.908" endtime="20231128 22:15:33.908"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.908" endtime="20231128 22:15:33.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:33.909" endtime="20231128 22:15:33.909"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:33.909" endtime="20231128 22:15:33.909"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.887" endtime="20231128 22:15:33.910"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:33.910" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:33.911" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:33.910" endtime="20231128 22:15:33.911"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:33.912" level="INFO">${text} = Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.</msg>
<status status="PASS" starttime="20231128 22:15:33.911" endtime="20231128 22:15:33.912"/>
</kw>
<status status="PASS" starttime="20231128 22:15:33.911" endtime="20231128 22:15:33.912"/>
</branch>
<status status="PASS" starttime="20231128 22:15:33.911" endtime="20231128 22:15:33.913"/>
</if>
<msg timestamp="20231128 22:15:33.913" level="INFO">${text} = Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.</msg>
<status status="PASS" starttime="20231128 22:15:33.877" endtime="20231128 22:15:33.913"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:33.914" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:33.913" endtime="20231128 22:15:33.914"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:33.915" endtime="20231128 22:15:33.966"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:33.968" level="INFO">Fills the text 'Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:33.967" endtime="20231128 22:15:34.019"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:34.059" level="INFO">Text: 'Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.'</msg>
<msg timestamp="20231128 22:15:34.059" level="INFO">${condition} = Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.</msg>
<status status="PASS" starttime="20231128 22:15:34.020" endtime="20231128 22:15:34.060"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.062" endtime="20231128 22:15:34.063"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.064" endtime="20231128 22:15:34.065"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.060" endtime="20231128 22:15:34.067"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:34.060" endtime="20231128 22:15:34.067"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:34.069" endtime="20231128 22:15:34.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.146" level="INFO">Length is 89</msg>
<msg timestamp="20231128 22:15:34.146" level="INFO">${cnt} = 89</msg>
<status status="PASS" starttime="20231128 22:15:34.145" endtime="20231128 22:15:34.147"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:34.151" level="INFO">${STATE["Giới thiệu"]} = Nobis quisquam tempora. Ex dolore sit cum repellendus. Doloremque quam ullam rerum natus.</msg>
<status status="PASS" starttime="20231128 22:15:34.149" endtime="20231128 22:15:34.152"/>
</kw>
<status status="PASS" starttime="20231128 22:15:34.147" endtime="20231128 22:15:34.153"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.147" endtime="20231128 22:15:34.153"/>
</if>
<status status="PASS" starttime="20231128 22:15:33.757" endtime="20231128 22:15:34.154"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:34.260" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:34.158" endtime="20231128 22:15:34.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:34.262" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:34.261" endtime="20231128 22:15:34.262"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:34.274" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:34.263" endtime="20231128 22:15:34.274"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:34.275" endtime="20231128 22:15:34.276"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.275" endtime="20231128 22:15:34.276"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.274" endtime="20231128 22:15:34.277"/>
</if>
<status status="PASS" starttime="20231128 22:15:34.157" endtime="20231128 22:15:34.277"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:34.280" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:34.279" endtime="20231128 22:15:34.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:34.281" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:34.281" endtime="20231128 22:15:34.282"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:34.294" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:34.284" endtime="20231128 22:15:34.294"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.296" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:34.296" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:34.295" endtime="20231128 22:15:34.296"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:34.300" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:34.297" endtime="20231128 22:15:34.301"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.302" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:34.303" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:34.302" endtime="20231128 22:15:34.303"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.305" endtime="20231128 22:15:34.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.306" endtime="20231128 22:15:34.307"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.304" endtime="20231128 22:15:34.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.308" endtime="20231128 22:15:34.309"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.310" endtime="20231128 22:15:34.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.311" endtime="20231128 22:15:34.311"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.307" endtime="20231128 22:15:34.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.313" endtime="20231128 22:15:34.313"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.314" endtime="20231128 22:15:34.314"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.312" endtime="20231128 22:15:34.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.324" endtime="20231128 22:15:34.324"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.325" endtime="20231128 22:15:34.325"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.323" endtime="20231128 22:15:34.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:34.328" level="INFO">${new_text} = Quibusdam beatae saepe atque. Quis praesentium atque occaecati neque. Est pariatur repellendus asperiores similique. Tempora culpa saepe.</msg>
<status status="PASS" starttime="20231128 22:15:34.327" endtime="20231128 22:15:34.329"/>
</kw>
<status status="PASS" starttime="20231128 22:15:34.326" endtime="20231128 22:15:34.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:34.331" endtime="20231128 22:15:34.331"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.330" endtime="20231128 22:15:34.333"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.335" endtime="20231128 22:15:34.335"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.341" endtime="20231128 22:15:34.379"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.380" endtime="20231128 22:15:34.380"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.334" endtime="20231128 22:15:34.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.384" endtime="20231128 22:15:34.384"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.382" endtime="20231128 22:15:34.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.386" endtime="20231128 22:15:34.386"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.385" endtime="20231128 22:15:34.387"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.388" endtime="20231128 22:15:34.389"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.387" endtime="20231128 22:15:34.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.391" endtime="20231128 22:15:34.391"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.390" endtime="20231128 22:15:34.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.393" endtime="20231128 22:15:34.394"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.393" endtime="20231128 22:15:34.394"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.304" endtime="20231128 22:15:34.395"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.397" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:34.397" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:34.396" endtime="20231128 22:15:34.398"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:34.404" level="INFO">${text} = Quibusdam beatae saepe atque. Quis praesentium atque occaecati neque. Est pariatur repellendus asperiores similique. Tempora culpa saepe.</msg>
<status status="PASS" starttime="20231128 22:15:34.401" endtime="20231128 22:15:34.404"/>
</kw>
<status status="PASS" starttime="20231128 22:15:34.400" endtime="20231128 22:15:34.405"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.400" endtime="20231128 22:15:34.405"/>
</if>
<msg timestamp="20231128 22:15:34.406" level="INFO">${text} = Quibusdam beatae saepe atque. Quis praesentium atque occaecati neque. Est pariatur repellendus asperiores similique. Tempora culpa saepe.</msg>
<status status="PASS" starttime="20231128 22:15:34.277" endtime="20231128 22:15:34.406"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231128 22:15:34.408" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231128 22:15:34.407" endtime="20231128 22:15:34.409"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:34.410" endtime="20231128 22:15:34.503"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:34.505" level="INFO">Fills the text 'Quibusdam beatae saepe atque. Quis praesentium atque occaecati neque. Est pariatur repellendus asperiores similique. Tempora culpa saepe.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:34.504" endtime="20231128 22:15:34.552"/>
</kw>
<status status="PASS" starttime="20231128 22:15:34.155" endtime="20231128 22:15:34.553"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:34.659" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:34.556" endtime="20231128 22:15:34.659"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:34.660" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:34.659" endtime="20231128 22:15:34.660"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:34.673" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:34.660" endtime="20231128 22:15:34.673"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:34.675" endtime="20231128 22:15:34.676"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.674" endtime="20231128 22:15:34.676"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.674" endtime="20231128 22:15:34.677"/>
</if>
<status status="PASS" starttime="20231128 22:15:34.555" endtime="20231128 22:15:34.678"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:34.680" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:34.679" endtime="20231128 22:15:34.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:34.681" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:34.681" endtime="20231128 22:15:34.682"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:34.685" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:34.683" endtime="20231128 22:15:34.686"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.687" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:34.688" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:34.686" endtime="20231128 22:15:34.688"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:34.689" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:34.688" endtime="20231128 22:15:34.689"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.690" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:34.690" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:34.690" endtime="20231128 22:15:34.690"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.691" endtime="20231128 22:15:34.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.692" endtime="20231128 22:15:34.692"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.691" endtime="20231128 22:15:34.692"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.693" endtime="20231128 22:15:34.693"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.693" endtime="20231128 22:15:34.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.694" endtime="20231128 22:15:34.694"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.692" endtime="20231128 22:15:34.694"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.695" endtime="20231128 22:15:34.695"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.695" endtime="20231128 22:15:34.695"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.694" endtime="20231128 22:15:34.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.697" endtime="20231128 22:15:34.698"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.701" endtime="20231128 22:15:34.702"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.696" endtime="20231128 22:15:34.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.703" endtime="20231128 22:15:34.703"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.702" endtime="20231128 22:15:34.703"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:34.704" endtime="20231128 22:15:34.705"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.704" endtime="20231128 22:15:34.705"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.705" endtime="20231128 22:15:34.706"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.706" endtime="20231128 22:15:34.706"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.707" endtime="20231128 22:15:34.707"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.705" endtime="20231128 22:15:34.707"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.708" endtime="20231128 22:15:34.708"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.707" endtime="20231128 22:15:34.708"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.709" endtime="20231128 22:15:34.710"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.709" endtime="20231128 22:15:34.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.712" endtime="20231128 22:15:34.712"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.711" endtime="20231128 22:15:34.712"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:34.713" endtime="20231128 22:15:34.713"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:34.713" endtime="20231128 22:15:34.714"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:34.718" level="INFO">${new_text} = Cupiditate ipsam aliquam amet aperiam explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:34.714" endtime="20231128 22:15:34.719"/>
</kw>
<status status="PASS" starttime="20231128 22:15:34.714" endtime="20231128 22:15:34.719"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.690" endtime="20231128 22:15:34.720"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:34.721" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:34.721" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:34.720" endtime="20231128 22:15:34.721"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:34.724" level="INFO">${text} = Cupiditate ipsam aliquam amet aperiam explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:34.723" endtime="20231128 22:15:34.725"/>
</kw>
<status status="PASS" starttime="20231128 22:15:34.722" endtime="20231128 22:15:34.725"/>
</branch>
<status status="PASS" starttime="20231128 22:15:34.722" endtime="20231128 22:15:34.726"/>
</if>
<msg timestamp="20231128 22:15:34.726" level="INFO">${text} = Cupiditate ipsam aliquam amet aperiam explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:34.678" endtime="20231128 22:15:34.727"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:34.729" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:34.727" endtime="20231128 22:15:34.729"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:34.730" endtime="20231128 22:15:34.869"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:34.870" endtime="20231128 22:15:34.908"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:34.910" level="INFO">Fills the text 'Cupiditate ipsam aliquam amet aperiam explicabo.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:34.909" endtime="20231128 22:15:34.976"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:35.019" level="INFO">Text: 'Cupiditate ipsam aliquam amet aperiam explicabo.'</msg>
<msg timestamp="20231128 22:15:35.020" level="INFO">${condition} = Cupiditate ipsam aliquam amet aperiam explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:34.977" endtime="20231128 22:15:35.020"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.023" endtime="20231128 22:15:35.024"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.025" endtime="20231128 22:15:35.025"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.021" endtime="20231128 22:15:35.026"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:35.021" endtime="20231128 22:15:35.026"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:35.027" endtime="20231128 22:15:35.096"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.098" level="INFO">Length is 48</msg>
<msg timestamp="20231128 22:15:35.099" level="INFO">${cnt} = 48</msg>
<status status="PASS" starttime="20231128 22:15:35.097" endtime="20231128 22:15:35.099"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:35.104" level="INFO">${STATE["Tiêu đề SEO"]} = Cupiditate ipsam aliquam amet aperiam explicabo.</msg>
<status status="PASS" starttime="20231128 22:15:35.102" endtime="20231128 22:15:35.104"/>
</kw>
<status status="PASS" starttime="20231128 22:15:35.101" endtime="20231128 22:15:35.105"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.100" endtime="20231128 22:15:35.105"/>
</if>
<status status="PASS" starttime="20231128 22:15:34.554" endtime="20231128 22:15:35.106"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:35.211" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:35.109" endtime="20231128 22:15:35.211"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:35.213" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:35.212" endtime="20231128 22:15:35.213"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:35.234" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:35.214" endtime="20231128 22:15:35.235"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:35.236" endtime="20231128 22:15:35.237"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.236" endtime="20231128 22:15:35.237"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.235" endtime="20231128 22:15:35.238"/>
</if>
<status status="PASS" starttime="20231128 22:15:35.108" endtime="20231128 22:15:35.238"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:35.241" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:35.240" endtime="20231128 22:15:35.241"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:35.243" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:35.242" endtime="20231128 22:15:35.243"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:35.244" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:35.243" endtime="20231128 22:15:35.245"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.246" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:35.247" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:35.245" endtime="20231128 22:15:35.247"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:35.250" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:35.248" endtime="20231128 22:15:35.250"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.252" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:35.252" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:35.251" endtime="20231128 22:15:35.253"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.254" endtime="20231128 22:15:35.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.256" endtime="20231128 22:15:35.256"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.253" endtime="20231128 22:15:35.257"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.258" endtime="20231128 22:15:35.259"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.260" endtime="20231128 22:15:35.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.261" endtime="20231128 22:15:35.262"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.257" endtime="20231128 22:15:35.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.264" endtime="20231128 22:15:35.264"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.265" endtime="20231128 22:15:35.267"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.263" endtime="20231128 22:15:35.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.269" endtime="20231128 22:15:35.270"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.271" endtime="20231128 22:15:35.271"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.268" endtime="20231128 22:15:35.272"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.273" endtime="20231128 22:15:35.274"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.272" endtime="20231128 22:15:35.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:35.276" endtime="20231128 22:15:35.277"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.275" endtime="20231128 22:15:35.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.279" endtime="20231128 22:15:35.280"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.283" endtime="20231128 22:15:35.284"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.285" endtime="20231128 22:15:35.285"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.278" endtime="20231128 22:15:35.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.287" endtime="20231128 22:15:35.288"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.286" endtime="20231128 22:15:35.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.290" endtime="20231128 22:15:35.291"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.289" endtime="20231128 22:15:35.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.292" endtime="20231128 22:15:35.293"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.292" endtime="20231128 22:15:35.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.295" endtime="20231128 22:15:35.295"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.294" endtime="20231128 22:15:35.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231128 22:15:35.298" level="INFO">${new_text} = Nam deserunt commodi dolores voluptatum alias deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:35.297" endtime="20231128 22:15:35.300"/>
</kw>
<status status="PASS" starttime="20231128 22:15:35.296" endtime="20231128 22:15:35.300"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.253" endtime="20231128 22:15:35.301"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.303" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:35.303" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:35.302" endtime="20231128 22:15:35.304"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:35.307" level="INFO">${text} = Nam deserunt commodi dolores voluptatum alias deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:35.305" endtime="20231128 22:15:35.307"/>
</kw>
<status status="PASS" starttime="20231128 22:15:35.304" endtime="20231128 22:15:35.307"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.304" endtime="20231128 22:15:35.308"/>
</if>
<msg timestamp="20231128 22:15:35.308" level="INFO">${text} = Nam deserunt commodi dolores voluptatum alias deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:35.239" endtime="20231128 22:15:35.309"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:35.310" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:35.309" endtime="20231128 22:15:35.311"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:35.311" endtime="20231128 22:15:35.411"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:35.412" endtime="20231128 22:15:35.458"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:35.460" level="INFO">Fills the text 'Nam deserunt commodi dolores voluptatum alias deleniti.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:35.459" endtime="20231128 22:15:35.522"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:35.564" level="INFO">Text: 'Nam deserunt commodi dolores voluptatum alias deleniti.'</msg>
<msg timestamp="20231128 22:15:35.565" level="INFO">${condition} = Nam deserunt commodi dolores voluptatum alias deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:35.523" endtime="20231128 22:15:35.567"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.570" endtime="20231128 22:15:35.570"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.571" endtime="20231128 22:15:35.572"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.568" endtime="20231128 22:15:35.573"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:35.567" endtime="20231128 22:15:35.573"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:35.574" endtime="20231128 22:15:35.643"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.646" level="INFO">Length is 55</msg>
<msg timestamp="20231128 22:15:35.646" level="INFO">${cnt} = 55</msg>
<status status="PASS" starttime="20231128 22:15:35.645" endtime="20231128 22:15:35.647"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:35.651" level="INFO">${STATE["Từ khóa SEO"]} = Nam deserunt commodi dolores voluptatum alias deleniti.</msg>
<status status="PASS" starttime="20231128 22:15:35.650" endtime="20231128 22:15:35.652"/>
</kw>
<status status="PASS" starttime="20231128 22:15:35.647" endtime="20231128 22:15:35.653"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.647" endtime="20231128 22:15:35.653"/>
</if>
<status status="PASS" starttime="20231128 22:15:35.106" endtime="20231128 22:15:35.654"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:35.758" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:35.657" endtime="20231128 22:15:35.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:35.761" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:35.760" endtime="20231128 22:15:35.761"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:35.772" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:35.762" endtime="20231128 22:15:35.773"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:35.775" endtime="20231128 22:15:35.775"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.774" endtime="20231128 22:15:35.776"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.773" endtime="20231128 22:15:35.776"/>
</if>
<status status="PASS" starttime="20231128 22:15:35.656" endtime="20231128 22:15:35.777"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:35.780" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:35.779" endtime="20231128 22:15:35.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:35.785" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:35.782" endtime="20231128 22:15:35.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:35.787" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:35.786" endtime="20231128 22:15:35.788"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.789" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:35.790" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:35.788" endtime="20231128 22:15:35.790"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:35.792" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231128 22:15:35.791" endtime="20231128 22:15:35.793"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.795" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:35.795" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:35.794" endtime="20231128 22:15:35.795"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.798" endtime="20231128 22:15:35.799"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.800" endtime="20231128 22:15:35.800"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.796" endtime="20231128 22:15:35.801"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.803" endtime="20231128 22:15:35.803"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.804" endtime="20231128 22:15:35.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.805" endtime="20231128 22:15:35.806"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.801" endtime="20231128 22:15:35.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.808" endtime="20231128 22:15:35.808"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.809" endtime="20231128 22:15:35.809"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.807" endtime="20231128 22:15:35.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.811" endtime="20231128 22:15:35.811"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.811" endtime="20231128 22:15:35.811"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.810" endtime="20231128 22:15:35.812"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231128 22:15:35.814" level="INFO">${new_text} = Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.</msg>
<status status="PASS" starttime="20231128 22:15:35.813" endtime="20231128 22:15:35.815"/>
</kw>
<status status="PASS" starttime="20231128 22:15:35.812" endtime="20231128 22:15:35.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:35.817" endtime="20231128 22:15:35.817"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.817" endtime="20231128 22:15:35.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.818" endtime="20231128 22:15:35.818"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.819" endtime="20231128 22:15:35.819"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.819" endtime="20231128 22:15:35.820"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.818" endtime="20231128 22:15:35.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.821" endtime="20231128 22:15:35.821"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.820" endtime="20231128 22:15:35.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.821" endtime="20231128 22:15:35.822"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.821" endtime="20231128 22:15:35.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.823" endtime="20231128 22:15:35.823"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.822" endtime="20231128 22:15:35.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.823" endtime="20231128 22:15:35.824"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.823" endtime="20231128 22:15:35.824"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.824" endtime="20231128 22:15:35.825"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.824" endtime="20231128 22:15:35.825"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.796" endtime="20231128 22:15:35.825"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:35.826" level="INFO">Length is 8</msg>
<msg timestamp="20231128 22:15:35.826" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231128 22:15:35.825" endtime="20231128 22:15:35.826"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:35.827" level="INFO">${text} = Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.</msg>
<status status="PASS" starttime="20231128 22:15:35.827" endtime="20231128 22:15:35.828"/>
</kw>
<status status="PASS" starttime="20231128 22:15:35.827" endtime="20231128 22:15:35.828"/>
</branch>
<status status="PASS" starttime="20231128 22:15:35.826" endtime="20231128 22:15:35.829"/>
</if>
<msg timestamp="20231128 22:15:35.830" level="INFO">${text} = Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.</msg>
<status status="PASS" starttime="20231128 22:15:35.778" endtime="20231128 22:15:35.830"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231128 22:15:35.832" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231128 22:15:35.831" endtime="20231128 22:15:35.833"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:35.833" endtime="20231128 22:15:35.881"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:35.885" level="INFO">Fills the text 'Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:35.883" endtime="20231128 22:15:35.941"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:35.987" level="INFO">Text: 'Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.'</msg>
<msg timestamp="20231128 22:15:35.987" level="INFO">${condition} = Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.</msg>
<status status="PASS" starttime="20231128 22:15:35.941" endtime="20231128 22:15:35.988"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.990" endtime="20231128 22:15:35.991"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:35.992" endtime="20231128 22:15:35.993"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:35.988" endtime="20231128 22:15:35.994"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:35.988" endtime="20231128 22:15:35.994"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:35.995" endtime="20231128 22:15:36.064"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:36.068" level="INFO">Length is 137</msg>
<msg timestamp="20231128 22:15:36.069" level="INFO">${cnt} = 137</msg>
<status status="PASS" starttime="20231128 22:15:36.067" endtime="20231128 22:15:36.070"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:36.073" level="INFO">${STATE["Mô tả SEO"]} = Dolor minima aliquam alias exercitationem ratione asperiores. Sint doloribus sit soluta consectetur. Eveniet error quibusdam tempora qui.</msg>
<status status="PASS" starttime="20231128 22:15:36.072" endtime="20231128 22:15:36.074"/>
</kw>
<status status="PASS" starttime="20231128 22:15:36.071" endtime="20231128 22:15:36.074"/>
</branch>
<status status="PASS" starttime="20231128 22:15:36.070" endtime="20231128 22:15:36.075"/>
</if>
<status status="PASS" starttime="20231128 22:15:35.655" endtime="20231128 22:15:36.075"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:36.179" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:36.077" endtime="20231128 22:15:36.179"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:36.190" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:36.180" endtime="20231128 22:15:36.190"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:36.192" endtime="20231128 22:15:36.612"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:36.618" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:36.614" endtime="20231128 22:15:36.619"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:36.776" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:36.620" endtime="20231128 22:15:36.776"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:36.778" endtime="20231128 22:15:36.779"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231128 22:15:36.779" endtime="20231128 22:15:36.780"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231128 22:15:36.781" endtime="20231128 22:15:36.784"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:36.777" endtime="20231128 22:15:36.785"/>
</branch>
<status status="PASS" starttime="20231128 22:15:36.777" endtime="20231128 22:15:36.786"/>
</if>
<status status="PASS" starttime="20231128 22:15:36.612" endtime="20231128 22:15:36.786"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231128 22:15:37.036" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:37.038" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:37.061" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:37.062" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231128 22:15:37.077" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231128 22:15:36.787" endtime="20231128 22:15:37.078"/>
</kw>
<status status="PASS" starttime="20231128 22:15:36.191" endtime="20231128 22:15:37.078"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.080" endtime="20231128 22:15:37.081"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231128 22:15:37.085" endtime="20231128 22:15:37.085"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.089" endtime="20231128 22:15:37.092"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.079" endtime="20231128 22:15:37.092"/>
</branch>
<status status="PASS" starttime="20231128 22:15:36.191" endtime="20231128 22:15:37.093"/>
</if>
<status status="PASS" starttime="20231128 22:15:36.076" endtime="20231128 22:15:37.093"/>
</kw>
<kw name="User look message &quot;Thêm mới bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:37.097" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:37.096" endtime="20231128 22:15:37.097"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:37.102" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:37.104" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:37.101" endtime="20231128 22:15:37.111"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.114" endtime="20231128 22:15:37.120"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.112" endtime="20231128 22:15:37.121"/>
</branch>
<status status="PASS" starttime="20231128 22:15:37.112" endtime="20231128 22:15:37.122"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:37.243" level="INFO">Text: 'Thêm mới bài viết thành công'</msg>
<status status="PASS" starttime="20231128 22:15:37.153" endtime="20231128 22:15:37.244"/>
</kw>
<status status="PASS" starttime="20231128 22:15:37.130" endtime="20231128 22:15:37.244"/>
</kw>
<status status="PASS" starttime="20231128 22:15:37.123" endtime="20231128 22:15:37.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:37.247" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231128 22:15:37.246" endtime="20231128 22:15:37.247"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231128 22:15:37.684" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231128 22:15:37.685" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231128 22:15:37.685" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231128 22:15:37.255" endtime="20231128 22:15:37.688"/>
</kw>
<status status="FAIL" starttime="20231128 22:15:37.253" endtime="20231128 22:15:37.689"/>
</kw>
<msg timestamp="20231128 22:15:37.690" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231128 22:15:37.251" endtime="20231128 22:15:37.690"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.692" endtime="20231128 22:15:37.693"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.691" endtime="20231128 22:15:37.694"/>
</branch>
<status status="PASS" starttime="20231128 22:15:37.690" endtime="20231128 22:15:37.694"/>
</if>
<status status="PASS" starttime="20231128 22:15:37.094" endtime="20231128 22:15:37.695"/>
</kw>
<status status="PASS" starttime="20231128 22:15:22.713" endtime="20231128 22:15:37.695"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;${name1}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:37.803" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:37.702" endtime="20231128 22:15:37.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:37.804" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:37.803" endtime="20231128 22:15:37.804"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:37.813" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:37.804" endtime="20231128 22:15:37.813"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:37.816" endtime="20231128 22:15:37.817"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.814" endtime="20231128 22:15:37.818"/>
</branch>
<status status="PASS" starttime="20231128 22:15:37.814" endtime="20231128 22:15:37.818"/>
</if>
<status status="PASS" starttime="20231128 22:15:37.701" endtime="20231128 22:15:37.819"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:37.822" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:37.821" endtime="20231128 22:15:37.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:37.824" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:37.823" endtime="20231128 22:15:37.825"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:37.827" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:37.826" endtime="20231128 22:15:37.827"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:37.828" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:37.829" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:37.827" endtime="20231128 22:15:37.829"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:37.830" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:37.829" endtime="20231128 22:15:37.832"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:37.833" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:37.834" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:37.833" endtime="20231128 22:15:37.834"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.835" endtime="20231128 22:15:37.836"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.836" endtime="20231128 22:15:37.836"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.835" endtime="20231128 22:15:37.836"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.837" endtime="20231128 22:15:37.837"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.838" endtime="20231128 22:15:37.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.838" endtime="20231128 22:15:37.839"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.837" endtime="20231128 22:15:37.839"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.840" endtime="20231128 22:15:37.840"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.840" endtime="20231128 22:15:37.840"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.839" endtime="20231128 22:15:37.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.841" endtime="20231128 22:15:37.841"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.842" endtime="20231128 22:15:37.842"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.841" endtime="20231128 22:15:37.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.843" endtime="20231128 22:15:37.843"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.843" endtime="20231128 22:15:37.844"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:37.844" endtime="20231128 22:15:37.844"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.844" endtime="20231128 22:15:37.845"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.846" endtime="20231128 22:15:37.847"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.849" endtime="20231128 22:15:37.849"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.850" endtime="20231128 22:15:37.850"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.845" endtime="20231128 22:15:37.850"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.851" endtime="20231128 22:15:37.851"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.851" endtime="20231128 22:15:37.852"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.852" endtime="20231128 22:15:37.853"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.852" endtime="20231128 22:15:37.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.854" endtime="20231128 22:15:37.854"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.853" endtime="20231128 22:15:37.854"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.855" endtime="20231128 22:15:37.855"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.854" endtime="20231128 22:15:37.855"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:37.856" endtime="20231128 22:15:37.856"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:37.855" endtime="20231128 22:15:37.857"/>
</branch>
<status status="PASS" starttime="20231128 22:15:37.834" endtime="20231128 22:15:37.857"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:37.858" level="INFO">Length is 36</msg>
<msg timestamp="20231128 22:15:37.859" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20231128 22:15:37.857" endtime="20231128 22:15:37.859"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231128 22:15:37.861" level="INFO">${text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:37.860" endtime="20231128 22:15:37.861"/>
</kw>
<status status="PASS" starttime="20231128 22:15:37.859" endtime="20231128 22:15:37.861"/>
</branch>
<status status="PASS" starttime="20231128 22:15:37.859" endtime="20231128 22:15:37.862"/>
</if>
<msg timestamp="20231128 22:15:37.862" level="INFO">${text} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:37.819" endtime="20231128 22:15:37.862"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:37.863" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:37.862" endtime="20231128 22:15:37.863"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:37.864" endtime="20231128 22:15:38.210"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:38.211" endtime="20231128 22:15:38.285"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:38.287" level="INFO">Fills the text 'PO_11 Optio animi accusantium totam.' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:38.286" endtime="20231128 22:15:38.325"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:38.359" level="INFO">Text: 'PO_11 Optio animi accusantium totam.'</msg>
<msg timestamp="20231128 22:15:38.359" level="INFO">${condition} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:38.325" endtime="20231128 22:15:38.360"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:38.361" endtime="20231128 22:15:38.362"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:38.362" endtime="20231128 22:15:38.363"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:38.360" endtime="20231128 22:15:38.363"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:38.360" endtime="20231128 22:15:38.364"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:38.365" endtime="20231128 22:15:38.426"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:38.428" level="INFO">Length is 36</msg>
<msg timestamp="20231128 22:15:38.428" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20231128 22:15:38.427" endtime="20231128 22:15:38.429"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231128 22:15:38.434" level="INFO">${STATE["Tìm kiếm"]} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:38.431" endtime="20231128 22:15:38.435"/>
</kw>
<status status="PASS" starttime="20231128 22:15:38.430" endtime="20231128 22:15:38.435"/>
</branch>
<status status="PASS" starttime="20231128 22:15:38.430" endtime="20231128 22:15:38.436"/>
</if>
<status status="PASS" starttime="20231128 22:15:37.699" endtime="20231128 22:15:38.437"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:38.542" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:38.441" endtime="20231128 22:15:38.542"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:38.542" endtime="20231128 22:15:38.599"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:38.702" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:38.601" endtime="20231128 22:15:38.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:38.703" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:38.703" endtime="20231128 22:15:38.703"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:38.726" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:38.704" endtime="20231128 22:15:38.726"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:38.730" endtime="20231128 22:15:38.731"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:38.728" endtime="20231128 22:15:38.732"/>
</branch>
<status status="PASS" starttime="20231128 22:15:38.727" endtime="20231128 22:15:38.734"/>
</if>
<status status="PASS" starttime="20231128 22:15:38.600" endtime="20231128 22:15:38.735"/>
</kw>
<status status="PASS" starttime="20231128 22:15:38.440" endtime="20231128 22:15:38.736"/>
</kw>
<kw name="Then &quot;${name1}&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:38.846" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:38.744" endtime="20231128 22:15:38.846"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:38.848" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:38.846" endtime="20231128 22:15:38.850"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:38.860" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:38.851" endtime="20231128 22:15:38.860"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:38.862" endtime="20231128 22:15:38.863"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:38.861" endtime="20231128 22:15:38.864"/>
</branch>
<status status="PASS" starttime="20231128 22:15:38.861" endtime="20231128 22:15:38.867"/>
</if>
<status status="PASS" starttime="20231128 22:15:38.743" endtime="20231128 22:15:38.868"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:38.871" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:38.870" endtime="20231128 22:15:38.872"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:38.873" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:38.873" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:38.872" endtime="20231128 22:15:38.873"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:38.875" endtime="20231128 22:15:38.875"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:38.874" endtime="20231128 22:15:38.875"/>
</branch>
<status status="PASS" starttime="20231128 22:15:38.874" endtime="20231128 22:15:38.876"/>
</if>
<msg timestamp="20231128 22:15:38.876" level="INFO">${name} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:38.869" endtime="20231128 22:15:38.876"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:38.885" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 22:15:38.876" endtime="20231128 22:15:38.885"/>
</kw>
<while condition="${cntS} &lt; 1" limit="10">
<iter>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:38.888" endtime="20231128 22:15:38.888"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:38.886" endtime="20231128 22:15:38.889"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:38.886" endtime="20231128 22:15:38.890"/>
</while>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:38.892" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Optio animi accusantium totam.")]</msg>
<status status="PASS" starttime="20231128 22:15:38.891" endtime="20231128 22:15:38.892"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:38.906" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:38.893" endtime="20231128 22:15:38.907"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 22:15:38.908" endtime="20231128 22:15:38.909"/>
</kw>
<status status="PASS" starttime="20231128 22:15:38.741" endtime="20231128 22:15:38.910"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:39.023" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:38.921" endtime="20231128 22:15:39.023"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.025" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:39.024" endtime="20231128 22:15:39.025"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:39.041" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.026" endtime="20231128 22:15:39.041"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:39.042" endtime="20231128 22:15:39.043"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.042" endtime="20231128 22:15:39.044"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.041" endtime="20231128 22:15:39.044"/>
</if>
<status status="PASS" starttime="20231128 22:15:38.920" endtime="20231128 22:15:39.044"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:39.049" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231128 22:15:39.047" endtime="20231128 22:15:39.050"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:39.051" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:39.052" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 22:15:39.051" endtime="20231128 22:15:39.052"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.055" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:39.053" endtime="20231128 22:15:39.055"/>
</kw>
<status status="PASS" starttime="20231128 22:15:39.052" endtime="20231128 22:15:39.055"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.052" endtime="20231128 22:15:39.056"/>
</if>
<msg timestamp="20231128 22:15:39.056" level="INFO">${name} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:39.045" endtime="20231128 22:15:39.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.057" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Aperiam.")]</msg>
<status status="PASS" starttime="20231128 22:15:39.057" endtime="20231128 22:15:39.058"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:39.070" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.059" endtime="20231128 22:15:39.070"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &lt; 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 22:15:39.071" endtime="20231128 22:15:39.072"/>
</kw>
<status status="PASS" starttime="20231128 22:15:38.918" endtime="20231128 22:15:39.073"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:39.185" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:39.084" endtime="20231128 22:15:39.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.186" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:39.185" endtime="20231128 22:15:39.186"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:39.194" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.186" endtime="20231128 22:15:39.195"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:39.196" endtime="20231128 22:15:39.197"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.195" endtime="20231128 22:15:39.198"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.195" endtime="20231128 22:15:39.199"/>
</if>
<status status="PASS" starttime="20231128 22:15:39.083" endtime="20231128 22:15:39.199"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.202" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231128 22:15:39.201" endtime="20231128 22:15:39.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.203" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231128 22:15:39.203" endtime="20231128 22:15:39.203"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:39.205" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:39.204" endtime="20231128 22:15:39.205"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:39.206" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:39.206" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.205" endtime="20231128 22:15:39.206"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:39.207" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231128 22:15:39.207" endtime="20231128 22:15:39.207"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:39.208" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:39.208" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.208" endtime="20231128 22:15:39.208"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.209" endtime="20231128 22:15:39.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.210" endtime="20231128 22:15:39.210"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.209" endtime="20231128 22:15:39.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.211" endtime="20231128 22:15:39.211"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.211" endtime="20231128 22:15:39.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.212" endtime="20231128 22:15:39.213"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.210" endtime="20231128 22:15:39.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.216" endtime="20231128 22:15:39.216"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.217" endtime="20231128 22:15:39.218"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.214" endtime="20231128 22:15:39.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.219" endtime="20231128 22:15:39.219"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.220" endtime="20231128 22:15:39.220"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.218" endtime="20231128 22:15:39.221"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.223" endtime="20231128 22:15:39.223"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.221" endtime="20231128 22:15:39.223"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231128 22:15:39.224" endtime="20231128 22:15:39.224"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.223" endtime="20231128 22:15:39.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.225" endtime="20231128 22:15:39.225"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.226" endtime="20231128 22:15:39.226"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.226" endtime="20231128 22:15:39.226"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.224" endtime="20231128 22:15:39.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.227" endtime="20231128 22:15:39.227"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.227" endtime="20231128 22:15:39.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.228" endtime="20231128 22:15:39.229"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.228" endtime="20231128 22:15:39.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.230" endtime="20231128 22:15:39.230"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.229" endtime="20231128 22:15:39.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.233" endtime="20231128 22:15:39.233"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.232" endtime="20231128 22:15:39.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.234" endtime="20231128 22:15:39.235"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.234" endtime="20231128 22:15:39.235"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.209" endtime="20231128 22:15:39.235"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:39.236" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:39.237" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.235" endtime="20231128 22:15:39.237"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.238" endtime="20231128 22:15:39.239"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.238" endtime="20231128 22:15:39.239"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.237" endtime="20231128 22:15:39.239"/>
</if>
<msg timestamp="20231128 22:15:39.239" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231128 22:15:39.200" endtime="20231128 22:15:39.240"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231128 22:15:39.241" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231128 22:15:39.240" endtime="20231128 22:15:39.241"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:39.241" endtime="20231128 22:15:39.306"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:39.307" endtime="20231128 22:15:39.358"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231128 22:15:39.359" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231128 22:15:39.358" endtime="20231128 22:15:39.393"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231128 22:15:39.433" level="INFO">Text: ''</msg>
<msg timestamp="20231128 22:15:39.434" level="INFO">${condition} = </msg>
<status status="PASS" starttime="20231128 22:15:39.394" endtime="20231128 22:15:39.434"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.437" endtime="20231128 22:15:39.438"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.439" endtime="20231128 22:15:39.439"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.435" endtime="20231128 22:15:39.440"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:39.435" endtime="20231128 22:15:39.440"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231128 22:15:39.441" endtime="20231128 22:15:39.508"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:39.510" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:39.511" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.509" endtime="20231128 22:15:39.511"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231128 22:15:39.513" endtime="20231128 22:15:39.513"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.512" endtime="20231128 22:15:39.515"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.511" endtime="20231128 22:15:39.516"/>
</if>
<status status="PASS" starttime="20231128 22:15:39.081" endtime="20231128 22:15:39.516"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:39.625" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:39.523" endtime="20231128 22:15:39.625"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:39.626" endtime="20231128 22:15:39.858"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:39.961" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:39.860" endtime="20231128 22:15:39.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:39.962" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:39.961" endtime="20231128 22:15:39.962"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:39.972" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:39.962" endtime="20231128 22:15:39.972"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:39.974" endtime="20231128 22:15:39.975"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:39.973" endtime="20231128 22:15:39.975"/>
</branch>
<status status="PASS" starttime="20231128 22:15:39.973" endtime="20231128 22:15:39.976"/>
</if>
<status status="PASS" starttime="20231128 22:15:39.859" endtime="20231128 22:15:39.976"/>
</kw>
<status status="PASS" starttime="20231128 22:15:39.521" endtime="20231128 22:15:39.977"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:40.090" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:39.988" endtime="20231128 22:15:40.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:40.091" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:40.091" endtime="20231128 22:15:40.091"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:40.100" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:40.092" endtime="20231128 22:15:40.101"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:40.102" endtime="20231128 22:15:40.103"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:40.101" endtime="20231128 22:15:40.103"/>
</branch>
<status status="PASS" starttime="20231128 22:15:40.101" endtime="20231128 22:15:40.104"/>
</if>
<status status="PASS" starttime="20231128 22:15:39.987" endtime="20231128 22:15:40.104"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:40.108" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231128 22:15:40.107" endtime="20231128 22:15:40.108"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:40.110" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:40.111" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 22:15:40.109" endtime="20231128 22:15:40.111"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:40.114" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:40.112" endtime="20231128 22:15:40.114"/>
</kw>
<status status="PASS" starttime="20231128 22:15:40.112" endtime="20231128 22:15:40.115"/>
</branch>
<status status="PASS" starttime="20231128 22:15:40.111" endtime="20231128 22:15:40.116"/>
</if>
<msg timestamp="20231128 22:15:40.116" level="INFO">${name} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:40.105" endtime="20231128 22:15:40.117"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:40.124" level="INFO">${cntS} = 6</msg>
<status status="PASS" starttime="20231128 22:15:40.117" endtime="20231128 22:15:40.125"/>
</kw>
<while condition="${cntS} &lt; 1" limit="10">
<iter>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:40.127" endtime="20231128 22:15:40.128"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:40.126" endtime="20231128 22:15:40.129"/>
</iter>
<status status="NOT RUN" starttime="20231128 22:15:40.126" endtime="20231128 22:15:40.129"/>
</while>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:40.133" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Aperiam.")]</msg>
<status status="PASS" starttime="20231128 22:15:40.131" endtime="20231128 22:15:40.133"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:40.143" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231128 22:15:40.134" endtime="20231128 22:15:40.144"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231128 22:15:40.145" endtime="20231128 22:15:40.146"/>
</kw>
<status status="PASS" starttime="20231128 22:15:39.986" endtime="20231128 22:15:40.147"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:40.254" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:40.152" endtime="20231128 22:15:40.254"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:40.355" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:40.255" endtime="20231128 22:15:40.355"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:40.356" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:40.355" endtime="20231128 22:15:40.356"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:40.365" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:40.356" endtime="20231128 22:15:40.366"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:40.368" endtime="20231128 22:15:40.369"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:40.367" endtime="20231128 22:15:40.369"/>
</branch>
<status status="PASS" starttime="20231128 22:15:40.367" endtime="20231128 22:15:40.370"/>
</if>
<status status="PASS" starttime="20231128 22:15:40.254" endtime="20231128 22:15:40.370"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:40.373" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231128 22:15:40.372" endtime="20231128 22:15:40.373"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:40.374" level="INFO">Length is 1</msg>
<msg timestamp="20231128 22:15:40.374" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231128 22:15:40.374" endtime="20231128 22:15:40.375"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:40.376" level="INFO">${text} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:40.375" endtime="20231128 22:15:40.377"/>
</kw>
<status status="PASS" starttime="20231128 22:15:40.375" endtime="20231128 22:15:40.377"/>
</branch>
<status status="PASS" starttime="20231128 22:15:40.375" endtime="20231128 22:15:40.377"/>
</if>
<msg timestamp="20231128 22:15:40.377" level="INFO">${name} = PO_11 Aperiam.</msg>
<status status="PASS" starttime="20231128 22:15:40.371" endtime="20231128 22:15:40.377"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231128 22:15:40.378" endtime="20231128 22:15:40.378"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:40.379" endtime="20231128 22:15:40.379"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:40.380" endtime="20231128 22:15:40.381"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:40.379" endtime="20231128 22:15:40.382"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231128 22:15:40.383" endtime="20231128 22:15:40.383"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:40.384" endtime="20231128 22:15:40.384"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:40.382" endtime="20231128 22:15:40.385"/>
</branch>
<status status="NOT RUN" starttime="20231128 22:15:40.379" endtime="20231128 22:15:40.385"/>
</if>
<status status="NOT RUN" starttime="20231128 22:15:40.378" endtime="20231128 22:15:40.385"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231128 22:15:40.386" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_11 Aperiam.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231128 22:15:40.386" endtime="20231128 22:15:40.387"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:40.387" endtime="20231128 22:15:40.517"/>
</kw>
<status status="PASS" starttime="20231128 22:15:40.385" endtime="20231128 22:15:40.518"/>
</branch>
<status status="PASS" starttime="20231128 22:15:40.378" endtime="20231128 22:15:40.518"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:40.521" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:40.520" endtime="20231128 22:15:40.521"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:40.535" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231128 22:15:40.522" endtime="20231128 22:15:40.535"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:40.537" endtime="20231128 22:15:40.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:41.044" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:40.943" endtime="20231128 22:15:41.044"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:41.151" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:41.046" endtime="20231128 22:15:41.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:41.153" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:41.153" endtime="20231128 22:15:41.154"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:41.173" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:41.155" endtime="20231128 22:15:41.175"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:41.178" endtime="20231128 22:15:41.179"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:41.177" endtime="20231128 22:15:41.180"/>
</branch>
<status status="PASS" starttime="20231128 22:15:41.177" endtime="20231128 22:15:41.180"/>
</if>
<status status="PASS" starttime="20231128 22:15:41.045" endtime="20231128 22:15:41.183"/>
</kw>
<status status="PASS" starttime="20231128 22:15:40.536" endtime="20231128 22:15:41.185"/>
</branch>
<status status="PASS" starttime="20231128 22:15:40.536" endtime="20231128 22:15:41.187"/>
</if>
<status status="PASS" starttime="20231128 22:15:40.519" endtime="20231128 22:15:41.188"/>
</kw>
<status status="PASS" starttime="20231128 22:15:40.151" endtime="20231128 22:15:41.188"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;${name1}&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:41.313" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:41.210" endtime="20231128 22:15:41.313"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:41.419" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:41.318" endtime="20231128 22:15:41.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:41.421" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:41.420" endtime="20231128 22:15:41.421"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:41.433" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:41.422" endtime="20231128 22:15:41.434"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:41.435" endtime="20231128 22:15:41.436"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:41.435" endtime="20231128 22:15:41.436"/>
</branch>
<status status="PASS" starttime="20231128 22:15:41.434" endtime="20231128 22:15:41.437"/>
</if>
<status status="PASS" starttime="20231128 22:15:41.317" endtime="20231128 22:15:41.437"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:41.441" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:41.440" endtime="20231128 22:15:41.441"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:41.443" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:41.443" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:41.442" endtime="20231128 22:15:41.444"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:41.446" endtime="20231128 22:15:41.446"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:41.445" endtime="20231128 22:15:41.448"/>
</branch>
<status status="PASS" starttime="20231128 22:15:41.444" endtime="20231128 22:15:41.449"/>
</if>
<msg timestamp="20231128 22:15:41.450" level="INFO">${name} = PO_11 Optio animi accusantium totam.</msg>
<status status="PASS" starttime="20231128 22:15:41.438" endtime="20231128 22:15:41.450"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231128 22:15:41.452" endtime="20231128 22:15:41.453"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:41.454" endtime="20231128 22:15:41.455"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:41.457" endtime="20231128 22:15:41.458"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:41.456" endtime="20231128 22:15:41.458"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231128 22:15:41.460" endtime="20231128 22:15:41.461"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231128 22:15:41.462" endtime="20231128 22:15:41.463"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:41.459" endtime="20231128 22:15:41.466"/>
</branch>
<status status="NOT RUN" starttime="20231128 22:15:41.455" endtime="20231128 22:15:41.467"/>
</if>
<status status="NOT RUN" starttime="20231128 22:15:41.451" endtime="20231128 22:15:41.467"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231128 22:15:41.471" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_11 Optio animi accusantium totam.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231128 22:15:41.468" endtime="20231128 22:15:41.471"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:41.472" endtime="20231128 22:15:43.088"/>
</kw>
<status status="PASS" starttime="20231128 22:15:41.468" endtime="20231128 22:15:43.089"/>
</branch>
<status status="PASS" starttime="20231128 22:15:41.451" endtime="20231128 22:15:43.089"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:43.090" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:43.090" endtime="20231128 22:15:43.090"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:43.100" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231128 22:15:43.091" endtime="20231128 22:15:43.100"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:43.103" endtime="20231128 22:15:43.375"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:43.478" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:43.376" endtime="20231128 22:15:43.478"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:43.579" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:43.479" endtime="20231128 22:15:43.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:43.583" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:43.579" endtime="20231128 22:15:43.584"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:43.628" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:43.586" endtime="20231128 22:15:43.628"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:43.632" endtime="20231128 22:15:43.633"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:43.629" endtime="20231128 22:15:43.634"/>
</branch>
<status status="PASS" starttime="20231128 22:15:43.629" endtime="20231128 22:15:43.635"/>
</if>
<status status="PASS" starttime="20231128 22:15:43.478" endtime="20231128 22:15:43.637"/>
</kw>
<status status="PASS" starttime="20231128 22:15:43.101" endtime="20231128 22:15:43.638"/>
</branch>
<status status="PASS" starttime="20231128 22:15:43.101" endtime="20231128 22:15:43.639"/>
</if>
<status status="PASS" starttime="20231128 22:15:43.089" endtime="20231128 22:15:43.639"/>
</kw>
<status status="PASS" starttime="20231128 22:15:41.209" endtime="20231128 22:15:43.640"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Cate1&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:43.796" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:43.695" endtime="20231128 22:15:43.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:43.803" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:43.802" endtime="20231128 22:15:43.803"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:43.818" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:43.803" endtime="20231128 22:15:43.818"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:43.820" endtime="20231128 22:15:43.821"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:43.819" endtime="20231128 22:15:43.821"/>
</branch>
<status status="PASS" starttime="20231128 22:15:43.819" endtime="20231128 22:15:43.822"/>
</if>
<status status="PASS" starttime="20231128 22:15:43.694" endtime="20231128 22:15:43.822"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231128 22:15:43.826" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231128 22:15:43.825" endtime="20231128 22:15:43.826"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231128 22:15:43.828" level="INFO">Length is 0</msg>
<msg timestamp="20231128 22:15:43.829" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231128 22:15:43.827" endtime="20231128 22:15:43.829"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231128 22:15:43.834" endtime="20231128 22:15:43.835"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:43.832" endtime="20231128 22:15:43.835"/>
</branch>
<status status="PASS" starttime="20231128 22:15:43.832" endtime="20231128 22:15:43.836"/>
</if>
<msg timestamp="20231128 22:15:43.837" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231128 22:15:43.823" endtime="20231128 22:15:43.837"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231128 22:15:43.840" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231128 22:15:43.838" endtime="20231128 22:15:43.840"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:43.841" endtime="20231128 22:15:45.442"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:45.444" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231128 22:15:45.444" endtime="20231128 22:15:45.444"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:45.457" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231128 22:15:45.445" endtime="20231128 22:15:45.457"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231128 22:15:45.459" endtime="20231128 22:15:45.755"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:45.857" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:45.756" endtime="20231128 22:15:45.858"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231128 22:15:45.962" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231128 22:15:45.860" endtime="20231128 22:15:45.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231128 22:15:45.963" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231128 22:15:45.962" endtime="20231128 22:15:45.964"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231128 22:15:45.977" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231128 22:15:45.966" endtime="20231128 22:15:45.977"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231128 22:15:45.979" endtime="20231128 22:15:45.980"/>
</kw>
<status status="NOT RUN" starttime="20231128 22:15:45.978" endtime="20231128 22:15:45.982"/>
</branch>
<status status="PASS" starttime="20231128 22:15:45.978" endtime="20231128 22:15:45.983"/>
</if>
<status status="PASS" starttime="20231128 22:15:45.858" endtime="20231128 22:15:45.983"/>
</kw>
<status status="PASS" starttime="20231128 22:15:45.458" endtime="20231128 22:15:45.984"/>
</branch>
<status status="PASS" starttime="20231128 22:15:45.458" endtime="20231128 22:15:45.985"/>
</if>
<status status="PASS" starttime="20231128 22:15:45.443" endtime="20231128 22:15:45.986"/>
</kw>
<status status="PASS" starttime="20231128 22:15:43.693" endtime="20231128 22:15:45.986"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231128 22:15:46.588" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231128 22:15:45.991" endtime="20231128 22:15:46.589"/>
</kw>
<status status="PASS" starttime="20231128 22:15:45.989" endtime="20231128 22:15:46.590"/>
</kw>
<tag>Search</tag>
<status status="PASS" starttime="20231128 22:14:55.701" endtime="20231128 22:15:46.598"/>
</test>
<status status="PASS" starttime="20231128 22:14:53.422" endtime="20231128 22:15:46.655"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Post">Post</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

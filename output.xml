<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231028 09:09:51.566" rpa="false" schemaversion="4">
<suite id="s1" name="Login" source="d:\Intern test\Automation\Auto_Web\testcases\login.robot">
<test id="s1-t1" name="LO_07 Verify the remember account function when click on &quot;Ghi nhớ&quot; check field" line="56">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231028 09:09:53.693" endtime="20231028 09:09:53.707"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231028 09:09:53.710" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Intern test\\Automation\\browser\\traces\\f3a4257d-43cc-49a6-8ef9-c45c6bd500e3"}</msg>
<msg timestamp="20231028 09:09:54.909" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Intern test\\Automation\\browser\\traces\\f3a4257d-43cc-49a6-8ef9-c45c6bd500e3"}</msg>
<status status="PASS" starttime="20231028 09:09:53.708" endtime="20231028 09:09:54.910"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231028 09:09:57.689" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231028 09:09:57.689" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231028 09:09:54.911" endtime="20231028 09:09:57.689"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231028 09:09:57.689" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231028 09:09:57.689" endtime="20231028 09:09:57.689"/>
</kw>
<status status="PASS" starttime="20231028 09:09:53.691" endtime="20231028 09:09:57.689"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 09:09:57.722" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231028 09:09:57.722" endtime="20231028 09:09:57.722"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 09:09:57.722" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231028 09:09:57.722" endtime="20231028 09:09:57.722"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 09:09:57.722" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231028 09:09:57.722" endtime="20231028 09:09:57.722"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:57.722" level="INFO">Length is 0</msg>
<msg timestamp="20231028 09:09:57.722" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231028 09:09:57.722" endtime="20231028 09:09:57.722"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 09:09:57.722" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231028 09:09:57.722" endtime="20231028 09:09:57.722"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:57.722" level="INFO">Length is 0</msg>
<msg timestamp="20231028 09:09:57.722" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231028 09:09:57.722" endtime="20231028 09:09:57.737"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.755" endtime="20231028 09:09:57.756"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.756" endtime="20231028 09:09:57.757"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.759" endtime="20231028 09:09:57.760"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.758" endtime="20231028 09:09:57.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231028 09:09:57.762" endtime="20231028 09:09:57.762"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.761" endtime="20231028 09:09:57.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.765" endtime="20231028 09:09:57.766"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.768" endtime="20231028 09:09:57.768"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.768" endtime="20231028 09:09:57.773"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.763" endtime="20231028 09:09:57.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.777" endtime="20231028 09:09:57.777"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.774" endtime="20231028 09:09:57.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.777" endtime="20231028 09:09:57.777"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.777" endtime="20231028 09:09:57.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.798" endtime="20231028 09:09:57.799"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.777" endtime="20231028 09:09:57.800"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.802" endtime="20231028 09:09:57.802"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.800" endtime="20231028 09:09:57.802"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 09:09:57.810" endtime="20231028 09:09:57.810"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:57.809" endtime="20231028 09:09:57.811"/>
</branch>
<status status="PASS" starttime="20231028 09:09:57.737" endtime="20231028 09:09:57.929"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:57.930" level="INFO">Length is 15</msg>
<msg timestamp="20231028 09:09:57.930" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231028 09:09:57.929" endtime="20231028 09:09:57.931"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231028 09:09:57.933" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231028 09:09:57.932" endtime="20231028 09:09:57.934"/>
</kw>
<status status="PASS" starttime="20231028 09:09:57.931" endtime="20231028 09:09:57.934"/>
</branch>
<status status="PASS" starttime="20231028 09:09:57.931" endtime="20231028 09:09:57.935"/>
</if>
<msg timestamp="20231028 09:09:57.935" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231028 09:09:57.706" endtime="20231028 09:09:57.936"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231028 09:09:57.939" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231028 09:09:57.936" endtime="20231028 09:09:57.940"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:09:57.942" endtime="20231028 09:09:58.345"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:09:58.345" endtime="20231028 09:09:58.394"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231028 09:09:58.410" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231028 09:09:58.394" endtime="20231028 09:09:58.478"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:58.478" level="INFO">Length is 15</msg>
<msg timestamp="20231028 09:09:58.478" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231028 09:09:58.478" endtime="20231028 09:09:58.478"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231028 09:09:58.478" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231028 09:09:58.478" endtime="20231028 09:09:58.478"/>
</kw>
<status status="PASS" starttime="20231028 09:09:58.478" endtime="20231028 09:09:58.478"/>
</branch>
<status status="PASS" starttime="20231028 09:09:58.478" endtime="20231028 09:09:58.478"/>
</if>
<status status="PASS" starttime="20231028 09:09:57.706" endtime="20231028 09:09:58.478"/>
</kw>
<kw name="When Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 09:09:58.493" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231028 09:09:58.493" endtime="20231028 09:09:58.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 09:09:58.493" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231028 09:09:58.493" endtime="20231028 09:09:58.493"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 09:09:58.506" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231028 09:09:58.493" endtime="20231028 09:09:58.506"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:58.509" level="INFO">Length is 0</msg>
<msg timestamp="20231028 09:09:58.510" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231028 09:09:58.508" endtime="20231028 09:09:58.510"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 09:09:58.512" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231028 09:09:58.511" endtime="20231028 09:09:58.513"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:58.515" level="INFO">Length is 0</msg>
<msg timestamp="20231028 09:09:58.515" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231028 09:09:58.514" endtime="20231028 09:09:58.515"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.517" endtime="20231028 09:09:58.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.518" endtime="20231028 09:09:58.520"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.516" endtime="20231028 09:09:58.520"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.525" endtime="20231028 09:09:58.526"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.527" endtime="20231028 09:09:58.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.528" endtime="20231028 09:09:58.528"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.520" endtime="20231028 09:09:58.529"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.529" endtime="20231028 09:09:58.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.530"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.546"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.530" endtime="20231028 09:09:58.546"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.546"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.546"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.546"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.546"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.546"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.546"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.557" endtime="20231028 09:09:58.558"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.546" endtime="20231028 09:09:58.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.560" endtime="20231028 09:09:58.561"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.560" endtime="20231028 09:09:58.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.563" endtime="20231028 09:09:58.563"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.562" endtime="20231028 09:09:58.563"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 09:09:58.564" endtime="20231028 09:09:58.564"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:58.564" endtime="20231028 09:09:58.565"/>
</branch>
<status status="PASS" starttime="20231028 09:09:58.516" endtime="20231028 09:09:58.565"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:58.566" level="INFO">Length is 6</msg>
<msg timestamp="20231028 09:09:58.567" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231028 09:09:58.565" endtime="20231028 09:09:58.567"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231028 09:09:58.569" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231028 09:09:58.568" endtime="20231028 09:09:58.569"/>
</kw>
<status status="PASS" starttime="20231028 09:09:58.567" endtime="20231028 09:09:58.574"/>
</branch>
<status status="PASS" starttime="20231028 09:09:58.567" endtime="20231028 09:09:58.575"/>
</if>
<msg timestamp="20231028 09:09:58.576" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231028 09:09:58.493" endtime="20231028 09:09:58.576"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231028 09:09:58.578" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231028 09:09:58.577" endtime="20231028 09:09:58.578"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:09:58.578" endtime="20231028 09:09:58.715"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:09:58.724" endtime="20231028 09:09:58.792"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231028 09:09:58.793" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231028 09:09:58.792" endtime="20231028 09:09:58.858"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:58.860" level="INFO">Length is 6</msg>
<msg timestamp="20231028 09:09:58.861" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231028 09:09:58.859" endtime="20231028 09:09:58.862"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231028 09:09:58.864" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231028 09:09:58.863" endtime="20231028 09:09:58.864"/>
</kw>
<status status="PASS" starttime="20231028 09:09:58.862" endtime="20231028 09:09:58.865"/>
</branch>
<status status="PASS" starttime="20231028 09:09:58.862" endtime="20231028 09:09:58.866"/>
</if>
<status status="PASS" starttime="20231028 09:09:58.493" endtime="20231028 09:09:58.866"/>
</kw>
<kw name="When Click on &quot;Ghi nhớ&quot; check box" library="common" sourcename="Click on &quot;${name}&quot; check box">
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//span[contains(text(),"${name}")]//ancestor::label/span[contains(@class,'ant-checkbox')]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231028 09:09:58.928" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231028 09:09:58.929" level="INFO">${element} = //span[contains(text(),"Ghi nhớ")]//ancestor::label/span[contains(@class,'ant-checkbox')]</msg>
<status status="PASS" starttime="20231028 09:09:58.907" endtime="20231028 09:09:58.929"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:09:58.929" endtime="20231028 09:09:59.058"/>
</kw>
<status status="PASS" starttime="20231028 09:09:58.896" endtime="20231028 09:09:59.058"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231028 09:09:59.158" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231028 09:09:59.058" endtime="20231028 09:09:59.158"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231028 09:09:59.173" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231028 09:09:59.158" endtime="20231028 09:09:59.173"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:09:59.173" endtime="20231028 09:09:59.281"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 09:09:59.281" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231028 09:09:59.281" endtime="20231028 09:09:59.281"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231028 09:09:59.307" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231028 09:09:59.281" endtime="20231028 09:09:59.307"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231028 09:09:59.309" endtime="20231028 09:09:59.310"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231028 09:09:59.311" endtime="20231028 09:09:59.312"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231028 09:09:59.312" endtime="20231028 09:09:59.313"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:59.308" endtime="20231028 09:09:59.313"/>
</branch>
<status status="PASS" starttime="20231028 09:09:59.308" endtime="20231028 09:09:59.314"/>
</if>
<status status="PASS" starttime="20231028 09:09:59.281" endtime="20231028 09:09:59.314"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231028 09:09:59.352" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 09:09:59.352" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 09:09:59.382" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 09:09:59.383" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 09:09:59.395" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231028 09:09:59.315" endtime="20231028 09:09:59.395"/>
</kw>
<status status="PASS" starttime="20231028 09:09:59.173" endtime="20231028 09:09:59.395"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231028 09:09:59.395" endtime="20231028 09:09:59.395"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231028 09:09:59.395" endtime="20231028 09:09:59.395"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231028 09:09:59.395" endtime="20231028 09:09:59.395"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:59.395" endtime="20231028 09:09:59.395"/>
</branch>
<status status="PASS" starttime="20231028 09:09:59.173" endtime="20231028 09:09:59.395"/>
</if>
<status status="PASS" starttime="20231028 09:09:59.058" endtime="20231028 09:09:59.395"/>
</kw>
<kw name="Then User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 09:09:59.411" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231028 09:09:59.411" endtime="20231028 09:09:59.411"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 09:09:59.411" level="INFO">Length is 0</msg>
<msg timestamp="20231028 09:09:59.411" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231028 09:09:59.411" endtime="20231028 09:09:59.411"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231028 09:09:59.411" endtime="20231028 09:09:59.427"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:09:59.411" endtime="20231028 09:09:59.427"/>
</branch>
<status status="PASS" starttime="20231028 09:09:59.411" endtime="20231028 09:09:59.427"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231028 09:09:59.853" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231028 09:09:59.427" endtime="20231028 09:09:59.853"/>
</kw>
<status status="PASS" starttime="20231028 09:09:59.427" endtime="20231028 09:09:59.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 09:09:59.859" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231028 09:09:59.858" endtime="20231028 09:09:59.859"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231028 09:10:00.244" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231028 09:10:00.244" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231028 09:10:00.245" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231028 09:09:59.862" endtime="20231028 09:10:00.255"/>
</kw>
<status status="FAIL" starttime="20231028 09:09:59.861" endtime="20231028 09:10:00.258"/>
</kw>
<msg timestamp="20231028 09:10:00.259" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231028 09:09:59.860" endtime="20231028 09:10:00.259"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231028 09:10:00.261" endtime="20231028 09:10:00.262"/>
</kw>
<status status="NOT RUN" starttime="20231028 09:10:00.260" endtime="20231028 09:10:00.262"/>
</branch>
<status status="PASS" starttime="20231028 09:10:00.260" endtime="20231028 09:10:00.263"/>
</if>
<status status="PASS" starttime="20231028 09:09:59.411" endtime="20231028 09:10:00.263"/>
</kw>
<kw name="When Log out account" library="common">
<kw name="Click" library="Browser">
<arg>//img[contains(@alt,'Avatar')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:10:00.274" endtime="20231028 09:10:01.293"/>
</kw>
<kw name="Click" library="Browser">
<arg>//li[contains(text(),'Đăng xuất')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 09:10:01.294" endtime="20231028 09:10:01.760"/>
</kw>
<status status="PASS" starttime="20231028 09:10:00.272" endtime="20231028 09:10:01.760"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231028 09:10:02.606" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231028 09:10:01.763" endtime="20231028 09:10:02.606"/>
</kw>
<status status="PASS" starttime="20231028 09:10:01.761" endtime="20231028 09:10:02.606"/>
</kw>
<tag>Login</tag>
<tag>Remember</tag>
<status status="PASS" starttime="20231028 09:09:53.675" endtime="20231028 09:10:02.619"/>
</test>
<status status="PASS" starttime="20231028 09:09:51.574" endtime="20231028 09:10:02.619"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Login</stat>
<stat pass="1" fail="0" skip="0">Remember</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

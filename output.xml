<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231101 14:41:07.967" rpa="false" schemaversion="4">
<suite id="s1" name="Data" source="d:\Intern test\Automation\Auto_Web\testcases\data.robot">
<test id="s1-t1" name="DA_10 Verify the search function when enter the name was not existed" line="118">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231101 14:41:10.274" endtime="20231101 14:41:10.289"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231101 14:41:10.292" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Intern test\\Automation\\browser\\traces\\07c5f0a2-1bfb-4fab-96a5-2357dd0ae39b"}</msg>
<msg timestamp="20231101 14:41:11.828" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Intern test\\Automation\\browser\\traces\\07c5f0a2-1bfb-4fab-96a5-2357dd0ae39b"}</msg>
<status status="PASS" starttime="20231101 14:41:10.290" endtime="20231101 14:41:11.829"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231101 14:41:16.062" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231101 14:41:16.063" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231101 14:41:11.830" endtime="20231101 14:41:16.064"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231101 14:41:16.066" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231101 14:41:16.065" endtime="20231101 14:41:16.066"/>
</kw>
<status status="PASS" starttime="20231101 14:41:10.273" endtime="20231101 14:41:16.067"/>
</kw>
<kw name="Create a category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:16.320" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:16.115" endtime="20231101 14:41:16.320"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231101 14:41:16.321" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231101 14:41:16.321" endtime="20231101 14:41:16.322"/>
</kw>
<status status="FAIL" starttime="20231101 14:41:16.114" endtime="20231101 14:41:16.322"/>
</kw>
<msg timestamp="20231101 14:41:16.323" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231101 14:41:16.111" endtime="20231101 14:41:16.323"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231101 14:41:16.325" endtime="20231101 14:41:16.326"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.323" endtime="20231101 14:41:16.327"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Quản lý dữ liệu&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:16.337" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:16.337" endtime="20231101 14:41:16.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:16.339" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:16.338" endtime="20231101 14:41:16.339"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:16.346" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:16.341" endtime="20231101 14:41:16.347"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:16.353" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:16.355" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:16.349" endtime="20231101 14:41:16.359"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:16.370" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:16.361" endtime="20231101 14:41:16.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:16.372" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:16.373" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:16.371" endtime="20231101 14:41:16.380"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.382" endtime="20231101 14:41:16.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.384" endtime="20231101 14:41:16.384"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.381" endtime="20231101 14:41:16.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.387" endtime="20231101 14:41:16.387"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.388" endtime="20231101 14:41:16.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.390" endtime="20231101 14:41:16.394"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.386" endtime="20231101 14:41:16.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.397" endtime="20231101 14:41:16.398"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.398" endtime="20231101 14:41:16.399"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.396" endtime="20231101 14:41:16.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.402" endtime="20231101 14:41:16.402"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.404" endtime="20231101 14:41:16.404"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.400" endtime="20231101 14:41:16.405"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.406" endtime="20231101 14:41:16.410"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.405" endtime="20231101 14:41:16.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:16.413" endtime="20231101 14:41:16.414"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.412" endtime="20231101 14:41:16.415"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.417" endtime="20231101 14:41:16.418"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.419" endtime="20231101 14:41:16.420"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.421" endtime="20231101 14:41:16.422"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.415" endtime="20231101 14:41:16.422"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.426" endtime="20231101 14:41:16.427"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.423" endtime="20231101 14:41:16.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.429" endtime="20231101 14:41:16.431"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.428" endtime="20231101 14:41:16.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.454" endtime="20231101 14:41:16.456"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.432" endtime="20231101 14:41:16.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.463" endtime="20231101 14:41:16.464"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.462" endtime="20231101 14:41:16.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.466" endtime="20231101 14:41:16.467"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.465" endtime="20231101 14:41:16.467"/>
</branch>
<status status="PASS" starttime="20231101 14:41:16.380" endtime="20231101 14:41:16.468"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:16.470" level="INFO">Length is 15</msg>
<msg timestamp="20231101 14:41:16.470" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231101 14:41:16.468" endtime="20231101 14:41:16.471"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:16.503" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 14:41:16.480" endtime="20231101 14:41:16.504"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.472" endtime="20231101 14:41:16.506"/>
</branch>
<status status="PASS" starttime="20231101 14:41:16.471" endtime="20231101 14:41:16.513"/>
</if>
<msg timestamp="20231101 14:41:16.514" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 14:41:16.335" endtime="20231101 14:41:16.514"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:16.516" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:16.515" endtime="20231101 14:41:16.517"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:16.517" endtime="20231101 14:41:16.737"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:16.738" endtime="20231101 14:41:16.803"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:16.806" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:16.804" endtime="20231101 14:41:16.868"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:16.947" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231101 14:41:16.947" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 14:41:16.869" endtime="20231101 14:41:16.947"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.949" endtime="20231101 14:41:16.950"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.951" endtime="20231101 14:41:16.951"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.948" endtime="20231101 14:41:16.952"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:16.948" endtime="20231101 14:41:16.952"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:16.954" level="INFO">Length is 15</msg>
<msg timestamp="20231101 14:41:16.954" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231101 14:41:16.953" endtime="20231101 14:41:16.955"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:16.961" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 14:41:16.956" endtime="20231101 14:41:16.962"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.955" endtime="20231101 14:41:16.962"/>
</branch>
<status status="PASS" starttime="20231101 14:41:16.955" endtime="20231101 14:41:16.963"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:16.963" endtime="20231101 14:41:16.979"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.333" endtime="20231101 14:41:16.980"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:16.984" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:16.983" endtime="20231101 14:41:16.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:16.986" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:16.985" endtime="20231101 14:41:16.986"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:16.987" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:16.987" endtime="20231101 14:41:16.988"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:16.989" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:16.993" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:16.988" endtime="20231101 14:41:16.994"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:16.995" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:16.994" endtime="20231101 14:41:16.996"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:16.997" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:16.998" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:16.996" endtime="20231101 14:41:16.998"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:16.999" endtime="20231101 14:41:17.000"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.001" endtime="20231101 14:41:17.001"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:16.999" endtime="20231101 14:41:17.002"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.003" endtime="20231101 14:41:17.004"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.004" endtime="20231101 14:41:17.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.006" endtime="20231101 14:41:17.006"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.002" endtime="20231101 14:41:17.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.011" endtime="20231101 14:41:17.012"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.013" endtime="20231101 14:41:17.013"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.011" endtime="20231101 14:41:17.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.015" endtime="20231101 14:41:17.016"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.017" endtime="20231101 14:41:17.017"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.014" endtime="20231101 14:41:17.018"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.019" endtime="20231101 14:41:17.020"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.018" endtime="20231101 14:41:17.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:17.022" endtime="20231101 14:41:17.022"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.020" endtime="20231101 14:41:17.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.027" endtime="20231101 14:41:17.028"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.029" endtime="20231101 14:41:17.029"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.030" endtime="20231101 14:41:17.030"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.023" endtime="20231101 14:41:17.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.032" endtime="20231101 14:41:17.033"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.031" endtime="20231101 14:41:17.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.035" endtime="20231101 14:41:17.035"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.034" endtime="20231101 14:41:17.062"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.065" endtime="20231101 14:41:17.067"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.064" endtime="20231101 14:41:17.068"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.071" endtime="20231101 14:41:17.072"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.069" endtime="20231101 14:41:17.073"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.078" endtime="20231101 14:41:17.079"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.077" endtime="20231101 14:41:17.079"/>
</branch>
<status status="PASS" starttime="20231101 14:41:16.998" endtime="20231101 14:41:17.080"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:17.082" level="INFO">Length is 6</msg>
<msg timestamp="20231101 14:41:17.083" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231101 14:41:17.081" endtime="20231101 14:41:17.083"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:17.086" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231101 14:41:17.085" endtime="20231101 14:41:17.086"/>
</kw>
<status status="PASS" starttime="20231101 14:41:17.084" endtime="20231101 14:41:17.087"/>
</branch>
<status status="PASS" starttime="20231101 14:41:17.084" endtime="20231101 14:41:17.087"/>
</if>
<msg timestamp="20231101 14:41:17.088" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231101 14:41:16.982" endtime="20231101 14:41:17.088"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:17.090" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:17.088" endtime="20231101 14:41:17.092"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:17.093" endtime="20231101 14:41:17.201"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:17.202" endtime="20231101 14:41:17.252"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:17.254" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:17.253" endtime="20231101 14:41:17.317"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:17.367" level="INFO">Text: '123123'</msg>
<msg timestamp="20231101 14:41:17.368" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231101 14:41:17.318" endtime="20231101 14:41:17.368"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.370" endtime="20231101 14:41:17.371"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.371" endtime="20231101 14:41:17.372"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.369" endtime="20231101 14:41:17.372"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:17.369" endtime="20231101 14:41:17.373"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:17.378" level="INFO">Length is 6</msg>
<msg timestamp="20231101 14:41:17.378" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231101 14:41:17.377" endtime="20231101 14:41:17.379"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:17.382" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231101 14:41:17.381" endtime="20231101 14:41:17.383"/>
</kw>
<status status="PASS" starttime="20231101 14:41:17.380" endtime="20231101 14:41:17.383"/>
</branch>
<status status="PASS" starttime="20231101 14:41:17.379" endtime="20231101 14:41:17.384"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:17.385" endtime="20231101 14:41:17.395"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.981" endtime="20231101 14:41:17.396"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:17.499" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:17.398" endtime="20231101 14:41:17.499"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:17.514" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:17.500" endtime="20231101 14:41:17.514"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:17.516" endtime="20231101 14:41:17.697"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:17.701" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:17.700" endtime="20231101 14:41:17.701"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:17.718" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:17.702" endtime="20231101 14:41:17.720"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.723" endtime="20231101 14:41:17.727"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.729" endtime="20231101 14:41:17.730"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 14:41:17.730" endtime="20231101 14:41:17.731"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.721" endtime="20231101 14:41:17.732"/>
</branch>
<status status="PASS" starttime="20231101 14:41:17.721" endtime="20231101 14:41:17.732"/>
</if>
<status status="PASS" starttime="20231101 14:41:17.699" endtime="20231101 14:41:17.733"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 14:41:17.767" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:17.767" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:17.789" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:17.789" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:17.801" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 14:41:17.733" endtime="20231101 14:41:17.801"/>
</kw>
<status status="PASS" starttime="20231101 14:41:17.515" endtime="20231101 14:41:17.802"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.803" endtime="20231101 14:41:17.804"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 14:41:17.805" endtime="20231101 14:41:17.805"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.806" endtime="20231101 14:41:17.809"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.803" endtime="20231101 14:41:17.810"/>
</branch>
<status status="PASS" starttime="20231101 14:41:17.515" endtime="20231101 14:41:17.811"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:17.811" endtime="20231101 14:41:17.819"/>
</kw>
<status status="PASS" starttime="20231101 14:41:17.397" endtime="20231101 14:41:17.820"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:17.823" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:17.822" endtime="20231101 14:41:17.823"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:17.827" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:17.827" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:17.826" endtime="20231101 14:41:17.828"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:17.830" endtime="20231101 14:41:17.830"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:17.829" endtime="20231101 14:41:17.831"/>
</branch>
<status status="PASS" starttime="20231101 14:41:17.828" endtime="20231101 14:41:17.832"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:18.556" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 14:41:17.839" endtime="20231101 14:41:18.557"/>
</kw>
<status status="PASS" starttime="20231101 14:41:17.835" endtime="20231101 14:41:18.558"/>
</kw>
<status status="PASS" starttime="20231101 14:41:17.832" endtime="20231101 14:41:18.559"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:18.561" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 14:41:18.560" endtime="20231101 14:41:18.561"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 14:41:18.905" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 14:41:18.906" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 14:41:18.906" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 14:41:18.565" endtime="20231101 14:41:18.926"/>
</kw>
<status status="FAIL" starttime="20231101 14:41:18.562" endtime="20231101 14:41:18.927"/>
</kw>
<msg timestamp="20231101 14:41:18.927" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 14:41:18.562" endtime="20231101 14:41:18.927"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:18.928" endtime="20231101 14:41:18.929"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:18.928" endtime="20231101 14:41:18.929"/>
</branch>
<status status="PASS" starttime="20231101 14:41:18.927" endtime="20231101 14:41:18.929"/>
</if>
<status status="PASS" starttime="20231101 14:41:17.820" endtime="20231101 14:41:18.929"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.329" endtime="20231101 14:41:18.930"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:18.932" endtime="20231101 14:41:19.998"/>
</kw>
<status status="PASS" starttime="20231101 14:41:18.931" endtime="20231101 14:41:19.999"/>
</kw>
<kw name="Click &quot;Quản lý dữ liệu&quot; sub menu to &quot;/data&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:20.101" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:20.001" endtime="20231101 14:41:20.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:20.102" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:20.101" endtime="20231101 14:41:20.102"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:20.111" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:20.102" endtime="20231101 14:41:20.112"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:20.113" endtime="20231101 14:41:20.114"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:20.113" endtime="20231101 14:41:20.115"/>
</branch>
<status status="PASS" starttime="20231101 14:41:20.112" endtime="20231101 14:41:20.115"/>
</if>
<status status="PASS" starttime="20231101 14:41:20.000" endtime="20231101 14:41:20.116"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:20.117" endtime="20231101 14:41:20.439"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231101 14:41:20.446" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/vn/data</msg>
<status status="PASS" starttime="20231101 14:41:20.441" endtime="20231101 14:41:20.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231101 14:41:20.447" endtime="20231101 14:41:20.448"/>
</kw>
<status status="PASS" starttime="20231101 14:41:19.999" endtime="20231101 14:41:20.448"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.328" endtime="20231101 14:41:20.449"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:20.553" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:20.451" endtime="20231101 14:41:20.553"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:20.980" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:20.554" endtime="20231101 14:41:20.981"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:20.983" endtime="20231101 14:41:21.185"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.187" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:21.186" endtime="20231101 14:41:21.187"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:21.201" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:21.187" endtime="20231101 14:41:21.201"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.203" endtime="20231101 14:41:21.204"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.204" endtime="20231101 14:41:21.205"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 14:41:21.205" endtime="20231101 14:41:21.205"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.202" endtime="20231101 14:41:21.205"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.202" endtime="20231101 14:41:21.205"/>
</if>
<status status="PASS" starttime="20231101 14:41:21.185" endtime="20231101 14:41:21.206"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 14:41:21.226" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:21.227" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:21.244" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:21.244" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:21.252" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 14:41:21.206" endtime="20231101 14:41:21.252"/>
</kw>
<status status="PASS" starttime="20231101 14:41:20.982" endtime="20231101 14:41:21.253"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.254" endtime="20231101 14:41:21.255"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 14:41:21.255" endtime="20231101 14:41:21.256"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.258" endtime="20231101 14:41:21.259"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.253" endtime="20231101 14:41:21.260"/>
</branch>
<status status="PASS" starttime="20231101 14:41:20.981" endtime="20231101 14:41:21.260"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:21.261" endtime="20231101 14:41:21.467"/>
</kw>
<status status="PASS" starttime="20231101 14:41:20.450" endtime="20231101 14:41:21.467"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.328" endtime="20231101 14:41:21.467"/>
</branch>
<status status="PASS" starttime="20231101 14:41:16.323" endtime="20231101 14:41:21.468"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên loại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.470" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:21.469" endtime="20231101 14:41:21.470"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.470" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:21.470" endtime="20231101 14:41:21.471"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:21.472" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:21.471" endtime="20231101 14:41:21.472"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.477" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:21.477" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:21.473" endtime="20231101 14:41:21.478"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:21.479" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:21.478" endtime="20231101 14:41:21.479"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.480" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:21.480" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:21.479" endtime="20231101 14:41:21.480"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.482" endtime="20231101 14:41:21.482"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.483" endtime="20231101 14:41:21.483"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.480" endtime="20231101 14:41:21.483"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 14:41:21.484" level="INFO">${random} = Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.484" endtime="20231101 14:41:21.484"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 14:41:21.485" level="INFO">${words} = ['DA_10', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231101 14:41:21.485" endtime="20231101 14:41:21.485"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.487" level="INFO">${new_text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.486" endtime="20231101 14:41:21.487"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.483" endtime="20231101 14:41:21.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.488" endtime="20231101 14:41:21.488"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.488" endtime="20231101 14:41:21.489"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.488" endtime="20231101 14:41:21.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.489" endtime="20231101 14:41:21.490"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.493" endtime="20231101 14:41:21.493"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.489" endtime="20231101 14:41:21.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.494" endtime="20231101 14:41:21.494"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.494" endtime="20231101 14:41:21.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:21.495" endtime="20231101 14:41:21.495"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.495" endtime="20231101 14:41:21.496"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.496" endtime="20231101 14:41:21.496"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.497" endtime="20231101 14:41:21.497"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.498" endtime="20231101 14:41:21.498"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.496" endtime="20231101 14:41:21.499"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.499" endtime="20231101 14:41:21.499"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.499" endtime="20231101 14:41:21.499"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.500" endtime="20231101 14:41:21.500"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.500" endtime="20231101 14:41:21.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.501" endtime="20231101 14:41:21.501"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.501" endtime="20231101 14:41:21.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.502" endtime="20231101 14:41:21.503"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.502" endtime="20231101 14:41:21.503"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.504" endtime="20231101 14:41:21.504"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.503" endtime="20231101 14:41:21.504"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.480" endtime="20231101 14:41:21.504"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.505" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:21.505" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:21.505" endtime="20231101 14:41:21.505"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:21.510" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.506" endtime="20231101 14:41:21.511"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.506" endtime="20231101 14:41:21.511"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.506" endtime="20231101 14:41:21.511"/>
</if>
<msg timestamp="20231101 14:41:21.512" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.469" endtime="20231101 14:41:21.512"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:21.513" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên loại"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:21.512" endtime="20231101 14:41:21.514"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:21.514" endtime="20231101 14:41:21.717"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:21.719" endtime="20231101 14:41:21.773"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:21.776" level="INFO">Fills the text 'DA_10 Cumque quo.' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:21.774" endtime="20231101 14:41:21.818"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:21.860" level="INFO">Text: 'DA_10 Cumque quo.'</msg>
<msg timestamp="20231101 14:41:21.861" level="INFO">${condition} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.819" endtime="20231101 14:41:21.862"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.864" endtime="20231101 14:41:21.865"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.866" endtime="20231101 14:41:21.867"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.862" endtime="20231101 14:41:21.867"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:21.862" endtime="20231101 14:41:21.868"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.870" level="INFO">Length is 17</msg>
<msg timestamp="20231101 14:41:21.870" level="INFO">${cnt} = 17</msg>
<status status="PASS" starttime="20231101 14:41:21.869" endtime="20231101 14:41:21.871"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:21.875" level="INFO">${STATE["Tên loại"]} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.872" endtime="20231101 14:41:21.875"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.871" endtime="20231101 14:41:21.875"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.871" endtime="20231101 14:41:21.876"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:21.876" endtime="20231101 14:41:21.883"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.468" endtime="20231101 14:41:21.884"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên loại@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:21.887" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 14:41:21.886" endtime="20231101 14:41:21.888"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.890" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:21.891" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 14:41:21.889" endtime="20231101 14:41:21.891"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.895" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.893" endtime="20231101 14:41:21.896"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.892" endtime="20231101 14:41:21.897"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.892" endtime="20231101 14:41:21.897"/>
</if>
<msg timestamp="20231101 14:41:21.898" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.885" endtime="20231101 14:41:21.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.901" level="INFO">${name} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:21.900" endtime="20231101 14:41:21.901"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.907" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:21.905" endtime="20231101 14:41:21.908"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:21.910" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:21.909" endtime="20231101 14:41:21.911"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:21.913" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:21.912" endtime="20231101 14:41:21.913"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.915" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:21.916" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:21.914" endtime="20231101 14:41:21.916"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:21.918" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:21.917" endtime="20231101 14:41:21.918"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.921" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:21.921" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:21.919" endtime="20231101 14:41:21.922"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.925" endtime="20231101 14:41:21.926"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.926" endtime="20231101 14:41:21.928"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.922" endtime="20231101 14:41:21.929"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.931" endtime="20231101 14:41:21.931"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.932" endtime="20231101 14:41:21.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.934" endtime="20231101 14:41:21.934"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.929" endtime="20231101 14:41:21.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 14:41:21.938" level="INFO">${new_text} = 4510</msg>
<status status="PASS" starttime="20231101 14:41:21.937" endtime="20231101 14:41:21.938"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 14:41:21.941" level="INFO">${new_text} = 4510</msg>
<status status="PASS" starttime="20231101 14:41:21.939" endtime="20231101 14:41:21.942"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.936" endtime="20231101 14:41:21.943"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.944" endtime="20231101 14:41:21.945"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.946" endtime="20231101 14:41:21.947"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.943" endtime="20231101 14:41:21.948"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.949" endtime="20231101 14:41:21.949"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.948" endtime="20231101 14:41:21.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:21.951" endtime="20231101 14:41:21.952"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.950" endtime="20231101 14:41:21.952"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.953" endtime="20231101 14:41:21.954"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.955" endtime="20231101 14:41:21.955"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.956" endtime="20231101 14:41:21.956"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.953" endtime="20231101 14:41:21.958"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.959" endtime="20231101 14:41:21.960"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.958" endtime="20231101 14:41:21.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.963" endtime="20231101 14:41:21.963"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.962" endtime="20231101 14:41:21.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.965" endtime="20231101 14:41:21.965"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.964" endtime="20231101 14:41:21.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.967" endtime="20231101 14:41:21.968"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.966" endtime="20231101 14:41:21.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:21.969" endtime="20231101 14:41:21.969"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:21.969" endtime="20231101 14:41:21.970"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.922" endtime="20231101 14:41:21.970"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:21.971" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:21.972" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:21.971" endtime="20231101 14:41:21.972"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:21.975" level="INFO">${text} = 4510</msg>
<status status="PASS" starttime="20231101 14:41:21.973" endtime="20231101 14:41:21.975"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.972" endtime="20231101 14:41:21.976"/>
</branch>
<status status="PASS" starttime="20231101 14:41:21.972" endtime="20231101 14:41:21.976"/>
</if>
<msg timestamp="20231101 14:41:21.977" level="INFO">${text} = 4510</msg>
<status status="PASS" starttime="20231101 14:41:21.904" endtime="20231101 14:41:21.977"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:21.979" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:21.978" endtime="20231101 14:41:21.979"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:21.979" endtime="20231101 14:41:22.088"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:22.089" endtime="20231101 14:41:22.122"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:22.126" level="INFO">Fills the text '4510' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:22.124" endtime="20231101 14:41:22.180"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:22.219" level="INFO">Text: '4510'</msg>
<msg timestamp="20231101 14:41:22.220" level="INFO">${condition} = 4510</msg>
<status status="PASS" starttime="20231101 14:41:22.181" endtime="20231101 14:41:22.220"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.224" endtime="20231101 14:41:22.225"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.226" endtime="20231101 14:41:22.226"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:22.221" endtime="20231101 14:41:22.227"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:22.221" endtime="20231101 14:41:22.228"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:22.230" level="INFO">Length is 4</msg>
<msg timestamp="20231101 14:41:22.231" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231101 14:41:22.229" endtime="20231101 14:41:22.231"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:22.234" level="INFO">${STATE["Mã"]} = 4510</msg>
<status status="PASS" starttime="20231101 14:41:22.233" endtime="20231101 14:41:22.235"/>
</kw>
<status status="PASS" starttime="20231101 14:41:22.232" endtime="20231101 14:41:22.235"/>
</branch>
<status status="PASS" starttime="20231101 14:41:22.232" endtime="20231101 14:41:22.236"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:22.236" endtime="20231101 14:41:22.247"/>
</kw>
<status status="PASS" starttime="20231101 14:41:21.902" endtime="20231101 14:41:22.248"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:22.352" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:22.251" endtime="20231101 14:41:22.352"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:22.368" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:22.353" endtime="20231101 14:41:22.368"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:22.370" endtime="20231101 14:41:22.470"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:22.472" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:22.472" endtime="20231101 14:41:22.473"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:22.485" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:22.475" endtime="20231101 14:41:22.486"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.488" endtime="20231101 14:41:22.489"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.491" endtime="20231101 14:41:22.492"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 14:41:22.492" endtime="20231101 14:41:22.493"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:22.487" endtime="20231101 14:41:22.493"/>
</branch>
<status status="PASS" starttime="20231101 14:41:22.487" endtime="20231101 14:41:22.495"/>
</if>
<status status="PASS" starttime="20231101 14:41:22.470" endtime="20231101 14:41:22.495"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 14:41:22.515" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:22.516" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:22.534" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:22.534" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:22.542" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 14:41:22.496" endtime="20231101 14:41:22.543"/>
</kw>
<status status="PASS" starttime="20231101 14:41:22.369" endtime="20231101 14:41:22.544"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.546" endtime="20231101 14:41:22.546"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 14:41:22.547" endtime="20231101 14:41:22.547"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.548" endtime="20231101 14:41:22.549"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:22.545" endtime="20231101 14:41:22.549"/>
</branch>
<status status="PASS" starttime="20231101 14:41:22.369" endtime="20231101 14:41:22.550"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:22.550" endtime="20231101 14:41:22.560"/>
</kw>
<status status="PASS" starttime="20231101 14:41:22.249" endtime="20231101 14:41:22.561"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:22.565" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:22.564" endtime="20231101 14:41:22.565"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:22.567" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:22.568" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:22.566" endtime="20231101 14:41:22.568"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:22.569" endtime="20231101 14:41:22.570"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:22.568" endtime="20231101 14:41:22.571"/>
</branch>
<status status="PASS" starttime="20231101 14:41:22.568" endtime="20231101 14:41:22.571"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:23.489" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 14:41:22.578" endtime="20231101 14:41:23.489"/>
</kw>
<status status="PASS" starttime="20231101 14:41:22.574" endtime="20231101 14:41:23.492"/>
</kw>
<status status="PASS" starttime="20231101 14:41:22.572" endtime="20231101 14:41:23.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:23.496" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 14:41:23.495" endtime="20231101 14:41:23.496"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 14:41:23.872" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 14:41:23.875" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 14:41:23.876" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 14:41:23.498" endtime="20231101 14:41:23.879"/>
</kw>
<status status="FAIL" starttime="20231101 14:41:23.497" endtime="20231101 14:41:23.880"/>
</kw>
<msg timestamp="20231101 14:41:23.881" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 14:41:23.496" endtime="20231101 14:41:23.881"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:23.883" endtime="20231101 14:41:23.883"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:23.882" endtime="20231101 14:41:23.884"/>
</branch>
<status status="PASS" starttime="20231101 14:41:23.881" endtime="20231101 14:41:23.884"/>
</if>
<status status="PASS" starttime="20231101 14:41:22.562" endtime="20231101 14:41:23.884"/>
</kw>
<status status="PASS" starttime="20231101 14:41:16.104" endtime="20231101 14:41:23.885"/>
</kw>
<kw name="Create a test data with &quot;_@Tên loại@_&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:23.963" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:23.893" endtime="20231101 14:41:23.963"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 14:41:23.963" endtime="20231101 14:41:23.964"/>
</kw>
<status status="PASS" starttime="20231101 14:41:23.890" endtime="20231101 14:41:23.964"/>
</kw>
<msg timestamp="20231101 14:41:23.964" level="INFO">${condition} = True</msg>
<status status="PASS" starttime="20231101 14:41:23.888" endtime="20231101 14:41:23.965"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Thêm mới dữ liệu&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:24.068" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:23.966" endtime="20231101 14:41:24.068"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:24.078" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:24.068" endtime="20231101 14:41:24.079"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:24.080" endtime="20231101 14:41:24.662"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:24.664" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:24.664" endtime="20231101 14:41:24.665"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:24.675" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:24.665" endtime="20231101 14:41:24.676"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.677" endtime="20231101 14:41:24.678"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.679" endtime="20231101 14:41:24.679"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 14:41:24.680" endtime="20231101 14:41:24.680"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.677" endtime="20231101 14:41:24.680"/>
</branch>
<status status="PASS" starttime="20231101 14:41:24.676" endtime="20231101 14:41:24.681"/>
</if>
<status status="PASS" starttime="20231101 14:41:24.662" endtime="20231101 14:41:24.681"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 14:41:24.717" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:24.718" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:24.734" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:24.734" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:24.744" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 14:41:24.682" endtime="20231101 14:41:24.745"/>
</kw>
<status status="PASS" starttime="20231101 14:41:24.079" endtime="20231101 14:41:24.745"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.746" endtime="20231101 14:41:24.747"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 14:41:24.748" endtime="20231101 14:41:24.748"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.749" endtime="20231101 14:41:24.750"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.746" endtime="20231101 14:41:24.750"/>
</branch>
<status status="PASS" starttime="20231101 14:41:24.079" endtime="20231101 14:41:24.751"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:24.751" endtime="20231101 14:41:24.760"/>
</kw>
<status status="PASS" starttime="20231101 14:41:23.966" endtime="20231101 14:41:24.761"/>
</kw>
<status status="PASS" starttime="20231101 14:41:23.965" endtime="20231101 14:41:24.761"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create data &quot;Quản lý dữ liệu&quot; with &quot;/data&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20231101 14:41:24.762" endtime="20231101 14:41:24.763"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.762" endtime="20231101 14:41:24.763"/>
</branch>
<status status="PASS" starttime="20231101 14:41:23.965" endtime="20231101 14:41:24.764"/>
</if>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:24.767" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:24.766" endtime="20231101 14:41:24.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:24.769" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:24.768" endtime="20231101 14:41:24.769"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:24.771" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 14:41:24.770" endtime="20231101 14:41:24.771"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:24.772" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:24.774" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 14:41:24.771" endtime="20231101 14:41:24.774"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:24.776" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:24.775" endtime="20231101 14:41:24.777"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:24.778" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:24.778" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:24.777" endtime="20231101 14:41:24.779"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:24.782" level="INFO">${new_text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:24.780" endtime="20231101 14:41:24.782"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:24.785" level="INFO">${symbol} = _@Tên loại@_</msg>
<status status="PASS" starttime="20231101 14:41:24.783" endtime="20231101 14:41:24.785"/>
</kw>
<status status="PASS" starttime="20231101 14:41:24.779" endtime="20231101 14:41:24.786"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.787" endtime="20231101 14:41:24.787"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.788" endtime="20231101 14:41:24.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.790" endtime="20231101 14:41:24.791"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.786" endtime="20231101 14:41:24.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.793" endtime="20231101 14:41:24.793"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.794" endtime="20231101 14:41:24.795"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.792" endtime="20231101 14:41:24.795"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.796" endtime="20231101 14:41:24.797"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.797" endtime="20231101 14:41:24.798"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.796" endtime="20231101 14:41:24.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.800" endtime="20231101 14:41:24.800"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.799" endtime="20231101 14:41:24.801"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:24.802" endtime="20231101 14:41:24.803"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.801" endtime="20231101 14:41:24.803"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.805" endtime="20231101 14:41:24.806"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.809" endtime="20231101 14:41:24.809"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.810" endtime="20231101 14:41:24.810"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.804" endtime="20231101 14:41:24.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.812" endtime="20231101 14:41:24.812"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.811" endtime="20231101 14:41:24.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.813" endtime="20231101 14:41:24.814"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.813" endtime="20231101 14:41:24.814"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.815" endtime="20231101 14:41:24.815"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.814" endtime="20231101 14:41:24.815"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.816" endtime="20231101 14:41:24.816"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.816" endtime="20231101 14:41:24.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:24.817" endtime="20231101 14:41:24.817"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:24.817" endtime="20231101 14:41:24.817"/>
</branch>
<status status="PASS" starttime="20231101 14:41:24.779" endtime="20231101 14:41:24.818"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:24.818" level="INFO">Length is 12</msg>
<msg timestamp="20231101 14:41:24.819" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231101 14:41:24.818" endtime="20231101 14:41:24.819"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:24.822" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:24.820" endtime="20231101 14:41:24.822"/>
</kw>
<status status="PASS" starttime="20231101 14:41:24.819" endtime="20231101 14:41:24.822"/>
</branch>
<status status="PASS" starttime="20231101 14:41:24.819" endtime="20231101 14:41:24.825"/>
</if>
<msg timestamp="20231101 14:41:24.825" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:24.765" endtime="20231101 14:41:24.825"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231101 14:41:24.826" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231101 14:41:24.826" endtime="20231101 14:41:24.826"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:24.827" endtime="20231101 14:41:25.359"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231101 14:41:25.362" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231101 14:41:25.360" endtime="20231101 14:41:25.362"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:25.364" level="INFO">Fills the text 'DA_10 Cumque quo.' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:25.363" endtime="20231101 14:41:25.422"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:25.424" endtime="20231101 14:41:25.629"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.631" level="INFO">Length is 17</msg>
<msg timestamp="20231101 14:41:25.631" level="INFO">${cnt} = 17</msg>
<status status="PASS" starttime="20231101 14:41:25.630" endtime="20231101 14:41:25.631"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:25.633" level="INFO">${STATE["Chuyên mục"]} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:25.632" endtime="20231101 14:41:25.634"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.631" endtime="20231101 14:41:25.634"/>
</branch>
<status status="PASS" starttime="20231101 14:41:25.631" endtime="20231101 14:41:25.634"/>
</if>
<status status="PASS" starttime="20231101 14:41:24.764" endtime="20231101 14:41:25.634"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:25.639" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:25.638" endtime="20231101 14:41:25.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:25.641" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:25.639" endtime="20231101 14:41:25.643"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:25.645" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:25.644" endtime="20231101 14:41:25.645"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.647" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:25.647" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:25.646" endtime="20231101 14:41:25.647"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:25.648" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:25.647" endtime="20231101 14:41:25.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.649" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:25.649" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:25.648" endtime="20231101 14:41:25.649"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.650" endtime="20231101 14:41:25.650"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.651" endtime="20231101 14:41:25.651"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.649" endtime="20231101 14:41:25.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.652" endtime="20231101 14:41:25.653"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.653" endtime="20231101 14:41:25.653"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.653" endtime="20231101 14:41:25.654"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.652" endtime="20231101 14:41:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 14:41:25.655" level="INFO">${new_text} = 9174</msg>
<status status="PASS" starttime="20231101 14:41:25.655" endtime="20231101 14:41:25.656"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 14:41:25.659" level="INFO">${new_text} = 9174</msg>
<status status="PASS" starttime="20231101 14:41:25.657" endtime="20231101 14:41:25.659"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.655" endtime="20231101 14:41:25.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.661" endtime="20231101 14:41:25.662"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.662" endtime="20231101 14:41:25.662"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.660" endtime="20231101 14:41:25.663"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.663" endtime="20231101 14:41:25.663"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.663" endtime="20231101 14:41:25.664"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:25.664" endtime="20231101 14:41:25.664"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.664" endtime="20231101 14:41:25.664"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.666" endtime="20231101 14:41:25.666"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.667" endtime="20231101 14:41:25.667"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.667" endtime="20231101 14:41:25.668"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.665" endtime="20231101 14:41:25.668"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.668" endtime="20231101 14:41:25.669"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.668" endtime="20231101 14:41:25.669"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.670" endtime="20231101 14:41:25.671"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.669" endtime="20231101 14:41:25.671"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.672" endtime="20231101 14:41:25.672"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.672" endtime="20231101 14:41:25.675"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.677" endtime="20231101 14:41:25.677"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.676" endtime="20231101 14:41:25.678"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.678" endtime="20231101 14:41:25.679"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.678" endtime="20231101 14:41:25.679"/>
</branch>
<status status="PASS" starttime="20231101 14:41:25.649" endtime="20231101 14:41:25.679"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.680" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:25.680" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:25.679" endtime="20231101 14:41:25.680"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:25.683" level="INFO">${text} = 9174</msg>
<status status="PASS" starttime="20231101 14:41:25.682" endtime="20231101 14:41:25.683"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.681" endtime="20231101 14:41:25.683"/>
</branch>
<status status="PASS" starttime="20231101 14:41:25.680" endtime="20231101 14:41:25.683"/>
</if>
<msg timestamp="20231101 14:41:25.683" level="INFO">${text} = 9174</msg>
<status status="PASS" starttime="20231101 14:41:25.636" endtime="20231101 14:41:25.684"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:25.684" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:25.684" endtime="20231101 14:41:25.685"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:25.685" endtime="20231101 14:41:25.817"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:25.818" endtime="20231101 14:41:25.875"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:25.877" level="INFO">Fills the text '9174' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:25.876" endtime="20231101 14:41:25.918"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:25.953" level="INFO">Text: '9174'</msg>
<msg timestamp="20231101 14:41:25.954" level="INFO">${condition} = 9174</msg>
<status status="PASS" starttime="20231101 14:41:25.919" endtime="20231101 14:41:25.954"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.957" endtime="20231101 14:41:25.958"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.958" endtime="20231101 14:41:25.959"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.955" endtime="20231101 14:41:25.959"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:25.955" endtime="20231101 14:41:25.960"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.961" level="INFO">Length is 4</msg>
<msg timestamp="20231101 14:41:25.961" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231101 14:41:25.960" endtime="20231101 14:41:25.961"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:25.964" level="INFO">${STATE["Thứ tự"]} = 9174</msg>
<status status="PASS" starttime="20231101 14:41:25.963" endtime="20231101 14:41:25.964"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.962" endtime="20231101 14:41:25.964"/>
</branch>
<status status="PASS" starttime="20231101 14:41:25.962" endtime="20231101 14:41:25.965"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:25.965" endtime="20231101 14:41:25.972"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.635" endtime="20231101 14:41:25.973"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:25.977" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:25.977" endtime="20231101 14:41:25.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:25.979" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:25.978" endtime="20231101 14:41:25.979"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:25.981" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:25.980" endtime="20231101 14:41:25.981"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.983" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:25.983" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:25.982" endtime="20231101 14:41:25.983"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:25.985" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:25.984" endtime="20231101 14:41:25.985"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:25.987" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:25.988" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:25.986" endtime="20231101 14:41:25.988"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.990" endtime="20231101 14:41:25.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:25.995" endtime="20231101 14:41:25.996"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:25.989" endtime="20231101 14:41:25.996"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 14:41:25.999" level="INFO">${random} = Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:25.998" endtime="20231101 14:41:25.999"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 14:41:26.001" level="INFO">${words} = ['DA_10', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231101 14:41:26.000" endtime="20231101 14:41:26.002"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.009" level="INFO">${new_text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.003" endtime="20231101 14:41:26.010"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.997" endtime="20231101 14:41:26.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.011" endtime="20231101 14:41:26.012"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.013" endtime="20231101 14:41:26.014"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.011" endtime="20231101 14:41:26.014"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.015" endtime="20231101 14:41:26.016"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.017" endtime="20231101 14:41:26.018"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.015" endtime="20231101 14:41:26.018"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.019" endtime="20231101 14:41:26.020"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.018" endtime="20231101 14:41:26.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:26.021" endtime="20231101 14:41:26.022"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.021" endtime="20231101 14:41:26.022"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.027" endtime="20231101 14:41:26.027"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.028" endtime="20231101 14:41:26.029"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.030" endtime="20231101 14:41:26.030"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.026" endtime="20231101 14:41:26.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.032" endtime="20231101 14:41:26.033"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.031" endtime="20231101 14:41:26.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.034" endtime="20231101 14:41:26.035"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.033" endtime="20231101 14:41:26.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.037" endtime="20231101 14:41:26.038"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.036" endtime="20231101 14:41:26.038"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.042" endtime="20231101 14:41:26.043"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.039" endtime="20231101 14:41:26.043"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.044" endtime="20231101 14:41:26.045"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.044" endtime="20231101 14:41:26.045"/>
</branch>
<status status="PASS" starttime="20231101 14:41:25.988" endtime="20231101 14:41:26.046"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.047" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:26.048" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:26.047" endtime="20231101 14:41:26.048"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:26.051" level="INFO">${text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.050" endtime="20231101 14:41:26.051"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.049" endtime="20231101 14:41:26.052"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.048" endtime="20231101 14:41:26.052"/>
</if>
<msg timestamp="20231101 14:41:26.053" level="INFO">${text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:25.975" endtime="20231101 14:41:26.053"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:26.055" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:26.053" endtime="20231101 14:41:26.055"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:26.056" endtime="20231101 14:41:26.192"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:26.193" endtime="20231101 14:41:26.237"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:26.239" level="INFO">Fills the text 'DA_10 Molestiae inventore ducimus rem.' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:26.238" endtime="20231101 14:41:26.320"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:26.388" level="INFO">Text: 'DA_10 Molestiae inventore ducimus rem.'</msg>
<msg timestamp="20231101 14:41:26.388" level="INFO">${condition} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.322" endtime="20231101 14:41:26.389"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.393" endtime="20231101 14:41:26.394"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.395" endtime="20231101 14:41:26.396"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.391" endtime="20231101 14:41:26.396"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:26.390" endtime="20231101 14:41:26.396"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.397" level="INFO">Length is 38</msg>
<msg timestamp="20231101 14:41:26.398" level="INFO">${cnt} = 38</msg>
<status status="PASS" starttime="20231101 14:41:26.397" endtime="20231101 14:41:26.398"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:26.400" level="INFO">${STATE["Tiêu đề"]} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.399" endtime="20231101 14:41:26.401"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.398" endtime="20231101 14:41:26.401"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.398" endtime="20231101 14:41:26.402"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:26.402" endtime="20231101 14:41:26.415"/>
</kw>
<status status="PASS" starttime="20231101 14:41:25.974" endtime="20231101 14:41:26.416"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:26.419" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 14:41:26.418" endtime="20231101 14:41:26.420"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.422" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:26.422" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 14:41:26.421" endtime="20231101 14:41:26.422"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.429" level="INFO">${text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.426" endtime="20231101 14:41:26.429"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.424" endtime="20231101 14:41:26.430"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.424" endtime="20231101 14:41:26.431"/>
</if>
<msg timestamp="20231101 14:41:26.431" level="INFO">${text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.417" endtime="20231101 14:41:26.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.434" level="INFO">${name} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:26.433" endtime="20231101 14:41:26.434"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.438" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:26.438" endtime="20231101 14:41:26.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.443" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:26.442" endtime="20231101 14:41:26.444"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:26.446" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:26.445" endtime="20231101 14:41:26.446"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.448" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:26.448" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:26.447" endtime="20231101 14:41:26.448"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:26.450" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:26.449" endtime="20231101 14:41:26.450"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.451" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:26.451" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:26.450" endtime="20231101 14:41:26.451"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.453" endtime="20231101 14:41:26.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.454" endtime="20231101 14:41:26.455"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.452" endtime="20231101 14:41:26.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.458" endtime="20231101 14:41:26.459"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.461" endtime="20231101 14:41:26.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.462" endtime="20231101 14:41:26.463"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.455" endtime="20231101 14:41:26.463"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.465" endtime="20231101 14:41:26.465"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.466" endtime="20231101 14:41:26.467"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.464" endtime="20231101 14:41:26.467"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.469" endtime="20231101 14:41:26.469"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.470" endtime="20231101 14:41:26.470"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.468" endtime="20231101 14:41:26.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 14:41:26.476" level="INFO">${new_text} = Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.</msg>
<status status="PASS" starttime="20231101 14:41:26.472" endtime="20231101 14:41:26.476"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.471" endtime="20231101 14:41:26.477"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:26.478" endtime="20231101 14:41:26.479"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.477" endtime="20231101 14:41:26.479"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.481" endtime="20231101 14:41:26.481"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.482" endtime="20231101 14:41:26.482"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.483" endtime="20231101 14:41:26.484"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.480" endtime="20231101 14:41:26.484"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.486" endtime="20231101 14:41:26.486"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.486" endtime="20231101 14:41:26.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.487" endtime="20231101 14:41:26.487"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.487" endtime="20231101 14:41:26.488"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.488" endtime="20231101 14:41:26.489"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.488" endtime="20231101 14:41:26.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.492" endtime="20231101 14:41:26.492"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.489" endtime="20231101 14:41:26.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.494" endtime="20231101 14:41:26.495"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.494" endtime="20231101 14:41:26.495"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.452" endtime="20231101 14:41:26.496"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.497" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:26.497" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:26.496" endtime="20231101 14:41:26.498"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:26.501" level="INFO">${text} = Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.</msg>
<status status="PASS" starttime="20231101 14:41:26.500" endtime="20231101 14:41:26.502"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.499" endtime="20231101 14:41:26.502"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.498" endtime="20231101 14:41:26.503"/>
</if>
<msg timestamp="20231101 14:41:26.503" level="INFO">${text} = Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.</msg>
<status status="PASS" starttime="20231101 14:41:26.436" endtime="20231101 14:41:26.504"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 14:41:26.507" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 14:41:26.505" endtime="20231101 14:41:26.508"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:26.509" endtime="20231101 14:41:26.598"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:26.600" level="INFO">Fills the text 'Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:26.599" endtime="20231101 14:41:26.668"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:26.710" level="INFO">Text: 'Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.'</msg>
<msg timestamp="20231101 14:41:26.710" level="INFO">${condition} = Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.</msg>
<status status="PASS" starttime="20231101 14:41:26.669" endtime="20231101 14:41:26.711"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.713" endtime="20231101 14:41:26.714"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.715" endtime="20231101 14:41:26.716"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.711" endtime="20231101 14:41:26.716"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:26.711" endtime="20231101 14:41:26.718"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.719" level="INFO">Length is 78</msg>
<msg timestamp="20231101 14:41:26.720" level="INFO">${cnt} = 78</msg>
<status status="PASS" starttime="20231101 14:41:26.719" endtime="20231101 14:41:26.720"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:26.724" level="INFO">${STATE["Mô tả"]} = Architecto quod rem ducimus exercitationem. Labore unde labore illum sapiente.</msg>
<status status="PASS" starttime="20231101 14:41:26.722" endtime="20231101 14:41:26.724"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.721" endtime="20231101 14:41:26.725"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.721" endtime="20231101 14:41:26.725"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:26.726" endtime="20231101 14:41:26.735"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.435" endtime="20231101 14:41:26.735"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.741" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:26.739" endtime="20231101 14:41:26.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:26.743" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:26.742" endtime="20231101 14:41:26.744"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:26.746" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:26.744" endtime="20231101 14:41:26.746"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.748" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:26.749" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:26.747" endtime="20231101 14:41:26.749"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:26.751" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:26.750" endtime="20231101 14:41:26.751"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.752" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:26.753" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:26.751" endtime="20231101 14:41:26.753"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.754" endtime="20231101 14:41:26.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.755" endtime="20231101 14:41:26.756"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.753" endtime="20231101 14:41:26.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.759" endtime="20231101 14:41:26.760"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.760" endtime="20231101 14:41:26.761"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.761" endtime="20231101 14:41:26.762"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.758" endtime="20231101 14:41:26.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.764" endtime="20231101 14:41:26.764"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.765" endtime="20231101 14:41:26.765"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.763" endtime="20231101 14:41:26.766"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.767" endtime="20231101 14:41:26.767"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.768" endtime="20231101 14:41:26.769"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.766" endtime="20231101 14:41:26.769"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 14:41:26.771" level="INFO">${new_text} = Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.</msg>
<status status="PASS" starttime="20231101 14:41:26.770" endtime="20231101 14:41:26.772"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.769" endtime="20231101 14:41:26.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:26.775" endtime="20231101 14:41:26.775"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.772" endtime="20231101 14:41:26.776"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.777" endtime="20231101 14:41:26.777"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.778" endtime="20231101 14:41:26.779"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.780" endtime="20231101 14:41:26.781"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.776" endtime="20231101 14:41:26.781"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.782" endtime="20231101 14:41:26.783"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.782" endtime="20231101 14:41:26.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.815" endtime="20231101 14:41:26.816"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.814" endtime="20231101 14:41:26.817"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.818" endtime="20231101 14:41:26.819"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.817" endtime="20231101 14:41:26.819"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.821" endtime="20231101 14:41:26.822"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.820" endtime="20231101 14:41:26.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:26.826" endtime="20231101 14:41:26.827"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:26.825" endtime="20231101 14:41:26.828"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.753" endtime="20231101 14:41:26.828"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:26.830" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:26.830" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:26.829" endtime="20231101 14:41:26.831"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:26.834" level="INFO">${text} = Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.</msg>
<status status="PASS" starttime="20231101 14:41:26.832" endtime="20231101 14:41:26.834"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.831" endtime="20231101 14:41:26.835"/>
</branch>
<status status="PASS" starttime="20231101 14:41:26.831" endtime="20231101 14:41:26.835"/>
</if>
<msg timestamp="20231101 14:41:26.836" level="INFO">${text} = Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.</msg>
<status status="PASS" starttime="20231101 14:41:26.738" endtime="20231101 14:41:26.836"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 14:41:26.838" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 14:41:26.837" endtime="20231101 14:41:26.838"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:26.839" endtime="20231101 14:41:26.899"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:26.901" level="INFO">Fills the text 'Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:26.900" endtime="20231101 14:41:27.008"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:27.052" level="INFO">Text: 'Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.'</msg>
<msg timestamp="20231101 14:41:27.053" level="INFO">${condition} = Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.</msg>
<status status="PASS" starttime="20231101 14:41:27.010" endtime="20231101 14:41:27.053"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.058" endtime="20231101 14:41:27.059"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.060" endtime="20231101 14:41:27.061"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:27.054" endtime="20231101 14:41:27.061"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:27.054" endtime="20231101 14:41:27.062"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:27.064" level="INFO">Length is 143</msg>
<msg timestamp="20231101 14:41:27.065" level="INFO">${cnt} = 143</msg>
<status status="PASS" starttime="20231101 14:41:27.063" endtime="20231101 14:41:27.065"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:27.069" level="INFO">${STATE["Nội dung"]} = Facere quod a corrupti placeat sunt. Sunt aliquid dicta voluptatem deserunt aut harum nostrum. Sint mollitia quo sapiente eveniet in quod eius.</msg>
<status status="PASS" starttime="20231101 14:41:27.067" endtime="20231101 14:41:27.069"/>
</kw>
<status status="PASS" starttime="20231101 14:41:27.066" endtime="20231101 14:41:27.070"/>
</branch>
<status status="PASS" starttime="20231101 14:41:27.066" endtime="20231101 14:41:27.070"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:27.071" endtime="20231101 14:41:27.082"/>
</kw>
<status status="PASS" starttime="20231101 14:41:26.736" endtime="20231101 14:41:27.083"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:27.187" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:27.085" endtime="20231101 14:41:27.187"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:27.199" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:27.188" endtime="20231101 14:41:27.199"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:27.201" endtime="20231101 14:41:27.355"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:27.358" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:27.357" endtime="20231101 14:41:27.359"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:27.415" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:27.360" endtime="20231101 14:41:27.416"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.418" endtime="20231101 14:41:27.419"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.420" endtime="20231101 14:41:27.421"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 14:41:27.422" endtime="20231101 14:41:27.422"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:27.417" endtime="20231101 14:41:27.423"/>
</branch>
<status status="PASS" starttime="20231101 14:41:27.417" endtime="20231101 14:41:27.425"/>
</if>
<status status="PASS" starttime="20231101 14:41:27.355" endtime="20231101 14:41:27.425"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 14:41:27.447" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:27.448" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:27.467" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:27.467" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 14:41:27.477" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 14:41:27.426" endtime="20231101 14:41:27.478"/>
</kw>
<status status="PASS" starttime="20231101 14:41:27.200" endtime="20231101 14:41:27.480"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.481" endtime="20231101 14:41:27.482"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 14:41:27.483" endtime="20231101 14:41:27.483"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.484" endtime="20231101 14:41:27.485"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:27.481" endtime="20231101 14:41:27.485"/>
</branch>
<status status="PASS" starttime="20231101 14:41:27.200" endtime="20231101 14:41:27.486"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:27.486" endtime="20231101 14:41:27.495"/>
</kw>
<status status="PASS" starttime="20231101 14:41:27.084" endtime="20231101 14:41:27.496"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:27.500" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:27.498" endtime="20231101 14:41:27.500"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:27.502" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:27.502" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:27.501" endtime="20231101 14:41:27.503"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:27.505" endtime="20231101 14:41:27.506"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:27.503" endtime="20231101 14:41:27.507"/>
</branch>
<status status="PASS" starttime="20231101 14:41:27.503" endtime="20231101 14:41:27.510"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:28.591" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 14:41:27.519" endtime="20231101 14:41:28.592"/>
</kw>
<status status="PASS" starttime="20231101 14:41:27.515" endtime="20231101 14:41:28.592"/>
</kw>
<status status="PASS" starttime="20231101 14:41:27.510" endtime="20231101 14:41:28.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:28.594" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 14:41:28.593" endtime="20231101 14:41:28.595"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 14:41:28.951" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 14:41:28.951" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 14:41:28.952" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 14:41:28.598" endtime="20231101 14:41:28.954"/>
</kw>
<status status="FAIL" starttime="20231101 14:41:28.596" endtime="20231101 14:41:28.955"/>
</kw>
<msg timestamp="20231101 14:41:28.957" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 14:41:28.595" endtime="20231101 14:41:28.957"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:28.960" endtime="20231101 14:41:28.961"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:28.959" endtime="20231101 14:41:28.962"/>
</branch>
<status status="PASS" starttime="20231101 14:41:28.959" endtime="20231101 14:41:28.962"/>
</if>
<status status="PASS" starttime="20231101 14:41:27.497" endtime="20231101 14:41:28.963"/>
</kw>
<status status="PASS" starttime="20231101 14:41:23.887" endtime="20231101 14:41:28.964"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:28.975" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:28.973" endtime="20231101 14:41:28.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:28.978" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:28.977" endtime="20231101 14:41:28.978"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:28.981" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:28.980" endtime="20231101 14:41:28.981"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:28.983" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:28.983" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:28.982" endtime="20231101 14:41:28.983"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:28.984" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 14:41:28.984" endtime="20231101 14:41:28.985"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:28.985" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:28.986" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:28.985" endtime="20231101 14:41:28.986"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:28.987" endtime="20231101 14:41:28.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:28.987" endtime="20231101 14:41:28.987"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:28.986" endtime="20231101 14:41:28.988"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:28.991" endtime="20231101 14:41:28.992"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:28.996" endtime="20231101 14:41:28.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:28.997" endtime="20231101 14:41:28.998"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:28.988" endtime="20231101 14:41:28.998"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.000" endtime="20231101 14:41:29.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.001" endtime="20231101 14:41:29.002"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:28.999" endtime="20231101 14:41:29.002"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.004" endtime="20231101 14:41:29.004"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.005" endtime="20231101 14:41:29.009"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.003" endtime="20231101 14:41:29.009"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.011" endtime="20231101 14:41:29.012"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.010" endtime="20231101 14:41:29.012"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:29.014" endtime="20231101 14:41:29.015"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.013" endtime="20231101 14:41:29.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.017" endtime="20231101 14:41:29.018"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.019" endtime="20231101 14:41:29.019"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.020" endtime="20231101 14:41:29.021"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.016" endtime="20231101 14:41:29.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.026" endtime="20231101 14:41:29.026"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.024" endtime="20231101 14:41:29.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.029" endtime="20231101 14:41:29.030"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.028" endtime="20231101 14:41:29.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.033" endtime="20231101 14:41:29.034"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.032" endtime="20231101 14:41:29.035"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.037" endtime="20231101 14:41:29.037"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.036" endtime="20231101 14:41:29.038"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 14:41:29.051" level="INFO">${new_text} = Cum dicta sit optio sit quam labore.</msg>
<status status="PASS" starttime="20231101 14:41:29.049" endtime="20231101 14:41:29.051"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.048" endtime="20231101 14:41:29.052"/>
</branch>
<status status="PASS" starttime="20231101 14:41:28.986" endtime="20231101 14:41:29.053"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:29.060" level="INFO">Length is 8</msg>
<msg timestamp="20231101 14:41:29.060" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 14:41:29.059" endtime="20231101 14:41:29.060"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 14:41:29.063" level="INFO">${text} = Cum dicta sit optio sit quam labore.</msg>
<status status="PASS" starttime="20231101 14:41:29.062" endtime="20231101 14:41:29.063"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.061" endtime="20231101 14:41:29.064"/>
</branch>
<status status="PASS" starttime="20231101 14:41:29.061" endtime="20231101 14:41:29.064"/>
</if>
<msg timestamp="20231101 14:41:29.065" level="INFO">${text} = Cum dicta sit optio sit quam labore.</msg>
<status status="PASS" starttime="20231101 14:41:28.970" endtime="20231101 14:41:29.065"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:29.067" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:29.066" endtime="20231101 14:41:29.068"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:29.068" endtime="20231101 14:41:29.460"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:29.461" endtime="20231101 14:41:29.514"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:29.515" level="INFO">Fills the text 'Cum dicta sit optio sit quam labore.' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:29.515" endtime="20231101 14:41:29.558"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:29.585" level="INFO">Text: 'Cum dicta sit optio sit quam labore.'</msg>
<msg timestamp="20231101 14:41:29.585" level="INFO">${condition} = Cum dicta sit optio sit quam labore.</msg>
<status status="PASS" starttime="20231101 14:41:29.559" endtime="20231101 14:41:29.585"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.587" endtime="20231101 14:41:29.587"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:29.588" endtime="20231101 14:41:29.588"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.586" endtime="20231101 14:41:29.588"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:29.586" endtime="20231101 14:41:29.590"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:29.592" level="INFO">Length is 36</msg>
<msg timestamp="20231101 14:41:29.593" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20231101 14:41:29.591" endtime="20231101 14:41:29.593"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 14:41:29.595" level="INFO">${STATE["Tìm kiếm"]} = Cum dicta sit optio sit quam labore.</msg>
<status status="PASS" starttime="20231101 14:41:29.594" endtime="20231101 14:41:29.595"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.593" endtime="20231101 14:41:29.595"/>
</branch>
<status status="PASS" starttime="20231101 14:41:29.593" endtime="20231101 14:41:29.595"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:29.596" endtime="20231101 14:41:29.612"/>
</kw>
<status status="PASS" starttime="20231101 14:41:28.969" endtime="20231101 14:41:29.613"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:29.617" endtime="20231101 14:41:29.685"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:29.786" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:29.686" endtime="20231101 14:41:29.786"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:29.787" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:29.786" endtime="20231101 14:41:29.787"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:29.799" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:29.787" endtime="20231101 14:41:29.800"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:29.801" endtime="20231101 14:41:29.801"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:29.800" endtime="20231101 14:41:29.802"/>
</branch>
<status status="PASS" starttime="20231101 14:41:29.800" endtime="20231101 14:41:29.802"/>
</if>
<status status="PASS" starttime="20231101 14:41:29.685" endtime="20231101 14:41:29.802"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:29.803" endtime="20231101 14:41:29.812"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.616" endtime="20231101 14:41:29.813"/>
</kw>
<kw name="Then Table line should show empty" library="common">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:29.920" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:29.819" endtime="20231101 14:41:29.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:29.923" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:29.921" endtime="20231101 14:41:29.924"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:29.953" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 14:41:29.925" endtime="20231101 14:41:29.954"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 14:41:29.996" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20231101 14:41:29.959" endtime="20231101 14:41:29.997"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.955" endtime="20231101 14:41:29.998"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.954" endtime="20231101 14:41:29.999"/>
</branch>
<status status="PASS" starttime="20231101 14:41:29.954" endtime="20231101 14:41:29.999"/>
</if>
<status status="PASS" starttime="20231101 14:41:29.818" endtime="20231101 14:41:30.000"/>
</kw>
<kw name="Get Property" library="Browser">
<arg>//p[contains(@class, 'ant-empty-description')]</arg>
<arg>innerText</arg>
<arg>equal</arg>
<arg>No Data</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:30.033" level="INFO">Property: 'No Data'</msg>
<status status="PASS" starttime="20231101 14:41:30.000" endtime="20231101 14:41:30.034"/>
</kw>
<status status="PASS" starttime="20231101 14:41:29.817" endtime="20231101 14:41:30.034"/>
</kw>
<kw name="When Enter &quot;test name&quot; in &quot;Tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:30.041" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 14:41:30.040" endtime="20231101 14:41:30.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:30.043" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 14:41:30.042" endtime="20231101 14:41:30.044"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:30.045" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 14:41:30.044" endtime="20231101 14:41:30.046"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:30.047" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:30.048" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 14:41:30.047" endtime="20231101 14:41:30.048"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:30.049" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 14:41:30.048" endtime="20231101 14:41:30.049"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:30.050" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:30.050" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:30.049" endtime="20231101 14:41:30.050"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.051" endtime="20231101 14:41:30.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.052" endtime="20231101 14:41:30.053"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.050" endtime="20231101 14:41:30.053"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.054" endtime="20231101 14:41:30.054"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.054" endtime="20231101 14:41:30.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.055" endtime="20231101 14:41:30.056"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.053" endtime="20231101 14:41:30.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.058" endtime="20231101 14:41:30.059"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.059" endtime="20231101 14:41:30.060"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.057" endtime="20231101 14:41:30.060"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.061" endtime="20231101 14:41:30.062"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.062" endtime="20231101 14:41:30.062"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.061" endtime="20231101 14:41:30.062"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.063" endtime="20231101 14:41:30.063"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.063" endtime="20231101 14:41:30.064"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 14:41:30.065" endtime="20231101 14:41:30.065"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.064" endtime="20231101 14:41:30.065"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.067" endtime="20231101 14:41:30.068"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.069" endtime="20231101 14:41:30.070"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.071" endtime="20231101 14:41:30.071"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.066" endtime="20231101 14:41:30.071"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.074" endtime="20231101 14:41:30.074"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.072" endtime="20231101 14:41:30.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.076" endtime="20231101 14:41:30.077"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.075" endtime="20231101 14:41:30.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.078" endtime="20231101 14:41:30.078"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.077" endtime="20231101 14:41:30.078"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.079" endtime="20231101 14:41:30.079"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.079" endtime="20231101 14:41:30.080"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.081" endtime="20231101 14:41:30.081"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.080" endtime="20231101 14:41:30.081"/>
</branch>
<status status="PASS" starttime="20231101 14:41:30.050" endtime="20231101 14:41:30.082"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:30.082" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:30.083" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:30.082" endtime="20231101 14:41:30.083"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.084" endtime="20231101 14:41:30.084"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.083" endtime="20231101 14:41:30.084"/>
</branch>
<status status="PASS" starttime="20231101 14:41:30.083" endtime="20231101 14:41:30.084"/>
</if>
<msg timestamp="20231101 14:41:30.084" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231101 14:41:30.038" endtime="20231101 14:41:30.085"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 14:41:30.085" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 14:41:30.085" endtime="20231101 14:41:30.086"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:30.086" endtime="20231101 14:41:30.175"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:30.176" endtime="20231101 14:41:30.270"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 14:41:30.274" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231101 14:41:30.271" endtime="20231101 14:41:30.365"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 14:41:30.398" level="INFO">Text: ''</msg>
<msg timestamp="20231101 14:41:30.399" level="INFO">${condition} = </msg>
<status status="PASS" starttime="20231101 14:41:30.366" endtime="20231101 14:41:30.399"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.401" endtime="20231101 14:41:30.402"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.403" endtime="20231101 14:41:30.403"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.399" endtime="20231101 14:41:30.404"/>
</iter>
<status status="NOT RUN" starttime="20231101 14:41:30.399" endtime="20231101 14:41:30.404"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:30.407" level="INFO">Length is 0</msg>
<msg timestamp="20231101 14:41:30.408" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 14:41:30.406" endtime="20231101 14:41:30.408"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231101 14:41:30.410" endtime="20231101 14:41:30.411"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.409" endtime="20231101 14:41:30.411"/>
</branch>
<status status="PASS" starttime="20231101 14:41:30.408" endtime="20231101 14:41:30.412"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:30.413" endtime="20231101 14:41:30.420"/>
</kw>
<status status="PASS" starttime="20231101 14:41:30.037" endtime="20231101 14:41:30.421"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:30.427" endtime="20231101 14:41:30.526"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:30.631" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:30.528" endtime="20231101 14:41:30.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:30.633" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:30.632" endtime="20231101 14:41:30.633"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:30.808" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:30.633" endtime="20231101 14:41:30.808"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:30.810" endtime="20231101 14:41:30.811"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.809" endtime="20231101 14:41:30.811"/>
</branch>
<status status="PASS" starttime="20231101 14:41:30.809" endtime="20231101 14:41:30.812"/>
</if>
<status status="PASS" starttime="20231101 14:41:30.527" endtime="20231101 14:41:30.812"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:30.813" endtime="20231101 14:41:30.820"/>
</kw>
<status status="PASS" starttime="20231101 14:41:30.426" endtime="20231101 14:41:30.821"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:30.937" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:30.836" endtime="20231101 14:41:30.937"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:30.940" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:30.938" endtime="20231101 14:41:30.940"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:30.949" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:30.941" endtime="20231101 14:41:30.949"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:30.951" endtime="20231101 14:41:30.951"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:30.950" endtime="20231101 14:41:30.952"/>
</branch>
<status status="PASS" starttime="20231101 14:41:30.950" endtime="20231101 14:41:30.952"/>
</if>
<status status="PASS" starttime="20231101 14:41:30.835" endtime="20231101 14:41:30.953"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:30.956" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 14:41:30.954" endtime="20231101 14:41:30.957"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:30.958" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:30.959" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 14:41:30.957" endtime="20231101 14:41:30.959"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:30.965" level="INFO">${text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:30.963" endtime="20231101 14:41:30.965"/>
</kw>
<status status="PASS" starttime="20231101 14:41:30.961" endtime="20231101 14:41:30.966"/>
</branch>
<status status="PASS" starttime="20231101 14:41:30.959" endtime="20231101 14:41:30.966"/>
</if>
<msg timestamp="20231101 14:41:30.967" level="INFO">${name} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:30.953" endtime="20231101 14:41:30.967"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:30.969" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"DA_10 Molestiae inventore ducimus rem.")]</msg>
<status status="PASS" starttime="20231101 14:41:30.968" endtime="20231101 14:41:30.969"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:30.979" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 14:41:30.970" endtime="20231101 14:41:30.979"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 14:41:30.980" endtime="20231101 14:41:30.981"/>
</kw>
<status status="PASS" starttime="20231101 14:41:30.834" endtime="20231101 14:41:30.982"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:31.097" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:30.996" endtime="20231101 14:41:31.097"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:31.199" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:31.098" endtime="20231101 14:41:31.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:31.200" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:31.199" endtime="20231101 14:41:31.200"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:31.209" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:31.200" endtime="20231101 14:41:31.209"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:31.211" endtime="20231101 14:41:31.212"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:31.210" endtime="20231101 14:41:31.213"/>
</branch>
<status status="PASS" starttime="20231101 14:41:31.210" endtime="20231101 14:41:31.213"/>
</if>
<status status="PASS" starttime="20231101 14:41:31.097" endtime="20231101 14:41:31.213"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:31.215" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 14:41:31.214" endtime="20231101 14:41:31.215"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:31.216" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:31.216" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 14:41:31.215" endtime="20231101 14:41:31.217"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:31.219" level="INFO">${text} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:31.218" endtime="20231101 14:41:31.219"/>
</kw>
<status status="PASS" starttime="20231101 14:41:31.217" endtime="20231101 14:41:31.219"/>
</branch>
<status status="PASS" starttime="20231101 14:41:31.217" endtime="20231101 14:41:31.219"/>
</if>
<msg timestamp="20231101 14:41:31.219" level="INFO">${name} = DA_10 Molestiae inventore ducimus rem.</msg>
<status status="PASS" starttime="20231101 14:41:31.214" endtime="20231101 14:41:31.220"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231101 14:41:31.220" endtime="20231101 14:41:31.221"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:31.221" endtime="20231101 14:41:31.221"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:31.222" endtime="20231101 14:41:31.222"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:31.221" endtime="20231101 14:41:31.222"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231101 14:41:31.224" endtime="20231101 14:41:31.224"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 14:41:31.225" endtime="20231101 14:41:31.226"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:31.223" endtime="20231101 14:41:31.226"/>
</branch>
<status status="NOT RUN" starttime="20231101 14:41:31.221" endtime="20231101 14:41:31.227"/>
</if>
<status status="NOT RUN" starttime="20231101 14:41:31.220" endtime="20231101 14:41:31.227"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 14:41:31.228" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"DA_10 Molestiae inventore ducimus rem.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 14:41:31.228" endtime="20231101 14:41:31.228"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:31.229" endtime="20231101 14:41:31.368"/>
</kw>
<status status="PASS" starttime="20231101 14:41:31.227" endtime="20231101 14:41:31.368"/>
</branch>
<status status="PASS" starttime="20231101 14:41:31.220" endtime="20231101 14:41:31.369"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:31.373" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:31.370" endtime="20231101 14:41:31.373"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:31.387" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 14:41:31.374" endtime="20231101 14:41:31.387"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:31.390" endtime="20231101 14:41:31.679"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:31.781" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:31.679" endtime="20231101 14:41:31.781"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:31.884" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:31.782" endtime="20231101 14:41:31.884"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:31.885" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:31.884" endtime="20231101 14:41:31.885"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:31.900" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 14:41:31.885" endtime="20231101 14:41:31.900"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 14:41:32.251" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20231101 14:41:31.904" endtime="20231101 14:41:32.252"/>
</kw>
<status status="PASS" starttime="20231101 14:41:31.902" endtime="20231101 14:41:32.252"/>
</kw>
<status status="PASS" starttime="20231101 14:41:31.901" endtime="20231101 14:41:32.252"/>
</branch>
<status status="PASS" starttime="20231101 14:41:31.901" endtime="20231101 14:41:32.253"/>
</if>
<status status="PASS" starttime="20231101 14:41:31.782" endtime="20231101 14:41:32.253"/>
</kw>
<status status="PASS" starttime="20231101 14:41:31.389" endtime="20231101 14:41:32.253"/>
</branch>
<status status="PASS" starttime="20231101 14:41:31.388" endtime="20231101 14:41:32.253"/>
</if>
<status status="PASS" starttime="20231101 14:41:31.369" endtime="20231101 14:41:32.254"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:32.254" endtime="20231101 14:41:32.266"/>
</kw>
<status status="PASS" starttime="20231101 14:41:30.995" endtime="20231101 14:41:32.267"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tên loại@_&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:32.377" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:32.274" endtime="20231101 14:41:32.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:32.378" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:32.377" endtime="20231101 14:41:32.378"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:32.386" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:32.378" endtime="20231101 14:41:32.386"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:32.390" endtime="20231101 14:41:32.392"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:32.387" endtime="20231101 14:41:32.393"/>
</branch>
<status status="PASS" starttime="20231101 14:41:32.387" endtime="20231101 14:41:32.394"/>
</if>
<status status="PASS" starttime="20231101 14:41:32.271" endtime="20231101 14:41:32.394"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 14:41:32.397" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 14:41:32.396" endtime="20231101 14:41:32.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 14:41:32.398" level="INFO">Length is 1</msg>
<msg timestamp="20231101 14:41:32.399" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 14:41:32.398" endtime="20231101 14:41:32.399"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:32.401" level="INFO">${text} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:32.400" endtime="20231101 14:41:32.401"/>
</kw>
<status status="PASS" starttime="20231101 14:41:32.399" endtime="20231101 14:41:32.401"/>
</branch>
<status status="PASS" starttime="20231101 14:41:32.399" endtime="20231101 14:41:32.401"/>
</if>
<msg timestamp="20231101 14:41:32.401" level="INFO">${name} = DA_10 Cumque quo.</msg>
<status status="PASS" starttime="20231101 14:41:32.395" endtime="20231101 14:41:32.402"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 14:41:32.402" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "DA_10 Cumque quo.")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 14:41:32.402" endtime="20231101 14:41:32.403"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:32.403" endtime="20231101 14:41:33.451"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:33.453" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 14:41:33.452" endtime="20231101 14:41:33.453"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:33.469" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 14:41:33.454" endtime="20231101 14:41:33.470"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 14:41:33.473" endtime="20231101 14:41:33.723"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:33.829" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:33.725" endtime="20231101 14:41:33.830"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 14:41:33.932" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 14:41:33.831" endtime="20231101 14:41:33.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 14:41:33.933" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 14:41:33.933" endtime="20231101 14:41:33.933"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 14:41:33.947" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 14:41:33.933" endtime="20231101 14:41:33.947"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 14:41:33.949" endtime="20231101 14:41:33.949"/>
</kw>
<status status="NOT RUN" starttime="20231101 14:41:33.948" endtime="20231101 14:41:33.950"/>
</branch>
<status status="PASS" starttime="20231101 14:41:33.948" endtime="20231101 14:41:33.950"/>
</if>
<status status="PASS" starttime="20231101 14:41:33.830" endtime="20231101 14:41:33.951"/>
</kw>
<status status="PASS" starttime="20231101 14:41:33.471" endtime="20231101 14:41:33.951"/>
</branch>
<status status="PASS" starttime="20231101 14:41:33.470" endtime="20231101 14:41:33.952"/>
</if>
<status status="PASS" starttime="20231101 14:41:33.451" endtime="20231101 14:41:33.952"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 14:41:33.953" endtime="20231101 14:41:33.962"/>
</kw>
<status status="PASS" starttime="20231101 14:41:32.269" endtime="20231101 14:41:33.963"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231101 14:41:34.995" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231101 14:41:33.967" endtime="20231101 14:41:34.996"/>
</kw>
<status status="PASS" starttime="20231101 14:41:33.965" endtime="20231101 14:41:34.997"/>
</kw>
<tag>Search</tag>
<status status="PASS" starttime="20231101 14:41:10.265" endtime="20231101 14:41:35.003"/>
</test>
<status status="PASS" starttime="20231101 14:41:07.979" endtime="20231101 14:41:35.019"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Data">Data</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

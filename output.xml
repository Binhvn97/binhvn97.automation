<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231130 17:57:01.481" rpa="false" schemaversion="4">
<suite id="s1" name="Post" source="d:\TESTER\Automation\Auto_Web\testcases\post.robot">
<test id="s1-t1" name="PO_11 Check the update of data list after cancel the search action" line="134">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231130 17:57:03.787" endtime="20231130 17:57:03.788"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231130 17:57:03.790" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\49e72770-4509-4627-80e4-8a5148fd02fd"}</msg>
<msg timestamp="20231130 17:57:05.461" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\49e72770-4509-4627-80e4-8a5148fd02fd"}</msg>
<status status="PASS" starttime="20231130 17:57:03.789" endtime="20231130 17:57:05.462"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231130 17:57:08.891" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231130 17:57:08.892" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231130 17:57:05.463" endtime="20231130 17:57:08.893"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231130 17:57:08.896" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231130 17:57:08.894" endtime="20231130 17:57:08.896"/>
</kw>
<status status="PASS" starttime="20231130 17:57:03.786" endtime="20231130 17:57:08.897"/>
</kw>
<kw name="Create a category with &quot;Cate1&quot; name" sourcename="Create a category with &quot;${name}&quot; name">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:08.930" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:08.929" endtime="20231130 17:57:08.931"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:08.934" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:08.936" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:08.931" endtime="20231130 17:57:08.936"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:08.938" endtime="20231130 17:57:08.939"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:08.937" endtime="20231130 17:57:08.940"/>
</branch>
<status status="PASS" starttime="20231130 17:57:08.937" endtime="20231130 17:57:08.945"/>
</if>
<msg timestamp="20231130 17:57:08.946" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:08.926" endtime="20231130 17:57:08.947"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Post" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Post&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:09.123" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:08.955" endtime="20231130 17:57:09.123"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231130 17:57:09.125" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231130 17:57:09.124" endtime="20231130 17:57:09.126"/>
</kw>
<status status="FAIL" starttime="20231130 17:57:08.953" endtime="20231130 17:57:09.127"/>
</kw>
<msg timestamp="20231130 17:57:09.128" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231130 17:57:08.948" endtime="20231130 17:57:09.128"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:09.130" endtime="20231130 17:57:09.131"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.132" endtime="20231130 17:57:09.134"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.135" endtime="20231130 17:57:09.136"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.137" endtime="20231130 17:57:09.137"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231130 17:57:09.139" endtime="20231130 17:57:09.140"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231130 17:57:09.141" endtime="20231130 17:57:09.142"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231130 17:57:09.143" endtime="20231130 17:57:09.143"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231130 17:57:09.145" endtime="20231130 17:57:09.146"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231130 17:57:09.147" endtime="20231130 17:57:09.148"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.138" endtime="20231130 17:57:09.150"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231130 17:57:09.152" endtime="20231130 17:57:09.153"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.151" endtime="20231130 17:57:09.154"/>
</branch>
<status status="NOT RUN" starttime="20231130 17:57:09.138" endtime="20231130 17:57:09.154"/>
</if>
<status status="NOT RUN" starttime="20231130 17:57:09.129" endtime="20231130 17:57:09.155"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Post&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:09.267" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:09.163" endtime="20231130 17:57:09.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:09.271" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:09.270" endtime="20231130 17:57:09.272"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:09.286" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:09.272" endtime="20231130 17:57:09.287"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:09.288" endtime="20231130 17:57:09.289"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.287" endtime="20231130 17:57:09.289"/>
</branch>
<status status="PASS" starttime="20231130 17:57:09.287" endtime="20231130 17:57:09.290"/>
</if>
<status status="PASS" starttime="20231130 17:57:09.161" endtime="20231130 17:57:09.290"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:09.294" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:09.292" endtime="20231130 17:57:09.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:09.305" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:09.303" endtime="20231130 17:57:09.306"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:09.309" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:09.307" endtime="20231130 17:57:09.309"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:09.310" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:09.311" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:09.310" endtime="20231130 17:57:09.311"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:09.313" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:09.312" endtime="20231130 17:57:09.314"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:09.323" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:09.324" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:09.314" endtime="20231130 17:57:09.325"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.326" endtime="20231130 17:57:09.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.328" endtime="20231130 17:57:09.328"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.325" endtime="20231130 17:57:09.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.330" endtime="20231130 17:57:09.330"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.331" endtime="20231130 17:57:09.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.337" endtime="20231130 17:57:09.338"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.329" endtime="20231130 17:57:09.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.341" endtime="20231130 17:57:09.342"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.342" endtime="20231130 17:57:09.343"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.340" endtime="20231130 17:57:09.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.346" endtime="20231130 17:57:09.346"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.348" endtime="20231130 17:57:09.352"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.344" endtime="20231130 17:57:09.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.356" endtime="20231130 17:57:09.356"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.355" endtime="20231130 17:57:09.357"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:09.359" endtime="20231130 17:57:09.359"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.358" endtime="20231130 17:57:09.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.360" endtime="20231130 17:57:09.360"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.361" endtime="20231130 17:57:09.361"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.362" endtime="20231130 17:57:09.362"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.359" endtime="20231130 17:57:09.362"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.365" endtime="20231130 17:57:09.369"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.363" endtime="20231130 17:57:09.370"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.371" endtime="20231130 17:57:09.372"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.370" endtime="20231130 17:57:09.373"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.374" endtime="20231130 17:57:09.375"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.373" endtime="20231130 17:57:09.376"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.377" endtime="20231130 17:57:09.378"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.376" endtime="20231130 17:57:09.379"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.380" endtime="20231130 17:57:09.381"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.379" endtime="20231130 17:57:09.382"/>
</branch>
<status status="PASS" starttime="20231130 17:57:09.325" endtime="20231130 17:57:09.386"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:09.388" level="INFO">Length is 15</msg>
<msg timestamp="20231130 17:57:09.388" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231130 17:57:09.386" endtime="20231130 17:57:09.388"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:09.392" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231130 17:57:09.391" endtime="20231130 17:57:09.393"/>
</kw>
<status status="PASS" starttime="20231130 17:57:09.389" endtime="20231130 17:57:09.393"/>
</branch>
<status status="PASS" starttime="20231130 17:57:09.389" endtime="20231130 17:57:09.394"/>
</if>
<msg timestamp="20231130 17:57:09.394" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231130 17:57:09.291" endtime="20231130 17:57:09.395"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:09.397" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:09.395" endtime="20231130 17:57:09.397"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:09.398" endtime="20231130 17:57:09.558"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:09.559" endtime="20231130 17:57:09.661"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:09.663" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:09.662" endtime="20231130 17:57:09.742"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:09.832" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231130 17:57:09.835" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231130 17:57:09.743" endtime="20231130 17:57:09.836"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.839" endtime="20231130 17:57:09.840"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:09.841" endtime="20231130 17:57:09.842"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:09.837" endtime="20231130 17:57:09.843"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:09.837" endtime="20231130 17:57:09.843"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:09.845" endtime="20231130 17:57:09.929"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:09.931" level="INFO">Length is 15</msg>
<msg timestamp="20231130 17:57:09.935" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231130 17:57:09.930" endtime="20231130 17:57:09.935"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:09.939" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231130 17:57:09.937" endtime="20231130 17:57:09.939"/>
</kw>
<status status="PASS" starttime="20231130 17:57:09.936" endtime="20231130 17:57:09.939"/>
</branch>
<status status="PASS" starttime="20231130 17:57:09.936" endtime="20231130 17:57:09.940"/>
</if>
<status status="PASS" starttime="20231130 17:57:09.159" endtime="20231130 17:57:09.940"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:10.044" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:09.943" endtime="20231130 17:57:10.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:10.046" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:10.045" endtime="20231130 17:57:10.046"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:10.059" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:10.047" endtime="20231130 17:57:10.060"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:10.062" endtime="20231130 17:57:10.062"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.061" endtime="20231130 17:57:10.063"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.060" endtime="20231130 17:57:10.063"/>
</if>
<status status="PASS" starttime="20231130 17:57:09.942" endtime="20231130 17:57:10.064"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:10.070" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:10.069" endtime="20231130 17:57:10.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:10.072" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:10.071" endtime="20231130 17:57:10.072"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:10.075" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:10.073" endtime="20231130 17:57:10.075"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:10.077" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:10.078" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:10.076" endtime="20231130 17:57:10.078"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:10.080" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:10.079" endtime="20231130 17:57:10.080"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:10.086" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:10.086" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:10.081" endtime="20231130 17:57:10.087"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.089" endtime="20231130 17:57:10.089"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.090" endtime="20231130 17:57:10.091"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.087" endtime="20231130 17:57:10.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.093" endtime="20231130 17:57:10.094"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.094" endtime="20231130 17:57:10.095"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.096" endtime="20231130 17:57:10.096"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.092" endtime="20231130 17:57:10.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.101" endtime="20231130 17:57:10.102"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.103" endtime="20231130 17:57:10.104"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.097" endtime="20231130 17:57:10.104"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.106" endtime="20231130 17:57:10.106"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.106" endtime="20231130 17:57:10.106"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.105" endtime="20231130 17:57:10.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.108" endtime="20231130 17:57:10.108"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.107" endtime="20231130 17:57:10.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:10.109" endtime="20231130 17:57:10.110"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.109" endtime="20231130 17:57:10.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.111" endtime="20231130 17:57:10.111"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.112" endtime="20231130 17:57:10.112"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.112" endtime="20231130 17:57:10.112"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.110" endtime="20231130 17:57:10.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.113" endtime="20231130 17:57:10.114"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.113" endtime="20231130 17:57:10.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.140" endtime="20231130 17:57:10.144"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.114" endtime="20231130 17:57:10.145"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.153" endtime="20231130 17:57:10.154"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.148" endtime="20231130 17:57:10.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.156" endtime="20231130 17:57:10.156"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.155" endtime="20231130 17:57:10.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.158" endtime="20231130 17:57:10.158"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.157" endtime="20231130 17:57:10.159"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.087" endtime="20231130 17:57:10.159"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:10.160" level="INFO">Length is 6</msg>
<msg timestamp="20231130 17:57:10.161" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231130 17:57:10.160" endtime="20231130 17:57:10.161"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:10.163" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231130 17:57:10.162" endtime="20231130 17:57:10.163"/>
</kw>
<status status="PASS" starttime="20231130 17:57:10.161" endtime="20231130 17:57:10.164"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.161" endtime="20231130 17:57:10.164"/>
</if>
<msg timestamp="20231130 17:57:10.168" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231130 17:57:10.064" endtime="20231130 17:57:10.169"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:10.172" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:10.171" endtime="20231130 17:57:10.173"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:10.174" endtime="20231130 17:57:10.272"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:10.272" endtime="20231130 17:57:10.307"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:10.309" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:10.308" endtime="20231130 17:57:10.364"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:10.413" level="INFO">Text: '123123'</msg>
<msg timestamp="20231130 17:57:10.414" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231130 17:57:10.369" endtime="20231130 17:57:10.414"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.420" endtime="20231130 17:57:10.420"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.421" endtime="20231130 17:57:10.422"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.415" endtime="20231130 17:57:10.422"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:10.415" endtime="20231130 17:57:10.423"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:10.424" endtime="20231130 17:57:10.496"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:10.497" level="INFO">Length is 6</msg>
<msg timestamp="20231130 17:57:10.498" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231130 17:57:10.496" endtime="20231130 17:57:10.498"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:10.504" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231130 17:57:10.502" endtime="20231130 17:57:10.505"/>
</kw>
<status status="PASS" starttime="20231130 17:57:10.498" endtime="20231130 17:57:10.505"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.498" endtime="20231130 17:57:10.506"/>
</if>
<status status="PASS" starttime="20231130 17:57:09.941" endtime="20231130 17:57:10.507"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:10.610" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:10.509" endtime="20231130 17:57:10.610"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:10.624" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:10.611" endtime="20231130 17:57:10.624"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:10.625" endtime="20231130 17:57:10.747"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:10.752" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:10.750" endtime="20231130 17:57:10.752"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:10.764" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:10.753" endtime="20231130 17:57:10.766"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.768" endtime="20231130 17:57:10.769"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.769" endtime="20231130 17:57:10.770"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:10.772" endtime="20231130 17:57:10.773"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.767" endtime="20231130 17:57:10.775"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.767" endtime="20231130 17:57:10.777"/>
</if>
<status status="PASS" starttime="20231130 17:57:10.749" endtime="20231130 17:57:10.778"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:10.811" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:10.811" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:10.839" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:10.840" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:10.852" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:10.779" endtime="20231130 17:57:10.853"/>
</kw>
<status status="PASS" starttime="20231130 17:57:10.625" endtime="20231130 17:57:10.854"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.855" endtime="20231130 17:57:10.855"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:10.856" endtime="20231130 17:57:10.856"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.857" endtime="20231130 17:57:10.857"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.854" endtime="20231130 17:57:10.858"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.625" endtime="20231130 17:57:10.858"/>
</if>
<status status="PASS" starttime="20231130 17:57:10.507" endtime="20231130 17:57:10.859"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:10.861" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:10.860" endtime="20231130 17:57:10.862"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:10.864" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:10.864" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:10.863" endtime="20231130 17:57:10.864"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:10.869" endtime="20231130 17:57:10.869"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:10.867" endtime="20231130 17:57:10.870"/>
</branch>
<status status="PASS" starttime="20231130 17:57:10.867" endtime="20231130 17:57:10.870"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:11.247" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231130 17:57:10.876" endtime="20231130 17:57:11.248"/>
</kw>
<status status="PASS" starttime="20231130 17:57:10.872" endtime="20231130 17:57:11.249"/>
</kw>
<status status="PASS" starttime="20231130 17:57:10.871" endtime="20231130 17:57:11.250"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:11.252" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231130 17:57:11.251" endtime="20231130 17:57:11.253"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:11.747" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231130 17:57:11.747" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231130 17:57:11.747" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231130 17:57:11.258" endtime="20231130 17:57:11.761"/>
</kw>
<status status="FAIL" starttime="20231130 17:57:11.255" endtime="20231130 17:57:11.762"/>
</kw>
<msg timestamp="20231130 17:57:11.763" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231130 17:57:11.254" endtime="20231130 17:57:11.763"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:11.768" endtime="20231130 17:57:11.769"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:11.764" endtime="20231130 17:57:11.769"/>
</branch>
<status status="PASS" starttime="20231130 17:57:11.764" endtime="20231130 17:57:11.770"/>
</if>
<status status="PASS" starttime="20231130 17:57:10.859" endtime="20231130 17:57:11.771"/>
</kw>
<status status="PASS" starttime="20231130 17:57:09.157" endtime="20231130 17:57:11.771"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:11.806" level="INFO">Waited for Element with selector //li[contains(@class, "menu") and descendant::span[contains(text(), "QUẢN LÝ DANH MỤC")]] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:11.775" endtime="20231130 17:57:11.807"/>
</kw>
<status status="PASS" starttime="20231130 17:57:11.773" endtime="20231130 17:57:11.808"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:11.808" endtime="20231130 17:57:12.809"/>
</kw>
<status status="PASS" starttime="20231130 17:57:11.772" endtime="20231130 17:57:12.810"/>
</kw>
<kw name="Click &quot;Post&quot; sub menu to &quot;/post&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:12.831" level="INFO">Waited for Element with selector //a[contains(@class, "sub-menu") and descendant::span[contains(text(), "Post")]] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:12.812" endtime="20231130 17:57:12.833"/>
</kw>
<status status="PASS" starttime="20231130 17:57:12.811" endtime="20231130 17:57:12.834"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:12.835" endtime="20231130 17:57:13.359"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231130 17:57:13.368" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/post?filter=%7B%22categoryId%22:%2234f831fe-03f9-46b6-aba4-f8f7a9ced293%22%7D</msg>
<status status="PASS" starttime="20231130 17:57:13.360" endtime="20231130 17:57:13.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231130 17:57:13.369" endtime="20231130 17:57:13.371"/>
</kw>
<status status="PASS" starttime="20231130 17:57:12.810" endtime="20231130 17:57:13.371"/>
</kw>
<status status="PASS" starttime="20231130 17:57:09.156" endtime="20231130 17:57:13.372"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:13.476" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:13.374" endtime="20231130 17:57:13.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:13.478" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:13.477" endtime="20231130 17:57:13.478"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:13.563" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:13.479" endtime="20231130 17:57:13.563"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:13.564" endtime="20231130 17:57:13.565"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:13.564" endtime="20231130 17:57:13.567"/>
</branch>
<status status="PASS" starttime="20231130 17:57:13.564" endtime="20231130 17:57:13.567"/>
</if>
<status status="PASS" starttime="20231130 17:57:13.373" endtime="20231130 17:57:13.567"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:13.669" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:13.568" endtime="20231130 17:57:13.669"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:13.671" level="INFO">${element} = //*[contains(@class,'ant-spin-container')]//span[contains(text(),'Cate1')]</msg>
<status status="PASS" starttime="20231130 17:57:13.670" endtime="20231130 17:57:13.672"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:13.697" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:13.676" endtime="20231130 17:57:13.697"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:13.806" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:13.704" endtime="20231130 17:57:13.807"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:13.828" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:13.809" endtime="20231130 17:57:13.828"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:13.830" endtime="20231130 17:57:14.037"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:14.039" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:14.038" endtime="20231130 17:57:14.039"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:14.050" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:14.040" endtime="20231130 17:57:14.050"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.052" endtime="20231130 17:57:14.053"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.054" endtime="20231130 17:57:14.055"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:14.056" endtime="20231130 17:57:14.056"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.051" endtime="20231130 17:57:14.057"/>
</branch>
<status status="PASS" starttime="20231130 17:57:14.051" endtime="20231130 17:57:14.058"/>
</if>
<status status="PASS" starttime="20231130 17:57:14.037" endtime="20231130 17:57:14.058"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:14.077" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:14.077" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:14.097" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:14.097" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:14.108" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:14.059" endtime="20231130 17:57:14.109"/>
</kw>
<status status="PASS" starttime="20231130 17:57:13.829" endtime="20231130 17:57:14.109"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.116" endtime="20231130 17:57:14.117"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:14.118" endtime="20231130 17:57:14.119"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.121" endtime="20231130 17:57:14.122"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.112" endtime="20231130 17:57:14.123"/>
</branch>
<status status="PASS" starttime="20231130 17:57:13.829" endtime="20231130 17:57:14.124"/>
</if>
<status status="PASS" starttime="20231130 17:57:13.702" endtime="20231130 17:57:14.124"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:14.231" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:14.129" endtime="20231130 17:57:14.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:14.237" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:14.236" endtime="20231130 17:57:14.237"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:14.246" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:14.237" endtime="20231130 17:57:14.246"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:14.249" endtime="20231130 17:57:14.250"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.247" endtime="20231130 17:57:14.251"/>
</branch>
<status status="PASS" starttime="20231130 17:57:14.247" endtime="20231130 17:57:14.251"/>
</if>
<status status="PASS" starttime="20231130 17:57:14.128" endtime="20231130 17:57:14.252"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:14.255" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:14.254" endtime="20231130 17:57:14.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:14.257" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:14.256" endtime="20231130 17:57:14.257"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:14.259" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:14.258" endtime="20231130 17:57:14.259"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:14.261" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:14.261" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:14.260" endtime="20231130 17:57:14.261"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:14.263" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:14.262" endtime="20231130 17:57:14.263"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:14.263" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:14.264" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:14.263" endtime="20231130 17:57:14.264"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.271" endtime="20231130 17:57:14.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.272" endtime="20231130 17:57:14.273"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.270" endtime="20231130 17:57:14.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.275" endtime="20231130 17:57:14.276"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.276" endtime="20231130 17:57:14.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.278" endtime="20231130 17:57:14.278"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.274" endtime="20231130 17:57:14.278"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.280" endtime="20231130 17:57:14.283"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.284" endtime="20231130 17:57:14.285"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.279" endtime="20231130 17:57:14.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.287" endtime="20231130 17:57:14.288"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.289" endtime="20231130 17:57:14.290"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.286" endtime="20231130 17:57:14.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.292" endtime="20231130 17:57:14.293"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.291" endtime="20231130 17:57:14.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:14.296" endtime="20231130 17:57:14.300"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.294" endtime="20231130 17:57:14.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.305" endtime="20231130 17:57:14.306"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.307" endtime="20231130 17:57:14.308"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.309" endtime="20231130 17:57:14.310"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.304" endtime="20231130 17:57:14.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.312" endtime="20231130 17:57:14.313"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.311" endtime="20231130 17:57:14.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.318" endtime="20231130 17:57:14.318"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.314" endtime="20231130 17:57:14.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.320" endtime="20231130 17:57:14.320"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.319" endtime="20231130 17:57:14.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.322" endtime="20231130 17:57:14.323"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.321" endtime="20231130 17:57:14.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.325" endtime="20231130 17:57:14.325"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.324" endtime="20231130 17:57:14.326"/>
</branch>
<status status="PASS" starttime="20231130 17:57:14.264" endtime="20231130 17:57:14.327"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:14.329" level="INFO">Length is 5</msg>
<msg timestamp="20231130 17:57:14.330" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231130 17:57:14.327" endtime="20231130 17:57:14.331"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:14.337" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:14.335" endtime="20231130 17:57:14.338"/>
</kw>
<status status="PASS" starttime="20231130 17:57:14.333" endtime="20231130 17:57:14.338"/>
</branch>
<status status="PASS" starttime="20231130 17:57:14.333" endtime="20231130 17:57:14.339"/>
</if>
<msg timestamp="20231130 17:57:14.339" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:14.252" endtime="20231130 17:57:14.340"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:14.344" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:14.343" endtime="20231130 17:57:14.345"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:14.346" endtime="20231130 17:57:14.678"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:14.679" endtime="20231130 17:57:14.727"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:14.729" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:14.728" endtime="20231130 17:57:14.779"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:14.810" level="INFO">Text: 'Cate1'</msg>
<msg timestamp="20231130 17:57:14.811" level="INFO">${condition} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:14.779" endtime="20231130 17:57:14.811"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.813" endtime="20231130 17:57:14.813"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:14.813" endtime="20231130 17:57:14.813"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.811" endtime="20231130 17:57:14.814"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:14.811" endtime="20231130 17:57:14.814"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:14.816" endtime="20231130 17:57:14.874"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:14.875" level="INFO">Length is 5</msg>
<msg timestamp="20231130 17:57:14.876" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231130 17:57:14.875" endtime="20231130 17:57:14.876"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:14.879" level="INFO">${STATE["Tiêu đề"]} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:14.878" endtime="20231130 17:57:14.879"/>
</kw>
<status status="PASS" starttime="20231130 17:57:14.877" endtime="20231130 17:57:14.879"/>
</branch>
<status status="PASS" starttime="20231130 17:57:14.876" endtime="20231130 17:57:14.880"/>
</if>
<status status="PASS" starttime="20231130 17:57:14.126" endtime="20231130 17:57:14.880"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:14.985" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:14.883" endtime="20231130 17:57:14.985"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:14.987" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:14.986" endtime="20231130 17:57:14.987"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:14.997" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:14.987" endtime="20231130 17:57:14.997"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:15.000" endtime="20231130 17:57:15.001"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:14.998" endtime="20231130 17:57:15.002"/>
</branch>
<status status="PASS" starttime="20231130 17:57:14.998" endtime="20231130 17:57:15.003"/>
</if>
<status status="PASS" starttime="20231130 17:57:14.881" endtime="20231130 17:57:15.003"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:15.006" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:15.005" endtime="20231130 17:57:15.007"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:15.008" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:15.007" endtime="20231130 17:57:15.009"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:15.010" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:15.010" endtime="20231130 17:57:15.011"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:15.011" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:15.012" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:15.011" endtime="20231130 17:57:15.012"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:15.013" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:15.012" endtime="20231130 17:57:15.013"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:15.014" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:15.014" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:15.013" endtime="20231130 17:57:15.014"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.016" endtime="20231130 17:57:15.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.019" endtime="20231130 17:57:15.019"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.014" endtime="20231130 17:57:15.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.020" endtime="20231130 17:57:15.020"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.021" endtime="20231130 17:57:15.022"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.022" endtime="20231130 17:57:15.022"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.019" endtime="20231130 17:57:15.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.023" endtime="20231130 17:57:15.024"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.024" endtime="20231130 17:57:15.024"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.023" endtime="20231130 17:57:15.024"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.025" endtime="20231130 17:57:15.025"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.025" endtime="20231130 17:57:15.026"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.024" endtime="20231130 17:57:15.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:15.029" level="INFO">${new_text} = Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.</msg>
<status status="PASS" starttime="20231130 17:57:15.027" endtime="20231130 17:57:15.030"/>
</kw>
<status status="PASS" starttime="20231130 17:57:15.026" endtime="20231130 17:57:15.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:15.031" endtime="20231130 17:57:15.031"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.030" endtime="20231130 17:57:15.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.034" endtime="20231130 17:57:15.035"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.036" endtime="20231130 17:57:15.036"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.037" endtime="20231130 17:57:15.037"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.034" endtime="20231130 17:57:15.037"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.038" endtime="20231130 17:57:15.038"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.038" endtime="20231130 17:57:15.039"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.039" endtime="20231130 17:57:15.040"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.039" endtime="20231130 17:57:15.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.041" endtime="20231130 17:57:15.041"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.040" endtime="20231130 17:57:15.041"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.041" endtime="20231130 17:57:15.042"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.041" endtime="20231130 17:57:15.042"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.042" endtime="20231130 17:57:15.043"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.042" endtime="20231130 17:57:15.043"/>
</branch>
<status status="PASS" starttime="20231130 17:57:15.014" endtime="20231130 17:57:15.043"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:15.044" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:15.044" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:15.043" endtime="20231130 17:57:15.044"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:15.046" level="INFO">${text} = Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.</msg>
<status status="PASS" starttime="20231130 17:57:15.045" endtime="20231130 17:57:15.046"/>
</kw>
<status status="PASS" starttime="20231130 17:57:15.045" endtime="20231130 17:57:15.046"/>
</branch>
<status status="PASS" starttime="20231130 17:57:15.044" endtime="20231130 17:57:15.046"/>
</if>
<msg timestamp="20231130 17:57:15.046" level="INFO">${text} = Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.</msg>
<status status="PASS" starttime="20231130 17:57:15.004" endtime="20231130 17:57:15.047"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:15.047" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:15.047" endtime="20231130 17:57:15.048"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:15.050" endtime="20231130 17:57:15.101"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:15.104" level="INFO">Fills the text 'Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:15.102" endtime="20231130 17:57:15.152"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:15.194" level="INFO">Text: 'Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.'</msg>
<msg timestamp="20231130 17:57:15.195" level="INFO">${condition} = Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.</msg>
<status status="PASS" starttime="20231130 17:57:15.153" endtime="20231130 17:57:15.195"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.198" endtime="20231130 17:57:15.200"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.201" endtime="20231130 17:57:15.202"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.196" endtime="20231130 17:57:15.202"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:15.196" endtime="20231130 17:57:15.203"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:15.204" endtime="20231130 17:57:15.279"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:15.281" level="INFO">Length is 134</msg>
<msg timestamp="20231130 17:57:15.283" level="INFO">${cnt} = 134</msg>
<status status="PASS" starttime="20231130 17:57:15.280" endtime="20231130 17:57:15.284"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:15.287" level="INFO">${STATE["Giới thiệu"]} = Aliquid illo inventore nihil quia dolorem facilis. Iste neque mollitia hic. Itaque hic possimus optio ea laudantium magnam recusandae.</msg>
<status status="PASS" starttime="20231130 17:57:15.286" endtime="20231130 17:57:15.288"/>
</kw>
<status status="PASS" starttime="20231130 17:57:15.285" endtime="20231130 17:57:15.288"/>
</branch>
<status status="PASS" starttime="20231130 17:57:15.284" endtime="20231130 17:57:15.289"/>
</if>
<status status="PASS" starttime="20231130 17:57:14.880" endtime="20231130 17:57:15.289"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:15.393" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:15.292" endtime="20231130 17:57:15.393"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:15.405" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:15.394" endtime="20231130 17:57:15.406"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:15.407" endtime="20231130 17:57:15.496"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:15.503" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:15.502" endtime="20231130 17:57:15.504"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:15.517" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:15.506" endtime="20231130 17:57:15.518"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.521" endtime="20231130 17:57:15.522"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.523" endtime="20231130 17:57:15.524"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:15.525" endtime="20231130 17:57:15.525"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.519" endtime="20231130 17:57:15.526"/>
</branch>
<status status="PASS" starttime="20231130 17:57:15.519" endtime="20231130 17:57:15.526"/>
</if>
<status status="PASS" starttime="20231130 17:57:15.497" endtime="20231130 17:57:15.527"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:15.551" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:15.551" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:15.592" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:15.593" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:15.606" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:15.528" endtime="20231130 17:57:15.606"/>
</kw>
<status status="PASS" starttime="20231130 17:57:15.407" endtime="20231130 17:57:15.607"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.608" endtime="20231130 17:57:15.609"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:15.609" endtime="20231130 17:57:15.610"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.611" endtime="20231130 17:57:15.612"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.607" endtime="20231130 17:57:15.612"/>
</branch>
<status status="PASS" starttime="20231130 17:57:15.406" endtime="20231130 17:57:15.613"/>
</if>
<status status="PASS" starttime="20231130 17:57:15.291" endtime="20231130 17:57:15.613"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:15.619" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:15.617" endtime="20231130 17:57:15.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:15.623" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:15.624" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:15.622" endtime="20231130 17:57:15.624"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:15.626" endtime="20231130 17:57:15.627"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:15.625" endtime="20231130 17:57:15.628"/>
</branch>
<status status="PASS" starttime="20231130 17:57:15.625" endtime="20231130 17:57:15.628"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:16.045" level="INFO">Text: 'Thêm mới danh mục bài viết thành công'</msg>
<status status="PASS" starttime="20231130 17:57:15.637" endtime="20231130 17:57:16.046"/>
</kw>
<status status="PASS" starttime="20231130 17:57:15.630" endtime="20231130 17:57:16.046"/>
</kw>
<status status="PASS" starttime="20231130 17:57:15.629" endtime="20231130 17:57:16.046"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:16.047" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231130 17:57:16.047" endtime="20231130 17:57:16.048"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:16.644" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231130 17:57:16.645" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231130 17:57:16.646" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231130 17:57:16.058" endtime="20231130 17:57:16.651"/>
</kw>
<status status="FAIL" starttime="20231130 17:57:16.051" endtime="20231130 17:57:16.652"/>
</kw>
<msg timestamp="20231130 17:57:16.653" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231130 17:57:16.049" endtime="20231130 17:57:16.654"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:16.657" endtime="20231130 17:57:16.657"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:16.655" endtime="20231130 17:57:16.658"/>
</branch>
<status status="PASS" starttime="20231130 17:57:16.655" endtime="20231130 17:57:16.659"/>
</if>
<status status="PASS" starttime="20231130 17:57:15.614" endtime="20231130 17:57:16.659"/>
</kw>
<status status="PASS" starttime="20231130 17:57:13.701" endtime="20231130 17:57:16.660"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231130 17:57:16.661" endtime="20231130 17:57:16.662"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:16.660" endtime="20231130 17:57:16.663"/>
</branch>
<status status="PASS" starttime="20231130 17:57:13.700" endtime="20231130 17:57:16.664"/>
</if>
<status status="PASS" starttime="20231130 17:57:09.155" endtime="20231130 17:57:16.665"/>
</branch>
<status status="PASS" starttime="20231130 17:57:09.129" endtime="20231130 17:57:16.667"/>
</if>
<status status="PASS" starttime="20231130 17:57:08.924" endtime="20231130 17:57:16.667"/>
</kw>
<kw name="Create a test post with &quot;Cate1&quot; type" sourcename="Create a test post with &quot;${type}&quot; type">
<var>${name1}</var>
<kw name="Click &quot;Tạo mới bài viết&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:16.788" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:16.685" endtime="20231130 17:57:16.788"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:16.799" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:16.789" endtime="20231130 17:57:16.799"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:16.804" endtime="20231130 17:57:18.231"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:18.236" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:18.235" endtime="20231130 17:57:18.236"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:18.268" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:18.237" endtime="20231130 17:57:18.268"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.270" endtime="20231130 17:57:18.271"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.272" endtime="20231130 17:57:18.273"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:18.274" endtime="20231130 17:57:18.275"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.269" endtime="20231130 17:57:18.275"/>
</branch>
<status status="PASS" starttime="20231130 17:57:18.269" endtime="20231130 17:57:18.276"/>
</if>
<status status="PASS" starttime="20231130 17:57:18.233" endtime="20231130 17:57:18.276"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:18.362" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:18.362" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:18.419" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:18.419" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:18.436" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:18.278" endtime="20231130 17:57:18.436"/>
</kw>
<status status="PASS" starttime="20231130 17:57:16.802" endtime="20231130 17:57:18.437"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.438" endtime="20231130 17:57:18.439"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:18.440" endtime="20231130 17:57:18.440"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.441" endtime="20231130 17:57:18.442"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.438" endtime="20231130 17:57:18.442"/>
</branch>
<status status="PASS" starttime="20231130 17:57:16.802" endtime="20231130 17:57:18.443"/>
</if>
<status status="PASS" starttime="20231130 17:57:16.684" endtime="20231130 17:57:18.443"/>
</kw>
<kw name="Click radio &quot;Loại editor&quot; in line &quot;Block&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231130 17:57:18.446" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại editor"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "Block"...</msg>
<status status="PASS" starttime="20231130 17:57:18.445" endtime="20231130 17:57:18.447"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:18.447" endtime="20231130 17:57:18.683"/>
</kw>
<status status="PASS" starttime="20231130 17:57:18.444" endtime="20231130 17:57:18.684"/>
</kw>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:18.690" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:18.689" endtime="20231130 17:57:18.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:18.692" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:18.691" endtime="20231130 17:57:18.693"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:18.695" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:18.694" endtime="20231130 17:57:18.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:18.697" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:18.700" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:18.696" endtime="20231130 17:57:18.700"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:18.702" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:18.701" endtime="20231130 17:57:18.702"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:18.704" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:18.705" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:18.703" endtime="20231130 17:57:18.705"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.707" endtime="20231130 17:57:18.708"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.709" endtime="20231130 17:57:18.710"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.706" endtime="20231130 17:57:18.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.711" endtime="20231130 17:57:18.712"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.713" endtime="20231130 17:57:18.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.715" endtime="20231130 17:57:18.717"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.710" endtime="20231130 17:57:18.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.737" endtime="20231130 17:57:18.738"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.739" endtime="20231130 17:57:18.739"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.718" endtime="20231130 17:57:18.740"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.741" endtime="20231130 17:57:18.742"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.742" endtime="20231130 17:57:18.743"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.740" endtime="20231130 17:57:18.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.744" endtime="20231130 17:57:18.745"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.744" endtime="20231130 17:57:18.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:18.747" endtime="20231130 17:57:18.747"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.746" endtime="20231130 17:57:18.747"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.753" endtime="20231130 17:57:18.754"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.755" endtime="20231130 17:57:18.755"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.756" endtime="20231130 17:57:18.757"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.750" endtime="20231130 17:57:18.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.771" endtime="20231130 17:57:18.771"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.770" endtime="20231130 17:57:18.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.773" endtime="20231130 17:57:18.773"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.772" endtime="20231130 17:57:18.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.776" endtime="20231130 17:57:18.777"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.774" endtime="20231130 17:57:18.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.778" endtime="20231130 17:57:18.779"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.778" endtime="20231130 17:57:18.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:18.783" endtime="20231130 17:57:18.785"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:18.780" endtime="20231130 17:57:18.785"/>
</branch>
<status status="PASS" starttime="20231130 17:57:18.706" endtime="20231130 17:57:18.786"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:18.790" level="INFO">Length is 5</msg>
<msg timestamp="20231130 17:57:18.791" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231130 17:57:18.787" endtime="20231130 17:57:18.791"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:18.808" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:18.793" endtime="20231130 17:57:18.810"/>
</kw>
<status status="PASS" starttime="20231130 17:57:18.792" endtime="20231130 17:57:18.811"/>
</branch>
<status status="PASS" starttime="20231130 17:57:18.792" endtime="20231130 17:57:18.813"/>
</if>
<msg timestamp="20231130 17:57:18.814" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:18.686" endtime="20231130 17:57:18.814"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231130 17:57:18.824" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231130 17:57:18.822" endtime="20231130 17:57:18.824"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:18.878" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:18.828" endtime="20231130 17:57:18.879"/>
</kw>
<status status="PASS" starttime="20231130 17:57:18.825" endtime="20231130 17:57:18.879"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:18.880" endtime="20231130 17:57:19.058"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231130 17:57:19.060" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231130 17:57:19.059" endtime="20231130 17:57:19.060"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:19.061" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:19.060" endtime="20231130 17:57:19.125"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:19.126" endtime="20231130 17:57:19.340"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:19.341" level="INFO">Length is 5</msg>
<msg timestamp="20231130 17:57:19.342" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231130 17:57:19.341" endtime="20231130 17:57:19.342"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:19.343" level="INFO">${STATE["Chuyên mục"]} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:19.343" endtime="20231130 17:57:19.343"/>
</kw>
<status status="PASS" starttime="20231130 17:57:19.342" endtime="20231130 17:57:19.344"/>
</branch>
<status status="PASS" starttime="20231130 17:57:19.342" endtime="20231130 17:57:19.344"/>
</if>
<status status="PASS" starttime="20231130 17:57:18.685" endtime="20231130 17:57:19.344"/>
</kw>
<kw name="Select file in &quot;Ảnh cover&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231130 17:57:19.345" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh cover"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231130 17:57:19.345" endtime="20231130 17:57:19.346"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231130 17:57:19.346" endtime="20231130 17:57:19.412"/>
</kw>
<status status="PASS" starttime="20231130 17:57:19.344" endtime="20231130 17:57:19.413"/>
</kw>
<kw name="Select file in &quot;Ảnh thumbnail&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231130 17:57:19.418" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh thumbnail"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231130 17:57:19.416" endtime="20231130 17:57:19.418"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231130 17:57:19.419" endtime="20231130 17:57:19.478"/>
</kw>
<status status="PASS" starttime="20231130 17:57:19.414" endtime="20231130 17:57:19.478"/>
</kw>
<kw name="Click radio &quot;Định dạng bài viết&quot; in line &quot;Longform&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231130 17:57:19.485" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Định dạng bài viết"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), ...</msg>
<status status="PASS" starttime="20231130 17:57:19.482" endtime="20231130 17:57:19.486"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:19.487" endtime="20231130 17:57:19.717"/>
</kw>
<status status="PASS" starttime="20231130 17:57:19.479" endtime="20231130 17:57:19.717"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Background Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:19.821" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:19.720" endtime="20231130 17:57:19.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:19.823" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:19.822" endtime="20231130 17:57:19.823"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:19.836" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:19.824" endtime="20231130 17:57:19.836"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:19.837" endtime="20231130 17:57:19.838"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.837" endtime="20231130 17:57:19.838"/>
</branch>
<status status="PASS" starttime="20231130 17:57:19.836" endtime="20231130 17:57:19.839"/>
</if>
<status status="PASS" starttime="20231130 17:57:19.719" endtime="20231130 17:57:19.839"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:19.842" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:19.841" endtime="20231130 17:57:19.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:19.845" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:19.844" endtime="20231130 17:57:19.845"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:19.847" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:19.846" endtime="20231130 17:57:19.847"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:19.850" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:19.851" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:19.849" endtime="20231130 17:57:19.851"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:19.854" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:19.852" endtime="20231130 17:57:19.855"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:19.856" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:19.859" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:19.855" endtime="20231130 17:57:19.859"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.861" endtime="20231130 17:57:19.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.863" endtime="20231130 17:57:19.864"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.860" endtime="20231130 17:57:19.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.869" endtime="20231130 17:57:19.870"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.870" endtime="20231130 17:57:19.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.877" endtime="20231130 17:57:19.878"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.868" endtime="20231130 17:57:19.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.883" endtime="20231130 17:57:19.886"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.887" endtime="20231130 17:57:19.888"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.880" endtime="20231130 17:57:19.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.889" endtime="20231130 17:57:19.890"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.891" endtime="20231130 17:57:19.892"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.889" endtime="20231130 17:57:19.893"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.894" endtime="20231130 17:57:19.895"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.893" endtime="20231130 17:57:19.896"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:19.900" endtime="20231130 17:57:19.902"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.897" endtime="20231130 17:57:19.902"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.904" endtime="20231130 17:57:19.906"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.907" endtime="20231130 17:57:19.908"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.909" endtime="20231130 17:57:19.909"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.903" endtime="20231130 17:57:19.910"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231130 17:57:19.912" level="INFO">${new_text} = #cc22aa</msg>
<status status="PASS" starttime="20231130 17:57:19.911" endtime="20231130 17:57:19.913"/>
</kw>
<status status="PASS" starttime="20231130 17:57:19.910" endtime="20231130 17:57:19.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.920" endtime="20231130 17:57:19.921"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.914" endtime="20231130 17:57:19.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.923" endtime="20231130 17:57:19.924"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.922" endtime="20231130 17:57:19.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.926" endtime="20231130 17:57:19.926"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.925" endtime="20231130 17:57:19.927"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:19.928" endtime="20231130 17:57:19.929"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:19.927" endtime="20231130 17:57:19.929"/>
</branch>
<status status="PASS" starttime="20231130 17:57:19.860" endtime="20231130 17:57:19.930"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:19.934" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:19.935" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:19.930" endtime="20231130 17:57:19.936"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:19.940" level="INFO">${text} = #cc22aa</msg>
<status status="PASS" starttime="20231130 17:57:19.939" endtime="20231130 17:57:19.941"/>
</kw>
<status status="PASS" starttime="20231130 17:57:19.938" endtime="20231130 17:57:19.941"/>
</branch>
<status status="PASS" starttime="20231130 17:57:19.937" endtime="20231130 17:57:19.942"/>
</if>
<msg timestamp="20231130 17:57:19.943" level="INFO">${text} = #cc22aa</msg>
<status status="PASS" starttime="20231130 17:57:19.840" endtime="20231130 17:57:19.943"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:19.945" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Background Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:19.944" endtime="20231130 17:57:19.946"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:19.946" endtime="20231130 17:57:20.163"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:20.163" endtime="20231130 17:57:20.244"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:20.245" level="INFO">Fills the text '#cc22aa' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:20.244" endtime="20231130 17:57:20.339"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:20.386" level="INFO">Text: '#cc22aa'</msg>
<msg timestamp="20231130 17:57:20.387" level="INFO">${condition} = #cc22aa</msg>
<status status="PASS" starttime="20231130 17:57:20.340" endtime="20231130 17:57:20.387"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.390" endtime="20231130 17:57:20.391"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.391" endtime="20231130 17:57:20.392"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.388" endtime="20231130 17:57:20.393"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:20.388" endtime="20231130 17:57:20.393"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:20.394" endtime="20231130 17:57:20.460"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:20.462" level="INFO">Length is 7</msg>
<msg timestamp="20231130 17:57:20.462" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231130 17:57:20.461" endtime="20231130 17:57:20.463"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:20.468" level="INFO">${STATE["Background Color"]} = #cc22aa</msg>
<status status="PASS" starttime="20231130 17:57:20.466" endtime="20231130 17:57:20.468"/>
</kw>
<status status="PASS" starttime="20231130 17:57:20.463" endtime="20231130 17:57:20.469"/>
</branch>
<status status="PASS" starttime="20231130 17:57:20.463" endtime="20231130 17:57:20.469"/>
</if>
<status status="PASS" starttime="20231130 17:57:19.718" endtime="20231130 17:57:20.470"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Title Fore Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:20.573" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:20.473" endtime="20231130 17:57:20.573"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:20.575" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:20.574" endtime="20231130 17:57:20.576"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:20.590" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:20.576" endtime="20231130 17:57:20.590"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:20.592" endtime="20231130 17:57:20.592"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.591" endtime="20231130 17:57:20.593"/>
</branch>
<status status="PASS" starttime="20231130 17:57:20.591" endtime="20231130 17:57:20.593"/>
</if>
<status status="PASS" starttime="20231130 17:57:20.472" endtime="20231130 17:57:20.594"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:20.596" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:20.596" endtime="20231130 17:57:20.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:20.600" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:20.599" endtime="20231130 17:57:20.601"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:20.603" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:20.601" endtime="20231130 17:57:20.603"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:20.605" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:20.606" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:20.604" endtime="20231130 17:57:20.606"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:20.608" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:20.607" endtime="20231130 17:57:20.608"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:20.610" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:20.610" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:20.609" endtime="20231130 17:57:20.610"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.612" endtime="20231130 17:57:20.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.613" endtime="20231130 17:57:20.616"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.611" endtime="20231130 17:57:20.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.618" endtime="20231130 17:57:20.618"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.619" endtime="20231130 17:57:20.620"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.621" endtime="20231130 17:57:20.621"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.617" endtime="20231130 17:57:20.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.624" endtime="20231130 17:57:20.625"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.625" endtime="20231130 17:57:20.626"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.622" endtime="20231130 17:57:20.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.628" endtime="20231130 17:57:20.628"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.629" endtime="20231130 17:57:20.630"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.627" endtime="20231130 17:57:20.633"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.634" endtime="20231130 17:57:20.635"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.634" endtime="20231130 17:57:20.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:20.637" endtime="20231130 17:57:20.637"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.635" endtime="20231130 17:57:20.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.640" endtime="20231130 17:57:20.640"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.641" endtime="20231130 17:57:20.641"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.641" endtime="20231130 17:57:20.642"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.639" endtime="20231130 17:57:20.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231130 17:57:20.643" level="INFO">${new_text} = #ff1199</msg>
<status status="PASS" starttime="20231130 17:57:20.643" endtime="20231130 17:57:20.644"/>
</kw>
<status status="PASS" starttime="20231130 17:57:20.642" endtime="20231130 17:57:20.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.645" endtime="20231130 17:57:20.645"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.645" endtime="20231130 17:57:20.646"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.646" endtime="20231130 17:57:20.646"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.646" endtime="20231130 17:57:20.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.649" endtime="20231130 17:57:20.650"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.649" endtime="20231130 17:57:20.650"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.650" endtime="20231130 17:57:20.651"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.650" endtime="20231130 17:57:20.651"/>
</branch>
<status status="PASS" starttime="20231130 17:57:20.610" endtime="20231130 17:57:20.651"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:20.652" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:20.652" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:20.651" endtime="20231130 17:57:20.652"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:20.655" level="INFO">${text} = #ff1199</msg>
<status status="PASS" starttime="20231130 17:57:20.654" endtime="20231130 17:57:20.656"/>
</kw>
<status status="PASS" starttime="20231130 17:57:20.653" endtime="20231130 17:57:20.656"/>
</branch>
<status status="PASS" starttime="20231130 17:57:20.652" endtime="20231130 17:57:20.656"/>
</if>
<msg timestamp="20231130 17:57:20.657" level="INFO">${text} = #ff1199</msg>
<status status="PASS" starttime="20231130 17:57:20.594" endtime="20231130 17:57:20.657"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:20.658" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Title Fore Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:20.657" endtime="20231130 17:57:20.658"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:20.658" endtime="20231130 17:57:20.814"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:20.817" endtime="20231130 17:57:20.871"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:20.873" level="INFO">Fills the text '#ff1199' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:20.872" endtime="20231130 17:57:20.946"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:20.992" level="INFO">Text: '#ff1199'</msg>
<msg timestamp="20231130 17:57:20.993" level="INFO">${condition} = #ff1199</msg>
<status status="PASS" starttime="20231130 17:57:20.949" endtime="20231130 17:57:20.993"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.996" endtime="20231130 17:57:20.997"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:20.998" endtime="20231130 17:57:20.999"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:20.994" endtime="20231130 17:57:21.000"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:20.994" endtime="20231130 17:57:21.000"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:21.001" endtime="20231130 17:57:21.077"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:21.079" level="INFO">Length is 7</msg>
<msg timestamp="20231130 17:57:21.080" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231130 17:57:21.078" endtime="20231130 17:57:21.080"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:21.085" level="INFO">${STATE["Title Fore Color"]} = #ff1199</msg>
<status status="PASS" starttime="20231130 17:57:21.083" endtime="20231130 17:57:21.086"/>
</kw>
<status status="PASS" starttime="20231130 17:57:21.082" endtime="20231130 17:57:21.086"/>
</branch>
<status status="PASS" starttime="20231130 17:57:21.081" endtime="20231130 17:57:21.087"/>
</if>
<status status="PASS" starttime="20231130 17:57:20.470" endtime="20231130 17:57:21.087"/>
</kw>
<kw name="Click switch &quot;Show Title&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231130 17:57:21.091" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Show Title"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231130 17:57:21.089" endtime="20231130 17:57:21.091"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:21.092" endtime="20231130 17:57:21.218"/>
</kw>
<status status="PASS" starttime="20231130 17:57:21.088" endtime="20231130 17:57:21.218"/>
</kw>
<kw name="Click switch &quot;Ghim&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231130 17:57:21.223" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ghim"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231130 17:57:21.221" endtime="20231130 17:57:21.223"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:21.224" endtime="20231130 17:57:21.391"/>
</kw>
<status status="PASS" starttime="20231130 17:57:21.220" endtime="20231130 17:57:21.392"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:21.494" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:21.394" endtime="20231130 17:57:21.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:21.495" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:21.494" endtime="20231130 17:57:21.495"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:21.517" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:21.495" endtime="20231130 17:57:21.517"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:21.521" endtime="20231130 17:57:21.521"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.518" endtime="20231130 17:57:21.522"/>
</branch>
<status status="PASS" starttime="20231130 17:57:21.518" endtime="20231130 17:57:21.522"/>
</if>
<status status="PASS" starttime="20231130 17:57:21.393" endtime="20231130 17:57:21.523"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:21.525" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:21.524" endtime="20231130 17:57:21.525"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:21.526" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:21.525" endtime="20231130 17:57:21.526"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:21.527" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:21.526" endtime="20231130 17:57:21.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:21.528" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:21.528" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:21.527" endtime="20231130 17:57:21.528"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:21.529" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:21.528" endtime="20231130 17:57:21.529"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:21.530" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:21.530" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:21.529" endtime="20231130 17:57:21.530"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.533" endtime="20231130 17:57:21.535"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.536" endtime="20231130 17:57:21.536"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.530" endtime="20231130 17:57:21.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.538" endtime="20231130 17:57:21.538"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.539" endtime="20231130 17:57:21.540"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.541" endtime="20231130 17:57:21.542"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.537" endtime="20231130 17:57:21.542"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.543" endtime="20231130 17:57:21.544"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.544" endtime="20231130 17:57:21.545"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.543" endtime="20231130 17:57:21.545"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.546" endtime="20231130 17:57:21.547"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.547" endtime="20231130 17:57:21.551"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.545" endtime="20231130 17:57:21.552"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.554" endtime="20231130 17:57:21.554"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.553" endtime="20231130 17:57:21.555"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:21.556" endtime="20231130 17:57:21.557"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.555" endtime="20231130 17:57:21.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.559" endtime="20231130 17:57:21.560"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.560" endtime="20231130 17:57:21.560"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.561" endtime="20231130 17:57:21.561"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.558" endtime="20231130 17:57:21.561"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.562" endtime="20231130 17:57:21.562"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.562" endtime="20231130 17:57:21.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.563" endtime="20231130 17:57:21.563"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.563" endtime="20231130 17:57:21.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.569" endtime="20231130 17:57:21.570"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.564" endtime="20231130 17:57:21.570"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.571" endtime="20231130 17:57:21.571"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.570" endtime="20231130 17:57:21.572"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.574" endtime="20231130 17:57:21.575"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.573" endtime="20231130 17:57:21.576"/>
</branch>
<status status="PASS" starttime="20231130 17:57:21.530" endtime="20231130 17:57:21.576"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:21.577" level="INFO">Length is 13</msg>
<msg timestamp="20231130 17:57:21.577" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231130 17:57:21.576" endtime="20231130 17:57:21.577"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:21.579" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:21.578" endtime="20231130 17:57:21.579"/>
</kw>
<status status="PASS" starttime="20231130 17:57:21.578" endtime="20231130 17:57:21.579"/>
</branch>
<status status="PASS" starttime="20231130 17:57:21.578" endtime="20231130 17:57:21.580"/>
</if>
<msg timestamp="20231130 17:57:21.580" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:21.523" endtime="20231130 17:57:21.580"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:21.585" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:21.580" endtime="20231130 17:57:21.586"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:21.586" endtime="20231130 17:57:21.731"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:21.733" endtime="20231130 17:57:21.777"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:21.779" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:21.778" endtime="20231130 17:57:21.842"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:21.885" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231130 17:57:21.886" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:21.843" endtime="20231130 17:57:21.886"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.888" endtime="20231130 17:57:21.889"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:21.889" endtime="20231130 17:57:21.890"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:21.887" endtime="20231130 17:57:21.890"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:21.887" endtime="20231130 17:57:21.891"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:21.891" endtime="20231130 17:57:22.005"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:22.007" level="INFO">Length is 13</msg>
<msg timestamp="20231130 17:57:22.007" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231130 17:57:22.006" endtime="20231130 17:57:22.008"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:22.011" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:22.009" endtime="20231130 17:57:22.011"/>
</kw>
<status status="PASS" starttime="20231130 17:57:22.008" endtime="20231130 17:57:22.012"/>
</branch>
<status status="PASS" starttime="20231130 17:57:22.008" endtime="20231130 17:57:22.012"/>
</if>
<status status="PASS" starttime="20231130 17:57:21.392" endtime="20231130 17:57:22.013"/>
</kw>
<kw name="Enter &quot;text&quot; in textarea &quot;Custom CSS&quot; with &quot;{color:1px;}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:22.119" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:22.018" endtime="20231130 17:57:22.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:22.121" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:22.120" endtime="20231130 17:57:22.121"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:22.132" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:22.122" endtime="20231130 17:57:22.133"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:22.134" endtime="20231130 17:57:22.135"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.134" endtime="20231130 17:57:22.135"/>
</branch>
<status status="PASS" starttime="20231130 17:57:22.133" endtime="20231130 17:57:22.136"/>
</if>
<status status="PASS" starttime="20231130 17:57:22.017" endtime="20231130 17:57:22.136"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:22.138" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:22.138" endtime="20231130 17:57:22.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:22.141" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:22.140" endtime="20231130 17:57:22.141"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:22.143" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:22.142" endtime="20231130 17:57:22.143"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:22.145" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:22.145" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:22.144" endtime="20231130 17:57:22.146"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:22.149" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:22.147" endtime="20231130 17:57:22.150"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:22.151" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:22.152" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:22.150" endtime="20231130 17:57:22.152"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.154" endtime="20231130 17:57:22.155"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.156" endtime="20231130 17:57:22.156"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.153" endtime="20231130 17:57:22.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.158" endtime="20231130 17:57:22.159"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.160" endtime="20231130 17:57:22.160"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.161" endtime="20231130 17:57:22.162"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.157" endtime="20231130 17:57:22.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.166" endtime="20231130 17:57:22.166"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.167" endtime="20231130 17:57:22.168"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.164" endtime="20231130 17:57:22.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.170" endtime="20231130 17:57:22.171"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.172" endtime="20231130 17:57:22.172"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.169" endtime="20231130 17:57:22.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.174" endtime="20231130 17:57:22.175"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.173" endtime="20231130 17:57:22.175"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:22.185" endtime="20231130 17:57:22.186"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.176" endtime="20231130 17:57:22.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.187" endtime="20231130 17:57:22.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.188" endtime="20231130 17:57:22.189"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.189" endtime="20231130 17:57:22.189"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.187" endtime="20231130 17:57:22.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.190" endtime="20231130 17:57:22.191"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.190" endtime="20231130 17:57:22.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.192" endtime="20231130 17:57:22.192"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.191" endtime="20231130 17:57:22.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.193" endtime="20231130 17:57:22.194"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.193" endtime="20231130 17:57:22.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.195" endtime="20231130 17:57:22.196"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.195" endtime="20231130 17:57:22.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.199" endtime="20231130 17:57:22.200"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.196" endtime="20231130 17:57:22.201"/>
</branch>
<status status="PASS" starttime="20231130 17:57:22.153" endtime="20231130 17:57:22.202"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:22.203" level="INFO">Length is 12</msg>
<msg timestamp="20231130 17:57:22.204" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231130 17:57:22.202" endtime="20231130 17:57:22.204"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:22.207" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:22.206" endtime="20231130 17:57:22.208"/>
</kw>
<status status="PASS" starttime="20231130 17:57:22.205" endtime="20231130 17:57:22.208"/>
</branch>
<status status="PASS" starttime="20231130 17:57:22.205" endtime="20231130 17:57:22.209"/>
</if>
<msg timestamp="20231130 17:57:22.209" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:22.136" endtime="20231130 17:57:22.210"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:22.211" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom CSS"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:22.210" endtime="20231130 17:57:22.212"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:22.213" endtime="20231130 17:57:22.282"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:22.285" level="INFO">Fills the text '{color:1px;}' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:22.283" endtime="20231130 17:57:22.336"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:22.384" level="INFO">Text: '{color:1px;}'</msg>
<msg timestamp="20231130 17:57:22.385" level="INFO">${condition} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:22.337" endtime="20231130 17:57:22.385"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.388" endtime="20231130 17:57:22.389"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:22.390" endtime="20231130 17:57:22.391"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.386" endtime="20231130 17:57:22.391"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:22.386" endtime="20231130 17:57:22.392"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:22.393" endtime="20231130 17:57:22.460"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:22.461" level="INFO">Length is 12</msg>
<msg timestamp="20231130 17:57:22.462" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231130 17:57:22.460" endtime="20231130 17:57:22.462"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:22.468" level="INFO">${STATE["Custom CSS"]} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:22.466" endtime="20231130 17:57:22.468"/>
</kw>
<status status="PASS" starttime="20231130 17:57:22.463" endtime="20231130 17:57:22.469"/>
</branch>
<status status="PASS" starttime="20231130 17:57:22.462" endtime="20231130 17:57:22.470"/>
</if>
<status status="PASS" starttime="20231130 17:57:22.014" endtime="20231130 17:57:22.470"/>
</kw>
<kw name="Click &quot;English&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:22.473" endtime="20231130 17:57:22.823"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:22.927" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:22.825" endtime="20231130 17:57:22.927"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:22.928" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:22.927" endtime="20231130 17:57:22.928"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:22.959" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:22.929" endtime="20231130 17:57:22.959"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:22.962" endtime="20231130 17:57:22.962"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:22.961" endtime="20231130 17:57:22.962"/>
</branch>
<status status="PASS" starttime="20231130 17:57:22.961" endtime="20231130 17:57:22.963"/>
</if>
<status status="PASS" starttime="20231130 17:57:22.824" endtime="20231130 17:57:22.963"/>
</kw>
<status status="PASS" starttime="20231130 17:57:22.471" endtime="20231130 17:57:22.965"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:23.071" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:22.968" endtime="20231130 17:57:23.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.072" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:23.071" endtime="20231130 17:57:23.072"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:23.083" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:23.073" endtime="20231130 17:57:23.083"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:23.085" endtime="20231130 17:57:23.085"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.084" endtime="20231130 17:57:23.086"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.084" endtime="20231130 17:57:23.086"/>
</if>
<status status="PASS" starttime="20231130 17:57:22.967" endtime="20231130 17:57:23.086"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.089" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:23.089" endtime="20231130 17:57:23.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.091" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:23.091" endtime="20231130 17:57:23.092"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:23.094" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:23.093" endtime="20231130 17:57:23.094"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.096" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:23.096" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:23.095" endtime="20231130 17:57:23.096"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:23.100" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:23.097" endtime="20231130 17:57:23.100"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.101" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:23.101" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:23.100" endtime="20231130 17:57:23.101"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.103" endtime="20231130 17:57:23.103"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.103" endtime="20231130 17:57:23.104"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.102" endtime="20231130 17:57:23.104"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:23.106" level="INFO">${random} = Molestias laudantium.</msg>
<status status="PASS" starttime="20231130 17:57:23.105" endtime="20231130 17:57:23.106"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231130 17:57:23.107" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231130 17:57:23.106" endtime="20231130 17:57:23.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.109" level="INFO">${new_text} = PO_11 Molestias laudantium.</msg>
<status status="PASS" starttime="20231130 17:57:23.107" endtime="20231130 17:57:23.109"/>
</kw>
<status status="PASS" starttime="20231130 17:57:23.104" endtime="20231130 17:57:23.109"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.110" endtime="20231130 17:57:23.110"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.110" endtime="20231130 17:57:23.111"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.109" endtime="20231130 17:57:23.111"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.111" endtime="20231130 17:57:23.112"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.112" endtime="20231130 17:57:23.112"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.111" endtime="20231130 17:57:23.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.113" endtime="20231130 17:57:23.113"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.113" endtime="20231130 17:57:23.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:23.117" endtime="20231130 17:57:23.117"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.116" endtime="20231130 17:57:23.118"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.119" endtime="20231130 17:57:23.119"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.120" endtime="20231130 17:57:23.120"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.120" endtime="20231130 17:57:23.120"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.118" endtime="20231130 17:57:23.121"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.121" endtime="20231130 17:57:23.121"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.121" endtime="20231130 17:57:23.122"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.122" endtime="20231130 17:57:23.122"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.122" endtime="20231130 17:57:23.123"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.123" endtime="20231130 17:57:23.123"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.123" endtime="20231130 17:57:23.124"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.124" endtime="20231130 17:57:23.125"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.124" endtime="20231130 17:57:23.126"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.127" endtime="20231130 17:57:23.127"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.127" endtime="20231130 17:57:23.128"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.101" endtime="20231130 17:57:23.128"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.129" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:23.129" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:23.128" endtime="20231130 17:57:23.130"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:23.133" level="INFO">${text} = PO_11 Molestias laudantium.</msg>
<status status="PASS" starttime="20231130 17:57:23.133" endtime="20231130 17:57:23.134"/>
</kw>
<status status="PASS" starttime="20231130 17:57:23.131" endtime="20231130 17:57:23.134"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.131" endtime="20231130 17:57:23.134"/>
</if>
<msg timestamp="20231130 17:57:23.134" level="INFO">${text} = PO_11 Molestias laudantium.</msg>
<status status="PASS" starttime="20231130 17:57:23.087" endtime="20231130 17:57:23.134"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:23.136" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:23.135" endtime="20231130 17:57:23.136"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:23.136" endtime="20231130 17:57:23.231"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:23.233" endtime="20231130 17:57:23.277"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:23.279" level="INFO">Fills the text 'PO_11 Molestias laudantium.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:23.278" endtime="20231130 17:57:23.351"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:23.393" level="INFO">Text: 'PO_11 Molestias laudantium.'</msg>
<msg timestamp="20231130 17:57:23.394" level="INFO">${condition} = PO_11 Molestias laudantium.</msg>
<status status="PASS" starttime="20231130 17:57:23.352" endtime="20231130 17:57:23.394"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.396" endtime="20231130 17:57:23.398"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.399" endtime="20231130 17:57:23.400"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.395" endtime="20231130 17:57:23.401"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:23.395" endtime="20231130 17:57:23.401"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:23.402" endtime="20231130 17:57:23.459"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.460" level="INFO">Length is 27</msg>
<msg timestamp="20231130 17:57:23.461" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231130 17:57:23.460" endtime="20231130 17:57:23.461"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:23.464" level="INFO">${STATE["Tiêu đề"]} = PO_11 Molestias laudantium.</msg>
<status status="PASS" starttime="20231130 17:57:23.462" endtime="20231130 17:57:23.465"/>
</kw>
<status status="PASS" starttime="20231130 17:57:23.461" endtime="20231130 17:57:23.466"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.461" endtime="20231130 17:57:23.466"/>
</if>
<status status="PASS" starttime="20231130 17:57:22.966" endtime="20231130 17:57:23.467"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:23.573" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:23.470" endtime="20231130 17:57:23.573"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.575" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:23.574" endtime="20231130 17:57:23.575"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:23.586" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:23.576" endtime="20231130 17:57:23.586"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:23.588" endtime="20231130 17:57:23.588"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.587" endtime="20231130 17:57:23.588"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.587" endtime="20231130 17:57:23.589"/>
</if>
<status status="PASS" starttime="20231130 17:57:23.469" endtime="20231130 17:57:23.589"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.593" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:23.591" endtime="20231130 17:57:23.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:23.595" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:23.594" endtime="20231130 17:57:23.595"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:23.601" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:23.596" endtime="20231130 17:57:23.601"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.603" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:23.604" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:23.603" endtime="20231130 17:57:23.604"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:23.607" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:23.605" endtime="20231130 17:57:23.608"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.609" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:23.610" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:23.609" endtime="20231130 17:57:23.610"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.612" endtime="20231130 17:57:23.613"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.614" endtime="20231130 17:57:23.615"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.611" endtime="20231130 17:57:23.616"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.617" endtime="20231130 17:57:23.618"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.618" endtime="20231130 17:57:23.619"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.621" endtime="20231130 17:57:23.621"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.616" endtime="20231130 17:57:23.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.624" endtime="20231130 17:57:23.624"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.626" endtime="20231130 17:57:23.626"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.623" endtime="20231130 17:57:23.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.628" endtime="20231130 17:57:23.628"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.629" endtime="20231130 17:57:23.629"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.627" endtime="20231130 17:57:23.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.630" endtime="20231130 17:57:23.630"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.630" endtime="20231130 17:57:23.631"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:23.633" endtime="20231130 17:57:23.634"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.632" endtime="20231130 17:57:23.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.635" endtime="20231130 17:57:23.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.636" endtime="20231130 17:57:23.637"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.641" endtime="20231130 17:57:23.642"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.634" endtime="20231130 17:57:23.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.645" endtime="20231130 17:57:23.646"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.644" endtime="20231130 17:57:23.646"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.650" endtime="20231130 17:57:23.651"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.647" endtime="20231130 17:57:23.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.653" endtime="20231130 17:57:23.654"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.652" endtime="20231130 17:57:23.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.657" endtime="20231130 17:57:23.658"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.655" endtime="20231130 17:57:23.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:23.661" level="INFO">${new_text} = Officia temporibus in in consectetur quasi sapiente quia.</msg>
<status status="PASS" starttime="20231130 17:57:23.660" endtime="20231130 17:57:23.661"/>
</kw>
<status status="PASS" starttime="20231130 17:57:23.659" endtime="20231130 17:57:23.662"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.611" endtime="20231130 17:57:23.662"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:23.663" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:23.664" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:23.663" endtime="20231130 17:57:23.666"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:23.669" level="INFO">${text} = Officia temporibus in in consectetur quasi sapiente quia.</msg>
<status status="PASS" starttime="20231130 17:57:23.668" endtime="20231130 17:57:23.669"/>
</kw>
<status status="PASS" starttime="20231130 17:57:23.667" endtime="20231130 17:57:23.669"/>
</branch>
<status status="PASS" starttime="20231130 17:57:23.667" endtime="20231130 17:57:23.670"/>
</if>
<msg timestamp="20231130 17:57:23.670" level="INFO">${text} = Officia temporibus in in consectetur quasi sapiente quia.</msg>
<status status="PASS" starttime="20231130 17:57:23.590" endtime="20231130 17:57:23.670"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:23.671" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:23.671" endtime="20231130 17:57:23.672"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:23.672" endtime="20231130 17:57:23.779"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:23.779" endtime="20231130 17:57:23.823"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:23.826" level="INFO">Fills the text 'Officia temporibus in in consectetur quasi sapiente quia.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:23.824" endtime="20231130 17:57:23.911"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:23.958" level="INFO">Text: 'Officia temporibus in in consectetur quasi sapiente quia.'</msg>
<msg timestamp="20231130 17:57:23.959" level="INFO">${condition} = Officia temporibus in in consectetur quasi sapiente quia.</msg>
<status status="PASS" starttime="20231130 17:57:23.912" endtime="20231130 17:57:23.959"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.961" endtime="20231130 17:57:23.962"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:23.962" endtime="20231130 17:57:23.963"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:23.960" endtime="20231130 17:57:23.963"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:23.960" endtime="20231130 17:57:23.964"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:23.966" endtime="20231130 17:57:24.026"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.028" level="INFO">Length is 57</msg>
<msg timestamp="20231130 17:57:24.029" level="INFO">${cnt} = 57</msg>
<status status="PASS" starttime="20231130 17:57:24.027" endtime="20231130 17:57:24.029"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:24.034" level="INFO">${STATE["Tác giả"]} = Officia temporibus in in consectetur quasi sapiente quia.</msg>
<status status="PASS" starttime="20231130 17:57:24.033" endtime="20231130 17:57:24.035"/>
</kw>
<status status="PASS" starttime="20231130 17:57:24.030" endtime="20231130 17:57:24.035"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.030" endtime="20231130 17:57:24.036"/>
</if>
<status status="PASS" starttime="20231130 17:57:23.468" endtime="20231130 17:57:24.037"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:24.141" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:24.040" endtime="20231130 17:57:24.142"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:24.144" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:24.143" endtime="20231130 17:57:24.145"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:24.157" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:24.145" endtime="20231130 17:57:24.157"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:24.159" endtime="20231130 17:57:24.159"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.158" endtime="20231130 17:57:24.160"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.158" endtime="20231130 17:57:24.160"/>
</if>
<status status="PASS" starttime="20231130 17:57:24.039" endtime="20231130 17:57:24.161"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:24.164" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:24.163" endtime="20231130 17:57:24.165"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:24.167" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:24.166" endtime="20231130 17:57:24.167"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:24.169" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:24.168" endtime="20231130 17:57:24.169"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.171" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:24.171" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:24.170" endtime="20231130 17:57:24.172"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:24.174" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:24.173" endtime="20231130 17:57:24.175"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.176" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:24.176" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:24.175" endtime="20231130 17:57:24.177"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.178" endtime="20231130 17:57:24.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.180" endtime="20231130 17:57:24.180"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.177" endtime="20231130 17:57:24.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.184" endtime="20231130 17:57:24.185"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.185" endtime="20231130 17:57:24.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.187" endtime="20231130 17:57:24.187"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.183" endtime="20231130 17:57:24.188"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.190" endtime="20231130 17:57:24.191"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.191" endtime="20231130 17:57:24.192"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.189" endtime="20231130 17:57:24.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.194" endtime="20231130 17:57:24.195"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.195" endtime="20231130 17:57:24.196"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.193" endtime="20231130 17:57:24.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.199" endtime="20231130 17:57:24.220"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.197" endtime="20231130 17:57:24.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:24.225" endtime="20231130 17:57:24.226"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.224" endtime="20231130 17:57:24.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.233" endtime="20231130 17:57:24.236"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.238" endtime="20231130 17:57:24.239"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.241" endtime="20231130 17:57:24.243"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.229" endtime="20231130 17:57:24.243"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.246" endtime="20231130 17:57:24.246"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.244" endtime="20231130 17:57:24.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.254" endtime="20231130 17:57:24.255"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.249" endtime="20231130 17:57:24.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.257" endtime="20231130 17:57:24.258"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.256" endtime="20231130 17:57:24.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.260" endtime="20231130 17:57:24.261"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.259" endtime="20231130 17:57:24.261"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:24.265" level="INFO">${new_text} = Nemo fuga distinctio eum blanditiis ullam.</msg>
<status status="PASS" starttime="20231130 17:57:24.263" endtime="20231130 17:57:24.266"/>
</kw>
<status status="PASS" starttime="20231130 17:57:24.262" endtime="20231130 17:57:24.267"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.177" endtime="20231130 17:57:24.267"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.269" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:24.270" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:24.268" endtime="20231130 17:57:24.270"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:24.272" level="INFO">${text} = Nemo fuga distinctio eum blanditiis ullam.</msg>
<status status="PASS" starttime="20231130 17:57:24.271" endtime="20231130 17:57:24.272"/>
</kw>
<status status="PASS" starttime="20231130 17:57:24.270" endtime="20231130 17:57:24.273"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.270" endtime="20231130 17:57:24.273"/>
</if>
<msg timestamp="20231130 17:57:24.273" level="INFO">${text} = Nemo fuga distinctio eum blanditiis ullam.</msg>
<status status="PASS" starttime="20231130 17:57:24.161" endtime="20231130 17:57:24.274"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:24.275" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:24.274" endtime="20231130 17:57:24.276"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:24.277" endtime="20231130 17:57:24.451"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:24.452" endtime="20231130 17:57:24.499"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:24.502" level="INFO">Fills the text 'Nemo fuga distinctio eum blanditiis ullam.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:24.500" endtime="20231130 17:57:24.560"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:24.617" level="INFO">Text: 'Nemo fuga distinctio eum blanditiis ullam.'</msg>
<msg timestamp="20231130 17:57:24.618" level="INFO">${condition} = Nemo fuga distinctio eum blanditiis ullam.</msg>
<status status="PASS" starttime="20231130 17:57:24.561" endtime="20231130 17:57:24.618"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.621" endtime="20231130 17:57:24.622"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.623" endtime="20231130 17:57:24.623"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.619" endtime="20231130 17:57:24.624"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:24.619" endtime="20231130 17:57:24.624"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:24.625" endtime="20231130 17:57:24.693"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.695" level="INFO">Length is 42</msg>
<msg timestamp="20231130 17:57:24.695" level="INFO">${cnt} = 42</msg>
<status status="PASS" starttime="20231130 17:57:24.694" endtime="20231130 17:57:24.695"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:24.701" level="INFO">${STATE["Mô tả ảnh cover"]} = Nemo fuga distinctio eum blanditiis ullam.</msg>
<status status="PASS" starttime="20231130 17:57:24.698" endtime="20231130 17:57:24.701"/>
</kw>
<status status="PASS" starttime="20231130 17:57:24.696" endtime="20231130 17:57:24.702"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.696" endtime="20231130 17:57:24.702"/>
</if>
<status status="PASS" starttime="20231130 17:57:24.038" endtime="20231130 17:57:24.703"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:24.807" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:24.706" endtime="20231130 17:57:24.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:24.809" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:24.808" endtime="20231130 17:57:24.809"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:24.820" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:24.810" endtime="20231130 17:57:24.820"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:24.822" endtime="20231130 17:57:24.823"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.821" endtime="20231130 17:57:24.823"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.821" endtime="20231130 17:57:24.824"/>
</if>
<status status="PASS" starttime="20231130 17:57:24.705" endtime="20231130 17:57:24.824"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:24.827" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:24.826" endtime="20231130 17:57:24.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:24.829" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:24.829" endtime="20231130 17:57:24.830"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:24.832" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:24.830" endtime="20231130 17:57:24.832"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.833" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:24.834" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:24.833" endtime="20231130 17:57:24.834"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:24.835" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:24.834" endtime="20231130 17:57:24.835"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.836" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:24.836" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:24.835" endtime="20231130 17:57:24.837"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.838" endtime="20231130 17:57:24.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.839" endtime="20231130 17:57:24.840"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.837" endtime="20231130 17:57:24.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.842" endtime="20231130 17:57:24.842"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.843" endtime="20231130 17:57:24.844"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.846" endtime="20231130 17:57:24.847"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.841" endtime="20231130 17:57:24.848"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.850" endtime="20231130 17:57:24.850"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.851" endtime="20231130 17:57:24.852"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.849" endtime="20231130 17:57:24.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.854" endtime="20231130 17:57:24.855"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.856" endtime="20231130 17:57:24.856"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.853" endtime="20231130 17:57:24.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:24.859" level="INFO">${new_text} = Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.</msg>
<status status="PASS" starttime="20231130 17:57:24.858" endtime="20231130 17:57:24.860"/>
</kw>
<status status="PASS" starttime="20231130 17:57:24.857" endtime="20231130 17:57:24.860"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:24.861" endtime="20231130 17:57:24.862"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.861" endtime="20231130 17:57:24.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.865" endtime="20231130 17:57:24.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.867" endtime="20231130 17:57:24.868"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.868" endtime="20231130 17:57:24.869"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.863" endtime="20231130 17:57:24.869"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.871" endtime="20231130 17:57:24.871"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.870" endtime="20231130 17:57:24.871"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.872" endtime="20231130 17:57:24.872"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.872" endtime="20231130 17:57:24.873"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.874" endtime="20231130 17:57:24.874"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.873" endtime="20231130 17:57:24.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.876" endtime="20231130 17:57:24.877"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.875" endtime="20231130 17:57:24.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:24.877" endtime="20231130 17:57:24.878"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:24.877" endtime="20231130 17:57:24.878"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.837" endtime="20231130 17:57:24.878"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:24.879" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:24.879" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:24.878" endtime="20231130 17:57:24.879"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:24.882" level="INFO">${text} = Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.</msg>
<status status="PASS" starttime="20231130 17:57:24.880" endtime="20231130 17:57:24.883"/>
</kw>
<status status="PASS" starttime="20231130 17:57:24.880" endtime="20231130 17:57:24.883"/>
</branch>
<status status="PASS" starttime="20231130 17:57:24.880" endtime="20231130 17:57:24.883"/>
</if>
<msg timestamp="20231130 17:57:24.884" level="INFO">${text} = Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.</msg>
<status status="PASS" starttime="20231130 17:57:24.825" endtime="20231130 17:57:24.884"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:24.885" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:24.884" endtime="20231130 17:57:24.885"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:24.885" endtime="20231130 17:57:24.933"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:24.935" level="INFO">Fills the text 'Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:24.934" endtime="20231130 17:57:24.992"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:25.041" level="INFO">Text: 'Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.'</msg>
<msg timestamp="20231130 17:57:25.042" level="INFO">${condition} = Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.</msg>
<status status="PASS" starttime="20231130 17:57:24.994" endtime="20231130 17:57:25.042"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.045" endtime="20231130 17:57:25.045"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.046" endtime="20231130 17:57:25.048"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.043" endtime="20231130 17:57:25.049"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:25.043" endtime="20231130 17:57:25.050"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:25.051" endtime="20231130 17:57:25.126"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.128" level="INFO">Length is 106</msg>
<msg timestamp="20231130 17:57:25.128" level="INFO">${cnt} = 106</msg>
<status status="PASS" starttime="20231130 17:57:25.127" endtime="20231130 17:57:25.128"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:25.133" level="INFO">${STATE["Giới thiệu"]} = Sed animi nulla odio. Repellat nisi accusamus nihil. Doloremque iste sit officiis magnam temporibus ipsam.</msg>
<status status="PASS" starttime="20231130 17:57:25.131" endtime="20231130 17:57:25.133"/>
</kw>
<status status="PASS" starttime="20231130 17:57:25.129" endtime="20231130 17:57:25.134"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.129" endtime="20231130 17:57:25.134"/>
</if>
<status status="PASS" starttime="20231130 17:57:24.703" endtime="20231130 17:57:25.135"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:25.239" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:25.138" endtime="20231130 17:57:25.239"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:25.241" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:25.240" endtime="20231130 17:57:25.242"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:25.253" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:25.242" endtime="20231130 17:57:25.254"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:25.255" endtime="20231130 17:57:25.256"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.255" endtime="20231130 17:57:25.256"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.254" endtime="20231130 17:57:25.257"/>
</if>
<status status="PASS" starttime="20231130 17:57:25.137" endtime="20231130 17:57:25.257"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:25.261" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:25.260" endtime="20231130 17:57:25.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:25.263" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:25.262" endtime="20231130 17:57:25.265"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:25.267" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:25.266" endtime="20231130 17:57:25.268"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.270" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:25.270" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:25.269" endtime="20231130 17:57:25.270"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:25.272" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:25.271" endtime="20231130 17:57:25.273"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.274" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:25.275" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:25.274" endtime="20231130 17:57:25.275"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.277" endtime="20231130 17:57:25.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.279" endtime="20231130 17:57:25.279"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.276" endtime="20231130 17:57:25.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.284" endtime="20231130 17:57:25.284"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.285" endtime="20231130 17:57:25.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.287" endtime="20231130 17:57:25.287"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.282" endtime="20231130 17:57:25.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.290" endtime="20231130 17:57:25.290"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.291" endtime="20231130 17:57:25.292"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.288" endtime="20231130 17:57:25.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.294" endtime="20231130 17:57:25.294"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.295" endtime="20231130 17:57:25.296"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.293" endtime="20231130 17:57:25.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:25.301" level="INFO">${new_text} = Dolor sint fugiat in eum harum aliquid. Inventore similique nemo maxime veritatis eum. Blanditiis eius harum illum illum eius. Quaerat vero in temporibus perspiciatis molestiae.</msg>
<status status="PASS" starttime="20231130 17:57:25.299" endtime="20231130 17:57:25.302"/>
</kw>
<status status="PASS" starttime="20231130 17:57:25.297" endtime="20231130 17:57:25.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:25.304" endtime="20231130 17:57:25.305"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.303" endtime="20231130 17:57:25.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.306" endtime="20231130 17:57:25.307"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.308" endtime="20231130 17:57:25.308"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.309" endtime="20231130 17:57:25.309"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.306" endtime="20231130 17:57:25.310"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.311" endtime="20231130 17:57:25.312"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.310" endtime="20231130 17:57:25.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.316" endtime="20231130 17:57:25.316"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.313" endtime="20231130 17:57:25.317"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.318" endtime="20231130 17:57:25.319"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.318" endtime="20231130 17:57:25.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.321" endtime="20231130 17:57:25.322"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.320" endtime="20231130 17:57:25.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.323" endtime="20231130 17:57:25.324"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.323" endtime="20231130 17:57:25.324"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.276" endtime="20231130 17:57:25.325"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.326" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:25.327" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:25.325" endtime="20231130 17:57:25.327"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:25.331" level="INFO">${text} = Dolor sint fugiat in eum harum aliquid. Inventore similique nemo maxime veritatis eum. Blanditiis eius harum illum illum eius. Quaerat vero in temporibus perspiciatis molestiae.</msg>
<status status="PASS" starttime="20231130 17:57:25.329" endtime="20231130 17:57:25.332"/>
</kw>
<status status="PASS" starttime="20231130 17:57:25.328" endtime="20231130 17:57:25.332"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.327" endtime="20231130 17:57:25.333"/>
</if>
<msg timestamp="20231130 17:57:25.334" level="INFO">${text} = Dolor sint fugiat in eum harum aliquid. Inventore similique nemo maxime veritatis eum. Blanditiis eius harum illum illum eius. Quaerat vero in temporibus perspiciatis molestiae.</msg>
<status status="PASS" starttime="20231130 17:57:25.258" endtime="20231130 17:57:25.334"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231130 17:57:25.342" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231130 17:57:25.341" endtime="20231130 17:57:25.343"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:25.343" endtime="20231130 17:57:25.414"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:25.419" level="INFO">Fills the text 'Dolor sint fugiat in eum harum aliquid. Inventore similique nemo maxime veritatis eum. Blanditiis eius harum illum illum eius. Quaerat vero in temporibus perspiciatis molestiae.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:25.416" endtime="20231130 17:57:25.475"/>
</kw>
<status status="PASS" starttime="20231130 17:57:25.135" endtime="20231130 17:57:25.476"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:25.583" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:25.481" endtime="20231130 17:57:25.583"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:25.585" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:25.584" endtime="20231130 17:57:25.586"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:25.600" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:25.587" endtime="20231130 17:57:25.600"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:25.602" endtime="20231130 17:57:25.603"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.601" endtime="20231130 17:57:25.603"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.601" endtime="20231130 17:57:25.604"/>
</if>
<status status="PASS" starttime="20231130 17:57:25.479" endtime="20231130 17:57:25.604"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:25.608" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:25.607" endtime="20231130 17:57:25.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:25.610" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:25.609" endtime="20231130 17:57:25.610"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:25.612" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:25.611" endtime="20231130 17:57:25.612"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.613" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:25.614" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:25.612" endtime="20231130 17:57:25.615"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:25.619" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:25.616" endtime="20231130 17:57:25.620"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.622" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:25.622" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:25.621" endtime="20231130 17:57:25.623"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.624" endtime="20231130 17:57:25.625"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.626" endtime="20231130 17:57:25.626"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.623" endtime="20231130 17:57:25.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.629" endtime="20231130 17:57:25.629"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.633" endtime="20231130 17:57:25.635"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.636" endtime="20231130 17:57:25.637"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.628" endtime="20231130 17:57:25.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.639" endtime="20231130 17:57:25.640"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.640" endtime="20231130 17:57:25.641"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.638" endtime="20231130 17:57:25.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.643" endtime="20231130 17:57:25.643"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.643" endtime="20231130 17:57:25.644"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.642" endtime="20231130 17:57:25.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.645" endtime="20231130 17:57:25.645"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.644" endtime="20231130 17:57:25.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:25.650" endtime="20231130 17:57:25.651"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.646" endtime="20231130 17:57:25.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.652" endtime="20231130 17:57:25.652"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.653" endtime="20231130 17:57:25.653"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.654" endtime="20231130 17:57:25.654"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.652" endtime="20231130 17:57:25.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.655" endtime="20231130 17:57:25.656"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.655" endtime="20231130 17:57:25.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.658" endtime="20231130 17:57:25.658"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.657" endtime="20231130 17:57:25.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.660" endtime="20231130 17:57:25.662"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.659" endtime="20231130 17:57:25.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.667" endtime="20231130 17:57:25.668"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.665" endtime="20231130 17:57:25.669"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:25.671" level="INFO">${new_text} = Culpa quo quibusdam ducimus recusandae eveniet.</msg>
<status status="PASS" starttime="20231130 17:57:25.670" endtime="20231130 17:57:25.672"/>
</kw>
<status status="PASS" starttime="20231130 17:57:25.669" endtime="20231130 17:57:25.673"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.623" endtime="20231130 17:57:25.673"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:25.674" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:25.675" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:25.674" endtime="20231130 17:57:25.675"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:25.678" level="INFO">${text} = Culpa quo quibusdam ducimus recusandae eveniet.</msg>
<status status="PASS" starttime="20231130 17:57:25.677" endtime="20231130 17:57:25.678"/>
</kw>
<status status="PASS" starttime="20231130 17:57:25.676" endtime="20231130 17:57:25.679"/>
</branch>
<status status="PASS" starttime="20231130 17:57:25.676" endtime="20231130 17:57:25.682"/>
</if>
<msg timestamp="20231130 17:57:25.683" level="INFO">${text} = Culpa quo quibusdam ducimus recusandae eveniet.</msg>
<status status="PASS" starttime="20231130 17:57:25.605" endtime="20231130 17:57:25.684"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:25.686" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:25.684" endtime="20231130 17:57:25.686"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:25.687" endtime="20231130 17:57:25.794"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:25.795" endtime="20231130 17:57:25.842"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:25.844" level="INFO">Fills the text 'Culpa quo quibusdam ducimus recusandae eveniet.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:25.843" endtime="20231130 17:57:25.922"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:25.958" level="INFO">Text: 'Culpa quo quibusdam ducimus recusandae eveniet.'</msg>
<msg timestamp="20231130 17:57:25.959" level="INFO">${condition} = Culpa quo quibusdam ducimus recusandae eveniet.</msg>
<status status="PASS" starttime="20231130 17:57:25.923" endtime="20231130 17:57:25.959"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.961" endtime="20231130 17:57:25.962"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:25.962" endtime="20231130 17:57:25.963"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:25.960" endtime="20231130 17:57:25.964"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:25.960" endtime="20231130 17:57:25.965"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:25.966" endtime="20231130 17:57:26.043"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.044" level="INFO">Length is 47</msg>
<msg timestamp="20231130 17:57:26.045" level="INFO">${cnt} = 47</msg>
<status status="PASS" starttime="20231130 17:57:26.044" endtime="20231130 17:57:26.045"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:26.049" level="INFO">${STATE["Tiêu đề SEO"]} = Culpa quo quibusdam ducimus recusandae eveniet.</msg>
<status status="PASS" starttime="20231130 17:57:26.048" endtime="20231130 17:57:26.050"/>
</kw>
<status status="PASS" starttime="20231130 17:57:26.046" endtime="20231130 17:57:26.050"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.046" endtime="20231130 17:57:26.051"/>
</if>
<status status="PASS" starttime="20231130 17:57:25.477" endtime="20231130 17:57:26.051"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:26.156" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:26.055" endtime="20231130 17:57:26.156"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:26.158" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:26.157" endtime="20231130 17:57:26.158"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:26.171" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:26.159" endtime="20231130 17:57:26.171"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:26.173" endtime="20231130 17:57:26.174"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.172" endtime="20231130 17:57:26.175"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.172" endtime="20231130 17:57:26.175"/>
</if>
<status status="PASS" starttime="20231130 17:57:26.053" endtime="20231130 17:57:26.176"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:26.180" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:26.178" endtime="20231130 17:57:26.181"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:26.183" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:26.182" endtime="20231130 17:57:26.183"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:26.185" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:26.184" endtime="20231130 17:57:26.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.187" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:26.187" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:26.186" endtime="20231130 17:57:26.188"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:26.189" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:26.188" endtime="20231130 17:57:26.190"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.192" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:26.192" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:26.191" endtime="20231130 17:57:26.192"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.193" endtime="20231130 17:57:26.194"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.194" endtime="20231130 17:57:26.194"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.193" endtime="20231130 17:57:26.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.197" endtime="20231130 17:57:26.198"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.199" endtime="20231130 17:57:26.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.199" endtime="20231130 17:57:26.200"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.195" endtime="20231130 17:57:26.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.202" endtime="20231130 17:57:26.202"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.202" endtime="20231130 17:57:26.203"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.201" endtime="20231130 17:57:26.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.205" endtime="20231130 17:57:26.206"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.206" endtime="20231130 17:57:26.207"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.204" endtime="20231130 17:57:26.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.209" endtime="20231130 17:57:26.210"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.208" endtime="20231130 17:57:26.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:26.215" endtime="20231130 17:57:26.216"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.212" endtime="20231130 17:57:26.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.234" endtime="20231130 17:57:26.235"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.236" endtime="20231130 17:57:26.237"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.238" endtime="20231130 17:57:26.238"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.217" endtime="20231130 17:57:26.239"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.240" endtime="20231130 17:57:26.241"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.239" endtime="20231130 17:57:26.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.243" endtime="20231130 17:57:26.244"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.242" endtime="20231130 17:57:26.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.246" endtime="20231130 17:57:26.247"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.245" endtime="20231130 17:57:26.248"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.250" endtime="20231130 17:57:26.250"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.249" endtime="20231130 17:57:26.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:26.253" level="INFO">${new_text} = Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.</msg>
<status status="PASS" starttime="20231130 17:57:26.253" endtime="20231130 17:57:26.254"/>
</kw>
<status status="PASS" starttime="20231130 17:57:26.252" endtime="20231130 17:57:26.254"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.193" endtime="20231130 17:57:26.254"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.255" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:26.255" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:26.254" endtime="20231130 17:57:26.255"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:26.257" level="INFO">${text} = Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.</msg>
<status status="PASS" starttime="20231130 17:57:26.256" endtime="20231130 17:57:26.257"/>
</kw>
<status status="PASS" starttime="20231130 17:57:26.256" endtime="20231130 17:57:26.258"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.255" endtime="20231130 17:57:26.258"/>
</if>
<msg timestamp="20231130 17:57:26.259" level="INFO">${text} = Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.</msg>
<status status="PASS" starttime="20231130 17:57:26.177" endtime="20231130 17:57:26.259"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:26.260" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:26.259" endtime="20231130 17:57:26.260"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:26.261" endtime="20231130 17:57:26.349"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:26.349" endtime="20231130 17:57:26.388"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:26.391" level="INFO">Fills the text 'Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:26.389" endtime="20231130 17:57:26.464"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:26.507" level="INFO">Text: 'Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.'</msg>
<msg timestamp="20231130 17:57:26.507" level="INFO">${condition} = Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.</msg>
<status status="PASS" starttime="20231130 17:57:26.465" endtime="20231130 17:57:26.508"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.510" endtime="20231130 17:57:26.510"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.511" endtime="20231130 17:57:26.512"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.508" endtime="20231130 17:57:26.512"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:26.508" endtime="20231130 17:57:26.514"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:26.515" endtime="20231130 17:57:26.575"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.577" level="INFO">Length is 64</msg>
<msg timestamp="20231130 17:57:26.578" level="INFO">${cnt} = 64</msg>
<status status="PASS" starttime="20231130 17:57:26.576" endtime="20231130 17:57:26.578"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:26.583" level="INFO">${STATE["Từ khóa SEO"]} = Dicta deleniti exercitationem voluptatibus iusto dolor corrupti.</msg>
<status status="PASS" starttime="20231130 17:57:26.582" endtime="20231130 17:57:26.584"/>
</kw>
<status status="PASS" starttime="20231130 17:57:26.579" endtime="20231130 17:57:26.584"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.579" endtime="20231130 17:57:26.585"/>
</if>
<status status="PASS" starttime="20231130 17:57:26.052" endtime="20231130 17:57:26.585"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:26.691" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:26.589" endtime="20231130 17:57:26.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:26.693" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:26.692" endtime="20231130 17:57:26.693"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:26.707" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:26.694" endtime="20231130 17:57:26.707"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:26.709" endtime="20231130 17:57:26.710"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.708" endtime="20231130 17:57:26.710"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.708" endtime="20231130 17:57:26.711"/>
</if>
<status status="PASS" starttime="20231130 17:57:26.588" endtime="20231130 17:57:26.711"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:26.715" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:26.713" endtime="20231130 17:57:26.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:26.717" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:26.716" endtime="20231130 17:57:26.717"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:26.719" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:26.718" endtime="20231130 17:57:26.719"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.721" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:26.721" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:26.720" endtime="20231130 17:57:26.721"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:26.723" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:26.722" endtime="20231130 17:57:26.724"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.726" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:26.726" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:26.725" endtime="20231130 17:57:26.726"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.729" endtime="20231130 17:57:26.729"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.731" endtime="20231130 17:57:26.732"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.728" endtime="20231130 17:57:26.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.734" endtime="20231130 17:57:26.735"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.735" endtime="20231130 17:57:26.736"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.737" endtime="20231130 17:57:26.738"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.733" endtime="20231130 17:57:26.739"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.740" endtime="20231130 17:57:26.741"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.742" endtime="20231130 17:57:26.743"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.739" endtime="20231130 17:57:26.744"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.746" endtime="20231130 17:57:26.748"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.749" endtime="20231130 17:57:26.750"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.745" endtime="20231130 17:57:26.750"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:26.763" level="INFO">${new_text} = Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.</msg>
<status status="PASS" starttime="20231130 17:57:26.761" endtime="20231130 17:57:26.764"/>
</kw>
<status status="PASS" starttime="20231130 17:57:26.751" endtime="20231130 17:57:26.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:26.766" endtime="20231130 17:57:26.767"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.766" endtime="20231130 17:57:26.767"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.769" endtime="20231130 17:57:26.769"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.770" endtime="20231130 17:57:26.771"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.771" endtime="20231130 17:57:26.772"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.768" endtime="20231130 17:57:26.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.774" endtime="20231130 17:57:26.774"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.773" endtime="20231130 17:57:26.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.776" endtime="20231130 17:57:26.777"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.775" endtime="20231130 17:57:26.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.779" endtime="20231130 17:57:26.779"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.778" endtime="20231130 17:57:26.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.783" endtime="20231130 17:57:26.784"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.782" endtime="20231130 17:57:26.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.785" endtime="20231130 17:57:26.786"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.785" endtime="20231130 17:57:26.786"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.727" endtime="20231130 17:57:26.787"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:26.788" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:26.789" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:26.787" endtime="20231130 17:57:26.789"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:26.792" level="INFO">${text} = Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.</msg>
<status status="PASS" starttime="20231130 17:57:26.790" endtime="20231130 17:57:26.792"/>
</kw>
<status status="PASS" starttime="20231130 17:57:26.789" endtime="20231130 17:57:26.792"/>
</branch>
<status status="PASS" starttime="20231130 17:57:26.789" endtime="20231130 17:57:26.793"/>
</if>
<msg timestamp="20231130 17:57:26.793" level="INFO">${text} = Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.</msg>
<status status="PASS" starttime="20231130 17:57:26.712" endtime="20231130 17:57:26.794"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:26.795" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:26.794" endtime="20231130 17:57:26.795"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:26.796" endtime="20231130 17:57:26.866"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:26.869" level="INFO">Fills the text 'Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:26.868" endtime="20231130 17:57:26.935"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:26.977" level="INFO">Text: 'Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.'</msg>
<msg timestamp="20231130 17:57:26.978" level="INFO">${condition} = Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.</msg>
<status status="PASS" starttime="20231130 17:57:26.936" endtime="20231130 17:57:26.978"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.981" endtime="20231130 17:57:26.982"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:26.983" endtime="20231130 17:57:26.984"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:26.979" endtime="20231130 17:57:26.985"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:26.979" endtime="20231130 17:57:26.985"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:26.986" endtime="20231130 17:57:27.060"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:27.062" level="INFO">Length is 67</msg>
<msg timestamp="20231130 17:57:27.063" level="INFO">${cnt} = 67</msg>
<status status="PASS" starttime="20231130 17:57:27.061" endtime="20231130 17:57:27.064"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:27.068" level="INFO">${STATE["Mô tả SEO"]} = Reiciendis possimus veniam sapiente. Tenetur ab illum expedita eum.</msg>
<status status="PASS" starttime="20231130 17:57:27.067" endtime="20231130 17:57:27.069"/>
</kw>
<status status="PASS" starttime="20231130 17:57:27.065" endtime="20231130 17:57:27.069"/>
</branch>
<status status="PASS" starttime="20231130 17:57:27.065" endtime="20231130 17:57:27.070"/>
</if>
<status status="PASS" starttime="20231130 17:57:26.586" endtime="20231130 17:57:27.070"/>
</kw>
<kw name="Click &quot;Tiếng Việt&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:27.073" endtime="20231130 17:57:27.361"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:27.469" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:27.366" endtime="20231130 17:57:27.469"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:27.471" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:27.469" endtime="20231130 17:57:27.471"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:27.489" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:27.472" endtime="20231130 17:57:27.490"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:27.492" endtime="20231130 17:57:27.493"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.491" endtime="20231130 17:57:27.494"/>
</branch>
<status status="PASS" starttime="20231130 17:57:27.491" endtime="20231130 17:57:27.494"/>
</if>
<status status="PASS" starttime="20231130 17:57:27.362" endtime="20231130 17:57:27.495"/>
</kw>
<status status="PASS" starttime="20231130 17:57:27.071" endtime="20231130 17:57:27.495"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:27.602" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:27.500" endtime="20231130 17:57:27.602"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:27.603" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:27.603" endtime="20231130 17:57:27.603"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:27.616" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:27.604" endtime="20231130 17:57:27.617"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:27.620" endtime="20231130 17:57:27.622"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.619" endtime="20231130 17:57:27.622"/>
</branch>
<status status="PASS" starttime="20231130 17:57:27.619" endtime="20231130 17:57:27.624"/>
</if>
<status status="PASS" starttime="20231130 17:57:27.499" endtime="20231130 17:57:27.624"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:27.627" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:27.626" endtime="20231130 17:57:27.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:27.629" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:27.628" endtime="20231130 17:57:27.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:27.631" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:27.629" endtime="20231130 17:57:27.632"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:27.635" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:27.635" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:27.633" endtime="20231130 17:57:27.635"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:27.636" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:27.636" endtime="20231130 17:57:27.636"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:27.638" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:27.638" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:27.637" endtime="20231130 17:57:27.638"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.639" endtime="20231130 17:57:27.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.640" endtime="20231130 17:57:27.640"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.639" endtime="20231130 17:57:27.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:27.642" level="INFO">${random} = Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:27.641" endtime="20231130 17:57:27.642"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231130 17:57:27.643" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231130 17:57:27.642" endtime="20231130 17:57:27.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:27.645" level="INFO">${new_text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:27.643" endtime="20231130 17:57:27.645"/>
</kw>
<status status="PASS" starttime="20231130 17:57:27.641" endtime="20231130 17:57:27.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.646" endtime="20231130 17:57:27.646"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.646" endtime="20231130 17:57:27.648"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.645" endtime="20231130 17:57:27.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.651" endtime="20231130 17:57:27.651"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.652" endtime="20231130 17:57:27.652"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.650" endtime="20231130 17:57:27.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.653" endtime="20231130 17:57:27.653"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.653" endtime="20231130 17:57:27.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:27.654" endtime="20231130 17:57:27.654"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.654" endtime="20231130 17:57:27.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.655" endtime="20231130 17:57:27.655"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.655" endtime="20231130 17:57:27.656"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.656" endtime="20231130 17:57:27.656"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.655" endtime="20231130 17:57:27.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.657" endtime="20231130 17:57:27.657"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.657" endtime="20231130 17:57:27.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.658" endtime="20231130 17:57:27.659"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.658" endtime="20231130 17:57:27.659"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.660" endtime="20231130 17:57:27.661"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.660" endtime="20231130 17:57:27.661"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.662" endtime="20231130 17:57:27.662"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.661" endtime="20231130 17:57:27.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.663" endtime="20231130 17:57:27.664"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.663" endtime="20231130 17:57:27.664"/>
</branch>
<status status="PASS" starttime="20231130 17:57:27.639" endtime="20231130 17:57:27.665"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:27.667" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:27.667" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:27.666" endtime="20231130 17:57:27.667"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:27.669" level="INFO">${text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:27.668" endtime="20231130 17:57:27.669"/>
</kw>
<status status="PASS" starttime="20231130 17:57:27.667" endtime="20231130 17:57:27.670"/>
</branch>
<status status="PASS" starttime="20231130 17:57:27.667" endtime="20231130 17:57:27.670"/>
</if>
<msg timestamp="20231130 17:57:27.670" level="INFO">${text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:27.625" endtime="20231130 17:57:27.671"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:27.672" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:27.671" endtime="20231130 17:57:27.672"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:27.672" endtime="20231130 17:57:27.763"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:27.764" endtime="20231130 17:57:27.806"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:27.808" level="INFO">Fills the text 'PO_11 Nostrum itaque autem.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:27.807" endtime="20231130 17:57:27.884"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:27.925" level="INFO">Text: 'PO_11 Nostrum itaque autem.'</msg>
<msg timestamp="20231130 17:57:27.926" level="INFO">${condition} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:27.885" endtime="20231130 17:57:27.926"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.928" endtime="20231130 17:57:27.929"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:27.930" endtime="20231130 17:57:27.931"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:27.926" endtime="20231130 17:57:27.933"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:27.926" endtime="20231130 17:57:27.933"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:27.934" endtime="20231130 17:57:27.991"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:27.992" level="INFO">Length is 27</msg>
<msg timestamp="20231130 17:57:27.993" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231130 17:57:27.992" endtime="20231130 17:57:27.993"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:27.996" level="INFO">${STATE["Tiêu đề"]} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:27.995" endtime="20231130 17:57:27.997"/>
</kw>
<status status="PASS" starttime="20231130 17:57:27.994" endtime="20231130 17:57:27.998"/>
</branch>
<status status="PASS" starttime="20231130 17:57:27.994" endtime="20231130 17:57:27.999"/>
</if>
<status status="PASS" starttime="20231130 17:57:27.496" endtime="20231130 17:57:27.999"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:28.002" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231130 17:57:28.001" endtime="20231130 17:57:28.002"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.004" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:28.004" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231130 17:57:28.003" endtime="20231130 17:57:28.004"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.008" level="INFO">${text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:28.006" endtime="20231130 17:57:28.009"/>
</kw>
<status status="PASS" starttime="20231130 17:57:28.005" endtime="20231130 17:57:28.009"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.005" endtime="20231130 17:57:28.010"/>
</if>
<msg timestamp="20231130 17:57:28.010" level="INFO">${text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:28.000" endtime="20231130 17:57:28.010"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.012" level="INFO">${name} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:28.011" endtime="20231130 17:57:28.013"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:28.119" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:28.018" endtime="20231130 17:57:28.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.121" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:28.120" endtime="20231130 17:57:28.122"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:28.135" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:28.123" endtime="20231130 17:57:28.136"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:28.138" endtime="20231130 17:57:28.139"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.137" endtime="20231130 17:57:28.139"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.137" endtime="20231130 17:57:28.140"/>
</if>
<status status="PASS" starttime="20231130 17:57:28.016" endtime="20231130 17:57:28.140"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.143" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:28.143" endtime="20231130 17:57:28.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.146" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:28.145" endtime="20231130 17:57:28.146"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:28.149" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:28.147" endtime="20231130 17:57:28.149"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.151" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:28.151" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:28.150" endtime="20231130 17:57:28.151"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:28.153" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:28.152" endtime="20231130 17:57:28.154"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.156" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:28.156" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:28.155" endtime="20231130 17:57:28.156"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.158" endtime="20231130 17:57:28.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.160" endtime="20231130 17:57:28.160"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.157" endtime="20231130 17:57:28.161"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.162" endtime="20231130 17:57:28.164"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.165" endtime="20231130 17:57:28.166"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.167" endtime="20231130 17:57:28.167"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.161" endtime="20231130 17:57:28.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.170" endtime="20231130 17:57:28.170"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.171" endtime="20231130 17:57:28.172"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.169" endtime="20231130 17:57:28.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.174" endtime="20231130 17:57:28.175"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.176" endtime="20231130 17:57:28.177"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.173" endtime="20231130 17:57:28.177"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.179" endtime="20231130 17:57:28.181"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.178" endtime="20231130 17:57:28.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:28.183" endtime="20231130 17:57:28.184"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.182" endtime="20231130 17:57:28.184"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.186" endtime="20231130 17:57:28.186"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.187" endtime="20231130 17:57:28.188"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.188" endtime="20231130 17:57:28.189"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.185" endtime="20231130 17:57:28.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.190" endtime="20231130 17:57:28.191"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.190" endtime="20231130 17:57:28.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.192" endtime="20231130 17:57:28.193"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.192" endtime="20231130 17:57:28.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.195" endtime="20231130 17:57:28.195"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.194" endtime="20231130 17:57:28.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.197" endtime="20231130 17:57:28.198"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.195" endtime="20231130 17:57:28.199"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:28.202" level="INFO">${new_text} = Alias molestiae eligendi alias accusamus culpa minima id.</msg>
<status status="PASS" starttime="20231130 17:57:28.201" endtime="20231130 17:57:28.203"/>
</kw>
<status status="PASS" starttime="20231130 17:57:28.200" endtime="20231130 17:57:28.204"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.157" endtime="20231130 17:57:28.205"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.206" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:28.207" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:28.205" endtime="20231130 17:57:28.207"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:28.211" level="INFO">${text} = Alias molestiae eligendi alias accusamus culpa minima id.</msg>
<status status="PASS" starttime="20231130 17:57:28.209" endtime="20231130 17:57:28.211"/>
</kw>
<status status="PASS" starttime="20231130 17:57:28.208" endtime="20231130 17:57:28.211"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.208" endtime="20231130 17:57:28.212"/>
</if>
<msg timestamp="20231130 17:57:28.212" level="INFO">${text} = Alias molestiae eligendi alias accusamus culpa minima id.</msg>
<status status="PASS" starttime="20231130 17:57:28.141" endtime="20231130 17:57:28.214"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:28.216" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:28.215" endtime="20231130 17:57:28.217"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:28.217" endtime="20231130 17:57:28.358"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:28.359" endtime="20231130 17:57:28.405"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:28.407" level="INFO">Fills the text 'Alias molestiae eligendi alias accusamus culpa minima id.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:28.406" endtime="20231130 17:57:28.474"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:28.511" level="INFO">Text: 'Alias molestiae eligendi alias accusamus culpa minima id.'</msg>
<msg timestamp="20231130 17:57:28.512" level="INFO">${condition} = Alias molestiae eligendi alias accusamus culpa minima id.</msg>
<status status="PASS" starttime="20231130 17:57:28.475" endtime="20231130 17:57:28.512"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.517" endtime="20231130 17:57:28.518"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.518" endtime="20231130 17:57:28.519"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.514" endtime="20231130 17:57:28.519"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:28.514" endtime="20231130 17:57:28.520"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:28.521" endtime="20231130 17:57:28.611"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.614" level="INFO">Length is 57</msg>
<msg timestamp="20231130 17:57:28.615" level="INFO">${cnt} = 57</msg>
<status status="PASS" starttime="20231130 17:57:28.612" endtime="20231130 17:57:28.616"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:28.619" level="INFO">${STATE["Tác giả"]} = Alias molestiae eligendi alias accusamus culpa minima id.</msg>
<status status="PASS" starttime="20231130 17:57:28.618" endtime="20231130 17:57:28.620"/>
</kw>
<status status="PASS" starttime="20231130 17:57:28.617" endtime="20231130 17:57:28.621"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.616" endtime="20231130 17:57:28.622"/>
</if>
<status status="PASS" starttime="20231130 17:57:28.015" endtime="20231130 17:57:28.622"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:28.727" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:28.625" endtime="20231130 17:57:28.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.729" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:28.728" endtime="20231130 17:57:28.731"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:28.743" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:28.732" endtime="20231130 17:57:28.744"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:28.746" endtime="20231130 17:57:28.747"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.745" endtime="20231130 17:57:28.748"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.744" endtime="20231130 17:57:28.749"/>
</if>
<status status="PASS" starttime="20231130 17:57:28.624" endtime="20231130 17:57:28.749"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.752" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:28.751" endtime="20231130 17:57:28.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:28.755" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:28.754" endtime="20231130 17:57:28.755"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:28.758" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:28.757" endtime="20231130 17:57:28.758"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.760" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:28.761" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:28.759" endtime="20231130 17:57:28.761"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:28.765" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:28.763" endtime="20231130 17:57:28.766"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.768" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:28.768" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:28.767" endtime="20231130 17:57:28.769"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.770" endtime="20231130 17:57:28.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.772" endtime="20231130 17:57:28.773"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.769" endtime="20231130 17:57:28.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.775" endtime="20231130 17:57:28.776"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.777" endtime="20231130 17:57:28.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.778" endtime="20231130 17:57:28.780"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.774" endtime="20231130 17:57:28.781"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.789" endtime="20231130 17:57:28.790"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.790" endtime="20231130 17:57:28.793"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.788" endtime="20231130 17:57:28.794"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.809" endtime="20231130 17:57:28.810"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.811" endtime="20231130 17:57:28.812"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.807" endtime="20231130 17:57:28.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:28.817" level="INFO">${new_text} = Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.</msg>
<status status="PASS" starttime="20231130 17:57:28.816" endtime="20231130 17:57:28.817"/>
</kw>
<status status="PASS" starttime="20231130 17:57:28.814" endtime="20231130 17:57:28.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:28.820" endtime="20231130 17:57:28.820"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.819" endtime="20231130 17:57:28.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.823" endtime="20231130 17:57:28.823"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.825" endtime="20231130 17:57:28.825"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.826" endtime="20231130 17:57:28.827"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.822" endtime="20231130 17:57:28.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.829" endtime="20231130 17:57:28.829"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.828" endtime="20231130 17:57:28.830"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.833" endtime="20231130 17:57:28.834"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.832" endtime="20231130 17:57:28.834"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.836" endtime="20231130 17:57:28.837"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.835" endtime="20231130 17:57:28.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.839" endtime="20231130 17:57:28.839"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.838" endtime="20231130 17:57:28.851"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:28.854" endtime="20231130 17:57:28.855"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:28.853" endtime="20231130 17:57:28.855"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.769" endtime="20231130 17:57:28.857"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:28.859" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:28.859" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:28.857" endtime="20231130 17:57:28.860"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:28.866" level="INFO">${text} = Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.</msg>
<status status="PASS" starttime="20231130 17:57:28.862" endtime="20231130 17:57:28.866"/>
</kw>
<status status="PASS" starttime="20231130 17:57:28.861" endtime="20231130 17:57:28.867"/>
</branch>
<status status="PASS" starttime="20231130 17:57:28.860" endtime="20231130 17:57:28.868"/>
</if>
<msg timestamp="20231130 17:57:28.868" level="INFO">${text} = Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.</msg>
<status status="PASS" starttime="20231130 17:57:28.750" endtime="20231130 17:57:28.869"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:28.871" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:28.869" endtime="20231130 17:57:28.872"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:28.872" endtime="20231130 17:57:29.067"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:29.068" endtime="20231130 17:57:29.113"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:29.117" level="INFO">Fills the text 'Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:29.115" endtime="20231130 17:57:29.183"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:29.226" level="INFO">Text: 'Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.'</msg>
<msg timestamp="20231130 17:57:29.226" level="INFO">${condition} = Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.</msg>
<status status="PASS" starttime="20231130 17:57:29.184" endtime="20231130 17:57:29.227"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.229" endtime="20231130 17:57:29.229"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.231" endtime="20231130 17:57:29.232"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.227" endtime="20231130 17:57:29.233"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:29.227" endtime="20231130 17:57:29.233"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:29.235" endtime="20231130 17:57:29.309"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.311" level="INFO">Length is 95</msg>
<msg timestamp="20231130 17:57:29.311" level="INFO">${cnt} = 95</msg>
<status status="PASS" starttime="20231130 17:57:29.310" endtime="20231130 17:57:29.312"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:29.317" level="INFO">${STATE["Mô tả ảnh cover"]} = Nemo molestiae totam accusantium nam laboriosam quibusdam. Ex perferendis libero aperiam eaque.</msg>
<status status="PASS" starttime="20231130 17:57:29.315" endtime="20231130 17:57:29.317"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.313" endtime="20231130 17:57:29.318"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.312" endtime="20231130 17:57:29.318"/>
</if>
<status status="PASS" starttime="20231130 17:57:28.623" endtime="20231130 17:57:29.319"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:29.423" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:29.322" endtime="20231130 17:57:29.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:29.425" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:29.424" endtime="20231130 17:57:29.426"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:29.438" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:29.427" endtime="20231130 17:57:29.439"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:29.440" endtime="20231130 17:57:29.441"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.439" endtime="20231130 17:57:29.441"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.439" endtime="20231130 17:57:29.442"/>
</if>
<status status="PASS" starttime="20231130 17:57:29.321" endtime="20231130 17:57:29.442"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:29.446" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:29.444" endtime="20231130 17:57:29.446"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:29.450" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:29.449" endtime="20231130 17:57:29.450"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:29.452" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:29.451" endtime="20231130 17:57:29.452"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.454" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:29.455" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:29.453" endtime="20231130 17:57:29.455"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:29.457" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:29.456" endtime="20231130 17:57:29.458"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.459" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:29.460" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:29.458" endtime="20231130 17:57:29.460"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.461" endtime="20231130 17:57:29.462"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.463" endtime="20231130 17:57:29.464"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.461" endtime="20231130 17:57:29.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.466" endtime="20231130 17:57:29.467"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.468" endtime="20231130 17:57:29.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.469" endtime="20231130 17:57:29.469"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.465" endtime="20231130 17:57:29.470"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.471" endtime="20231130 17:57:29.472"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.472" endtime="20231130 17:57:29.473"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.470" endtime="20231130 17:57:29.473"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.474" endtime="20231130 17:57:29.474"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.475" endtime="20231130 17:57:29.475"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.474" endtime="20231130 17:57:29.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:29.479" level="INFO">${new_text} = Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.</msg>
<status status="PASS" starttime="20231130 17:57:29.478" endtime="20231130 17:57:29.479"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.476" endtime="20231130 17:57:29.480"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:29.482" endtime="20231130 17:57:29.482"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.481" endtime="20231130 17:57:29.482"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.483" endtime="20231130 17:57:29.483"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.484" endtime="20231130 17:57:29.484"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.484" endtime="20231130 17:57:29.485"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.483" endtime="20231130 17:57:29.485"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.485" endtime="20231130 17:57:29.486"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.485" endtime="20231130 17:57:29.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.487" endtime="20231130 17:57:29.487"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.486" endtime="20231130 17:57:29.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.488" endtime="20231130 17:57:29.489"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.487" endtime="20231130 17:57:29.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.490" endtime="20231130 17:57:29.490"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.489" endtime="20231130 17:57:29.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.491" endtime="20231130 17:57:29.491"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.490" endtime="20231130 17:57:29.491"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.461" endtime="20231130 17:57:29.491"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.493" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:29.493" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:29.492" endtime="20231130 17:57:29.494"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:29.495" level="INFO">${text} = Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.</msg>
<status status="PASS" starttime="20231130 17:57:29.495" endtime="20231130 17:57:29.496"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.494" endtime="20231130 17:57:29.497"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.494" endtime="20231130 17:57:29.498"/>
</if>
<msg timestamp="20231130 17:57:29.498" level="INFO">${text} = Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.</msg>
<status status="PASS" starttime="20231130 17:57:29.443" endtime="20231130 17:57:29.499"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:29.500" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:29.499" endtime="20231130 17:57:29.500"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:29.501" endtime="20231130 17:57:29.549"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:29.551" level="INFO">Fills the text 'Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:29.550" endtime="20231130 17:57:29.625"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:29.677" level="INFO">Text: 'Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.'</msg>
<msg timestamp="20231130 17:57:29.677" level="INFO">${condition} = Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.</msg>
<status status="PASS" starttime="20231130 17:57:29.627" endtime="20231130 17:57:29.678"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.681" endtime="20231130 17:57:29.682"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.683" endtime="20231130 17:57:29.685"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.678" endtime="20231130 17:57:29.685"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:29.678" endtime="20231130 17:57:29.686"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:29.687" endtime="20231130 17:57:29.760"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.761" level="INFO">Length is 93</msg>
<msg timestamp="20231130 17:57:29.761" level="INFO">${cnt} = 93</msg>
<status status="PASS" starttime="20231130 17:57:29.760" endtime="20231130 17:57:29.761"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:29.765" level="INFO">${STATE["Giới thiệu"]} = Officia odio quas reiciendis atque. Possimus sequi maiores maiores blanditiis ratione quidem.</msg>
<status status="PASS" starttime="20231130 17:57:29.763" endtime="20231130 17:57:29.766"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.762" endtime="20231130 17:57:29.767"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.762" endtime="20231130 17:57:29.768"/>
</if>
<status status="PASS" starttime="20231130 17:57:29.320" endtime="20231130 17:57:29.768"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:29.874" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:29.772" endtime="20231130 17:57:29.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:29.875" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:29.875" endtime="20231130 17:57:29.876"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:29.889" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:29.877" endtime="20231130 17:57:29.889"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:29.891" endtime="20231130 17:57:29.891"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.890" endtime="20231130 17:57:29.892"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.890" endtime="20231130 17:57:29.892"/>
</if>
<status status="PASS" starttime="20231130 17:57:29.771" endtime="20231130 17:57:29.893"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:29.895" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:29.894" endtime="20231130 17:57:29.895"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:29.898" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:29.897" endtime="20231130 17:57:29.899"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:29.901" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:29.900" endtime="20231130 17:57:29.901"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.903" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:29.904" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:29.902" endtime="20231130 17:57:29.904"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:29.906" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:29.905" endtime="20231130 17:57:29.907"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.909" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:29.909" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:29.908" endtime="20231130 17:57:29.910"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.912" endtime="20231130 17:57:29.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.914" endtime="20231130 17:57:29.915"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.911" endtime="20231130 17:57:29.915"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.917" endtime="20231130 17:57:29.918"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.918" endtime="20231130 17:57:29.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.920" endtime="20231130 17:57:29.921"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.916" endtime="20231130 17:57:29.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.923" endtime="20231130 17:57:29.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.925" endtime="20231130 17:57:29.926"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.922" endtime="20231130 17:57:29.927"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.929" endtime="20231130 17:57:29.930"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.931" endtime="20231130 17:57:29.932"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.927" endtime="20231130 17:57:29.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:29.962" level="INFO">${new_text} = Earum sed veritatis. Iusto nemo quibusdam ea neque. Blanditiis animi quidem quam.</msg>
<status status="PASS" starttime="20231130 17:57:29.934" endtime="20231130 17:57:29.965"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.933" endtime="20231130 17:57:29.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:29.967" endtime="20231130 17:57:29.968"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.966" endtime="20231130 17:57:29.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.969" endtime="20231130 17:57:29.970"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.971" endtime="20231130 17:57:29.971"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.972" endtime="20231130 17:57:29.973"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.969" endtime="20231130 17:57:29.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.975" endtime="20231130 17:57:29.975"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.974" endtime="20231130 17:57:29.976"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.977" endtime="20231130 17:57:29.978"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.976" endtime="20231130 17:57:29.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.980" endtime="20231130 17:57:29.981"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.979" endtime="20231130 17:57:29.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.983" endtime="20231130 17:57:29.984"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.982" endtime="20231130 17:57:29.985"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:29.986" endtime="20231130 17:57:29.987"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:29.985" endtime="20231130 17:57:29.988"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.910" endtime="20231130 17:57:29.988"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:29.990" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:29.991" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:29.989" endtime="20231130 17:57:29.991"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:29.994" level="INFO">${text} = Earum sed veritatis. Iusto nemo quibusdam ea neque. Blanditiis animi quidem quam.</msg>
<status status="PASS" starttime="20231130 17:57:29.993" endtime="20231130 17:57:29.994"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.992" endtime="20231130 17:57:29.995"/>
</branch>
<status status="PASS" starttime="20231130 17:57:29.991" endtime="20231130 17:57:29.997"/>
</if>
<msg timestamp="20231130 17:57:30.015" level="INFO">${text} = Earum sed veritatis. Iusto nemo quibusdam ea neque. Blanditiis animi quidem quam.</msg>
<status status="PASS" starttime="20231130 17:57:29.893" endtime="20231130 17:57:30.016"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231130 17:57:30.018" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231130 17:57:30.016" endtime="20231130 17:57:30.018"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:30.019" endtime="20231130 17:57:30.077"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:30.080" level="INFO">Fills the text 'Earum sed veritatis. Iusto nemo quibusdam ea neque. Blanditiis animi quidem quam.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:30.078" endtime="20231130 17:57:30.129"/>
</kw>
<status status="PASS" starttime="20231130 17:57:29.769" endtime="20231130 17:57:30.131"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:30.236" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:30.135" endtime="20231130 17:57:30.237"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:30.239" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:30.238" endtime="20231130 17:57:30.239"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:30.251" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:30.240" endtime="20231130 17:57:30.252"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:30.254" endtime="20231130 17:57:30.255"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.253" endtime="20231130 17:57:30.255"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.252" endtime="20231130 17:57:30.256"/>
</if>
<status status="PASS" starttime="20231130 17:57:30.133" endtime="20231130 17:57:30.256"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:30.259" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:30.258" endtime="20231130 17:57:30.259"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:30.261" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:30.260" endtime="20231130 17:57:30.262"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:30.264" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:30.263" endtime="20231130 17:57:30.265"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.267" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:30.268" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:30.266" endtime="20231130 17:57:30.268"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:30.271" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:30.270" endtime="20231130 17:57:30.272"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.274" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:30.275" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:30.273" endtime="20231130 17:57:30.275"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.277" endtime="20231130 17:57:30.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.279" endtime="20231130 17:57:30.279"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.276" endtime="20231130 17:57:30.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.282" endtime="20231130 17:57:30.283"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.284" endtime="20231130 17:57:30.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.287" endtime="20231130 17:57:30.287"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.279" endtime="20231130 17:57:30.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.289" endtime="20231130 17:57:30.289"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.289" endtime="20231130 17:57:30.290"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.288" endtime="20231130 17:57:30.290"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.292" endtime="20231130 17:57:30.293"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.293" endtime="20231130 17:57:30.294"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.291" endtime="20231130 17:57:30.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.298" endtime="20231130 17:57:30.299"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.295" endtime="20231130 17:57:30.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:30.301" endtime="20231130 17:57:30.302"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.300" endtime="20231130 17:57:30.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.306" endtime="20231130 17:57:30.306"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.307" endtime="20231130 17:57:30.307"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.307" endtime="20231130 17:57:30.307"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.305" endtime="20231130 17:57:30.308"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.308" endtime="20231130 17:57:30.309"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.308" endtime="20231130 17:57:30.309"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.310" endtime="20231130 17:57:30.311"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.309" endtime="20231130 17:57:30.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.312" endtime="20231130 17:57:30.313"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.312" endtime="20231130 17:57:30.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.316" endtime="20231130 17:57:30.316"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.315" endtime="20231130 17:57:30.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:30.319" level="INFO">${new_text} = Repudiandae culpa facere incidunt rerum corporis et.</msg>
<status status="PASS" starttime="20231130 17:57:30.318" endtime="20231130 17:57:30.319"/>
</kw>
<status status="PASS" starttime="20231130 17:57:30.317" endtime="20231130 17:57:30.320"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.276" endtime="20231130 17:57:30.320"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.321" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:30.321" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:30.320" endtime="20231130 17:57:30.321"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:30.323" level="INFO">${text} = Repudiandae culpa facere incidunt rerum corporis et.</msg>
<status status="PASS" starttime="20231130 17:57:30.322" endtime="20231130 17:57:30.323"/>
</kw>
<status status="PASS" starttime="20231130 17:57:30.322" endtime="20231130 17:57:30.324"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.322" endtime="20231130 17:57:30.324"/>
</if>
<msg timestamp="20231130 17:57:30.324" level="INFO">${text} = Repudiandae culpa facere incidunt rerum corporis et.</msg>
<status status="PASS" starttime="20231130 17:57:30.257" endtime="20231130 17:57:30.324"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:30.325" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:30.325" endtime="20231130 17:57:30.326"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:30.327" endtime="20231130 17:57:30.433"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:30.436" endtime="20231130 17:57:30.477"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:30.479" level="INFO">Fills the text 'Repudiandae culpa facere incidunt rerum corporis et.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:30.478" endtime="20231130 17:57:30.539"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:30.579" level="INFO">Text: 'Repudiandae culpa facere incidunt rerum corporis et.'</msg>
<msg timestamp="20231130 17:57:30.579" level="INFO">${condition} = Repudiandae culpa facere incidunt rerum corporis et.</msg>
<status status="PASS" starttime="20231130 17:57:30.540" endtime="20231130 17:57:30.579"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.583" endtime="20231130 17:57:30.584"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.585" endtime="20231130 17:57:30.586"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.581" endtime="20231130 17:57:30.586"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:30.581" endtime="20231130 17:57:30.587"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:30.588" endtime="20231130 17:57:30.658"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.659" level="INFO">Length is 52</msg>
<msg timestamp="20231130 17:57:30.660" level="INFO">${cnt} = 52</msg>
<status status="PASS" starttime="20231130 17:57:30.659" endtime="20231130 17:57:30.660"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:30.663" level="INFO">${STATE["Tiêu đề SEO"]} = Repudiandae culpa facere incidunt rerum corporis et.</msg>
<status status="PASS" starttime="20231130 17:57:30.662" endtime="20231130 17:57:30.663"/>
</kw>
<status status="PASS" starttime="20231130 17:57:30.661" endtime="20231130 17:57:30.664"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.660" endtime="20231130 17:57:30.665"/>
</if>
<status status="PASS" starttime="20231130 17:57:30.132" endtime="20231130 17:57:30.666"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:30.770" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:30.669" endtime="20231130 17:57:30.770"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:30.772" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:30.771" endtime="20231130 17:57:30.772"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:30.785" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:30.773" endtime="20231130 17:57:30.785"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:30.788" endtime="20231130 17:57:30.788"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.787" endtime="20231130 17:57:30.789"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.786" endtime="20231130 17:57:30.790"/>
</if>
<status status="PASS" starttime="20231130 17:57:30.668" endtime="20231130 17:57:30.790"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:30.794" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:30.793" endtime="20231130 17:57:30.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:30.799" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:30.795" endtime="20231130 17:57:30.800"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:30.802" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:30.801" endtime="20231130 17:57:30.803"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.806" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:30.807" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:30.804" endtime="20231130 17:57:30.808"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:30.811" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:30.809" endtime="20231130 17:57:30.811"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.815" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:30.816" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:30.814" endtime="20231130 17:57:30.816"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.818" endtime="20231130 17:57:30.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.820" endtime="20231130 17:57:30.820"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.817" endtime="20231130 17:57:30.821"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.822" endtime="20231130 17:57:30.823"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.824" endtime="20231130 17:57:30.824"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.825" endtime="20231130 17:57:30.826"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.821" endtime="20231130 17:57:30.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.828" endtime="20231130 17:57:30.829"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.831" endtime="20231130 17:57:30.831"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.827" endtime="20231130 17:57:30.832"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.834" endtime="20231130 17:57:30.834"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.835" endtime="20231130 17:57:30.835"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.833" endtime="20231130 17:57:30.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.839" endtime="20231130 17:57:30.840"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.838" endtime="20231130 17:57:30.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:30.842" endtime="20231130 17:57:30.843"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.841" endtime="20231130 17:57:30.844"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.845" endtime="20231130 17:57:30.846"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.848" endtime="20231130 17:57:30.848"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.849" endtime="20231130 17:57:30.850"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.844" endtime="20231130 17:57:30.851"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.852" endtime="20231130 17:57:30.853"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.851" endtime="20231130 17:57:30.853"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.855" endtime="20231130 17:57:30.856"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.854" endtime="20231130 17:57:30.856"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.858" endtime="20231130 17:57:30.859"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.857" endtime="20231130 17:57:30.859"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:30.861" endtime="20231130 17:57:30.861"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:30.860" endtime="20231130 17:57:30.862"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:30.866" level="INFO">${new_text} = Quas officia atque officiis iure delectus.</msg>
<status status="PASS" starttime="20231130 17:57:30.865" endtime="20231130 17:57:30.866"/>
</kw>
<status status="PASS" starttime="20231130 17:57:30.863" endtime="20231130 17:57:30.867"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.817" endtime="20231130 17:57:30.868"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:30.869" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:30.870" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:30.868" endtime="20231130 17:57:30.870"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:30.874" level="INFO">${text} = Quas officia atque officiis iure delectus.</msg>
<status status="PASS" starttime="20231130 17:57:30.872" endtime="20231130 17:57:30.874"/>
</kw>
<status status="PASS" starttime="20231130 17:57:30.871" endtime="20231130 17:57:30.875"/>
</branch>
<status status="PASS" starttime="20231130 17:57:30.871" endtime="20231130 17:57:30.876"/>
</if>
<msg timestamp="20231130 17:57:30.876" level="INFO">${text} = Quas officia atque officiis iure delectus.</msg>
<status status="PASS" starttime="20231130 17:57:30.791" endtime="20231130 17:57:30.876"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:30.878" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:30.877" endtime="20231130 17:57:30.878"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:30.878" endtime="20231130 17:57:30.982"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:30.983" endtime="20231130 17:57:31.025"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:31.027" level="INFO">Fills the text 'Quas officia atque officiis iure delectus.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:31.026" endtime="20231130 17:57:31.095"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:31.142" level="INFO">Text: 'Quas officia atque officiis iure delectus.'</msg>
<msg timestamp="20231130 17:57:31.143" level="INFO">${condition} = Quas officia atque officiis iure delectus.</msg>
<status status="PASS" starttime="20231130 17:57:31.099" endtime="20231130 17:57:31.143"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.148" endtime="20231130 17:57:31.149"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.150" endtime="20231130 17:57:31.151"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.144" endtime="20231130 17:57:31.151"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:31.144" endtime="20231130 17:57:31.152"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:31.153" endtime="20231130 17:57:31.225"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:31.226" level="INFO">Length is 42</msg>
<msg timestamp="20231130 17:57:31.227" level="INFO">${cnt} = 42</msg>
<status status="PASS" starttime="20231130 17:57:31.226" endtime="20231130 17:57:31.227"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:31.232" level="INFO">${STATE["Từ khóa SEO"]} = Quas officia atque officiis iure delectus.</msg>
<status status="PASS" starttime="20231130 17:57:31.229" endtime="20231130 17:57:31.233"/>
</kw>
<status status="PASS" starttime="20231130 17:57:31.228" endtime="20231130 17:57:31.233"/>
</branch>
<status status="PASS" starttime="20231130 17:57:31.228" endtime="20231130 17:57:31.234"/>
</if>
<status status="PASS" starttime="20231130 17:57:30.667" endtime="20231130 17:57:31.234"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:31.339" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:31.238" endtime="20231130 17:57:31.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:31.341" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:31.340" endtime="20231130 17:57:31.341"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:31.354" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:31.342" endtime="20231130 17:57:31.354"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:31.356" endtime="20231130 17:57:31.356"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.355" endtime="20231130 17:57:31.357"/>
</branch>
<status status="PASS" starttime="20231130 17:57:31.355" endtime="20231130 17:57:31.357"/>
</if>
<status status="PASS" starttime="20231130 17:57:31.236" endtime="20231130 17:57:31.358"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:31.360" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:31.359" endtime="20231130 17:57:31.360"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:31.362" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:31.361" endtime="20231130 17:57:31.362"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:31.365" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:31.363" endtime="20231130 17:57:31.365"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:31.367" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:31.368" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:31.366" endtime="20231130 17:57:31.368"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:31.370" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:31.369" endtime="20231130 17:57:31.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:31.372" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:31.373" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:31.372" endtime="20231130 17:57:31.373"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.375" endtime="20231130 17:57:31.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.376" endtime="20231130 17:57:31.377"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.374" endtime="20231130 17:57:31.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.379" endtime="20231130 17:57:31.381"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.382" endtime="20231130 17:57:31.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.384" endtime="20231130 17:57:31.385"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.378" endtime="20231130 17:57:31.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.387" endtime="20231130 17:57:31.388"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.389" endtime="20231130 17:57:31.390"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.386" endtime="20231130 17:57:31.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.392" endtime="20231130 17:57:31.393"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.394" endtime="20231130 17:57:31.394"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.391" endtime="20231130 17:57:31.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:31.399" level="INFO">${new_text} = Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.</msg>
<status status="PASS" starttime="20231130 17:57:31.398" endtime="20231130 17:57:31.420"/>
</kw>
<status status="PASS" starttime="20231130 17:57:31.395" endtime="20231130 17:57:31.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:31.423" endtime="20231130 17:57:31.424"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.422" endtime="20231130 17:57:31.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.425" endtime="20231130 17:57:31.426"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.427" endtime="20231130 17:57:31.428"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.430" endtime="20231130 17:57:31.431"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.425" endtime="20231130 17:57:31.432"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.433" endtime="20231130 17:57:31.434"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.432" endtime="20231130 17:57:31.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.436" endtime="20231130 17:57:31.437"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.435" endtime="20231130 17:57:31.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.438" endtime="20231130 17:57:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.437" endtime="20231130 17:57:31.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.439" endtime="20231130 17:57:31.439"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.439" endtime="20231130 17:57:31.440"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.441" endtime="20231130 17:57:31.441"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.440" endtime="20231130 17:57:31.442"/>
</branch>
<status status="PASS" starttime="20231130 17:57:31.374" endtime="20231130 17:57:31.442"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:31.444" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:31.445" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:31.443" endtime="20231130 17:57:31.445"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:31.449" level="INFO">${text} = Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.</msg>
<status status="PASS" starttime="20231130 17:57:31.448" endtime="20231130 17:57:31.450"/>
</kw>
<status status="PASS" starttime="20231130 17:57:31.446" endtime="20231130 17:57:31.450"/>
</branch>
<status status="PASS" starttime="20231130 17:57:31.445" endtime="20231130 17:57:31.451"/>
</if>
<msg timestamp="20231130 17:57:31.451" level="INFO">${text} = Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.</msg>
<status status="PASS" starttime="20231130 17:57:31.358" endtime="20231130 17:57:31.451"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:31.453" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:31.452" endtime="20231130 17:57:31.454"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:31.454" endtime="20231130 17:57:31.505"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:31.507" level="INFO">Fills the text 'Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:31.506" endtime="20231130 17:57:31.571"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:31.614" level="INFO">Text: 'Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.'</msg>
<msg timestamp="20231130 17:57:31.615" level="INFO">${condition} = Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.</msg>
<status status="PASS" starttime="20231130 17:57:31.572" endtime="20231130 17:57:31.616"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.619" endtime="20231130 17:57:31.620"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:31.621" endtime="20231130 17:57:31.622"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:31.617" endtime="20231130 17:57:31.623"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:31.617" endtime="20231130 17:57:31.623"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:31.625" endtime="20231130 17:57:31.693"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:31.695" level="INFO">Length is 112</msg>
<msg timestamp="20231130 17:57:31.695" level="INFO">${cnt} = 112</msg>
<status status="PASS" starttime="20231130 17:57:31.694" endtime="20231130 17:57:31.696"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:31.701" level="INFO">${STATE["Mô tả SEO"]} = Facere labore quam illo autem sed ipsum tenetur. Fugiat exercitationem beatae corrupti. Doloremque nostrum quia.</msg>
<status status="PASS" starttime="20231130 17:57:31.700" endtime="20231130 17:57:31.702"/>
</kw>
<status status="PASS" starttime="20231130 17:57:31.698" endtime="20231130 17:57:31.702"/>
</branch>
<status status="PASS" starttime="20231130 17:57:31.697" endtime="20231130 17:57:31.703"/>
</if>
<status status="PASS" starttime="20231130 17:57:31.235" endtime="20231130 17:57:31.703"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:31.806" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:31.704" endtime="20231130 17:57:31.806"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:31.816" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:31.807" endtime="20231130 17:57:31.817"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:31.819" endtime="20231130 17:57:32.003"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:32.005" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:32.005" endtime="20231130 17:57:32.006"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:32.023" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:32.007" endtime="20231130 17:57:32.023"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:32.025" endtime="20231130 17:57:32.026"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:32.027" endtime="20231130 17:57:32.028"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:32.036" endtime="20231130 17:57:32.037"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:32.024" endtime="20231130 17:57:32.038"/>
</branch>
<status status="PASS" starttime="20231130 17:57:32.024" endtime="20231130 17:57:32.039"/>
</if>
<status status="PASS" starttime="20231130 17:57:32.003" endtime="20231130 17:57:32.039"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:32.370" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:32.370" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:32.524" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:32.524" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:32.558" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:32.040" endtime="20231130 17:57:32.559"/>
</kw>
<status status="PASS" starttime="20231130 17:57:31.818" endtime="20231130 17:57:32.561"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:32.567" endtime="20231130 17:57:32.567"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:32.568" endtime="20231130 17:57:32.570"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:32.573" endtime="20231130 17:57:32.574"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:32.564" endtime="20231130 17:57:32.574"/>
</branch>
<status status="PASS" starttime="20231130 17:57:31.818" endtime="20231130 17:57:32.575"/>
</if>
<status status="PASS" starttime="20231130 17:57:31.704" endtime="20231130 17:57:32.576"/>
</kw>
<kw name="User look message &quot;Thêm mới bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:32.578" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:32.577" endtime="20231130 17:57:32.578"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:32.579" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:32.579" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:32.579" endtime="20231130 17:57:32.579"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:32.584" endtime="20231130 17:57:32.585"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:32.582" endtime="20231130 17:57:32.586"/>
</branch>
<status status="PASS" starttime="20231130 17:57:32.581" endtime="20231130 17:57:32.586"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:32.667" level="INFO">Text: 'Thêm mới bài viết thành công'</msg>
<status status="PASS" starttime="20231130 17:57:32.593" endtime="20231130 17:57:32.668"/>
</kw>
<status status="PASS" starttime="20231130 17:57:32.590" endtime="20231130 17:57:32.670"/>
</kw>
<status status="PASS" starttime="20231130 17:57:32.587" endtime="20231130 17:57:32.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:32.673" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231130 17:57:32.672" endtime="20231130 17:57:32.673"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:33.153" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231130 17:57:33.153" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231130 17:57:33.154" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231130 17:57:32.685" endtime="20231130 17:57:33.157"/>
</kw>
<status status="FAIL" starttime="20231130 17:57:32.677" endtime="20231130 17:57:33.158"/>
</kw>
<msg timestamp="20231130 17:57:33.159" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231130 17:57:32.674" endtime="20231130 17:57:33.160"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:33.162" endtime="20231130 17:57:33.164"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:33.161" endtime="20231130 17:57:33.164"/>
</branch>
<status status="PASS" starttime="20231130 17:57:33.160" endtime="20231130 17:57:33.166"/>
</if>
<status status="PASS" starttime="20231130 17:57:32.577" endtime="20231130 17:57:33.166"/>
</kw>
<msg timestamp="20231130 17:57:33.167" level="INFO">${name1} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:16.682" endtime="20231130 17:57:33.168"/>
</kw>
<kw name="Create a test post with &quot;Cate1&quot; type" sourcename="Create a test post with &quot;${type}&quot; type">
<kw name="Click &quot;Tạo mới bài viết&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:33.278" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:33.176" endtime="20231130 17:57:33.278"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:33.289" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:33.278" endtime="20231130 17:57:33.290"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:33.292" endtime="20231130 17:57:34.548"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:34.553" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:34.552" endtime="20231130 17:57:34.553"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:34.566" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:34.554" endtime="20231130 17:57:34.567"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:34.570" endtime="20231130 17:57:34.571"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:34.573" endtime="20231130 17:57:34.573"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:34.574" endtime="20231130 17:57:34.574"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:34.568" endtime="20231130 17:57:34.575"/>
</branch>
<status status="PASS" starttime="20231130 17:57:34.567" endtime="20231130 17:57:34.575"/>
</if>
<status status="PASS" starttime="20231130 17:57:34.549" endtime="20231130 17:57:34.576"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:34.624" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:34.624" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:34.658" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:34.658" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:34.672" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:34.576" endtime="20231130 17:57:34.673"/>
</kw>
<status status="PASS" starttime="20231130 17:57:33.291" endtime="20231130 17:57:34.673"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:34.675" endtime="20231130 17:57:34.675"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:34.676" endtime="20231130 17:57:34.676"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:34.677" endtime="20231130 17:57:34.677"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:34.674" endtime="20231130 17:57:34.678"/>
</branch>
<status status="PASS" starttime="20231130 17:57:33.290" endtime="20231130 17:57:34.678"/>
</if>
<status status="PASS" starttime="20231130 17:57:33.175" endtime="20231130 17:57:34.679"/>
</kw>
<kw name="Click radio &quot;Loại editor&quot; in line &quot;Block&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231130 17:57:34.685" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại editor"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "Block"...</msg>
<status status="PASS" starttime="20231130 17:57:34.682" endtime="20231130 17:57:34.685"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:34.686" endtime="20231130 17:57:35.082"/>
</kw>
<status status="PASS" starttime="20231130 17:57:34.680" endtime="20231130 17:57:35.083"/>
</kw>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:35.090" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:35.089" endtime="20231130 17:57:35.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:35.091" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:35.091" endtime="20231130 17:57:35.092"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:35.093" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:35.092" endtime="20231130 17:57:35.094"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:35.095" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:35.095" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:35.094" endtime="20231130 17:57:35.095"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:35.100" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:35.097" endtime="20231130 17:57:35.101"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:35.103" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:35.104" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:35.102" endtime="20231130 17:57:35.104"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.105" endtime="20231130 17:57:35.105"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.106" endtime="20231130 17:57:35.107"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.104" endtime="20231130 17:57:35.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.108" endtime="20231130 17:57:35.108"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.109" endtime="20231130 17:57:35.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.109" endtime="20231130 17:57:35.110"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.107" endtime="20231130 17:57:35.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.111" endtime="20231130 17:57:35.111"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.111" endtime="20231130 17:57:35.112"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.110" endtime="20231130 17:57:35.112"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.115" endtime="20231130 17:57:35.115"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.116" endtime="20231130 17:57:35.117"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.113" endtime="20231130 17:57:35.118"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.118" endtime="20231130 17:57:35.119"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.118" endtime="20231130 17:57:35.119"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:35.120" endtime="20231130 17:57:35.120"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.119" endtime="20231130 17:57:35.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.121" endtime="20231130 17:57:35.121"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.121" endtime="20231130 17:57:35.121"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.122" endtime="20231130 17:57:35.122"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.120" endtime="20231130 17:57:35.123"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.124" endtime="20231130 17:57:35.124"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.123" endtime="20231130 17:57:35.124"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.125" endtime="20231130 17:57:35.125"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.125" endtime="20231130 17:57:35.125"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.126" endtime="20231130 17:57:35.126"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.126" endtime="20231130 17:57:35.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.127" endtime="20231130 17:57:35.128"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.127" endtime="20231130 17:57:35.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:35.133" endtime="20231130 17:57:35.134"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:35.132" endtime="20231130 17:57:35.134"/>
</branch>
<status status="PASS" starttime="20231130 17:57:35.104" endtime="20231130 17:57:35.135"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:35.135" level="INFO">Length is 5</msg>
<msg timestamp="20231130 17:57:35.136" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231130 17:57:35.135" endtime="20231130 17:57:35.136"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:35.137" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:35.137" endtime="20231130 17:57:35.137"/>
</kw>
<status status="PASS" starttime="20231130 17:57:35.136" endtime="20231130 17:57:35.137"/>
</branch>
<status status="PASS" starttime="20231130 17:57:35.136" endtime="20231130 17:57:35.138"/>
</if>
<msg timestamp="20231130 17:57:35.139" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:35.088" endtime="20231130 17:57:35.139"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231130 17:57:35.140" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231130 17:57:35.139" endtime="20231130 17:57:35.141"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:35.159" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:35.142" endtime="20231130 17:57:35.160"/>
</kw>
<status status="PASS" starttime="20231130 17:57:35.141" endtime="20231130 17:57:35.160"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:35.161" endtime="20231130 17:57:35.321"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231130 17:57:35.323" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231130 17:57:35.322" endtime="20231130 17:57:35.324"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:35.326" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:35.325" endtime="20231130 17:57:35.415"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:35.415" endtime="20231130 17:57:35.642"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:35.644" level="INFO">Length is 5</msg>
<msg timestamp="20231130 17:57:35.644" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231130 17:57:35.643" endtime="20231130 17:57:35.645"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:35.650" level="INFO">${STATE["Chuyên mục"]} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:35.648" endtime="20231130 17:57:35.650"/>
</kw>
<status status="PASS" starttime="20231130 17:57:35.646" endtime="20231130 17:57:35.651"/>
</branch>
<status status="PASS" starttime="20231130 17:57:35.646" endtime="20231130 17:57:35.653"/>
</if>
<status status="PASS" starttime="20231130 17:57:35.085" endtime="20231130 17:57:35.653"/>
</kw>
<kw name="Select file in &quot;Ảnh cover&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231130 17:57:35.657" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh cover"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231130 17:57:35.656" endtime="20231130 17:57:35.657"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231130 17:57:35.658" endtime="20231130 17:57:35.709"/>
</kw>
<status status="PASS" starttime="20231130 17:57:35.654" endtime="20231130 17:57:35.709"/>
</kw>
<kw name="Select file in &quot;Ảnh thumbnail&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231130 17:57:35.714" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh thumbnail"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231130 17:57:35.711" endtime="20231130 17:57:35.715"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231130 17:57:35.716" endtime="20231130 17:57:35.766"/>
</kw>
<status status="PASS" starttime="20231130 17:57:35.710" endtime="20231130 17:57:35.766"/>
</kw>
<kw name="Click radio &quot;Định dạng bài viết&quot; in line &quot;Longform&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231130 17:57:35.771" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Định dạng bài viết"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), ...</msg>
<status status="PASS" starttime="20231130 17:57:35.769" endtime="20231130 17:57:35.772"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:35.773" endtime="20231130 17:57:35.998"/>
</kw>
<status status="PASS" starttime="20231130 17:57:35.767" endtime="20231130 17:57:35.999"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Background Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:36.104" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:36.002" endtime="20231130 17:57:36.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:36.106" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:36.105" endtime="20231130 17:57:36.107"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:36.131" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:36.107" endtime="20231130 17:57:36.131"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:36.135" endtime="20231130 17:57:36.135"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.134" endtime="20231130 17:57:36.136"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.134" endtime="20231130 17:57:36.136"/>
</if>
<status status="PASS" starttime="20231130 17:57:36.001" endtime="20231130 17:57:36.137"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:36.140" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:36.139" endtime="20231130 17:57:36.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:36.142" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:36.141" endtime="20231130 17:57:36.143"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:36.145" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:36.144" endtime="20231130 17:57:36.148"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.151" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:36.153" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:36.149" endtime="20231130 17:57:36.153"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:36.158" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:36.155" endtime="20231130 17:57:36.159"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.161" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:36.161" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:36.160" endtime="20231130 17:57:36.162"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.169" endtime="20231130 17:57:36.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.171" endtime="20231130 17:57:36.172"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.168" endtime="20231130 17:57:36.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.174" endtime="20231130 17:57:36.175"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.176" endtime="20231130 17:57:36.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.178" endtime="20231130 17:57:36.178"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.173" endtime="20231130 17:57:36.184"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.187" endtime="20231130 17:57:36.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.189" endtime="20231130 17:57:36.190"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.185" endtime="20231130 17:57:36.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.192" endtime="20231130 17:57:36.193"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.194" endtime="20231130 17:57:36.195"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.191" endtime="20231130 17:57:36.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.203" endtime="20231130 17:57:36.205"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.199" endtime="20231130 17:57:36.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:36.209" endtime="20231130 17:57:36.210"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.207" endtime="20231130 17:57:36.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.218" endtime="20231130 17:57:36.219"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.221" endtime="20231130 17:57:36.222"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.223" endtime="20231130 17:57:36.223"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.212" endtime="20231130 17:57:36.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231130 17:57:36.227" level="INFO">${new_text} = #110088</msg>
<status status="PASS" starttime="20231130 17:57:36.226" endtime="20231130 17:57:36.227"/>
</kw>
<status status="PASS" starttime="20231130 17:57:36.225" endtime="20231130 17:57:36.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.234" endtime="20231130 17:57:36.235"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.231" endtime="20231130 17:57:36.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.237" endtime="20231130 17:57:36.237"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.236" endtime="20231130 17:57:36.238"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.239" endtime="20231130 17:57:36.240"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.238" endtime="20231130 17:57:36.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.242" endtime="20231130 17:57:36.242"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.241" endtime="20231130 17:57:36.243"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.167" endtime="20231130 17:57:36.243"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.245" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:36.245" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:36.244" endtime="20231130 17:57:36.245"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:36.259" level="INFO">${text} = #110088</msg>
<status status="PASS" starttime="20231130 17:57:36.257" endtime="20231130 17:57:36.259"/>
</kw>
<status status="PASS" starttime="20231130 17:57:36.254" endtime="20231130 17:57:36.260"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.249" endtime="20231130 17:57:36.260"/>
</if>
<msg timestamp="20231130 17:57:36.261" level="INFO">${text} = #110088</msg>
<status status="PASS" starttime="20231130 17:57:36.137" endtime="20231130 17:57:36.261"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:36.270" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Background Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:36.262" endtime="20231130 17:57:36.271"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:36.272" endtime="20231130 17:57:36.447"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:36.449" endtime="20231130 17:57:36.526"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:36.527" level="INFO">Fills the text '#110088' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:36.527" endtime="20231130 17:57:36.594"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:36.643" level="INFO">Text: '#110088'</msg>
<msg timestamp="20231130 17:57:36.643" level="INFO">${condition} = #110088</msg>
<status status="PASS" starttime="20231130 17:57:36.598" endtime="20231130 17:57:36.644"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.648" endtime="20231130 17:57:36.649"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.650" endtime="20231130 17:57:36.651"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.644" endtime="20231130 17:57:36.652"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:36.644" endtime="20231130 17:57:36.652"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:36.653" endtime="20231130 17:57:36.724"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.726" level="INFO">Length is 7</msg>
<msg timestamp="20231130 17:57:36.726" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231130 17:57:36.725" endtime="20231130 17:57:36.727"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:36.733" level="INFO">${STATE["Background Color"]} = #110088</msg>
<status status="PASS" starttime="20231130 17:57:36.731" endtime="20231130 17:57:36.733"/>
</kw>
<status status="PASS" starttime="20231130 17:57:36.728" endtime="20231130 17:57:36.734"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.727" endtime="20231130 17:57:36.734"/>
</if>
<status status="PASS" starttime="20231130 17:57:36.000" endtime="20231130 17:57:36.735"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Title Fore Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:36.840" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:36.738" endtime="20231130 17:57:36.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:36.841" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:36.840" endtime="20231130 17:57:36.841"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:36.852" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:36.842" endtime="20231130 17:57:36.852"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:36.854" endtime="20231130 17:57:36.855"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.853" endtime="20231130 17:57:36.855"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.853" endtime="20231130 17:57:36.855"/>
</if>
<status status="PASS" starttime="20231130 17:57:36.737" endtime="20231130 17:57:36.856"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:36.858" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:36.858" endtime="20231130 17:57:36.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:36.860" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:36.859" endtime="20231130 17:57:36.860"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:36.861" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:36.860" endtime="20231130 17:57:36.861"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.862" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:36.862" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:36.861" endtime="20231130 17:57:36.862"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:36.866" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:36.862" endtime="20231130 17:57:36.866"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.868" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:36.868" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:36.867" endtime="20231130 17:57:36.868"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.869" endtime="20231130 17:57:36.870"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.871" endtime="20231130 17:57:36.871"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.868" endtime="20231130 17:57:36.871"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.872" endtime="20231130 17:57:36.873"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.873" endtime="20231130 17:57:36.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.874" endtime="20231130 17:57:36.874"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.872" endtime="20231130 17:57:36.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.875" endtime="20231130 17:57:36.875"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.876" endtime="20231130 17:57:36.876"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.874" endtime="20231130 17:57:36.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.878" endtime="20231130 17:57:36.878"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.879" endtime="20231130 17:57:36.879"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.877" endtime="20231130 17:57:36.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.884" endtime="20231130 17:57:36.885"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.883" endtime="20231130 17:57:36.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:36.889" endtime="20231130 17:57:36.889"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.888" endtime="20231130 17:57:36.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.890" endtime="20231130 17:57:36.890"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.891" endtime="20231130 17:57:36.891"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.891" endtime="20231130 17:57:36.892"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.890" endtime="20231130 17:57:36.892"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231130 17:57:36.893" level="INFO">${new_text} = #ccbb55</msg>
<status status="PASS" starttime="20231130 17:57:36.893" endtime="20231130 17:57:36.893"/>
</kw>
<status status="PASS" starttime="20231130 17:57:36.892" endtime="20231130 17:57:36.894"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.894" endtime="20231130 17:57:36.895"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.894" endtime="20231130 17:57:36.895"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.896" endtime="20231130 17:57:36.899"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.895" endtime="20231130 17:57:36.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.900" endtime="20231130 17:57:36.901"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.899" endtime="20231130 17:57:36.901"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:36.902" endtime="20231130 17:57:36.902"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:36.901" endtime="20231130 17:57:36.902"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.868" endtime="20231130 17:57:36.902"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:36.904" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:36.904" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:36.903" endtime="20231130 17:57:36.904"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:36.906" level="INFO">${text} = #ccbb55</msg>
<status status="PASS" starttime="20231130 17:57:36.905" endtime="20231130 17:57:36.906"/>
</kw>
<status status="PASS" starttime="20231130 17:57:36.905" endtime="20231130 17:57:36.906"/>
</branch>
<status status="PASS" starttime="20231130 17:57:36.904" endtime="20231130 17:57:36.906"/>
</if>
<msg timestamp="20231130 17:57:36.907" level="INFO">${text} = #ccbb55</msg>
<status status="PASS" starttime="20231130 17:57:36.856" endtime="20231130 17:57:36.907"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:36.908" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Title Fore Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:36.907" endtime="20231130 17:57:36.908"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:36.908" endtime="20231130 17:57:37.049"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:37.050" endtime="20231130 17:57:37.111"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:37.113" level="INFO">Fills the text '#ccbb55' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:37.111" endtime="20231130 17:57:37.180"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:37.224" level="INFO">Text: '#ccbb55'</msg>
<msg timestamp="20231130 17:57:37.224" level="INFO">${condition} = #ccbb55</msg>
<status status="PASS" starttime="20231130 17:57:37.182" endtime="20231130 17:57:37.224"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.225" endtime="20231130 17:57:37.226"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.226" endtime="20231130 17:57:37.226"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.224" endtime="20231130 17:57:37.227"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:37.224" endtime="20231130 17:57:37.227"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:37.228" endtime="20231130 17:57:37.289"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:37.292" level="INFO">Length is 7</msg>
<msg timestamp="20231130 17:57:37.293" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231130 17:57:37.291" endtime="20231130 17:57:37.293"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:37.297" level="INFO">${STATE["Title Fore Color"]} = #ccbb55</msg>
<status status="PASS" starttime="20231130 17:57:37.295" endtime="20231130 17:57:37.298"/>
</kw>
<status status="PASS" starttime="20231130 17:57:37.294" endtime="20231130 17:57:37.298"/>
</branch>
<status status="PASS" starttime="20231130 17:57:37.294" endtime="20231130 17:57:37.299"/>
</if>
<status status="PASS" starttime="20231130 17:57:36.736" endtime="20231130 17:57:37.299"/>
</kw>
<kw name="Click switch &quot;Show Title&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231130 17:57:37.302" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Show Title"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231130 17:57:37.301" endtime="20231130 17:57:37.303"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:37.303" endtime="20231130 17:57:37.424"/>
</kw>
<status status="PASS" starttime="20231130 17:57:37.300" endtime="20231130 17:57:37.425"/>
</kw>
<kw name="Click switch &quot;Ghim&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231130 17:57:37.428" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ghim"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231130 17:57:37.427" endtime="20231130 17:57:37.429"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:37.430" endtime="20231130 17:57:37.627"/>
</kw>
<status status="PASS" starttime="20231130 17:57:37.426" endtime="20231130 17:57:37.628"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:37.735" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:37.631" endtime="20231130 17:57:37.735"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:37.736" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:37.736" endtime="20231130 17:57:37.736"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:37.747" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:37.737" endtime="20231130 17:57:37.748"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:37.750" endtime="20231130 17:57:37.750"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.749" endtime="20231130 17:57:37.751"/>
</branch>
<status status="PASS" starttime="20231130 17:57:37.748" endtime="20231130 17:57:37.753"/>
</if>
<status status="PASS" starttime="20231130 17:57:37.629" endtime="20231130 17:57:37.754"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:37.757" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:37.756" endtime="20231130 17:57:37.758"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:37.760" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:37.759" endtime="20231130 17:57:37.760"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:37.762" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:37.761" endtime="20231130 17:57:37.762"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:37.765" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:37.766" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:37.764" endtime="20231130 17:57:37.766"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:37.770" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:37.768" endtime="20231130 17:57:37.770"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:37.772" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:37.772" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:37.771" endtime="20231130 17:57:37.772"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.774" endtime="20231130 17:57:37.775"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.775" endtime="20231130 17:57:37.775"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.773" endtime="20231130 17:57:37.776"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.776" endtime="20231130 17:57:37.777"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.777" endtime="20231130 17:57:37.777"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.778" endtime="20231130 17:57:37.778"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.776" endtime="20231130 17:57:37.778"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.782" endtime="20231130 17:57:37.785"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.786" endtime="20231130 17:57:37.787"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.778" endtime="20231130 17:57:37.788"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.790" endtime="20231130 17:57:37.790"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.791" endtime="20231130 17:57:37.792"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.789" endtime="20231130 17:57:37.792"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.793" endtime="20231130 17:57:37.794"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.793" endtime="20231130 17:57:37.794"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:37.795" endtime="20231130 17:57:37.795"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.794" endtime="20231130 17:57:37.795"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.802" endtime="20231130 17:57:37.803"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.804" endtime="20231130 17:57:37.804"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.805" endtime="20231130 17:57:37.806"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.796" endtime="20231130 17:57:37.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.809" endtime="20231130 17:57:37.810"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.808" endtime="20231130 17:57:37.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.811" endtime="20231130 17:57:37.811"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.810" endtime="20231130 17:57:37.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.812" endtime="20231130 17:57:37.812"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.811" endtime="20231130 17:57:37.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.821" endtime="20231130 17:57:37.822"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.820" endtime="20231130 17:57:37.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:37.825" endtime="20231130 17:57:37.825"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:37.823" endtime="20231130 17:57:37.825"/>
</branch>
<status status="PASS" starttime="20231130 17:57:37.773" endtime="20231130 17:57:37.826"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:37.827" level="INFO">Length is 13</msg>
<msg timestamp="20231130 17:57:37.828" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231130 17:57:37.826" endtime="20231130 17:57:37.828"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:37.835" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:37.834" endtime="20231130 17:57:37.836"/>
</kw>
<status status="PASS" starttime="20231130 17:57:37.829" endtime="20231130 17:57:37.836"/>
</branch>
<status status="PASS" starttime="20231130 17:57:37.829" endtime="20231130 17:57:37.836"/>
</if>
<msg timestamp="20231130 17:57:37.837" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:37.754" endtime="20231130 17:57:37.837"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:37.839" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:37.838" endtime="20231130 17:57:37.839"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:37.839" endtime="20231130 17:57:37.975"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:37.976" endtime="20231130 17:57:38.024"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:38.026" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:38.025" endtime="20231130 17:57:38.086"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:38.132" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231130 17:57:38.133" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:38.087" endtime="20231130 17:57:38.133"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.136" endtime="20231130 17:57:38.137"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.137" endtime="20231130 17:57:38.138"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.134" endtime="20231130 17:57:38.138"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:38.134" endtime="20231130 17:57:38.139"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:38.140" endtime="20231130 17:57:38.207"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:38.209" level="INFO">Length is 13</msg>
<msg timestamp="20231130 17:57:38.210" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231130 17:57:38.209" endtime="20231130 17:57:38.210"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:38.215" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231130 17:57:38.213" endtime="20231130 17:57:38.215"/>
</kw>
<status status="PASS" starttime="20231130 17:57:38.211" endtime="20231130 17:57:38.216"/>
</branch>
<status status="PASS" starttime="20231130 17:57:38.211" endtime="20231130 17:57:38.217"/>
</if>
<status status="PASS" starttime="20231130 17:57:37.628" endtime="20231130 17:57:38.217"/>
</kw>
<kw name="Enter &quot;text&quot; in textarea &quot;Custom CSS&quot; with &quot;{color:1px;}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:38.321" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:38.220" endtime="20231130 17:57:38.321"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:38.323" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:38.322" endtime="20231130 17:57:38.323"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:38.334" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:38.324" endtime="20231130 17:57:38.335"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:38.337" endtime="20231130 17:57:38.337"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.336" endtime="20231130 17:57:38.338"/>
</branch>
<status status="PASS" starttime="20231130 17:57:38.335" endtime="20231130 17:57:38.338"/>
</if>
<status status="PASS" starttime="20231130 17:57:38.220" endtime="20231130 17:57:38.339"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:38.341" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:38.341" endtime="20231130 17:57:38.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:38.344" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:38.343" endtime="20231130 17:57:38.344"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:38.347" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:38.345" endtime="20231130 17:57:38.348"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:38.350" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:38.350" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:38.349" endtime="20231130 17:57:38.350"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:38.352" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:38.351" endtime="20231130 17:57:38.352"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:38.353" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:38.354" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:38.353" endtime="20231130 17:57:38.354"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.356" endtime="20231130 17:57:38.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.357" endtime="20231130 17:57:38.357"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.355" endtime="20231130 17:57:38.358"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.359" endtime="20231130 17:57:38.359"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.360" endtime="20231130 17:57:38.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.361" endtime="20231130 17:57:38.362"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.358" endtime="20231130 17:57:38.365"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.366" endtime="20231130 17:57:38.367"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.368" endtime="20231130 17:57:38.369"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.365" endtime="20231130 17:57:38.369"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.371" endtime="20231130 17:57:38.372"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.373" endtime="20231130 17:57:38.373"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.370" endtime="20231130 17:57:38.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.376" endtime="20231130 17:57:38.376"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.374" endtime="20231130 17:57:38.377"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:38.378" endtime="20231130 17:57:38.380"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.377" endtime="20231130 17:57:38.385"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.387" endtime="20231130 17:57:38.388"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.389" endtime="20231130 17:57:38.390"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.391" endtime="20231130 17:57:38.392"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.386" endtime="20231130 17:57:38.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.398" endtime="20231130 17:57:38.398"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.394" endtime="20231130 17:57:38.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.400" endtime="20231130 17:57:38.401"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.399" endtime="20231130 17:57:38.401"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.403" endtime="20231130 17:57:38.403"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.402" endtime="20231130 17:57:38.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.405" endtime="20231130 17:57:38.406"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.404" endtime="20231130 17:57:38.407"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.408" endtime="20231130 17:57:38.409"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.407" endtime="20231130 17:57:38.409"/>
</branch>
<status status="PASS" starttime="20231130 17:57:38.354" endtime="20231130 17:57:38.410"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:38.413" level="INFO">Length is 12</msg>
<msg timestamp="20231130 17:57:38.414" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231130 17:57:38.411" endtime="20231130 17:57:38.414"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:38.417" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:38.416" endtime="20231130 17:57:38.417"/>
</kw>
<status status="PASS" starttime="20231130 17:57:38.415" endtime="20231130 17:57:38.418"/>
</branch>
<status status="PASS" starttime="20231130 17:57:38.415" endtime="20231130 17:57:38.418"/>
</if>
<msg timestamp="20231130 17:57:38.419" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:38.339" endtime="20231130 17:57:38.419"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:38.421" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom CSS"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:38.419" endtime="20231130 17:57:38.421"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:38.421" endtime="20231130 17:57:38.477"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:38.480" level="INFO">Fills the text '{color:1px;}' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:38.478" endtime="20231130 17:57:38.535"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:38.581" level="INFO">Text: '{color:1px;}'</msg>
<msg timestamp="20231130 17:57:38.582" level="INFO">${condition} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:38.536" endtime="20231130 17:57:38.582"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.585" endtime="20231130 17:57:38.585"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:38.586" endtime="20231130 17:57:38.587"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:38.583" endtime="20231130 17:57:38.587"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:38.583" endtime="20231130 17:57:38.588"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:38.589" endtime="20231130 17:57:38.659"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:38.661" level="INFO">Length is 12</msg>
<msg timestamp="20231130 17:57:38.661" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231130 17:57:38.660" endtime="20231130 17:57:38.662"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:38.667" level="INFO">${STATE["Custom CSS"]} = {color:1px;}</msg>
<status status="PASS" starttime="20231130 17:57:38.665" endtime="20231130 17:57:38.668"/>
</kw>
<status status="PASS" starttime="20231130 17:57:38.664" endtime="20231130 17:57:38.668"/>
</branch>
<status status="PASS" starttime="20231130 17:57:38.663" endtime="20231130 17:57:38.669"/>
</if>
<status status="PASS" starttime="20231130 17:57:38.218" endtime="20231130 17:57:38.669"/>
</kw>
<kw name="Click &quot;English&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:38.672" endtime="20231130 17:57:38.937"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:39.043" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:38.941" endtime="20231130 17:57:39.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.044" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:39.044" endtime="20231130 17:57:39.045"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:39.079" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:39.045" endtime="20231130 17:57:39.080"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:39.082" endtime="20231130 17:57:39.083"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.081" endtime="20231130 17:57:39.084"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.080" endtime="20231130 17:57:39.085"/>
</if>
<status status="PASS" starttime="20231130 17:57:38.938" endtime="20231130 17:57:39.086"/>
</kw>
<status status="PASS" starttime="20231130 17:57:38.670" endtime="20231130 17:57:39.087"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:39.192" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:39.090" endtime="20231130 17:57:39.192"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.194" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:39.193" endtime="20231130 17:57:39.194"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:39.210" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:39.195" endtime="20231130 17:57:39.210"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:39.213" endtime="20231130 17:57:39.214"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.211" endtime="20231130 17:57:39.215"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.211" endtime="20231130 17:57:39.216"/>
</if>
<status status="PASS" starttime="20231130 17:57:39.089" endtime="20231130 17:57:39.217"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.220" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:39.219" endtime="20231130 17:57:39.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.223" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:39.222" endtime="20231130 17:57:39.223"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:39.225" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:39.224" endtime="20231130 17:57:39.225"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.226" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:39.226" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:39.226" endtime="20231130 17:57:39.226"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:39.227" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:39.227" endtime="20231130 17:57:39.228"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.229" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:39.231" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:39.228" endtime="20231130 17:57:39.231"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.233" endtime="20231130 17:57:39.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.235" endtime="20231130 17:57:39.235"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.232" endtime="20231130 17:57:39.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:39.239" level="INFO">${random} = Illo.</msg>
<status status="PASS" starttime="20231130 17:57:39.238" endtime="20231130 17:57:39.240"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231130 17:57:39.242" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231130 17:57:39.241" endtime="20231130 17:57:39.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.245" level="INFO">${new_text} = PO_11 Illo.</msg>
<status status="PASS" starttime="20231130 17:57:39.243" endtime="20231130 17:57:39.245"/>
</kw>
<status status="PASS" starttime="20231130 17:57:39.237" endtime="20231130 17:57:39.245"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.249" endtime="20231130 17:57:39.250"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.251" endtime="20231130 17:57:39.251"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.249" endtime="20231130 17:57:39.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.252" endtime="20231130 17:57:39.252"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.252" endtime="20231130 17:57:39.253"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.252" endtime="20231130 17:57:39.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.255" endtime="20231130 17:57:39.256"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.254" endtime="20231130 17:57:39.256"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:39.257" endtime="20231130 17:57:39.257"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.256" endtime="20231130 17:57:39.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.259" endtime="20231130 17:57:39.259"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.259" endtime="20231130 17:57:39.260"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.260" endtime="20231130 17:57:39.260"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.258" endtime="20231130 17:57:39.260"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.261" endtime="20231130 17:57:39.261"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.261" endtime="20231130 17:57:39.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.264" endtime="20231130 17:57:39.265"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.262" endtime="20231130 17:57:39.265"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.266" endtime="20231130 17:57:39.267"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.266" endtime="20231130 17:57:39.268"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.271" endtime="20231130 17:57:39.271"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.270" endtime="20231130 17:57:39.272"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.272" endtime="20231130 17:57:39.272"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.272" endtime="20231130 17:57:39.273"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.232" endtime="20231130 17:57:39.273"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.274" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:39.274" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:39.273" endtime="20231130 17:57:39.274"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:39.276" level="INFO">${text} = PO_11 Illo.</msg>
<status status="PASS" starttime="20231130 17:57:39.275" endtime="20231130 17:57:39.276"/>
</kw>
<status status="PASS" starttime="20231130 17:57:39.275" endtime="20231130 17:57:39.276"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.274" endtime="20231130 17:57:39.276"/>
</if>
<msg timestamp="20231130 17:57:39.276" level="INFO">${text} = PO_11 Illo.</msg>
<status status="PASS" starttime="20231130 17:57:39.218" endtime="20231130 17:57:39.277"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:39.278" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:39.277" endtime="20231130 17:57:39.278"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:39.278" endtime="20231130 17:57:39.378"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:39.379" endtime="20231130 17:57:39.423"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:39.425" level="INFO">Fills the text 'PO_11 Illo.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:39.424" endtime="20231130 17:57:39.499"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:39.540" level="INFO">Text: 'PO_11 Illo.'</msg>
<msg timestamp="20231130 17:57:39.541" level="INFO">${condition} = PO_11 Illo.</msg>
<status status="PASS" starttime="20231130 17:57:39.500" endtime="20231130 17:57:39.541"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.544" endtime="20231130 17:57:39.544"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.545" endtime="20231130 17:57:39.547"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.542" endtime="20231130 17:57:39.548"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:39.542" endtime="20231130 17:57:39.548"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:39.549" endtime="20231130 17:57:39.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.608" level="INFO">Length is 11</msg>
<msg timestamp="20231130 17:57:39.609" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231130 17:57:39.608" endtime="20231130 17:57:39.609"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:39.612" level="INFO">${STATE["Tiêu đề"]} = PO_11 Illo.</msg>
<status status="PASS" starttime="20231130 17:57:39.611" endtime="20231130 17:57:39.613"/>
</kw>
<status status="PASS" starttime="20231130 17:57:39.610" endtime="20231130 17:57:39.614"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.610" endtime="20231130 17:57:39.615"/>
</if>
<status status="PASS" starttime="20231130 17:57:39.088" endtime="20231130 17:57:39.615"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:39.720" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:39.619" endtime="20231130 17:57:39.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.722" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:39.721" endtime="20231130 17:57:39.723"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:39.735" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:39.724" endtime="20231130 17:57:39.735"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:39.737" endtime="20231130 17:57:39.737"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.736" endtime="20231130 17:57:39.738"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.736" endtime="20231130 17:57:39.738"/>
</if>
<status status="PASS" starttime="20231130 17:57:39.618" endtime="20231130 17:57:39.738"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.741" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:39.740" endtime="20231130 17:57:39.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:39.743" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:39.742" endtime="20231130 17:57:39.743"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:39.745" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:39.744" endtime="20231130 17:57:39.745"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.747" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:39.748" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:39.746" endtime="20231130 17:57:39.748"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:39.750" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:39.749" endtime="20231130 17:57:39.750"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.752" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:39.752" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:39.751" endtime="20231130 17:57:39.752"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.754" endtime="20231130 17:57:39.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.755" endtime="20231130 17:57:39.756"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.753" endtime="20231130 17:57:39.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.758" endtime="20231130 17:57:39.758"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.759" endtime="20231130 17:57:39.760"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.760" endtime="20231130 17:57:39.761"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.757" endtime="20231130 17:57:39.761"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.763" endtime="20231130 17:57:39.764"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.764" endtime="20231130 17:57:39.764"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.761" endtime="20231130 17:57:39.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.766" endtime="20231130 17:57:39.766"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.767" endtime="20231130 17:57:39.768"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.765" endtime="20231130 17:57:39.768"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.769" endtime="20231130 17:57:39.769"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.768" endtime="20231130 17:57:39.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:39.771" endtime="20231130 17:57:39.772"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.771" endtime="20231130 17:57:39.772"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.774" endtime="20231130 17:57:39.774"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.775" endtime="20231130 17:57:39.775"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.776" endtime="20231130 17:57:39.777"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.773" endtime="20231130 17:57:39.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.782" endtime="20231130 17:57:39.782"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.778" endtime="20231130 17:57:39.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.785" endtime="20231130 17:57:39.789"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.784" endtime="20231130 17:57:39.789"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.791" endtime="20231130 17:57:39.791"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.790" endtime="20231130 17:57:39.792"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:39.794" endtime="20231130 17:57:39.794"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:39.792" endtime="20231130 17:57:39.796"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:39.799" level="INFO">${new_text} = Assumenda recusandae doloribus sint sint laboriosam.</msg>
<status status="PASS" starttime="20231130 17:57:39.798" endtime="20231130 17:57:39.800"/>
</kw>
<status status="PASS" starttime="20231130 17:57:39.797" endtime="20231130 17:57:39.800"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.753" endtime="20231130 17:57:39.801"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:39.803" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:39.803" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:39.801" endtime="20231130 17:57:39.803"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:39.806" level="INFO">${text} = Assumenda recusandae doloribus sint sint laboriosam.</msg>
<status status="PASS" starttime="20231130 17:57:39.805" endtime="20231130 17:57:39.807"/>
</kw>
<status status="PASS" starttime="20231130 17:57:39.804" endtime="20231130 17:57:39.807"/>
</branch>
<status status="PASS" starttime="20231130 17:57:39.804" endtime="20231130 17:57:39.808"/>
</if>
<msg timestamp="20231130 17:57:39.808" level="INFO">${text} = Assumenda recusandae doloribus sint sint laboriosam.</msg>
<status status="PASS" starttime="20231130 17:57:39.739" endtime="20231130 17:57:39.809"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:39.810" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:39.809" endtime="20231130 17:57:39.810"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:39.811" endtime="20231130 17:57:39.935"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:39.936" endtime="20231130 17:57:39.980"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:39.982" level="INFO">Fills the text 'Assumenda recusandae doloribus sint sint laboriosam.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:39.981" endtime="20231130 17:57:40.081"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:40.167" level="INFO">Text: 'Assumenda recusandae doloribus sint sint laboriosam.'</msg>
<msg timestamp="20231130 17:57:40.168" level="INFO">${condition} = Assumenda recusandae doloribus sint sint laboriosam.</msg>
<status status="PASS" starttime="20231130 17:57:40.082" endtime="20231130 17:57:40.168"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.171" endtime="20231130 17:57:40.172"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.172" endtime="20231130 17:57:40.173"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.169" endtime="20231130 17:57:40.173"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:40.169" endtime="20231130 17:57:40.174"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:40.175" endtime="20231130 17:57:40.254"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:40.256" level="INFO">Length is 52</msg>
<msg timestamp="20231130 17:57:40.256" level="INFO">${cnt} = 52</msg>
<status status="PASS" starttime="20231130 17:57:40.255" endtime="20231130 17:57:40.256"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:40.259" level="INFO">${STATE["Tác giả"]} = Assumenda recusandae doloribus sint sint laboriosam.</msg>
<status status="PASS" starttime="20231130 17:57:40.258" endtime="20231130 17:57:40.260"/>
</kw>
<status status="PASS" starttime="20231130 17:57:40.257" endtime="20231130 17:57:40.260"/>
</branch>
<status status="PASS" starttime="20231130 17:57:40.257" endtime="20231130 17:57:40.261"/>
</if>
<status status="PASS" starttime="20231130 17:57:39.616" endtime="20231130 17:57:40.261"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:40.368" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:40.266" endtime="20231130 17:57:40.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:40.370" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:40.369" endtime="20231130 17:57:40.370"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:40.380" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:40.370" endtime="20231130 17:57:40.381"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:40.383" endtime="20231130 17:57:40.384"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.382" endtime="20231130 17:57:40.384"/>
</branch>
<status status="PASS" starttime="20231130 17:57:40.381" endtime="20231130 17:57:40.385"/>
</if>
<status status="PASS" starttime="20231130 17:57:40.265" endtime="20231130 17:57:40.385"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:40.389" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:40.388" endtime="20231130 17:57:40.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:40.391" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:40.391" endtime="20231130 17:57:40.392"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:40.393" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:40.392" endtime="20231130 17:57:40.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:40.394" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:40.394" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:40.393" endtime="20231130 17:57:40.394"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:40.397" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:40.395" endtime="20231130 17:57:40.397"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:40.398" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:40.398" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:40.397" endtime="20231130 17:57:40.398"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.399" endtime="20231130 17:57:40.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.400" endtime="20231130 17:57:40.400"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.399" endtime="20231130 17:57:40.401"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.402" endtime="20231130 17:57:40.403"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.404" endtime="20231130 17:57:40.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.406" endtime="20231130 17:57:40.406"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.401" endtime="20231130 17:57:40.407"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.408" endtime="20231130 17:57:40.409"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.410" endtime="20231130 17:57:40.410"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.407" endtime="20231130 17:57:40.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.413" endtime="20231130 17:57:40.413"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.414" endtime="20231130 17:57:40.414"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.411" endtime="20231130 17:57:40.414"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.415" endtime="20231130 17:57:40.416"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.415" endtime="20231130 17:57:40.416"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:40.417" endtime="20231130 17:57:40.418"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.416" endtime="20231130 17:57:40.419"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.420" endtime="20231130 17:57:40.421"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.421" endtime="20231130 17:57:40.421"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.422" endtime="20231130 17:57:40.422"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.419" endtime="20231130 17:57:40.422"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.423" endtime="20231130 17:57:40.423"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.422" endtime="20231130 17:57:40.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.424" endtime="20231130 17:57:40.424"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.424" endtime="20231130 17:57:40.425"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.425" endtime="20231130 17:57:40.426"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.425" endtime="20231130 17:57:40.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.426" endtime="20231130 17:57:40.427"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.426" endtime="20231130 17:57:40.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:40.430" level="INFO">${new_text} = Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.</msg>
<status status="PASS" starttime="20231130 17:57:40.428" endtime="20231130 17:57:40.430"/>
</kw>
<status status="PASS" starttime="20231130 17:57:40.427" endtime="20231130 17:57:40.430"/>
</branch>
<status status="PASS" starttime="20231130 17:57:40.399" endtime="20231130 17:57:40.431"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:40.432" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:40.432" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:40.431" endtime="20231130 17:57:40.432"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:40.434" level="INFO">${text} = Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.</msg>
<status status="PASS" starttime="20231130 17:57:40.433" endtime="20231130 17:57:40.435"/>
</kw>
<status status="PASS" starttime="20231130 17:57:40.432" endtime="20231130 17:57:40.435"/>
</branch>
<status status="PASS" starttime="20231130 17:57:40.432" endtime="20231130 17:57:40.436"/>
</if>
<msg timestamp="20231130 17:57:40.436" level="INFO">${text} = Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.</msg>
<status status="PASS" starttime="20231130 17:57:40.386" endtime="20231130 17:57:40.436"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:40.437" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:40.437" endtime="20231130 17:57:40.437"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:40.438" endtime="20231130 17:57:40.609"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:40.610" endtime="20231130 17:57:40.662"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:40.664" level="INFO">Fills the text 'Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:40.663" endtime="20231130 17:57:40.731"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:40.790" level="INFO">Text: 'Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.'</msg>
<msg timestamp="20231130 17:57:40.791" level="INFO">${condition} = Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.</msg>
<status status="PASS" starttime="20231130 17:57:40.732" endtime="20231130 17:57:40.791"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.793" endtime="20231130 17:57:40.794"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:40.794" endtime="20231130 17:57:40.795"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:40.791" endtime="20231130 17:57:40.796"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:40.791" endtime="20231130 17:57:40.798"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:40.799" endtime="20231130 17:57:40.874"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:40.876" level="INFO">Length is 68</msg>
<msg timestamp="20231130 17:57:40.877" level="INFO">${cnt} = 68</msg>
<status status="PASS" starttime="20231130 17:57:40.875" endtime="20231130 17:57:40.877"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:40.882" level="INFO">${STATE["Mô tả ảnh cover"]} = Veritatis laboriosam fugit eos accusantium incidunt occaecati rerum.</msg>
<status status="PASS" starttime="20231130 17:57:40.881" endtime="20231130 17:57:40.883"/>
</kw>
<status status="PASS" starttime="20231130 17:57:40.879" endtime="20231130 17:57:40.884"/>
</branch>
<status status="PASS" starttime="20231130 17:57:40.878" endtime="20231130 17:57:40.884"/>
</if>
<status status="PASS" starttime="20231130 17:57:40.264" endtime="20231130 17:57:40.885"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:40.989" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:40.887" endtime="20231130 17:57:40.989"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:40.990" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:40.989" endtime="20231130 17:57:40.990"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:41.000" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:40.990" endtime="20231130 17:57:41.001"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:41.003" endtime="20231130 17:57:41.003"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.002" endtime="20231130 17:57:41.004"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.001" endtime="20231130 17:57:41.004"/>
</if>
<status status="PASS" starttime="20231130 17:57:40.886" endtime="20231130 17:57:41.005"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.006" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:41.006" endtime="20231130 17:57:41.007"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.007" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:41.007" endtime="20231130 17:57:41.007"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:41.008" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:41.008" endtime="20231130 17:57:41.008"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.009" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:41.009" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:41.009" endtime="20231130 17:57:41.009"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:41.011" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:41.010" endtime="20231130 17:57:41.011"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.014" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:41.014" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:41.012" endtime="20231130 17:57:41.015"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.017" endtime="20231130 17:57:41.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.019" endtime="20231130 17:57:41.019"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.016" endtime="20231130 17:57:41.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.022" endtime="20231130 17:57:41.022"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.023" endtime="20231130 17:57:41.024"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.024" endtime="20231130 17:57:41.025"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.021" endtime="20231130 17:57:41.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.026" endtime="20231130 17:57:41.026"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.027" endtime="20231130 17:57:41.027"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.025" endtime="20231130 17:57:41.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.030" endtime="20231130 17:57:41.031"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.032" endtime="20231130 17:57:41.032"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.028" endtime="20231130 17:57:41.033"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:41.035" level="INFO">${new_text} = Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.</msg>
<status status="PASS" starttime="20231130 17:57:41.034" endtime="20231130 17:57:41.035"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.033" endtime="20231130 17:57:41.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:41.037" endtime="20231130 17:57:41.037"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.036" endtime="20231130 17:57:41.037"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.038" endtime="20231130 17:57:41.039"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.039" endtime="20231130 17:57:41.039"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.039" endtime="20231130 17:57:41.040"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.038" endtime="20231130 17:57:41.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.041" endtime="20231130 17:57:41.041"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.040" endtime="20231130 17:57:41.041"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.041" endtime="20231130 17:57:41.042"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.041" endtime="20231130 17:57:41.043"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.044" endtime="20231130 17:57:41.044"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.043" endtime="20231130 17:57:41.044"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.045" endtime="20231130 17:57:41.047"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.045" endtime="20231130 17:57:41.047"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.048" endtime="20231130 17:57:41.048"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.047" endtime="20231130 17:57:41.049"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.015" endtime="20231130 17:57:41.049"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.050" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:41.050" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:41.049" endtime="20231130 17:57:41.050"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:41.052" level="INFO">${text} = Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.</msg>
<status status="PASS" starttime="20231130 17:57:41.051" endtime="20231130 17:57:41.052"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.051" endtime="20231130 17:57:41.052"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.050" endtime="20231130 17:57:41.053"/>
</if>
<msg timestamp="20231130 17:57:41.053" level="INFO">${text} = Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.</msg>
<status status="PASS" starttime="20231130 17:57:41.005" endtime="20231130 17:57:41.053"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:41.055" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:41.054" endtime="20231130 17:57:41.055"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:41.056" endtime="20231130 17:57:41.106"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:41.108" level="INFO">Fills the text 'Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:41.107" endtime="20231130 17:57:41.173"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:41.224" level="INFO">Text: 'Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.'</msg>
<msg timestamp="20231130 17:57:41.224" level="INFO">${condition} = Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.</msg>
<status status="PASS" starttime="20231130 17:57:41.174" endtime="20231130 17:57:41.225"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.227" endtime="20231130 17:57:41.228"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.228" endtime="20231130 17:57:41.230"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.225" endtime="20231130 17:57:41.232"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:41.225" endtime="20231130 17:57:41.232"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:41.234" endtime="20231130 17:57:41.292"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.294" level="INFO">Length is 105</msg>
<msg timestamp="20231130 17:57:41.295" level="INFO">${cnt} = 105</msg>
<status status="PASS" starttime="20231130 17:57:41.293" endtime="20231130 17:57:41.296"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:41.300" level="INFO">${STATE["Giới thiệu"]} = Animi eum dicta modi neque. Rerum modi dignissimos placeat error. Incidunt praesentium dolorum excepturi.</msg>
<status status="PASS" starttime="20231130 17:57:41.299" endtime="20231130 17:57:41.301"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.298" endtime="20231130 17:57:41.302"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.297" endtime="20231130 17:57:41.302"/>
</if>
<status status="PASS" starttime="20231130 17:57:40.885" endtime="20231130 17:57:41.303"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:41.407" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:41.306" endtime="20231130 17:57:41.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.409" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:41.408" endtime="20231130 17:57:41.409"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:41.421" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:41.410" endtime="20231130 17:57:41.422"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:41.423" endtime="20231130 17:57:41.424"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.423" endtime="20231130 17:57:41.424"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.422" endtime="20231130 17:57:41.425"/>
</if>
<status status="PASS" starttime="20231130 17:57:41.305" endtime="20231130 17:57:41.425"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.428" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:41.427" endtime="20231130 17:57:41.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.431" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:41.430" endtime="20231130 17:57:41.431"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:41.433" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:41.432" endtime="20231130 17:57:41.434"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.435" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:41.436" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:41.434" endtime="20231130 17:57:41.436"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:41.438" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:41.437" endtime="20231130 17:57:41.439"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.440" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:41.441" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:41.439" endtime="20231130 17:57:41.441"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.443" endtime="20231130 17:57:41.444"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.446" endtime="20231130 17:57:41.447"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.442" endtime="20231130 17:57:41.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.449" endtime="20231130 17:57:41.450"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.451" endtime="20231130 17:57:41.451"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.452" endtime="20231130 17:57:41.452"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.448" endtime="20231130 17:57:41.453"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.454" endtime="20231130 17:57:41.454"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.455" endtime="20231130 17:57:41.456"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.453" endtime="20231130 17:57:41.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.457" endtime="20231130 17:57:41.458"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.459" endtime="20231130 17:57:41.459"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.456" endtime="20231130 17:57:41.460"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:41.464" level="INFO">${new_text} = Vero quam modi nostrum velit itaque exercitationem velit. Eaque consectetur porro tempora voluptas quis corporis.</msg>
<status status="PASS" starttime="20231130 17:57:41.463" endtime="20231130 17:57:41.465"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.460" endtime="20231130 17:57:41.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:41.501" endtime="20231130 17:57:41.502"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.466" endtime="20231130 17:57:41.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.504" endtime="20231130 17:57:41.504"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.505" endtime="20231130 17:57:41.506"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.507" endtime="20231130 17:57:41.507"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.503" endtime="20231130 17:57:41.508"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.509" endtime="20231130 17:57:41.510"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.508" endtime="20231130 17:57:41.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.512" endtime="20231130 17:57:41.513"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.511" endtime="20231130 17:57:41.514"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.515" endtime="20231130 17:57:41.515"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.514" endtime="20231130 17:57:41.516"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.517" endtime="20231130 17:57:41.517"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.516" endtime="20231130 17:57:41.518"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.519" endtime="20231130 17:57:41.519"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.518" endtime="20231130 17:57:41.520"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.442" endtime="20231130 17:57:41.520"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.522" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:41.523" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:41.521" endtime="20231130 17:57:41.523"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:41.527" level="INFO">${text} = Vero quam modi nostrum velit itaque exercitationem velit. Eaque consectetur porro tempora voluptas quis corporis.</msg>
<status status="PASS" starttime="20231130 17:57:41.525" endtime="20231130 17:57:41.527"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.524" endtime="20231130 17:57:41.528"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.524" endtime="20231130 17:57:41.530"/>
</if>
<msg timestamp="20231130 17:57:41.531" level="INFO">${text} = Vero quam modi nostrum velit itaque exercitationem velit. Eaque consectetur porro tempora voluptas quis corporis.</msg>
<status status="PASS" starttime="20231130 17:57:41.426" endtime="20231130 17:57:41.531"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231130 17:57:41.533" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231130 17:57:41.531" endtime="20231130 17:57:41.533"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:41.534" endtime="20231130 17:57:41.599"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:41.601" level="INFO">Fills the text 'Vero quam modi nostrum velit itaque exercitationem velit. Eaque consectetur porro tempora voluptas quis corporis.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:41.600" endtime="20231130 17:57:41.643"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.304" endtime="20231130 17:57:41.643"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:41.751" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:41.649" endtime="20231130 17:57:41.751"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.753" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:41.752" endtime="20231130 17:57:41.753"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:41.764" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:41.754" endtime="20231130 17:57:41.765"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:41.767" endtime="20231130 17:57:41.768"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.766" endtime="20231130 17:57:41.768"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.766" endtime="20231130 17:57:41.769"/>
</if>
<status status="PASS" starttime="20231130 17:57:41.647" endtime="20231130 17:57:41.769"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.772" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:41.771" endtime="20231130 17:57:41.773"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:41.774" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:41.774" endtime="20231130 17:57:41.775"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:41.777" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:41.776" endtime="20231130 17:57:41.777"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.780" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:41.781" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:41.778" endtime="20231130 17:57:41.781"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:41.784" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:41.782" endtime="20231130 17:57:41.785"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.788" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:41.788" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:41.786" endtime="20231130 17:57:41.788"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.790" endtime="20231130 17:57:41.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.792" endtime="20231130 17:57:41.792"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.789" endtime="20231130 17:57:41.793"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.794" endtime="20231130 17:57:41.798"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.799" endtime="20231130 17:57:41.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.801" endtime="20231130 17:57:41.801"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.793" endtime="20231130 17:57:41.802"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.803" endtime="20231130 17:57:41.804"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.804" endtime="20231130 17:57:41.804"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.802" endtime="20231130 17:57:41.805"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.806" endtime="20231130 17:57:41.806"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.807" endtime="20231130 17:57:41.807"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.805" endtime="20231130 17:57:41.807"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.808" endtime="20231130 17:57:41.808"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.807" endtime="20231130 17:57:41.809"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:41.810" endtime="20231130 17:57:41.810"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.809" endtime="20231130 17:57:41.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.815" endtime="20231130 17:57:41.815"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.817" endtime="20231130 17:57:41.817"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.818" endtime="20231130 17:57:41.819"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.811" endtime="20231130 17:57:41.819"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.821" endtime="20231130 17:57:41.821"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.820" endtime="20231130 17:57:41.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.823" endtime="20231130 17:57:41.823"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.822" endtime="20231130 17:57:41.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.825" endtime="20231130 17:57:41.825"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.824" endtime="20231130 17:57:41.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:41.827" endtime="20231130 17:57:41.827"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:41.826" endtime="20231130 17:57:41.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:41.832" level="INFO">${new_text} = Provident nostrum voluptates quisquam.</msg>
<status status="PASS" starttime="20231130 17:57:41.828" endtime="20231130 17:57:41.832"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.828" endtime="20231130 17:57:41.833"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.789" endtime="20231130 17:57:41.833"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:41.834" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:41.834" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:41.833" endtime="20231130 17:57:41.834"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:41.836" level="INFO">${text} = Provident nostrum voluptates quisquam.</msg>
<status status="PASS" starttime="20231130 17:57:41.835" endtime="20231130 17:57:41.836"/>
</kw>
<status status="PASS" starttime="20231130 17:57:41.835" endtime="20231130 17:57:41.836"/>
</branch>
<status status="PASS" starttime="20231130 17:57:41.835" endtime="20231130 17:57:41.836"/>
</if>
<msg timestamp="20231130 17:57:41.836" level="INFO">${text} = Provident nostrum voluptates quisquam.</msg>
<status status="PASS" starttime="20231130 17:57:41.770" endtime="20231130 17:57:41.837"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:41.838" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:41.837" endtime="20231130 17:57:41.838"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:41.838" endtime="20231130 17:57:41.950"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:41.951" endtime="20231130 17:57:41.999"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:42.002" level="INFO">Fills the text 'Provident nostrum voluptates quisquam.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:42.000" endtime="20231130 17:57:42.058"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:42.099" level="INFO">Text: 'Provident nostrum voluptates quisquam.'</msg>
<msg timestamp="20231130 17:57:42.099" level="INFO">${condition} = Provident nostrum voluptates quisquam.</msg>
<status status="PASS" starttime="20231130 17:57:42.059" endtime="20231130 17:57:42.100"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.103" endtime="20231130 17:57:42.103"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.104" endtime="20231130 17:57:42.105"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.101" endtime="20231130 17:57:42.105"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:42.101" endtime="20231130 17:57:42.106"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:42.107" endtime="20231130 17:57:42.174"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.175" level="INFO">Length is 38</msg>
<msg timestamp="20231130 17:57:42.176" level="INFO">${cnt} = 38</msg>
<status status="PASS" starttime="20231130 17:57:42.175" endtime="20231130 17:57:42.176"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:42.182" level="INFO">${STATE["Tiêu đề SEO"]} = Provident nostrum voluptates quisquam.</msg>
<status status="PASS" starttime="20231130 17:57:42.179" endtime="20231130 17:57:42.182"/>
</kw>
<status status="PASS" starttime="20231130 17:57:42.177" endtime="20231130 17:57:42.183"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.177" endtime="20231130 17:57:42.183"/>
</if>
<status status="PASS" starttime="20231130 17:57:41.644" endtime="20231130 17:57:42.184"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:42.288" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:42.187" endtime="20231130 17:57:42.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:42.290" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:42.290" endtime="20231130 17:57:42.291"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:42.302" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:42.292" endtime="20231130 17:57:42.303"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:42.305" endtime="20231130 17:57:42.305"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.304" endtime="20231130 17:57:42.306"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.303" endtime="20231130 17:57:42.306"/>
</if>
<status status="PASS" starttime="20231130 17:57:42.186" endtime="20231130 17:57:42.307"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:42.310" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:42.309" endtime="20231130 17:57:42.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:42.313" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:42.312" endtime="20231130 17:57:42.314"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:42.316" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:42.315" endtime="20231130 17:57:42.316"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.318" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:42.319" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:42.317" endtime="20231130 17:57:42.319"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:42.321" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:42.320" endtime="20231130 17:57:42.321"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.323" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:42.324" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:42.322" endtime="20231130 17:57:42.324"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.326" endtime="20231130 17:57:42.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.327" endtime="20231130 17:57:42.328"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.325" endtime="20231130 17:57:42.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.331" endtime="20231130 17:57:42.332"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.333" endtime="20231130 17:57:42.333"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.334" endtime="20231130 17:57:42.334"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.330" endtime="20231130 17:57:42.335"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.336" endtime="20231130 17:57:42.337"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.338" endtime="20231130 17:57:42.338"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.335" endtime="20231130 17:57:42.338"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.340" endtime="20231130 17:57:42.340"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.341" endtime="20231130 17:57:42.342"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.339" endtime="20231130 17:57:42.342"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.344" endtime="20231130 17:57:42.344"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.343" endtime="20231130 17:57:42.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:42.350" endtime="20231130 17:57:42.350"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.349" endtime="20231130 17:57:42.351"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.352" endtime="20231130 17:57:42.352"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.353" endtime="20231130 17:57:42.353"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.354" endtime="20231130 17:57:42.354"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.351" endtime="20231130 17:57:42.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.355" endtime="20231130 17:57:42.355"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.354" endtime="20231130 17:57:42.355"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.356" endtime="20231130 17:57:42.356"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.356" endtime="20231130 17:57:42.357"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.357" endtime="20231130 17:57:42.358"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.357" endtime="20231130 17:57:42.358"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.359" endtime="20231130 17:57:42.359"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.358" endtime="20231130 17:57:42.360"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:42.364" level="INFO">${new_text} = Dignissimos autem nobis eius aliquam optio.</msg>
<status status="PASS" starttime="20231130 17:57:42.362" endtime="20231130 17:57:42.364"/>
</kw>
<status status="PASS" starttime="20231130 17:57:42.361" endtime="20231130 17:57:42.364"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.325" endtime="20231130 17:57:42.365"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.366" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:42.366" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:42.365" endtime="20231130 17:57:42.367"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:42.371" level="INFO">${text} = Dignissimos autem nobis eius aliquam optio.</msg>
<status status="PASS" starttime="20231130 17:57:42.369" endtime="20231130 17:57:42.371"/>
</kw>
<status status="PASS" starttime="20231130 17:57:42.368" endtime="20231130 17:57:42.372"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.368" endtime="20231130 17:57:42.372"/>
</if>
<msg timestamp="20231130 17:57:42.373" level="INFO">${text} = Dignissimos autem nobis eius aliquam optio.</msg>
<status status="PASS" starttime="20231130 17:57:42.308" endtime="20231130 17:57:42.373"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:42.375" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:42.374" endtime="20231130 17:57:42.375"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:42.376" endtime="20231130 17:57:42.474"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:42.475" endtime="20231130 17:57:42.520"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:42.522" level="INFO">Fills the text 'Dignissimos autem nobis eius aliquam optio.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:42.521" endtime="20231130 17:57:42.591"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:42.631" level="INFO">Text: 'Dignissimos autem nobis eius aliquam optio.'</msg>
<msg timestamp="20231130 17:57:42.632" level="INFO">${condition} = Dignissimos autem nobis eius aliquam optio.</msg>
<status status="PASS" starttime="20231130 17:57:42.592" endtime="20231130 17:57:42.632"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.634" endtime="20231130 17:57:42.635"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.636" endtime="20231130 17:57:42.636"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.633" endtime="20231130 17:57:42.637"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:42.633" endtime="20231130 17:57:42.637"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:42.638" endtime="20231130 17:57:42.707"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.709" level="INFO">Length is 43</msg>
<msg timestamp="20231130 17:57:42.709" level="INFO">${cnt} = 43</msg>
<status status="PASS" starttime="20231130 17:57:42.708" endtime="20231130 17:57:42.709"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:42.714" level="INFO">${STATE["Từ khóa SEO"]} = Dignissimos autem nobis eius aliquam optio.</msg>
<status status="PASS" starttime="20231130 17:57:42.711" endtime="20231130 17:57:42.714"/>
</kw>
<status status="PASS" starttime="20231130 17:57:42.710" endtime="20231130 17:57:42.715"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.710" endtime="20231130 17:57:42.715"/>
</if>
<status status="PASS" starttime="20231130 17:57:42.184" endtime="20231130 17:57:42.716"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:42.820" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:42.719" endtime="20231130 17:57:42.820"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:42.822" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:42.821" endtime="20231130 17:57:42.822"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:42.833" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:42.823" endtime="20231130 17:57:42.834"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:42.835" endtime="20231130 17:57:42.836"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.834" endtime="20231130 17:57:42.836"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.834" endtime="20231130 17:57:42.837"/>
</if>
<status status="PASS" starttime="20231130 17:57:42.718" endtime="20231130 17:57:42.837"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:42.840" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:42.839" endtime="20231130 17:57:42.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:42.842" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:42.841" endtime="20231130 17:57:42.842"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:42.844" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:42.843" endtime="20231130 17:57:42.847"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.849" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:42.849" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:42.848" endtime="20231130 17:57:42.849"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:42.851" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:42.850" endtime="20231130 17:57:42.851"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.853" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:42.853" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:42.852" endtime="20231130 17:57:42.854"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.855" endtime="20231130 17:57:42.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.856" endtime="20231130 17:57:42.857"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.854" endtime="20231130 17:57:42.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.859" endtime="20231130 17:57:42.859"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.860" endtime="20231130 17:57:42.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.862" endtime="20231130 17:57:42.863"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.858" endtime="20231130 17:57:42.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.865" endtime="20231130 17:57:42.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.866" endtime="20231130 17:57:42.867"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.864" endtime="20231130 17:57:42.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.869" endtime="20231130 17:57:42.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.870" endtime="20231130 17:57:42.870"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.868" endtime="20231130 17:57:42.871"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:42.874" level="INFO">${new_text} = Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.</msg>
<status status="PASS" starttime="20231130 17:57:42.872" endtime="20231130 17:57:42.874"/>
</kw>
<status status="PASS" starttime="20231130 17:57:42.871" endtime="20231130 17:57:42.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:42.876" endtime="20231130 17:57:42.877"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.875" endtime="20231130 17:57:42.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.879" endtime="20231130 17:57:42.880"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.881" endtime="20231130 17:57:42.882"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.882" endtime="20231130 17:57:42.883"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.878" endtime="20231130 17:57:42.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.884" endtime="20231130 17:57:42.885"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.884" endtime="20231130 17:57:42.885"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.887" endtime="20231130 17:57:42.888"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.886" endtime="20231130 17:57:42.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.889" endtime="20231130 17:57:42.890"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.889" endtime="20231130 17:57:42.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.892" endtime="20231130 17:57:42.893"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.891" endtime="20231130 17:57:42.893"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:42.894" endtime="20231130 17:57:42.895"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:42.894" endtime="20231130 17:57:42.897"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.854" endtime="20231130 17:57:42.897"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:42.899" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:42.900" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:42.898" endtime="20231130 17:57:42.900"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:42.903" level="INFO">${text} = Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.</msg>
<status status="PASS" starttime="20231130 17:57:42.902" endtime="20231130 17:57:42.903"/>
</kw>
<status status="PASS" starttime="20231130 17:57:42.901" endtime="20231130 17:57:42.903"/>
</branch>
<status status="PASS" starttime="20231130 17:57:42.900" endtime="20231130 17:57:42.904"/>
</if>
<msg timestamp="20231130 17:57:42.904" level="INFO">${text} = Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.</msg>
<status status="PASS" starttime="20231130 17:57:42.837" endtime="20231130 17:57:42.905"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:42.908" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:42.905" endtime="20231130 17:57:42.909"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:42.910" endtime="20231130 17:57:42.961"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:42.965" level="INFO">Fills the text 'Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:42.963" endtime="20231130 17:57:43.015"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:43.064" level="INFO">Text: 'Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.'</msg>
<msg timestamp="20231130 17:57:43.065" level="INFO">${condition} = Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.</msg>
<status status="PASS" starttime="20231130 17:57:43.016" endtime="20231130 17:57:43.066"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.069" endtime="20231130 17:57:43.069"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.070" endtime="20231130 17:57:43.071"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.067" endtime="20231130 17:57:43.071"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:43.067" endtime="20231130 17:57:43.072"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:43.073" endtime="20231130 17:57:43.141"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:43.143" level="INFO">Length is 103</msg>
<msg timestamp="20231130 17:57:43.144" level="INFO">${cnt} = 103</msg>
<status status="PASS" starttime="20231130 17:57:43.142" endtime="20231130 17:57:43.144"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:43.148" level="INFO">${STATE["Mô tả SEO"]} = Sit id perspiciatis sit. Velit iste nulla officia. Facere quam doloremque numquam dolorum perspiciatis.</msg>
<status status="PASS" starttime="20231130 17:57:43.147" endtime="20231130 17:57:43.149"/>
</kw>
<status status="PASS" starttime="20231130 17:57:43.145" endtime="20231130 17:57:43.150"/>
</branch>
<status status="PASS" starttime="20231130 17:57:43.144" endtime="20231130 17:57:43.150"/>
</if>
<status status="PASS" starttime="20231130 17:57:42.717" endtime="20231130 17:57:43.151"/>
</kw>
<kw name="Click &quot;Tiếng Việt&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:43.153" endtime="20231130 17:57:43.401"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:43.506" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:43.404" endtime="20231130 17:57:43.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:43.508" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:43.507" endtime="20231130 17:57:43.508"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:43.532" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:43.509" endtime="20231130 17:57:43.533"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:43.535" endtime="20231130 17:57:43.537"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.534" endtime="20231130 17:57:43.537"/>
</branch>
<status status="PASS" starttime="20231130 17:57:43.534" endtime="20231130 17:57:43.538"/>
</if>
<status status="PASS" starttime="20231130 17:57:43.402" endtime="20231130 17:57:43.538"/>
</kw>
<status status="PASS" starttime="20231130 17:57:43.152" endtime="20231130 17:57:43.539"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:43.643" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:43.542" endtime="20231130 17:57:43.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:43.644" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:43.643" endtime="20231130 17:57:43.644"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:43.687" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:43.645" endtime="20231130 17:57:43.687"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:43.689" endtime="20231130 17:57:43.690"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.688" endtime="20231130 17:57:43.690"/>
</branch>
<status status="PASS" starttime="20231130 17:57:43.688" endtime="20231130 17:57:43.691"/>
</if>
<status status="PASS" starttime="20231130 17:57:43.541" endtime="20231130 17:57:43.691"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:43.694" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:43.693" endtime="20231130 17:57:43.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:43.697" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:43.696" endtime="20231130 17:57:43.698"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:43.700" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:43.699" endtime="20231130 17:57:43.700"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:43.702" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:43.703" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:43.702" endtime="20231130 17:57:43.704"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:43.706" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:43.705" endtime="20231130 17:57:43.706"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:43.707" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:43.707" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:43.706" endtime="20231130 17:57:43.707"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.708" endtime="20231130 17:57:43.708"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.708" endtime="20231130 17:57:43.708"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.707" endtime="20231130 17:57:43.709"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:43.713" level="INFO">${random} = Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:43.710" endtime="20231130 17:57:43.713"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231130 17:57:43.714" level="INFO">${words} = ['PO_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231130 17:57:43.714" endtime="20231130 17:57:43.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:43.717" level="INFO">${new_text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:43.715" endtime="20231130 17:57:43.717"/>
</kw>
<status status="PASS" starttime="20231130 17:57:43.709" endtime="20231130 17:57:43.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.718" endtime="20231130 17:57:43.718"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.719" endtime="20231130 17:57:43.719"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.718" endtime="20231130 17:57:43.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.720" endtime="20231130 17:57:43.720"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.720" endtime="20231130 17:57:43.721"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.719" endtime="20231130 17:57:43.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.722" endtime="20231130 17:57:43.723"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.721" endtime="20231130 17:57:43.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:43.724" endtime="20231130 17:57:43.724"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.723" endtime="20231130 17:57:43.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.725" endtime="20231130 17:57:43.725"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.726" endtime="20231130 17:57:43.726"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.727" endtime="20231130 17:57:43.727"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.724" endtime="20231130 17:57:43.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.729" endtime="20231130 17:57:43.730"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.727" endtime="20231130 17:57:43.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.731" endtime="20231130 17:57:43.731"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.730" endtime="20231130 17:57:43.731"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.732" endtime="20231130 17:57:43.732"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.732" endtime="20231130 17:57:43.732"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.733" endtime="20231130 17:57:43.733"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.733" endtime="20231130 17:57:43.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.734" endtime="20231130 17:57:43.734"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.734" endtime="20231130 17:57:43.735"/>
</branch>
<status status="PASS" starttime="20231130 17:57:43.707" endtime="20231130 17:57:43.735"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:43.736" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:43.736" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:43.735" endtime="20231130 17:57:43.736"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:43.737" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:43.737" endtime="20231130 17:57:43.738"/>
</kw>
<status status="PASS" starttime="20231130 17:57:43.736" endtime="20231130 17:57:43.738"/>
</branch>
<status status="PASS" starttime="20231130 17:57:43.736" endtime="20231130 17:57:43.738"/>
</if>
<msg timestamp="20231130 17:57:43.738" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:43.692" endtime="20231130 17:57:43.738"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:43.739" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:43.739" endtime="20231130 17:57:43.740"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:43.740" endtime="20231130 17:57:43.838"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:43.838" endtime="20231130 17:57:43.876"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:43.879" level="INFO">Fills the text 'PO_11 Numquam eaque maiores.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:43.877" endtime="20231130 17:57:43.938"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:43.977" level="INFO">Text: 'PO_11 Numquam eaque maiores.'</msg>
<msg timestamp="20231130 17:57:43.978" level="INFO">${condition} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:43.939" endtime="20231130 17:57:43.979"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.982" endtime="20231130 17:57:43.983"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:43.984" endtime="20231130 17:57:43.984"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:43.980" endtime="20231130 17:57:43.985"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:43.980" endtime="20231130 17:57:43.985"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:43.986" endtime="20231130 17:57:44.057"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.058" level="INFO">Length is 28</msg>
<msg timestamp="20231130 17:57:44.059" level="INFO">${cnt} = 28</msg>
<status status="PASS" starttime="20231130 17:57:44.058" endtime="20231130 17:57:44.059"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:44.064" level="INFO">${STATE["Tiêu đề"]} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:44.062" endtime="20231130 17:57:44.064"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.060" endtime="20231130 17:57:44.065"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.060" endtime="20231130 17:57:44.065"/>
</if>
<status status="PASS" starttime="20231130 17:57:43.540" endtime="20231130 17:57:44.066"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:44.070" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231130 17:57:44.069" endtime="20231130 17:57:44.070"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.072" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:44.073" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231130 17:57:44.071" endtime="20231130 17:57:44.073"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.077" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:44.075" endtime="20231130 17:57:44.078"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.074" endtime="20231130 17:57:44.079"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.074" endtime="20231130 17:57:44.080"/>
</if>
<msg timestamp="20231130 17:57:44.081" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:44.067" endtime="20231130 17:57:44.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.083" level="INFO">${name} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:44.082" endtime="20231130 17:57:44.084"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:44.188" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:44.087" endtime="20231130 17:57:44.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.191" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:44.190" endtime="20231130 17:57:44.191"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:44.223" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:44.192" endtime="20231130 17:57:44.224"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:44.225" endtime="20231130 17:57:44.226"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.224" endtime="20231130 17:57:44.226"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.224" endtime="20231130 17:57:44.227"/>
</if>
<status status="PASS" starttime="20231130 17:57:44.086" endtime="20231130 17:57:44.227"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.231" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:44.230" endtime="20231130 17:57:44.231"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.233" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:44.232" endtime="20231130 17:57:44.233"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:44.235" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:44.234" endtime="20231130 17:57:44.235"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.236" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:44.237" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:44.236" endtime="20231130 17:57:44.237"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:44.239" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:44.238" endtime="20231130 17:57:44.239"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.240" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:44.241" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:44.240" endtime="20231130 17:57:44.241"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.243" endtime="20231130 17:57:44.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.245" endtime="20231130 17:57:44.245"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.242" endtime="20231130 17:57:44.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.248" endtime="20231130 17:57:44.248"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.249" endtime="20231130 17:57:44.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.250" endtime="20231130 17:57:44.251"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.247" endtime="20231130 17:57:44.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.253" endtime="20231130 17:57:44.253"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.254" endtime="20231130 17:57:44.254"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.252" endtime="20231130 17:57:44.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.257" endtime="20231130 17:57:44.257"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.258" endtime="20231130 17:57:44.258"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.255" endtime="20231130 17:57:44.259"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.260" endtime="20231130 17:57:44.261"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.259" endtime="20231130 17:57:44.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:44.264" endtime="20231130 17:57:44.265"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.263" endtime="20231130 17:57:44.265"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.267" endtime="20231130 17:57:44.268"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.268" endtime="20231130 17:57:44.269"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.270" endtime="20231130 17:57:44.270"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.266" endtime="20231130 17:57:44.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.272" endtime="20231130 17:57:44.273"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.271" endtime="20231130 17:57:44.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.274" endtime="20231130 17:57:44.274"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.274" endtime="20231130 17:57:44.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.275" endtime="20231130 17:57:44.276"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.275" endtime="20231130 17:57:44.276"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.278" endtime="20231130 17:57:44.279"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.276" endtime="20231130 17:57:44.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:44.282" level="INFO">${new_text} = Assumenda nam eius aliquid illo aperiam.</msg>
<status status="PASS" starttime="20231130 17:57:44.281" endtime="20231130 17:57:44.282"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.280" endtime="20231130 17:57:44.282"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.241" endtime="20231130 17:57:44.283"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.284" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:44.284" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:44.283" endtime="20231130 17:57:44.284"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:44.286" level="INFO">${text} = Assumenda nam eius aliquid illo aperiam.</msg>
<status status="PASS" starttime="20231130 17:57:44.285" endtime="20231130 17:57:44.286"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.285" endtime="20231130 17:57:44.287"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.284" endtime="20231130 17:57:44.287"/>
</if>
<msg timestamp="20231130 17:57:44.288" level="INFO">${text} = Assumenda nam eius aliquid illo aperiam.</msg>
<status status="PASS" starttime="20231130 17:57:44.228" endtime="20231130 17:57:44.288"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:44.307" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:44.289" endtime="20231130 17:57:44.307"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:44.308" endtime="20231130 17:57:44.408"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:44.408" endtime="20231130 17:57:44.455"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:44.457" level="INFO">Fills the text 'Assumenda nam eius aliquid illo aperiam.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:44.456" endtime="20231130 17:57:44.522"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:44.564" level="INFO">Text: 'Assumenda nam eius aliquid illo aperiam.'</msg>
<msg timestamp="20231130 17:57:44.565" level="INFO">${condition} = Assumenda nam eius aliquid illo aperiam.</msg>
<status status="PASS" starttime="20231130 17:57:44.523" endtime="20231130 17:57:44.565"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.568" endtime="20231130 17:57:44.569"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.570" endtime="20231130 17:57:44.570"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.566" endtime="20231130 17:57:44.571"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:44.566" endtime="20231130 17:57:44.571"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:44.572" endtime="20231130 17:57:44.639"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.641" level="INFO">Length is 40</msg>
<msg timestamp="20231130 17:57:44.642" level="INFO">${cnt} = 40</msg>
<status status="PASS" starttime="20231130 17:57:44.640" endtime="20231130 17:57:44.642"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:44.646" level="INFO">${STATE["Tác giả"]} = Assumenda nam eius aliquid illo aperiam.</msg>
<status status="PASS" starttime="20231130 17:57:44.644" endtime="20231130 17:57:44.647"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.643" endtime="20231130 17:57:44.647"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.642" endtime="20231130 17:57:44.648"/>
</if>
<status status="PASS" starttime="20231130 17:57:44.085" endtime="20231130 17:57:44.648"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:44.752" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:44.651" endtime="20231130 17:57:44.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.754" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:44.753" endtime="20231130 17:57:44.754"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:44.766" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:44.755" endtime="20231130 17:57:44.766"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:44.768" endtime="20231130 17:57:44.769"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.767" endtime="20231130 17:57:44.769"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.767" endtime="20231130 17:57:44.770"/>
</if>
<status status="PASS" starttime="20231130 17:57:44.650" endtime="20231130 17:57:44.770"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.773" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:44.772" endtime="20231130 17:57:44.774"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:44.776" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:44.775" endtime="20231130 17:57:44.776"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:44.780" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:44.777" endtime="20231130 17:57:44.781"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.783" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:44.783" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:44.781" endtime="20231130 17:57:44.784"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:44.786" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:44.785" endtime="20231130 17:57:44.786"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.788" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:44.788" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:44.787" endtime="20231130 17:57:44.789"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.790" endtime="20231130 17:57:44.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.792" endtime="20231130 17:57:44.792"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.789" endtime="20231130 17:57:44.793"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.796" endtime="20231130 17:57:44.796"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.797" endtime="20231130 17:57:44.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.799" endtime="20231130 17:57:44.799"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.793" endtime="20231130 17:57:44.800"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.801" endtime="20231130 17:57:44.801"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.802" endtime="20231130 17:57:44.803"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.800" endtime="20231130 17:57:44.803"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.804" endtime="20231130 17:57:44.805"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.805" endtime="20231130 17:57:44.806"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.804" endtime="20231130 17:57:44.806"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:44.809" level="INFO">${new_text} = Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.</msg>
<status status="PASS" starttime="20231130 17:57:44.808" endtime="20231130 17:57:44.810"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.806" endtime="20231130 17:57:44.811"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:44.823" endtime="20231130 17:57:44.823"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.813" endtime="20231130 17:57:44.824"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.825" endtime="20231130 17:57:44.825"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.826" endtime="20231130 17:57:44.829"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.830" endtime="20231130 17:57:44.830"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.824" endtime="20231130 17:57:44.831"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.832" endtime="20231130 17:57:44.833"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.832" endtime="20231130 17:57:44.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.835" endtime="20231130 17:57:44.835"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.834" endtime="20231130 17:57:44.836"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.837" endtime="20231130 17:57:44.837"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.836" endtime="20231130 17:57:44.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.839" endtime="20231130 17:57:44.840"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.838" endtime="20231130 17:57:44.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:44.841" endtime="20231130 17:57:44.842"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:44.841" endtime="20231130 17:57:44.843"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.789" endtime="20231130 17:57:44.843"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:44.846" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:44.847" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:44.844" endtime="20231130 17:57:44.847"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:44.851" level="INFO">${text} = Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.</msg>
<status status="PASS" starttime="20231130 17:57:44.849" endtime="20231130 17:57:44.851"/>
</kw>
<status status="PASS" starttime="20231130 17:57:44.848" endtime="20231130 17:57:44.851"/>
</branch>
<status status="PASS" starttime="20231130 17:57:44.848" endtime="20231130 17:57:44.852"/>
</if>
<msg timestamp="20231130 17:57:44.852" level="INFO">${text} = Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.</msg>
<status status="PASS" starttime="20231130 17:57:44.771" endtime="20231130 17:57:44.853"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:44.854" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:44.853" endtime="20231130 17:57:44.855"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:44.855" endtime="20231130 17:57:45.032"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:45.033" endtime="20231130 17:57:45.075"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:45.077" level="INFO">Fills the text 'Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:45.076" endtime="20231130 17:57:45.145"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:45.188" level="INFO">Text: 'Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.'</msg>
<msg timestamp="20231130 17:57:45.189" level="INFO">${condition} = Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.</msg>
<status status="PASS" starttime="20231130 17:57:45.147" endtime="20231130 17:57:45.189"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.192" endtime="20231130 17:57:45.193"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.194" endtime="20231130 17:57:45.196"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.190" endtime="20231130 17:57:45.196"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:45.190" endtime="20231130 17:57:45.197"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:45.199" endtime="20231130 17:57:45.256"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.258" level="INFO">Length is 90</msg>
<msg timestamp="20231130 17:57:45.258" level="INFO">${cnt} = 90</msg>
<status status="PASS" starttime="20231130 17:57:45.257" endtime="20231130 17:57:45.259"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:45.264" level="INFO">${STATE["Mô tả ảnh cover"]} = Perspiciatis at veniam cumque perferendis. Assumenda suscipit assumenda iusto consectetur.</msg>
<status status="PASS" starttime="20231130 17:57:45.262" endtime="20231130 17:57:45.264"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.260" endtime="20231130 17:57:45.265"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.259" endtime="20231130 17:57:45.266"/>
</if>
<status status="PASS" starttime="20231130 17:57:44.649" endtime="20231130 17:57:45.266"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:45.371" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:45.269" endtime="20231130 17:57:45.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:45.373" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:45.372" endtime="20231130 17:57:45.373"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:45.384" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:45.374" endtime="20231130 17:57:45.384"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:45.386" endtime="20231130 17:57:45.386"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.385" endtime="20231130 17:57:45.387"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.385" endtime="20231130 17:57:45.387"/>
</if>
<status status="PASS" starttime="20231130 17:57:45.268" endtime="20231130 17:57:45.388"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:45.390" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:45.390" endtime="20231130 17:57:45.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:45.391" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:45.391" endtime="20231130 17:57:45.392"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:45.393" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:45.392" endtime="20231130 17:57:45.394"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.396" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:45.397" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:45.394" endtime="20231130 17:57:45.398"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:45.399" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:45.398" endtime="20231130 17:57:45.400"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.401" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:45.402" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:45.401" endtime="20231130 17:57:45.402"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.404" endtime="20231130 17:57:45.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.405" endtime="20231130 17:57:45.405"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.403" endtime="20231130 17:57:45.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.406" endtime="20231130 17:57:45.407"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.407" endtime="20231130 17:57:45.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.408" endtime="20231130 17:57:45.408"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.406" endtime="20231130 17:57:45.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.409" endtime="20231130 17:57:45.409"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.409" endtime="20231130 17:57:45.409"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.408" endtime="20231130 17:57:45.410"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.410" endtime="20231130 17:57:45.411"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.411" endtime="20231130 17:57:45.411"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.410" endtime="20231130 17:57:45.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:45.418" level="INFO">${new_text} = Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.</msg>
<status status="PASS" starttime="20231130 17:57:45.417" endtime="20231130 17:57:45.418"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.415" endtime="20231130 17:57:45.419"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:45.420" endtime="20231130 17:57:45.421"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.419" endtime="20231130 17:57:45.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.423" endtime="20231130 17:57:45.423"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.424" endtime="20231130 17:57:45.425"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.426" endtime="20231130 17:57:45.426"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.422" endtime="20231130 17:57:45.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.429" endtime="20231130 17:57:45.430"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.427" endtime="20231130 17:57:45.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.432" endtime="20231130 17:57:45.434"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.431" endtime="20231130 17:57:45.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.435" endtime="20231130 17:57:45.435"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.435" endtime="20231130 17:57:45.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.436" endtime="20231130 17:57:45.437"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.436" endtime="20231130 17:57:45.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.439" endtime="20231130 17:57:45.439"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.438" endtime="20231130 17:57:45.440"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.403" endtime="20231130 17:57:45.440"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.441" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:45.441" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:45.441" endtime="20231130 17:57:45.442"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:45.443" level="INFO">${text} = Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.</msg>
<status status="PASS" starttime="20231130 17:57:45.443" endtime="20231130 17:57:45.444"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.442" endtime="20231130 17:57:45.445"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.442" endtime="20231130 17:57:45.446"/>
</if>
<msg timestamp="20231130 17:57:45.447" level="INFO">${text} = Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.</msg>
<status status="PASS" starttime="20231130 17:57:45.388" endtime="20231130 17:57:45.447"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:45.448" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:45.448" endtime="20231130 17:57:45.449"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:45.449" endtime="20231130 17:57:45.500"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:45.502" level="INFO">Fills the text 'Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:45.501" endtime="20231130 17:57:45.559"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:45.597" level="INFO">Text: 'Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.'</msg>
<msg timestamp="20231130 17:57:45.598" level="INFO">${condition} = Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.</msg>
<status status="PASS" starttime="20231130 17:57:45.560" endtime="20231130 17:57:45.599"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.602" endtime="20231130 17:57:45.602"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.603" endtime="20231130 17:57:45.604"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.599" endtime="20231130 17:57:45.604"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:45.599" endtime="20231130 17:57:45.605"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:45.606" endtime="20231130 17:57:45.674"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.675" level="INFO">Length is 117</msg>
<msg timestamp="20231130 17:57:45.676" level="INFO">${cnt} = 117</msg>
<status status="PASS" starttime="20231130 17:57:45.675" endtime="20231130 17:57:45.676"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:45.681" level="INFO">${STATE["Giới thiệu"]} = Nam asperiores provident modi similique sapiente illum. Amet possimus reprehenderit exercitationem ducimus quia enim.</msg>
<status status="PASS" starttime="20231130 17:57:45.678" endtime="20231130 17:57:45.681"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.677" endtime="20231130 17:57:45.682"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.677" endtime="20231130 17:57:45.683"/>
</if>
<status status="PASS" starttime="20231130 17:57:45.267" endtime="20231130 17:57:45.683"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:45.787" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:45.686" endtime="20231130 17:57:45.787"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:45.789" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:45.788" endtime="20231130 17:57:45.790"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:45.802" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:45.791" endtime="20231130 17:57:45.803"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:45.805" endtime="20231130 17:57:45.805"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.804" endtime="20231130 17:57:45.805"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.803" endtime="20231130 17:57:45.806"/>
</if>
<status status="PASS" starttime="20231130 17:57:45.685" endtime="20231130 17:57:45.806"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:45.809" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:45.808" endtime="20231130 17:57:45.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:45.812" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:45.810" endtime="20231130 17:57:45.813"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:45.815" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:45.814" endtime="20231130 17:57:45.816"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.818" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:45.818" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:45.817" endtime="20231130 17:57:45.819"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:45.821" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:45.819" endtime="20231130 17:57:45.821"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.823" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:45.824" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:45.822" endtime="20231130 17:57:45.824"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.826" endtime="20231130 17:57:45.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.830" endtime="20231130 17:57:45.831"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.825" endtime="20231130 17:57:45.831"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.833" endtime="20231130 17:57:45.834"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.835" endtime="20231130 17:57:45.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.836" endtime="20231130 17:57:45.837"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.832" endtime="20231130 17:57:45.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.839" endtime="20231130 17:57:45.839"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.841" endtime="20231130 17:57:45.841"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.838" endtime="20231130 17:57:45.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.843" endtime="20231130 17:57:45.844"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.846" endtime="20231130 17:57:45.846"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.842" endtime="20231130 17:57:45.847"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:45.853" level="INFO">${new_text} = Adipisci culpa consectetur officia iste consectetur atque. Ipsum laudantium quo reprehenderit tempora fugit.</msg>
<status status="PASS" starttime="20231130 17:57:45.848" endtime="20231130 17:57:45.853"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.847" endtime="20231130 17:57:45.854"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:45.856" endtime="20231130 17:57:45.856"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.855" endtime="20231130 17:57:45.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.858" endtime="20231130 17:57:45.859"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.860" endtime="20231130 17:57:45.861"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.863" endtime="20231130 17:57:45.864"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.857" endtime="20231130 17:57:45.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.866" endtime="20231130 17:57:45.866"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.865" endtime="20231130 17:57:45.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.868" endtime="20231130 17:57:45.869"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.867" endtime="20231130 17:57:45.869"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.871" endtime="20231130 17:57:45.872"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.870" endtime="20231130 17:57:45.872"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.874" endtime="20231130 17:57:45.874"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.873" endtime="20231130 17:57:45.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:45.876" endtime="20231130 17:57:45.876"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:45.875" endtime="20231130 17:57:45.877"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.825" endtime="20231130 17:57:45.877"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:45.880" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:45.880" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:45.878" endtime="20231130 17:57:45.881"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:45.884" level="INFO">${text} = Adipisci culpa consectetur officia iste consectetur atque. Ipsum laudantium quo reprehenderit tempora fugit.</msg>
<status status="PASS" starttime="20231130 17:57:45.882" endtime="20231130 17:57:45.884"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.881" endtime="20231130 17:57:45.884"/>
</branch>
<status status="PASS" starttime="20231130 17:57:45.881" endtime="20231130 17:57:45.885"/>
</if>
<msg timestamp="20231130 17:57:45.885" level="INFO">${text} = Adipisci culpa consectetur officia iste consectetur atque. Ipsum laudantium quo reprehenderit tempora fugit.</msg>
<status status="PASS" starttime="20231130 17:57:45.807" endtime="20231130 17:57:45.886"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231130 17:57:45.901" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231130 17:57:45.900" endtime="20231130 17:57:45.901"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:45.925" endtime="20231130 17:57:45.977"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:45.981" level="INFO">Fills the text 'Adipisci culpa consectetur officia iste consectetur atque. Ipsum laudantium quo reprehenderit tempora fugit.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:45.979" endtime="20231130 17:57:46.035"/>
</kw>
<status status="PASS" starttime="20231130 17:57:45.684" endtime="20231130 17:57:46.036"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:46.141" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:46.040" endtime="20231130 17:57:46.141"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:46.142" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:46.141" endtime="20231130 17:57:46.142"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:46.154" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:46.143" endtime="20231130 17:57:46.155"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:46.156" endtime="20231130 17:57:46.157"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.155" endtime="20231130 17:57:46.158"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.155" endtime="20231130 17:57:46.158"/>
</if>
<status status="PASS" starttime="20231130 17:57:46.039" endtime="20231130 17:57:46.159"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:46.162" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:46.161" endtime="20231130 17:57:46.163"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:46.166" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:46.164" endtime="20231130 17:57:46.167"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:46.168" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:46.167" endtime="20231130 17:57:46.168"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.169" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:46.170" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:46.169" endtime="20231130 17:57:46.170"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:46.171" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:46.170" endtime="20231130 17:57:46.171"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.172" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:46.172" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:46.171" endtime="20231130 17:57:46.173"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.174" endtime="20231130 17:57:46.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.175" endtime="20231130 17:57:46.175"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.173" endtime="20231130 17:57:46.175"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.176" endtime="20231130 17:57:46.176"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.177" endtime="20231130 17:57:46.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.177" endtime="20231130 17:57:46.177"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.175" endtime="20231130 17:57:46.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.182" endtime="20231130 17:57:46.183"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.183" endtime="20231130 17:57:46.184"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.181" endtime="20231130 17:57:46.184"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.185" endtime="20231130 17:57:46.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.186" endtime="20231130 17:57:46.186"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.184" endtime="20231130 17:57:46.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.187" endtime="20231130 17:57:46.187"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.187" endtime="20231130 17:57:46.188"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:46.190" endtime="20231130 17:57:46.191"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.189" endtime="20231130 17:57:46.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.192" endtime="20231130 17:57:46.192"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.193" endtime="20231130 17:57:46.193"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.193" endtime="20231130 17:57:46.194"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.191" endtime="20231130 17:57:46.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.199" endtime="20231130 17:57:46.199"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.198" endtime="20231130 17:57:46.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.202" endtime="20231130 17:57:46.202"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.201" endtime="20231130 17:57:46.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.205" endtime="20231130 17:57:46.206"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.203" endtime="20231130 17:57:46.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.208" endtime="20231130 17:57:46.209"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.207" endtime="20231130 17:57:46.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:46.217" level="INFO">${new_text} = Neque quaerat culpa reiciendis rem architecto soluta.</msg>
<status status="PASS" starttime="20231130 17:57:46.216" endtime="20231130 17:57:46.218"/>
</kw>
<status status="PASS" starttime="20231130 17:57:46.210" endtime="20231130 17:57:46.218"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.173" endtime="20231130 17:57:46.219"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.220" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:46.221" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:46.219" endtime="20231130 17:57:46.221"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:46.223" level="INFO">${text} = Neque quaerat culpa reiciendis rem architecto soluta.</msg>
<status status="PASS" starttime="20231130 17:57:46.222" endtime="20231130 17:57:46.223"/>
</kw>
<status status="PASS" starttime="20231130 17:57:46.222" endtime="20231130 17:57:46.223"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.221" endtime="20231130 17:57:46.223"/>
</if>
<msg timestamp="20231130 17:57:46.224" level="INFO">${text} = Neque quaerat culpa reiciendis rem architecto soluta.</msg>
<status status="PASS" starttime="20231130 17:57:46.159" endtime="20231130 17:57:46.224"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:46.225" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:46.224" endtime="20231130 17:57:46.225"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:46.225" endtime="20231130 17:57:46.333"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:46.334" endtime="20231130 17:57:46.377"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:46.382" level="INFO">Fills the text 'Neque quaerat culpa reiciendis rem architecto soluta.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:46.381" endtime="20231130 17:57:46.441"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:46.489" level="INFO">Text: 'Neque quaerat culpa reiciendis rem architecto soluta.'</msg>
<msg timestamp="20231130 17:57:46.490" level="INFO">${condition} = Neque quaerat culpa reiciendis rem architecto soluta.</msg>
<status status="PASS" starttime="20231130 17:57:46.442" endtime="20231130 17:57:46.491"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.493" endtime="20231130 17:57:46.494"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.496" endtime="20231130 17:57:46.497"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.491" endtime="20231130 17:57:46.497"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:46.491" endtime="20231130 17:57:46.498"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:46.499" endtime="20231130 17:57:46.557"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.559" level="INFO">Length is 53</msg>
<msg timestamp="20231130 17:57:46.559" level="INFO">${cnt} = 53</msg>
<status status="PASS" starttime="20231130 17:57:46.558" endtime="20231130 17:57:46.560"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:46.565" level="INFO">${STATE["Tiêu đề SEO"]} = Neque quaerat culpa reiciendis rem architecto soluta.</msg>
<status status="PASS" starttime="20231130 17:57:46.562" endtime="20231130 17:57:46.565"/>
</kw>
<status status="PASS" starttime="20231130 17:57:46.560" endtime="20231130 17:57:46.566"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.560" endtime="20231130 17:57:46.567"/>
</if>
<status status="PASS" starttime="20231130 17:57:46.038" endtime="20231130 17:57:46.568"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:46.672" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:46.571" endtime="20231130 17:57:46.672"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:46.674" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:46.673" endtime="20231130 17:57:46.674"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:46.685" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:46.674" endtime="20231130 17:57:46.685"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:46.687" endtime="20231130 17:57:46.688"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.686" endtime="20231130 17:57:46.688"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.686" endtime="20231130 17:57:46.689"/>
</if>
<status status="PASS" starttime="20231130 17:57:46.570" endtime="20231130 17:57:46.689"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:46.693" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:46.692" endtime="20231130 17:57:46.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:46.696" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:46.694" endtime="20231130 17:57:46.696"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:46.698" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:46.697" endtime="20231130 17:57:46.699"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.701" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:46.701" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:46.700" endtime="20231130 17:57:46.702"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:46.704" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:46.702" endtime="20231130 17:57:46.704"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.709" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:46.710" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:46.705" endtime="20231130 17:57:46.710"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.714" endtime="20231130 17:57:46.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.716" endtime="20231130 17:57:46.717"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.713" endtime="20231130 17:57:46.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.719" endtime="20231130 17:57:46.719"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.720" endtime="20231130 17:57:46.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.720" endtime="20231130 17:57:46.721"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.718" endtime="20231130 17:57:46.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.723" endtime="20231130 17:57:46.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.724" endtime="20231130 17:57:46.725"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.722" endtime="20231130 17:57:46.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.726" endtime="20231130 17:57:46.727"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.728" endtime="20231130 17:57:46.729"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.725" endtime="20231130 17:57:46.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.731" endtime="20231130 17:57:46.732"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.730" endtime="20231130 17:57:46.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:46.734" endtime="20231130 17:57:46.735"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.733" endtime="20231130 17:57:46.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.737" endtime="20231130 17:57:46.738"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.739" endtime="20231130 17:57:46.739"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.740" endtime="20231130 17:57:46.741"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.736" endtime="20231130 17:57:46.741"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.743" endtime="20231130 17:57:46.744"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.742" endtime="20231130 17:57:46.746"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.747" endtime="20231130 17:57:46.748"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.747" endtime="20231130 17:57:46.749"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.750" endtime="20231130 17:57:46.750"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.749" endtime="20231130 17:57:46.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:46.751" endtime="20231130 17:57:46.752"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:46.751" endtime="20231130 17:57:46.752"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231130 17:57:46.755" level="INFO">${new_text} = Esse nam sint veniam cum id consequatur.</msg>
<status status="PASS" starttime="20231130 17:57:46.754" endtime="20231130 17:57:46.755"/>
</kw>
<status status="PASS" starttime="20231130 17:57:46.753" endtime="20231130 17:57:46.756"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.711" endtime="20231130 17:57:46.756"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:46.758" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:46.759" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:46.757" endtime="20231130 17:57:46.759"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:46.763" level="INFO">${text} = Esse nam sint veniam cum id consequatur.</msg>
<status status="PASS" starttime="20231130 17:57:46.761" endtime="20231130 17:57:46.764"/>
</kw>
<status status="PASS" starttime="20231130 17:57:46.760" endtime="20231130 17:57:46.764"/>
</branch>
<status status="PASS" starttime="20231130 17:57:46.759" endtime="20231130 17:57:46.765"/>
</if>
<msg timestamp="20231130 17:57:46.765" level="INFO">${text} = Esse nam sint veniam cum id consequatur.</msg>
<status status="PASS" starttime="20231130 17:57:46.690" endtime="20231130 17:57:46.766"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:46.768" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:46.767" endtime="20231130 17:57:46.769"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:46.769" endtime="20231130 17:57:46.872"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:46.873" endtime="20231130 17:57:46.911"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:46.915" level="INFO">Fills the text 'Esse nam sint veniam cum id consequatur.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:46.913" endtime="20231130 17:57:46.971"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:47.010" level="INFO">Text: 'Esse nam sint veniam cum id consequatur.'</msg>
<msg timestamp="20231130 17:57:47.012" level="INFO">${condition} = Esse nam sint veniam cum id consequatur.</msg>
<status status="PASS" starttime="20231130 17:57:46.972" endtime="20231130 17:57:47.013"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.016" endtime="20231130 17:57:47.017"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.018" endtime="20231130 17:57:47.018"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.014" endtime="20231130 17:57:47.019"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:47.014" endtime="20231130 17:57:47.019"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:47.020" endtime="20231130 17:57:47.089"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:47.091" level="INFO">Length is 40</msg>
<msg timestamp="20231130 17:57:47.091" level="INFO">${cnt} = 40</msg>
<status status="PASS" starttime="20231130 17:57:47.090" endtime="20231130 17:57:47.092"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:47.096" level="INFO">${STATE["Từ khóa SEO"]} = Esse nam sint veniam cum id consequatur.</msg>
<status status="PASS" starttime="20231130 17:57:47.094" endtime="20231130 17:57:47.097"/>
</kw>
<status status="PASS" starttime="20231130 17:57:47.093" endtime="20231130 17:57:47.098"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.092" endtime="20231130 17:57:47.099"/>
</if>
<status status="PASS" starttime="20231130 17:57:46.569" endtime="20231130 17:57:47.099"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:47.205" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:47.103" endtime="20231130 17:57:47.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:47.207" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:47.206" endtime="20231130 17:57:47.207"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:47.218" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:47.208" endtime="20231130 17:57:47.219"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:47.221" endtime="20231130 17:57:47.221"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.220" endtime="20231130 17:57:47.222"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.219" endtime="20231130 17:57:47.222"/>
</if>
<status status="PASS" starttime="20231130 17:57:47.102" endtime="20231130 17:57:47.223"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:47.226" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:47.225" endtime="20231130 17:57:47.227"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:47.229" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:47.228" endtime="20231130 17:57:47.229"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:47.234" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:47.232" endtime="20231130 17:57:47.234"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:47.236" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:47.237" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:47.235" endtime="20231130 17:57:47.237"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:47.239" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231130 17:57:47.238" endtime="20231130 17:57:47.239"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:47.240" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:47.241" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:47.240" endtime="20231130 17:57:47.241"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.242" endtime="20231130 17:57:47.243"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.244" endtime="20231130 17:57:47.244"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.242" endtime="20231130 17:57:47.245"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.247" endtime="20231130 17:57:47.248"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.249" endtime="20231130 17:57:47.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.250" endtime="20231130 17:57:47.251"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.246" endtime="20231130 17:57:47.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.253" endtime="20231130 17:57:47.254"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.254" endtime="20231130 17:57:47.255"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.252" endtime="20231130 17:57:47.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.257" endtime="20231130 17:57:47.258"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.258" endtime="20231130 17:57:47.259"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.256" endtime="20231130 17:57:47.260"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231130 17:57:47.265" level="INFO">${new_text} = Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.</msg>
<status status="PASS" starttime="20231130 17:57:47.263" endtime="20231130 17:57:47.265"/>
</kw>
<status status="PASS" starttime="20231130 17:57:47.260" endtime="20231130 17:57:47.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:47.267" endtime="20231130 17:57:47.267"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.266" endtime="20231130 17:57:47.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.272" endtime="20231130 17:57:47.273"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.275" endtime="20231130 17:57:47.276"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.277" endtime="20231130 17:57:47.277"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.271" endtime="20231130 17:57:47.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.282" endtime="20231130 17:57:47.282"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.281" endtime="20231130 17:57:47.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.285" endtime="20231130 17:57:47.285"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.284" endtime="20231130 17:57:47.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.287" endtime="20231130 17:57:47.288"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.287" endtime="20231130 17:57:47.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.290" endtime="20231130 17:57:47.290"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.289" endtime="20231130 17:57:47.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.292" endtime="20231130 17:57:47.292"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.291" endtime="20231130 17:57:47.293"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.241" endtime="20231130 17:57:47.293"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:47.296" level="INFO">Length is 8</msg>
<msg timestamp="20231130 17:57:47.297" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231130 17:57:47.294" endtime="20231130 17:57:47.297"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:47.300" level="INFO">${text} = Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.</msg>
<status status="PASS" starttime="20231130 17:57:47.299" endtime="20231130 17:57:47.301"/>
</kw>
<status status="PASS" starttime="20231130 17:57:47.298" endtime="20231130 17:57:47.301"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.298" endtime="20231130 17:57:47.302"/>
</if>
<msg timestamp="20231130 17:57:47.302" level="INFO">${text} = Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.</msg>
<status status="PASS" starttime="20231130 17:57:47.223" endtime="20231130 17:57:47.303"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231130 17:57:47.310" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231130 17:57:47.303" endtime="20231130 17:57:47.311"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:47.313" endtime="20231130 17:57:47.365"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:47.367" level="INFO">Fills the text 'Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:47.366" endtime="20231130 17:57:47.425"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:47.473" level="INFO">Text: 'Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.'</msg>
<msg timestamp="20231130 17:57:47.474" level="INFO">${condition} = Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.</msg>
<status status="PASS" starttime="20231130 17:57:47.426" endtime="20231130 17:57:47.474"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.477" endtime="20231130 17:57:47.479"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.480" endtime="20231130 17:57:47.481"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.475" endtime="20231130 17:57:47.482"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:47.475" endtime="20231130 17:57:47.483"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:47.484" endtime="20231130 17:57:47.558"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:47.559" level="INFO">Length is 80</msg>
<msg timestamp="20231130 17:57:47.560" level="INFO">${cnt} = 80</msg>
<status status="PASS" starttime="20231130 17:57:47.559" endtime="20231130 17:57:47.561"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:47.566" level="INFO">${STATE["Mô tả SEO"]} = Quaerat autem eveniet voluptatibus corrupti. Beatae pariatur suscipit explicabo.</msg>
<status status="PASS" starttime="20231130 17:57:47.565" endtime="20231130 17:57:47.566"/>
</kw>
<status status="PASS" starttime="20231130 17:57:47.563" endtime="20231130 17:57:47.567"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.562" endtime="20231130 17:57:47.567"/>
</if>
<status status="PASS" starttime="20231130 17:57:47.100" endtime="20231130 17:57:47.568"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:47.671" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:47.569" endtime="20231130 17:57:47.671"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:47.682" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231130 17:57:47.672" endtime="20231130 17:57:47.683"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:47.685" endtime="20231130 17:57:47.857"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:47.861" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:47.860" endtime="20231130 17:57:47.866"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:47.886" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:47.868" endtime="20231130 17:57:47.886"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.890" endtime="20231130 17:57:47.891"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231130 17:57:47.892" endtime="20231130 17:57:47.892"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231130 17:57:47.893" endtime="20231130 17:57:47.894"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:47.889" endtime="20231130 17:57:47.894"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.888" endtime="20231130 17:57:47.898"/>
</if>
<status status="PASS" starttime="20231130 17:57:47.858" endtime="20231130 17:57:47.899"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231130 17:57:48.193" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:48.193" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:48.332" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:48.333" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231130 17:57:48.360" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231130 17:57:47.902" endtime="20231130 17:57:48.361"/>
</kw>
<status status="PASS" starttime="20231130 17:57:47.684" endtime="20231130 17:57:48.366"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:48.367" endtime="20231130 17:57:48.370"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231130 17:57:48.371" endtime="20231130 17:57:48.371"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231130 17:57:48.372" endtime="20231130 17:57:48.373"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:48.366" endtime="20231130 17:57:48.374"/>
</branch>
<status status="PASS" starttime="20231130 17:57:47.683" endtime="20231130 17:57:48.377"/>
</if>
<status status="PASS" starttime="20231130 17:57:47.568" endtime="20231130 17:57:48.377"/>
</kw>
<kw name="User look message &quot;Thêm mới bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:48.385" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:48.383" endtime="20231130 17:57:48.385"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:48.387" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:48.387" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:48.386" endtime="20231130 17:57:48.388"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:48.391" endtime="20231130 17:57:48.392"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:48.389" endtime="20231130 17:57:48.392"/>
</branch>
<status status="PASS" starttime="20231130 17:57:48.389" endtime="20231130 17:57:48.393"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:48.499" level="INFO">Text: 'Thêm mới bài viết thành công'</msg>
<status status="PASS" starttime="20231130 17:57:48.404" endtime="20231130 17:57:48.500"/>
</kw>
<status status="PASS" starttime="20231130 17:57:48.394" endtime="20231130 17:57:48.501"/>
</kw>
<status status="PASS" starttime="20231130 17:57:48.393" endtime="20231130 17:57:48.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:48.504" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231130 17:57:48.503" endtime="20231130 17:57:48.504"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:49.023" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231130 17:57:49.024" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231130 17:57:49.024" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231130 17:57:48.513" endtime="20231130 17:57:49.029"/>
</kw>
<status status="FAIL" starttime="20231130 17:57:48.509" endtime="20231130 17:57:49.030"/>
</kw>
<msg timestamp="20231130 17:57:49.031" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231130 17:57:48.507" endtime="20231130 17:57:49.031"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:49.034" endtime="20231130 17:57:49.035"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:49.033" endtime="20231130 17:57:49.036"/>
</branch>
<status status="PASS" starttime="20231130 17:57:49.032" endtime="20231130 17:57:49.036"/>
</if>
<status status="PASS" starttime="20231130 17:57:48.380" endtime="20231130 17:57:49.037"/>
</kw>
<status status="PASS" starttime="20231130 17:57:33.173" endtime="20231130 17:57:49.037"/>
</kw>
<kw name="When Select on the &quot;Cate1&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:49.045" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:49.043" endtime="20231130 17:57:49.046"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:49.048" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:49.048" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:49.047" endtime="20231130 17:57:49.048"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:49.051" endtime="20231130 17:57:49.051"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:49.049" endtime="20231130 17:57:49.052"/>
</branch>
<status status="PASS" starttime="20231130 17:57:49.049" endtime="20231130 17:57:49.053"/>
</if>
<msg timestamp="20231130 17:57:49.054" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:49.041" endtime="20231130 17:57:49.054"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231130 17:57:49.056" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231130 17:57:49.055" endtime="20231130 17:57:49.057"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:49.099" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:49.058" endtime="20231130 17:57:49.100"/>
</kw>
<status status="PASS" starttime="20231130 17:57:49.057" endtime="20231130 17:57:49.101"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:49.104" endtime="20231130 17:57:50.167"/>
</kw>
<status status="PASS" starttime="20231130 17:57:49.040" endtime="20231130 17:57:50.168"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;${name1}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:50.276" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:50.174" endtime="20231130 17:57:50.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:50.277" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:50.276" endtime="20231130 17:57:50.278"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:50.299" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:50.282" endtime="20231130 17:57:50.300"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:50.302" endtime="20231130 17:57:50.303"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.300" endtime="20231130 17:57:50.304"/>
</branch>
<status status="PASS" starttime="20231130 17:57:50.300" endtime="20231130 17:57:50.305"/>
</if>
<status status="PASS" starttime="20231130 17:57:50.173" endtime="20231130 17:57:50.305"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:50.308" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:50.307" endtime="20231130 17:57:50.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:50.311" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:50.310" endtime="20231130 17:57:50.312"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:50.319" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:50.317" endtime="20231130 17:57:50.320"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:50.321" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:50.321" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:50.320" endtime="20231130 17:57:50.321"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:50.323" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:50.322" endtime="20231130 17:57:50.324"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:50.325" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:50.326" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:50.325" endtime="20231130 17:57:50.326"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.335" endtime="20231130 17:57:50.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.336" endtime="20231130 17:57:50.337"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.327" endtime="20231130 17:57:50.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.339" endtime="20231130 17:57:50.339"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.340" endtime="20231130 17:57:50.341"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.341" endtime="20231130 17:57:50.342"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.338" endtime="20231130 17:57:50.342"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.348" endtime="20231130 17:57:50.349"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.349" endtime="20231130 17:57:50.350"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.343" endtime="20231130 17:57:50.350"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.352" endtime="20231130 17:57:50.353"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.353" endtime="20231130 17:57:50.354"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.351" endtime="20231130 17:57:50.354"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.356" endtime="20231130 17:57:50.356"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.355" endtime="20231130 17:57:50.357"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:50.358" endtime="20231130 17:57:50.359"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.357" endtime="20231130 17:57:50.359"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.366" endtime="20231130 17:57:50.368"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.369" endtime="20231130 17:57:50.370"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.371" endtime="20231130 17:57:50.371"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.360" endtime="20231130 17:57:50.372"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.374" endtime="20231130 17:57:50.374"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.372" endtime="20231130 17:57:50.375"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.376" endtime="20231130 17:57:50.377"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.375" endtime="20231130 17:57:50.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.382" endtime="20231130 17:57:50.383"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.381" endtime="20231130 17:57:50.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.385" endtime="20231130 17:57:50.386"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.384" endtime="20231130 17:57:50.386"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.387" endtime="20231130 17:57:50.388"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.387" endtime="20231130 17:57:50.388"/>
</branch>
<status status="PASS" starttime="20231130 17:57:50.327" endtime="20231130 17:57:50.388"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:50.389" level="INFO">Length is 27</msg>
<msg timestamp="20231130 17:57:50.389" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231130 17:57:50.388" endtime="20231130 17:57:50.390"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231130 17:57:50.391" level="INFO">${text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:50.391" endtime="20231130 17:57:50.391"/>
</kw>
<status status="PASS" starttime="20231130 17:57:50.390" endtime="20231130 17:57:50.392"/>
</branch>
<status status="PASS" starttime="20231130 17:57:50.390" endtime="20231130 17:57:50.392"/>
</if>
<msg timestamp="20231130 17:57:50.392" level="INFO">${text} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:50.306" endtime="20231130 17:57:50.392"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:50.394" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:50.393" endtime="20231130 17:57:50.397"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:50.398" endtime="20231130 17:57:50.491"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:50.492" endtime="20231130 17:57:50.530"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:50.532" level="INFO">Fills the text 'PO_11 Nostrum itaque autem.' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:50.531" endtime="20231130 17:57:50.576"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:50.613" level="INFO">Text: 'PO_11 Nostrum itaque autem.'</msg>
<msg timestamp="20231130 17:57:50.614" level="INFO">${condition} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:50.577" endtime="20231130 17:57:50.614"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.617" endtime="20231130 17:57:50.618"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:50.619" endtime="20231130 17:57:50.620"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:50.615" endtime="20231130 17:57:50.620"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:50.615" endtime="20231130 17:57:50.621"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:50.622" endtime="20231130 17:57:50.689"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:50.691" level="INFO">Length is 27</msg>
<msg timestamp="20231130 17:57:50.692" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231130 17:57:50.690" endtime="20231130 17:57:50.692"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231130 17:57:50.697" level="INFO">${STATE["Tìm kiếm"]} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:50.695" endtime="20231130 17:57:50.698"/>
</kw>
<status status="PASS" starttime="20231130 17:57:50.693" endtime="20231130 17:57:50.698"/>
</branch>
<status status="PASS" starttime="20231130 17:57:50.693" endtime="20231130 17:57:50.699"/>
</if>
<status status="PASS" starttime="20231130 17:57:50.171" endtime="20231130 17:57:50.699"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:50.832" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:50.730" endtime="20231130 17:57:50.832"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:50.833" endtime="20231130 17:57:50.944"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:51.050" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:50.948" endtime="20231130 17:57:51.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.051" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:51.051" endtime="20231130 17:57:51.051"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:51.059" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.052" endtime="20231130 17:57:51.060"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:51.062" endtime="20231130 17:57:51.064"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.060" endtime="20231130 17:57:51.065"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.060" endtime="20231130 17:57:51.066"/>
</if>
<status status="PASS" starttime="20231130 17:57:50.946" endtime="20231130 17:57:51.066"/>
</kw>
<status status="PASS" starttime="20231130 17:57:50.727" endtime="20231130 17:57:51.067"/>
</kw>
<kw name="Then &quot;${name1}&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:51.175" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:51.074" endtime="20231130 17:57:51.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.176" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:51.176" endtime="20231130 17:57:51.176"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:51.190" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.177" endtime="20231130 17:57:51.190"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:51.192" endtime="20231130 17:57:51.192"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.191" endtime="20231130 17:57:51.193"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.191" endtime="20231130 17:57:51.193"/>
</if>
<status status="PASS" starttime="20231130 17:57:51.073" endtime="20231130 17:57:51.194"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:51.201" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:51.200" endtime="20231130 17:57:51.201"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:51.202" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:51.203" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.202" endtime="20231130 17:57:51.203"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.204" endtime="20231130 17:57:51.204"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.203" endtime="20231130 17:57:51.204"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.203" endtime="20231130 17:57:51.204"/>
</if>
<msg timestamp="20231130 17:57:51.205" level="INFO">${name} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:51.198" endtime="20231130 17:57:51.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.205" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Nostrum itaque autem.")]</msg>
<status status="PASS" starttime="20231130 17:57:51.205" endtime="20231130 17:57:51.206"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:51.223" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Nostrum itaque autem.")] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:51.208" endtime="20231130 17:57:51.223"/>
</kw>
<status status="PASS" starttime="20231130 17:57:51.206" endtime="20231130 17:57:51.224"/>
</kw>
<status status="PASS" starttime="20231130 17:57:51.072" endtime="20231130 17:57:51.225"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:51.239" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231130 17:57:51.237" endtime="20231130 17:57:51.239"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:51.241" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:51.241" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231130 17:57:51.240" endtime="20231130 17:57:51.242"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.248" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:51.244" endtime="20231130 17:57:51.249"/>
</kw>
<status status="PASS" starttime="20231130 17:57:51.243" endtime="20231130 17:57:51.249"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.242" endtime="20231130 17:57:51.250"/>
</if>
<msg timestamp="20231130 17:57:51.250" level="INFO">${name} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:51.236" endtime="20231130 17:57:51.251"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.253" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Numquam eaque maiores.")]</msg>
<status status="PASS" starttime="20231130 17:57:51.252" endtime="20231130 17:57:51.253"/>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:51.273" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Numquam eaque maiores.")] at state detached</msg>
<status status="PASS" starttime="20231130 17:57:51.257" endtime="20231130 17:57:51.274"/>
</kw>
<status status="PASS" starttime="20231130 17:57:51.254" endtime="20231130 17:57:51.274"/>
</kw>
<status status="PASS" starttime="20231130 17:57:51.234" endtime="20231130 17:57:51.275"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:51.384" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:51.282" endtime="20231130 17:57:51.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.386" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:51.385" endtime="20231130 17:57:51.387"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:51.401" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.387" endtime="20231130 17:57:51.401"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:51.405" endtime="20231130 17:57:51.405"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.402" endtime="20231130 17:57:51.406"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.402" endtime="20231130 17:57:51.406"/>
</if>
<status status="PASS" starttime="20231130 17:57:51.280" endtime="20231130 17:57:51.407"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.410" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231130 17:57:51.409" endtime="20231130 17:57:51.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:51.416" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231130 17:57:51.415" endtime="20231130 17:57:51.417"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:51.418" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:51.417" endtime="20231130 17:57:51.419"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:51.420" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:51.421" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.420" endtime="20231130 17:57:51.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:51.423" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231130 17:57:51.422" endtime="20231130 17:57:51.423"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:51.424" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:51.425" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.424" endtime="20231130 17:57:51.425"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.426" endtime="20231130 17:57:51.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.428" endtime="20231130 17:57:51.429"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.426" endtime="20231130 17:57:51.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.432" endtime="20231130 17:57:51.432"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.433" endtime="20231130 17:57:51.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.434" endtime="20231130 17:57:51.434"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.431" endtime="20231130 17:57:51.435"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.436" endtime="20231130 17:57:51.437"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.438" endtime="20231130 17:57:51.438"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.435" endtime="20231130 17:57:51.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.440" endtime="20231130 17:57:51.452"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.453" endtime="20231130 17:57:51.454"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.439" endtime="20231130 17:57:51.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.456" endtime="20231130 17:57:51.456"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.455" endtime="20231130 17:57:51.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231130 17:57:51.458" endtime="20231130 17:57:51.458"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.457" endtime="20231130 17:57:51.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.461" endtime="20231130 17:57:51.462"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.463" endtime="20231130 17:57:51.463"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.464" endtime="20231130 17:57:51.465"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.460" endtime="20231130 17:57:51.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.467" endtime="20231130 17:57:51.467"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.466" endtime="20231130 17:57:51.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.469" endtime="20231130 17:57:51.470"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.468" endtime="20231130 17:57:51.470"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.472" endtime="20231130 17:57:51.472"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.471" endtime="20231130 17:57:51.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.474" endtime="20231130 17:57:51.474"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.473" endtime="20231130 17:57:51.475"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.477" endtime="20231130 17:57:51.477"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.476" endtime="20231130 17:57:51.478"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.425" endtime="20231130 17:57:51.480"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:51.481" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:51.481" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.480" endtime="20231130 17:57:51.482"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.483" endtime="20231130 17:57:51.484"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.482" endtime="20231130 17:57:51.485"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.482" endtime="20231130 17:57:51.485"/>
</if>
<msg timestamp="20231130 17:57:51.489" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231130 17:57:51.407" endtime="20231130 17:57:51.489"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231130 17:57:51.491" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231130 17:57:51.490" endtime="20231130 17:57:51.492"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:51.493" endtime="20231130 17:57:51.577"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:51.578" endtime="20231130 17:57:51.657"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231130 17:57:51.659" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231130 17:57:51.658" endtime="20231130 17:57:51.696"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231130 17:57:51.738" level="INFO">Text: ''</msg>
<msg timestamp="20231130 17:57:51.739" level="INFO">${condition} = </msg>
<status status="PASS" starttime="20231130 17:57:51.698" endtime="20231130 17:57:51.739"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.741" endtime="20231130 17:57:51.741"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.742" endtime="20231130 17:57:51.742"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.739" endtime="20231130 17:57:51.743"/>
</iter>
<status status="NOT RUN" starttime="20231130 17:57:51.739" endtime="20231130 17:57:51.743"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231130 17:57:51.744" endtime="20231130 17:57:51.810"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:51.813" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:51.813" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231130 17:57:51.811" endtime="20231130 17:57:51.814"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231130 17:57:51.816" endtime="20231130 17:57:51.817"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:51.815" endtime="20231130 17:57:51.818"/>
</branch>
<status status="PASS" starttime="20231130 17:57:51.815" endtime="20231130 17:57:51.818"/>
</if>
<status status="PASS" starttime="20231130 17:57:51.278" endtime="20231130 17:57:51.819"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:51.925" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:51.823" endtime="20231130 17:57:51.925"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:51.926" endtime="20231130 17:57:52.093"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:52.199" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:52.098" endtime="20231130 17:57:52.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.201" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:52.200" endtime="20231130 17:57:52.201"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:52.209" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:52.201" endtime="20231130 17:57:52.209"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:52.212" endtime="20231130 17:57:52.213"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:52.210" endtime="20231130 17:57:52.214"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.210" endtime="20231130 17:57:52.214"/>
</if>
<status status="PASS" starttime="20231130 17:57:52.097" endtime="20231130 17:57:52.215"/>
</kw>
<status status="PASS" starttime="20231130 17:57:51.822" endtime="20231130 17:57:52.215"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:52.323" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:52.222" endtime="20231130 17:57:52.323"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.324" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:52.323" endtime="20231130 17:57:52.324"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:52.338" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:52.325" endtime="20231130 17:57:52.338"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:52.340" endtime="20231130 17:57:52.341"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:52.339" endtime="20231130 17:57:52.341"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.339" endtime="20231130 17:57:52.342"/>
</if>
<status status="PASS" starttime="20231130 17:57:52.221" endtime="20231130 17:57:52.342"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:52.348" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231130 17:57:52.347" endtime="20231130 17:57:52.349"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:52.351" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:52.351" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231130 17:57:52.350" endtime="20231130 17:57:52.351"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.355" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:52.353" endtime="20231130 17:57:52.355"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.352" endtime="20231130 17:57:52.355"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.352" endtime="20231130 17:57:52.356"/>
</if>
<msg timestamp="20231130 17:57:52.356" level="INFO">${name} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:52.343" endtime="20231130 17:57:52.356"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.357" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Numquam eaque maiores.")]</msg>
<status status="PASS" starttime="20231130 17:57:52.357" endtime="20231130 17:57:52.358"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:52.373" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"PO_11 Numquam eaque maiores.")] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:52.359" endtime="20231130 17:57:52.374"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.358" endtime="20231130 17:57:52.375"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.220" endtime="20231130 17:57:52.376"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:52.483" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:52.382" endtime="20231130 17:57:52.483"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:52.585" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:52.484" endtime="20231130 17:57:52.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.586" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:52.585" endtime="20231130 17:57:52.586"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:52.593" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:52.586" endtime="20231130 17:57:52.594"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:52.597" endtime="20231130 17:57:52.597"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:52.596" endtime="20231130 17:57:52.598"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.595" endtime="20231130 17:57:52.598"/>
</if>
<status status="PASS" starttime="20231130 17:57:52.483" endtime="20231130 17:57:52.599"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:52.602" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231130 17:57:52.601" endtime="20231130 17:57:52.602"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:52.603" level="INFO">Length is 1</msg>
<msg timestamp="20231130 17:57:52.603" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231130 17:57:52.603" endtime="20231130 17:57:52.603"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.605" level="INFO">${text} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:52.604" endtime="20231130 17:57:52.605"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.604" endtime="20231130 17:57:52.606"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.604" endtime="20231130 17:57:52.606"/>
</if>
<msg timestamp="20231130 17:57:52.606" level="INFO">${name} = PO_11 Numquam eaque maiores.</msg>
<status status="PASS" starttime="20231130 17:57:52.599" endtime="20231130 17:57:52.606"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231130 17:57:52.607" endtime="20231130 17:57:52.607"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:52.607" endtime="20231130 17:57:52.608"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:52.609" endtime="20231130 17:57:52.610"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:52.609" endtime="20231130 17:57:52.610"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231130 17:57:52.611" endtime="20231130 17:57:52.612"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:52.613" endtime="20231130 17:57:52.613"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:52.610" endtime="20231130 17:57:52.614"/>
</branch>
<status status="NOT RUN" starttime="20231130 17:57:52.609" endtime="20231130 17:57:52.614"/>
</if>
<status status="NOT RUN" starttime="20231130 17:57:52.606" endtime="20231130 17:57:52.614"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231130 17:57:52.617" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_11 Numquam eaque maiores.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231130 17:57:52.615" endtime="20231130 17:57:52.617"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:52.618" endtime="20231130 17:57:52.731"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.615" endtime="20231130 17:57:52.731"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.606" endtime="20231130 17:57:52.732"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:52.736" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:52.734" endtime="20231130 17:57:52.736"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:52.748" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231130 17:57:52.737" endtime="20231130 17:57:52.748"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:52.751" endtime="20231130 17:57:52.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:53.073" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:52.972" endtime="20231130 17:57:53.073"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:53.176" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:53.074" endtime="20231130 17:57:53.176"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:53.179" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:53.176" endtime="20231130 17:57:53.180"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:53.191" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:53.182" endtime="20231130 17:57:53.192"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:53.194" endtime="20231130 17:57:53.196"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:53.193" endtime="20231130 17:57:53.198"/>
</branch>
<status status="PASS" starttime="20231130 17:57:53.192" endtime="20231130 17:57:53.198"/>
</if>
<status status="PASS" starttime="20231130 17:57:53.073" endtime="20231130 17:57:53.199"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.749" endtime="20231130 17:57:53.199"/>
</branch>
<status status="PASS" starttime="20231130 17:57:52.749" endtime="20231130 17:57:53.200"/>
</if>
<status status="PASS" starttime="20231130 17:57:52.733" endtime="20231130 17:57:53.201"/>
</kw>
<status status="PASS" starttime="20231130 17:57:52.380" endtime="20231130 17:57:53.201"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;${name1}&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:53.309" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:53.208" endtime="20231130 17:57:53.309"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:53.417" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:53.311" endtime="20231130 17:57:53.417"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:53.418" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:53.417" endtime="20231130 17:57:53.418"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:53.426" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:53.418" endtime="20231130 17:57:53.426"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:53.430" endtime="20231130 17:57:53.431"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:53.427" endtime="20231130 17:57:53.432"/>
</branch>
<status status="PASS" starttime="20231130 17:57:53.427" endtime="20231130 17:57:53.432"/>
</if>
<status status="PASS" starttime="20231130 17:57:53.309" endtime="20231130 17:57:53.433"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:53.436" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:53.435" endtime="20231130 17:57:53.436"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:53.438" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:53.438" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:53.437" endtime="20231130 17:57:53.438"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:53.439" endtime="20231130 17:57:53.439"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:53.438" endtime="20231130 17:57:53.439"/>
</branch>
<status status="PASS" starttime="20231130 17:57:53.438" endtime="20231130 17:57:53.439"/>
</if>
<msg timestamp="20231130 17:57:53.440" level="INFO">${name} = PO_11 Nostrum itaque autem.</msg>
<status status="PASS" starttime="20231130 17:57:53.433" endtime="20231130 17:57:53.440"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231130 17:57:53.441" endtime="20231130 17:57:53.442"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:53.442" endtime="20231130 17:57:53.443"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:53.443" endtime="20231130 17:57:53.443"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:53.443" endtime="20231130 17:57:53.444"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231130 17:57:53.446" endtime="20231130 17:57:53.447"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231130 17:57:53.448" endtime="20231130 17:57:53.448"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:53.444" endtime="20231130 17:57:53.449"/>
</branch>
<status status="NOT RUN" starttime="20231130 17:57:53.443" endtime="20231130 17:57:53.449"/>
</if>
<status status="NOT RUN" starttime="20231130 17:57:53.440" endtime="20231130 17:57:53.449"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231130 17:57:53.451" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_11 Nostrum itaque autem.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231130 17:57:53.450" endtime="20231130 17:57:53.451"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:53.452" endtime="20231130 17:57:55.056"/>
</kw>
<status status="PASS" starttime="20231130 17:57:53.450" endtime="20231130 17:57:55.057"/>
</branch>
<status status="PASS" starttime="20231130 17:57:53.440" endtime="20231130 17:57:55.057"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:55.059" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:55.058" endtime="20231130 17:57:55.059"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:55.071" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231130 17:57:55.059" endtime="20231130 17:57:55.072"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:55.074" endtime="20231130 17:57:55.324"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:55.428" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:55.325" endtime="20231130 17:57:55.428"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:55.533" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:55.431" endtime="20231130 17:57:55.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:55.534" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:55.534" endtime="20231130 17:57:55.534"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:55.542" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:55.535" endtime="20231130 17:57:55.543"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:55.546" endtime="20231130 17:57:55.547"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:55.544" endtime="20231130 17:57:55.547"/>
</branch>
<status status="PASS" starttime="20231130 17:57:55.544" endtime="20231130 17:57:55.548"/>
</if>
<status status="PASS" starttime="20231130 17:57:55.430" endtime="20231130 17:57:55.548"/>
</kw>
<status status="PASS" starttime="20231130 17:57:55.073" endtime="20231130 17:57:55.549"/>
</branch>
<status status="PASS" starttime="20231130 17:57:55.072" endtime="20231130 17:57:55.550"/>
</if>
<status status="PASS" starttime="20231130 17:57:55.057" endtime="20231130 17:57:55.550"/>
</kw>
<status status="PASS" starttime="20231130 17:57:53.207" endtime="20231130 17:57:55.551"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Cate1&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231130 17:57:55.557" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231130 17:57:55.556" endtime="20231130 17:57:55.558"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231130 17:57:55.560" level="INFO">Length is 0</msg>
<msg timestamp="20231130 17:57:55.561" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231130 17:57:55.559" endtime="20231130 17:57:55.562"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231130 17:57:55.565" endtime="20231130 17:57:55.566"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:55.563" endtime="20231130 17:57:55.567"/>
</branch>
<status status="PASS" starttime="20231130 17:57:55.563" endtime="20231130 17:57:55.568"/>
</if>
<msg timestamp="20231130 17:57:55.568" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231130 17:57:55.555" endtime="20231130 17:57:55.569"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231130 17:57:55.571" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231130 17:57:55.569" endtime="20231130 17:57:55.571"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231130 17:57:55.593" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"] at state attached</msg>
<status status="PASS" starttime="20231130 17:57:55.575" endtime="20231130 17:57:55.594"/>
</kw>
<status status="PASS" starttime="20231130 17:57:55.572" endtime="20231130 17:57:55.595"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:55.596" endtime="20231130 17:57:57.202"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:57.203" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231130 17:57:57.203" endtime="20231130 17:57:57.204"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:57.214" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231130 17:57:57.204" endtime="20231130 17:57:57.215"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231130 17:57:57.217" endtime="20231130 17:57:57.478"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:57.581" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:57.479" endtime="20231130 17:57:57.583"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231130 17:57:57.689" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231130 17:57:57.586" endtime="20231130 17:57:57.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231130 17:57:57.690" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231130 17:57:57.689" endtime="20231130 17:57:57.690"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231130 17:57:57.703" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231130 17:57:57.690" endtime="20231130 17:57:57.704"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231130 17:57:57.706" endtime="20231130 17:57:57.706"/>
</kw>
<status status="NOT RUN" starttime="20231130 17:57:57.705" endtime="20231130 17:57:57.707"/>
</branch>
<status status="PASS" starttime="20231130 17:57:57.704" endtime="20231130 17:57:57.708"/>
</if>
<status status="PASS" starttime="20231130 17:57:57.584" endtime="20231130 17:57:57.708"/>
</kw>
<status status="PASS" starttime="20231130 17:57:57.216" endtime="20231130 17:57:57.709"/>
</branch>
<status status="PASS" starttime="20231130 17:57:57.215" endtime="20231130 17:57:57.709"/>
</if>
<status status="PASS" starttime="20231130 17:57:57.202" endtime="20231130 17:57:57.709"/>
</kw>
<status status="PASS" starttime="20231130 17:57:55.554" endtime="20231130 17:57:57.709"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231130 17:57:58.713" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231130 17:57:57.718" endtime="20231130 17:57:58.713"/>
</kw>
<status status="PASS" starttime="20231130 17:57:57.716" endtime="20231130 17:57:58.714"/>
</kw>
<tag>Search</tag>
<status status="PASS" starttime="20231130 17:57:03.778" endtime="20231130 17:57:58.716"/>
</test>
<status status="PASS" starttime="20231130 17:57:01.490" endtime="20231130 17:57:58.788"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Post">Post</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

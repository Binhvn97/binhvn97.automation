<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231123 16:41:09.991" rpa="false" schemaversion="4">
<suite id="s1" name="Post" source="d:\TESTER\Automation\Auto_Web\testcases\post.robot">
<test id="s1-t1" name="PO_05 Verify that navigating to the right &quot;Edit post&quot; page" line="58">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231123 16:41:12.406" endtime="20231123 16:41:12.407"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231123 16:41:12.408" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\1797b542-1a5d-4334-9f51-b84ab880e151"}</msg>
<msg timestamp="20231123 16:41:13.775" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\1797b542-1a5d-4334-9f51-b84ab880e151"}</msg>
<status status="PASS" starttime="20231123 16:41:12.407" endtime="20231123 16:41:13.776"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231123 16:41:17.237" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231123 16:41:17.238" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231123 16:41:13.777" endtime="20231123 16:41:17.239"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231123 16:41:17.242" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231123 16:41:17.240" endtime="20231123 16:41:17.243"/>
</kw>
<status status="PASS" starttime="20231123 16:41:12.404" endtime="20231123 16:41:17.245"/>
</kw>
<kw name="Create a category with &quot;Cate1&quot; name" sourcename="Create a category with &quot;${name}&quot; name">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:17.284" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:17.283" endtime="20231123 16:41:17.285"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:17.286" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:17.287" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:17.285" endtime="20231123 16:41:17.287"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.289" endtime="20231123 16:41:17.290"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.288" endtime="20231123 16:41:17.291"/>
</branch>
<status status="PASS" starttime="20231123 16:41:17.288" endtime="20231123 16:41:17.291"/>
</if>
<msg timestamp="20231123 16:41:17.292" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:17.281" endtime="20231123 16:41:17.294"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Post" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Post&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:17.392" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:17.300" endtime="20231123 16:41:17.392"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231123 16:41:17.398" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231123 16:41:17.393" endtime="20231123 16:41:17.399"/>
</kw>
<status status="FAIL" starttime="20231123 16:41:17.299" endtime="20231123 16:41:17.400"/>
</kw>
<msg timestamp="20231123 16:41:17.400" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231123 16:41:17.297" endtime="20231123 16:41:17.400"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.402" endtime="20231123 16:41:17.403"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231123 16:41:17.405" endtime="20231123 16:41:17.406"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231123 16:41:17.409" endtime="20231123 16:41:17.415"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231123 16:41:17.416" endtime="20231123 16:41:17.417"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231123 16:41:17.418" endtime="20231123 16:41:17.419"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231123 16:41:17.421" endtime="20231123 16:41:17.422"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.404" endtime="20231123 16:41:17.422"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231123 16:41:17.424" endtime="20231123 16:41:17.424"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.423" endtime="20231123 16:41:17.425"/>
</branch>
<status status="NOT RUN" starttime="20231123 16:41:17.403" endtime="20231123 16:41:17.425"/>
</if>
<status status="NOT RUN" starttime="20231123 16:41:17.401" endtime="20231123 16:41:17.426"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Post&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:17.442" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:17.442" endtime="20231123 16:41:17.448"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:17.450" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:17.449" endtime="20231123 16:41:17.450"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:17.453" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:17.452" endtime="20231123 16:41:17.454"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:17.457" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:17.458" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:17.455" endtime="20231123 16:41:17.458"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:17.464" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:17.459" endtime="20231123 16:41:17.471"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:17.473" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:17.474" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:17.471" endtime="20231123 16:41:17.474"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.476" endtime="20231123 16:41:17.477"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.480" endtime="20231123 16:41:17.481"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.475" endtime="20231123 16:41:17.482"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.484" endtime="20231123 16:41:17.485"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.486" endtime="20231123 16:41:17.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.488" endtime="20231123 16:41:17.489"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.483" endtime="20231123 16:41:17.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.523" endtime="20231123 16:41:17.524"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.534" endtime="20231123 16:41:17.535"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.490" endtime="20231123 16:41:17.537"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.541" endtime="20231123 16:41:17.542"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.543" endtime="20231123 16:41:17.547"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.539" endtime="20231123 16:41:17.547"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.549" endtime="20231123 16:41:17.550"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.548" endtime="20231123 16:41:17.550"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:17.552" endtime="20231123 16:41:17.553"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.551" endtime="20231123 16:41:17.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.555" endtime="20231123 16:41:17.556"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.556" endtime="20231123 16:41:17.557"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.558" endtime="20231123 16:41:17.559"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.554" endtime="20231123 16:41:17.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.563" endtime="20231123 16:41:17.564"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.560" endtime="20231123 16:41:17.565"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.567" endtime="20231123 16:41:17.568"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.566" endtime="20231123 16:41:17.569"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.572" endtime="20231123 16:41:17.574"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.570" endtime="20231123 16:41:17.575"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.582" endtime="20231123 16:41:17.583"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.580" endtime="20231123 16:41:17.584"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:17.586" endtime="20231123 16:41:17.587"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:17.584" endtime="20231123 16:41:17.588"/>
</branch>
<status status="PASS" starttime="20231123 16:41:17.474" endtime="20231123 16:41:17.589"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:17.592" level="INFO">Length is 15</msg>
<msg timestamp="20231123 16:41:17.593" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231123 16:41:17.591" endtime="20231123 16:41:17.593"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:17.616" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231123 16:41:17.598" endtime="20231123 16:41:17.617"/>
</kw>
<status status="PASS" starttime="20231123 16:41:17.596" endtime="20231123 16:41:17.618"/>
</branch>
<status status="PASS" starttime="20231123 16:41:17.594" endtime="20231123 16:41:17.619"/>
</if>
<msg timestamp="20231123 16:41:17.619" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231123 16:41:17.440" endtime="20231123 16:41:17.620"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:17.622" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:17.621" endtime="20231123 16:41:17.623"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:17.623" endtime="20231123 16:41:17.834"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:17.836" endtime="20231123 16:41:17.936"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:17.938" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:17.937" endtime="20231123 16:41:18.007"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:18.091" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231123 16:41:18.092" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231123 16:41:18.008" endtime="20231123 16:41:18.092"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.097" endtime="20231123 16:41:18.099"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.100" endtime="20231123 16:41:18.101"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.093" endtime="20231123 16:41:18.102"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:18.093" endtime="20231123 16:41:18.103"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:18.104" endtime="20231123 16:41:18.174"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:18.175" level="INFO">Length is 15</msg>
<msg timestamp="20231123 16:41:18.176" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231123 16:41:18.175" endtime="20231123 16:41:18.176"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:18.182" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231123 16:41:18.180" endtime="20231123 16:41:18.182"/>
</kw>
<status status="PASS" starttime="20231123 16:41:18.178" endtime="20231123 16:41:18.183"/>
</branch>
<status status="PASS" starttime="20231123 16:41:18.177" endtime="20231123 16:41:18.183"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:18.184" endtime="20231123 16:41:18.198"/>
</kw>
<status status="PASS" starttime="20231123 16:41:17.439" endtime="20231123 16:41:18.200"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:18.205" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:18.204" endtime="20231123 16:41:18.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:18.207" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:18.206" endtime="20231123 16:41:18.208"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:18.210" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:18.209" endtime="20231123 16:41:18.210"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:18.213" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:18.214" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:18.212" endtime="20231123 16:41:18.215"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:18.217" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:18.216" endtime="20231123 16:41:18.217"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:18.221" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:18.222" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:18.221" endtime="20231123 16:41:18.222"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.224" endtime="20231123 16:41:18.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.225" endtime="20231123 16:41:18.226"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.223" endtime="20231123 16:41:18.226"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.229" endtime="20231123 16:41:18.230"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.231" endtime="20231123 16:41:18.232"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.233" endtime="20231123 16:41:18.234"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.227" endtime="20231123 16:41:18.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.236" endtime="20231123 16:41:18.236"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.237" endtime="20231123 16:41:18.237"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.235" endtime="20231123 16:41:18.238"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.239" endtime="20231123 16:41:18.240"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.240" endtime="20231123 16:41:18.241"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.238" endtime="20231123 16:41:18.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.243" endtime="20231123 16:41:18.243"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.242" endtime="20231123 16:41:18.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:18.248" endtime="20231123 16:41:18.249"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.247" endtime="20231123 16:41:18.250"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.252" endtime="20231123 16:41:18.253"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.254" endtime="20231123 16:41:18.254"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.255" endtime="20231123 16:41:18.255"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.251" endtime="20231123 16:41:18.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.291" endtime="20231123 16:41:18.291"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.290" endtime="20231123 16:41:18.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.299" endtime="20231123 16:41:18.301"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.293" endtime="20231123 16:41:18.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.309" endtime="20231123 16:41:18.310"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.302" endtime="20231123 16:41:18.310"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.317" endtime="20231123 16:41:18.317"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.315" endtime="20231123 16:41:18.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.320" endtime="20231123 16:41:18.321"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.319" endtime="20231123 16:41:18.322"/>
</branch>
<status status="PASS" starttime="20231123 16:41:18.223" endtime="20231123 16:41:18.323"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:18.325" level="INFO">Length is 6</msg>
<msg timestamp="20231123 16:41:18.325" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231123 16:41:18.323" endtime="20231123 16:41:18.326"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:18.332" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231123 16:41:18.330" endtime="20231123 16:41:18.332"/>
</kw>
<status status="PASS" starttime="20231123 16:41:18.327" endtime="20231123 16:41:18.333"/>
</branch>
<status status="PASS" starttime="20231123 16:41:18.326" endtime="20231123 16:41:18.334"/>
</if>
<msg timestamp="20231123 16:41:18.334" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231123 16:41:18.202" endtime="20231123 16:41:18.335"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:18.337" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:18.335" endtime="20231123 16:41:18.337"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:18.338" endtime="20231123 16:41:18.438"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:18.439" endtime="20231123 16:41:18.487"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:18.490" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:18.488" endtime="20231123 16:41:18.551"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:18.600" level="INFO">Text: '123123'</msg>
<msg timestamp="20231123 16:41:18.601" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231123 16:41:18.553" endtime="20231123 16:41:18.601"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.603" endtime="20231123 16:41:18.603"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.604" endtime="20231123 16:41:18.604"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.601" endtime="20231123 16:41:18.604"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:18.601" endtime="20231123 16:41:18.604"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:18.605" endtime="20231123 16:41:18.682"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:18.685" level="INFO">Length is 6</msg>
<msg timestamp="20231123 16:41:18.685" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231123 16:41:18.684" endtime="20231123 16:41:18.686"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:18.689" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231123 16:41:18.688" endtime="20231123 16:41:18.689"/>
</kw>
<status status="PASS" starttime="20231123 16:41:18.686" endtime="20231123 16:41:18.690"/>
</branch>
<status status="PASS" starttime="20231123 16:41:18.686" endtime="20231123 16:41:18.691"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:18.691" endtime="20231123 16:41:18.705"/>
</kw>
<status status="PASS" starttime="20231123 16:41:18.201" endtime="20231123 16:41:18.706"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:18.809" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:18.708" endtime="20231123 16:41:18.809"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:18.822" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:18.811" endtime="20231123 16:41:18.822"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:18.824" endtime="20231123 16:41:18.958"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:18.964" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:18.962" endtime="20231123 16:41:18.964"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:18.989" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:18.966" endtime="20231123 16:41:18.990"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.992" endtime="20231123 16:41:18.995"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231123 16:41:18.999" endtime="20231123 16:41:19.000"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231123 16:41:19.001" endtime="20231123 16:41:19.002"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:18.991" endtime="20231123 16:41:19.002"/>
</branch>
<status status="PASS" starttime="20231123 16:41:18.990" endtime="20231123 16:41:19.003"/>
</if>
<status status="PASS" starttime="20231123 16:41:18.959" endtime="20231123 16:41:19.003"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231123 16:41:19.039" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:19.039" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:19.065" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:19.066" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:19.076" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231123 16:41:19.004" endtime="20231123 16:41:19.080"/>
</kw>
<status status="PASS" starttime="20231123 16:41:18.823" endtime="20231123 16:41:19.080"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:19.082" endtime="20231123 16:41:19.083"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231123 16:41:19.084" endtime="20231123 16:41:19.084"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231123 16:41:19.085" endtime="20231123 16:41:19.086"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:19.081" endtime="20231123 16:41:19.086"/>
</branch>
<status status="PASS" starttime="20231123 16:41:18.823" endtime="20231123 16:41:19.087"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:19.087" endtime="20231123 16:41:19.097"/>
</kw>
<status status="PASS" starttime="20231123 16:41:18.707" endtime="20231123 16:41:19.098"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:19.102" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:19.100" endtime="20231123 16:41:19.104"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:19.108" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:19.109" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:19.106" endtime="20231123 16:41:19.109"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:19.115" endtime="20231123 16:41:19.117"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:19.112" endtime="20231123 16:41:19.117"/>
</branch>
<status status="PASS" starttime="20231123 16:41:19.110" endtime="20231123 16:41:19.118"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:19.486" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231123 16:41:19.124" endtime="20231123 16:41:19.486"/>
</kw>
<status status="PASS" starttime="20231123 16:41:19.120" endtime="20231123 16:41:19.487"/>
</kw>
<status status="PASS" starttime="20231123 16:41:19.118" endtime="20231123 16:41:19.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:19.490" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231123 16:41:19.489" endtime="20231123 16:41:19.490"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231123 16:41:19.920" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231123 16:41:19.920" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231123 16:41:19.921" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231123 16:41:19.497" endtime="20231123 16:41:19.934"/>
</kw>
<status status="FAIL" starttime="20231123 16:41:19.492" endtime="20231123 16:41:19.934"/>
</kw>
<msg timestamp="20231123 16:41:19.935" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231123 16:41:19.491" endtime="20231123 16:41:19.935"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:19.937" endtime="20231123 16:41:19.937"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:19.936" endtime="20231123 16:41:19.937"/>
</branch>
<status status="PASS" starttime="20231123 16:41:19.936" endtime="20231123 16:41:19.938"/>
</if>
<status status="PASS" starttime="20231123 16:41:19.099" endtime="20231123 16:41:19.938"/>
</kw>
<status status="PASS" starttime="20231123 16:41:17.433" endtime="20231123 16:41:19.938"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:19.939" endtime="20231123 16:41:20.990"/>
</kw>
<status status="PASS" starttime="20231123 16:41:19.938" endtime="20231123 16:41:20.990"/>
</kw>
<kw name="Click &quot;Post&quot; sub menu to &quot;/post&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:21.092" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:20.992" endtime="20231123 16:41:21.092"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:21.095" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:21.092" endtime="20231123 16:41:21.096"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:21.108" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:21.096" endtime="20231123 16:41:21.108"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:21.111" endtime="20231123 16:41:21.112"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:21.110" endtime="20231123 16:41:21.113"/>
</branch>
<status status="PASS" starttime="20231123 16:41:21.109" endtime="20231123 16:41:21.113"/>
</if>
<status status="PASS" starttime="20231123 16:41:20.991" endtime="20231123 16:41:21.114"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:21.115" endtime="20231123 16:41:21.475"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231123 16:41:21.483" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/post</msg>
<status status="PASS" starttime="20231123 16:41:21.476" endtime="20231123 16:41:21.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231123 16:41:21.485" endtime="20231123 16:41:21.486"/>
</kw>
<status status="PASS" starttime="20231123 16:41:20.991" endtime="20231123 16:41:21.487"/>
</kw>
<status status="PASS" starttime="20231123 16:41:17.431" endtime="20231123 16:41:21.488"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:21.583" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:21.489" endtime="20231123 16:41:21.584"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231123 16:41:21.586" endtime="20231123 16:41:21.586"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231123 16:41:21.587" endtime="20231123 16:41:21.588"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231123 16:41:21.590" endtime="20231123 16:41:21.590"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231123 16:41:21.591" endtime="20231123 16:41:21.591"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231123 16:41:21.592" endtime="20231123 16:41:21.594"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:21.585" endtime="20231123 16:41:21.595"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:21.701" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:21.598" endtime="20231123 16:41:21.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:21.702" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:21.702" endtime="20231123 16:41:21.703"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:21.714" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:21.703" endtime="20231123 16:41:21.714"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:21.716" endtime="20231123 16:41:21.717"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:21.715" endtime="20231123 16:41:21.717"/>
</branch>
<status status="PASS" starttime="20231123 16:41:21.715" endtime="20231123 16:41:21.718"/>
</if>
<status status="PASS" starttime="20231123 16:41:21.597" endtime="20231123 16:41:21.718"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:21.722" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:21.721" endtime="20231123 16:41:21.722"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:21.725" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:21.726" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:21.723" endtime="20231123 16:41:21.727"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:21.730" endtime="20231123 16:41:21.730"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:21.729" endtime="20231123 16:41:21.731"/>
</branch>
<status status="PASS" starttime="20231123 16:41:21.728" endtime="20231123 16:41:21.732"/>
</if>
<msg timestamp="20231123 16:41:21.732" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:21.719" endtime="20231123 16:41:21.732"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231123 16:41:21.740" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231123 16:41:21.734" endtime="20231123 16:41:21.741"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:21.742" endtime="20231123 16:41:22.092"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:22.095" endtime="20231123 16:41:22.581"/>
</kw>
<status status="PASS" starttime="20231123 16:41:21.596" endtime="20231123 16:41:22.581"/>
</kw>
<status status="PASS" starttime="20231123 16:41:21.595" endtime="20231123 16:41:22.581"/>
</branch>
<status status="PASS" starttime="20231123 16:41:21.584" endtime="20231123 16:41:22.581"/>
</if>
<status status="PASS" starttime="20231123 16:41:17.428" endtime="20231123 16:41:22.582"/>
</branch>
<status status="PASS" starttime="20231123 16:41:17.401" endtime="20231123 16:41:22.582"/>
</if>
<status status="PASS" starttime="20231123 16:41:17.277" endtime="20231123 16:41:22.582"/>
</kw>
<kw name="Create a test post with &quot;Cate1&quot; type" sourcename="Create a test post with &quot;${type}&quot; type">
<kw name="Click &quot;Tạo mới bài viết&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:22.686" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:22.585" endtime="20231123 16:41:22.686"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:22.695" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:22.687" endtime="20231123 16:41:22.696"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:22.697" endtime="20231123 16:41:23.220"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:23.223" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:23.222" endtime="20231123 16:41:23.223"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:23.256" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:23.224" endtime="20231123 16:41:23.256"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.259" endtime="20231123 16:41:23.259"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.261" endtime="20231123 16:41:23.262"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231123 16:41:23.262" endtime="20231123 16:41:23.263"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.257" endtime="20231123 16:41:23.263"/>
</branch>
<status status="PASS" starttime="20231123 16:41:23.257" endtime="20231123 16:41:23.264"/>
</if>
<status status="PASS" starttime="20231123 16:41:23.220" endtime="20231123 16:41:23.264"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231123 16:41:23.320" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:23.320" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:23.341" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:23.342" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:23.352" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231123 16:41:23.265" endtime="20231123 16:41:23.353"/>
</kw>
<status status="PASS" starttime="20231123 16:41:22.696" endtime="20231123 16:41:23.353"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.356" endtime="20231123 16:41:23.357"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231123 16:41:23.358" endtime="20231123 16:41:23.359"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.360" endtime="20231123 16:41:23.361"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.355" endtime="20231123 16:41:23.361"/>
</branch>
<status status="PASS" starttime="20231123 16:41:22.696" endtime="20231123 16:41:23.362"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:23.362" endtime="20231123 16:41:23.370"/>
</kw>
<status status="PASS" starttime="20231123 16:41:22.584" endtime="20231123 16:41:23.371"/>
</kw>
<kw name="Click radio &quot;Loại editor&quot; in line &quot;Block&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231123 16:41:23.374" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại editor"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "Block"...</msg>
<status status="PASS" starttime="20231123 16:41:23.372" endtime="20231123 16:41:23.374"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:23.375" endtime="20231123 16:41:23.732"/>
</kw>
<status status="PASS" starttime="20231123 16:41:23.371" endtime="20231123 16:41:23.733"/>
</kw>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:23.737" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:23.736" endtime="20231123 16:41:23.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:23.739" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:23.738" endtime="20231123 16:41:23.740"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:23.742" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:23.740" endtime="20231123 16:41:23.742"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:23.746" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:23.746" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:23.744" endtime="20231123 16:41:23.747"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:23.750" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:23.748" endtime="20231123 16:41:23.750"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:23.752" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:23.753" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:23.751" endtime="20231123 16:41:23.753"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.755" endtime="20231123 16:41:23.757"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.758" endtime="20231123 16:41:23.759"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.754" endtime="20231123 16:41:23.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.764" endtime="20231123 16:41:23.766"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.767" endtime="20231123 16:41:23.768"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.769" endtime="20231123 16:41:23.769"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.762" endtime="20231123 16:41:23.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.771" endtime="20231123 16:41:23.772"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.773" endtime="20231123 16:41:23.773"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.770" endtime="20231123 16:41:23.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.775" endtime="20231123 16:41:23.779"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.779" endtime="20231123 16:41:23.780"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.774" endtime="20231123 16:41:23.780"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.782" endtime="20231123 16:41:23.782"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.781" endtime="20231123 16:41:23.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:23.784" endtime="20231123 16:41:23.785"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.783" endtime="20231123 16:41:23.785"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.787" endtime="20231123 16:41:23.788"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.789" endtime="20231123 16:41:23.789"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.790" endtime="20231123 16:41:23.791"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.786" endtime="20231123 16:41:23.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.797" endtime="20231123 16:41:23.797"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.792" endtime="20231123 16:41:23.798"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.799" endtime="20231123 16:41:23.800"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.798" endtime="20231123 16:41:23.800"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.802" endtime="20231123 16:41:23.803"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.801" endtime="20231123 16:41:23.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.806" endtime="20231123 16:41:23.806"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.804" endtime="20231123 16:41:23.808"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:23.815" endtime="20231123 16:41:23.816"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:23.809" endtime="20231123 16:41:23.817"/>
</branch>
<status status="PASS" starttime="20231123 16:41:23.754" endtime="20231123 16:41:23.817"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:23.855" level="INFO">Length is 5</msg>
<msg timestamp="20231123 16:41:23.858" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231123 16:41:23.850" endtime="20231123 16:41:23.868"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:23.873" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:23.871" endtime="20231123 16:41:23.873"/>
</kw>
<status status="PASS" starttime="20231123 16:41:23.870" endtime="20231123 16:41:23.874"/>
</branch>
<status status="PASS" starttime="20231123 16:41:23.869" endtime="20231123 16:41:23.875"/>
</if>
<msg timestamp="20231123 16:41:23.875" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:23.735" endtime="20231123 16:41:23.876"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231123 16:41:23.886" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231123 16:41:23.883" endtime="20231123 16:41:23.886"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:23.887" endtime="20231123 16:41:24.119"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231123 16:41:24.121" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231123 16:41:24.120" endtime="20231123 16:41:24.122"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:24.124" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:24.123" endtime="20231123 16:41:24.192"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:24.195" endtime="20231123 16:41:24.769"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:24.770" level="INFO">Length is 5</msg>
<msg timestamp="20231123 16:41:24.770" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231123 16:41:24.769" endtime="20231123 16:41:24.770"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:24.772" level="INFO">${STATE["Chuyên mục"]} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:24.771" endtime="20231123 16:41:24.772"/>
</kw>
<status status="PASS" starttime="20231123 16:41:24.771" endtime="20231123 16:41:24.773"/>
</branch>
<status status="PASS" starttime="20231123 16:41:24.771" endtime="20231123 16:41:24.773"/>
</if>
<status status="PASS" starttime="20231123 16:41:23.733" endtime="20231123 16:41:24.773"/>
</kw>
<kw name="Select file in &quot;Ảnh cover&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231123 16:41:24.778" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh cover"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231123 16:41:24.775" endtime="20231123 16:41:24.778"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231123 16:41:24.779" endtime="20231123 16:41:24.842"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:24.842" endtime="20231123 16:41:24.853"/>
</kw>
<status status="PASS" starttime="20231123 16:41:24.774" endtime="20231123 16:41:24.853"/>
</kw>
<kw name="Select file in &quot;Ảnh thumbnail&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231123 16:41:24.856" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh thumbnail"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231123 16:41:24.855" endtime="20231123 16:41:24.857"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231123 16:41:24.858" endtime="20231123 16:41:24.924"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:24.925" endtime="20231123 16:41:24.936"/>
</kw>
<status status="PASS" starttime="20231123 16:41:24.854" endtime="20231123 16:41:24.937"/>
</kw>
<kw name="Click radio &quot;Định dạng bài viết&quot; in line &quot;Longform&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231123 16:41:24.942" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Định dạng bài viết"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), ...</msg>
<status status="PASS" starttime="20231123 16:41:24.939" endtime="20231123 16:41:24.942"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:24.946" endtime="20231123 16:41:25.205"/>
</kw>
<status status="PASS" starttime="20231123 16:41:24.938" endtime="20231123 16:41:25.206"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Background Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:25.214" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:25.212" endtime="20231123 16:41:25.215"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:25.217" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:25.216" endtime="20231123 16:41:25.217"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:25.222" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:25.221" endtime="20231123 16:41:25.223"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.225" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:25.225" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:25.224" endtime="20231123 16:41:25.228"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:25.235" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:25.234" endtime="20231123 16:41:25.236"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.238" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:25.239" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:25.237" endtime="20231123 16:41:25.239"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.242" endtime="20231123 16:41:25.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.249" endtime="20231123 16:41:25.249"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.240" endtime="20231123 16:41:25.250"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.252" endtime="20231123 16:41:25.253"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.258" endtime="20231123 16:41:25.258"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.259" endtime="20231123 16:41:25.262"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.250" endtime="20231123 16:41:25.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.268" endtime="20231123 16:41:25.268"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.269" endtime="20231123 16:41:25.270"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.263" endtime="20231123 16:41:25.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.272" endtime="20231123 16:41:25.272"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.273" endtime="20231123 16:41:25.274"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.271" endtime="20231123 16:41:25.274"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.278" endtime="20231123 16:41:25.278"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.275" endtime="20231123 16:41:25.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:25.281" endtime="20231123 16:41:25.281"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.279" endtime="20231123 16:41:25.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.283" endtime="20231123 16:41:25.284"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.285" endtime="20231123 16:41:25.286"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.287" endtime="20231123 16:41:25.288"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.282" endtime="20231123 16:41:25.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231123 16:41:25.296" level="INFO">${new_text} = #aa99cc</msg>
<status status="PASS" starttime="20231123 16:41:25.292" endtime="20231123 16:41:25.297"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.290" endtime="20231123 16:41:25.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.307" endtime="20231123 16:41:25.308"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.305" endtime="20231123 16:41:25.309"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.314" endtime="20231123 16:41:25.315"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.312" endtime="20231123 16:41:25.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.317" endtime="20231123 16:41:25.317"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.316" endtime="20231123 16:41:25.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.320" endtime="20231123 16:41:25.320"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.319" endtime="20231123 16:41:25.321"/>
</branch>
<status status="PASS" starttime="20231123 16:41:25.240" endtime="20231123 16:41:25.322"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.332" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:25.332" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:25.323" endtime="20231123 16:41:25.333"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:25.338" level="INFO">${text} = #aa99cc</msg>
<status status="PASS" starttime="20231123 16:41:25.336" endtime="20231123 16:41:25.338"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.334" endtime="20231123 16:41:25.339"/>
</branch>
<status status="PASS" starttime="20231123 16:41:25.334" endtime="20231123 16:41:25.340"/>
</if>
<msg timestamp="20231123 16:41:25.341" level="INFO">${text} = #aa99cc</msg>
<status status="PASS" starttime="20231123 16:41:25.208" endtime="20231123 16:41:25.341"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:25.353" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Background Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:25.342" endtime="20231123 16:41:25.353"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:25.354" endtime="20231123 16:41:25.620"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:25.621" endtime="20231123 16:41:25.672"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:25.674" level="INFO">Fills the text '#aa99cc' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:25.673" endtime="20231123 16:41:25.746"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:25.799" level="INFO">Text: '#aa99cc'</msg>
<msg timestamp="20231123 16:41:25.800" level="INFO">${condition} = #aa99cc</msg>
<status status="PASS" starttime="20231123 16:41:25.747" endtime="20231123 16:41:25.800"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.801" endtime="20231123 16:41:25.801"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.802" endtime="20231123 16:41:25.802"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.800" endtime="20231123 16:41:25.802"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:25.800" endtime="20231123 16:41:25.803"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:25.803" endtime="20231123 16:41:25.870"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.871" level="INFO">Length is 7</msg>
<msg timestamp="20231123 16:41:25.871" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231123 16:41:25.870" endtime="20231123 16:41:25.871"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:25.873" level="INFO">${STATE["Background Color"]} = #aa99cc</msg>
<status status="PASS" starttime="20231123 16:41:25.872" endtime="20231123 16:41:25.873"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.872" endtime="20231123 16:41:25.873"/>
</branch>
<status status="PASS" starttime="20231123 16:41:25.872" endtime="20231123 16:41:25.873"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:25.874" endtime="20231123 16:41:25.882"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.207" endtime="20231123 16:41:25.883"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Title Fore Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:25.888" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:25.887" endtime="20231123 16:41:25.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:25.890" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:25.889" endtime="20231123 16:41:25.891"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:25.893" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:25.891" endtime="20231123 16:41:25.894"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.897" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:25.898" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:25.895" endtime="20231123 16:41:25.898"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:25.899" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:25.899" endtime="20231123 16:41:25.899"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.901" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:25.901" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:25.900" endtime="20231123 16:41:25.901"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.902" endtime="20231123 16:41:25.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.902" endtime="20231123 16:41:25.903"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.901" endtime="20231123 16:41:25.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.904" endtime="20231123 16:41:25.904"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.905" endtime="20231123 16:41:25.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.905" endtime="20231123 16:41:25.905"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.903" endtime="20231123 16:41:25.906"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.906" endtime="20231123 16:41:25.907"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.907" endtime="20231123 16:41:25.908"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.906" endtime="20231123 16:41:25.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.912" endtime="20231123 16:41:25.913"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.914" endtime="20231123 16:41:25.914"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.908" endtime="20231123 16:41:25.915"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.915" endtime="20231123 16:41:25.916"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.915" endtime="20231123 16:41:25.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:25.916" endtime="20231123 16:41:25.917"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.916" endtime="20231123 16:41:25.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.918" endtime="20231123 16:41:25.918"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.918" endtime="20231123 16:41:25.919"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.919" endtime="20231123 16:41:25.919"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.917" endtime="20231123 16:41:25.920"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231123 16:41:25.921" level="INFO">${new_text} = #770055</msg>
<status status="PASS" starttime="20231123 16:41:25.920" endtime="20231123 16:41:25.921"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.920" endtime="20231123 16:41:25.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.922" endtime="20231123 16:41:25.922"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.921" endtime="20231123 16:41:25.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.923" endtime="20231123 16:41:25.923"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.922" endtime="20231123 16:41:25.923"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.924" endtime="20231123 16:41:25.924"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.923" endtime="20231123 16:41:25.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:25.925" endtime="20231123 16:41:25.925"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:25.924" endtime="20231123 16:41:25.925"/>
</branch>
<status status="PASS" starttime="20231123 16:41:25.901" endtime="20231123 16:41:25.925"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:25.935" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:25.935" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:25.934" endtime="20231123 16:41:25.936"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:25.939" level="INFO">${text} = #770055</msg>
<status status="PASS" starttime="20231123 16:41:25.937" endtime="20231123 16:41:25.939"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.936" endtime="20231123 16:41:25.940"/>
</branch>
<status status="PASS" starttime="20231123 16:41:25.936" endtime="20231123 16:41:25.940"/>
</if>
<msg timestamp="20231123 16:41:25.941" level="INFO">${text} = #770055</msg>
<status status="PASS" starttime="20231123 16:41:25.885" endtime="20231123 16:41:25.942"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:25.947" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Title Fore Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:25.942" endtime="20231123 16:41:25.948"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:25.948" endtime="20231123 16:41:26.122"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:26.123" endtime="20231123 16:41:26.180"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:26.182" level="INFO">Fills the text '#770055' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:26.181" endtime="20231123 16:41:26.250"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:26.307" level="INFO">Text: '#770055'</msg>
<msg timestamp="20231123 16:41:26.307" level="INFO">${condition} = #770055</msg>
<status status="PASS" starttime="20231123 16:41:26.251" endtime="20231123 16:41:26.308"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.313" endtime="20231123 16:41:26.314"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.315" endtime="20231123 16:41:26.316"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.308" endtime="20231123 16:41:26.317"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:26.308" endtime="20231123 16:41:26.317"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:26.318" endtime="20231123 16:41:26.389"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:26.391" level="INFO">Length is 7</msg>
<msg timestamp="20231123 16:41:26.391" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231123 16:41:26.390" endtime="20231123 16:41:26.392"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:26.398" level="INFO">${STATE["Title Fore Color"]} = #770055</msg>
<status status="PASS" starttime="20231123 16:41:26.396" endtime="20231123 16:41:26.398"/>
</kw>
<status status="PASS" starttime="20231123 16:41:26.394" endtime="20231123 16:41:26.399"/>
</branch>
<status status="PASS" starttime="20231123 16:41:26.393" endtime="20231123 16:41:26.399"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:26.400" endtime="20231123 16:41:26.408"/>
</kw>
<status status="PASS" starttime="20231123 16:41:25.884" endtime="20231123 16:41:26.408"/>
</kw>
<kw name="Click switch &quot;Show Title&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231123 16:41:26.415" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Show Title"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231123 16:41:26.413" endtime="20231123 16:41:26.415"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:26.416" endtime="20231123 16:41:26.545"/>
</kw>
<status status="PASS" starttime="20231123 16:41:26.411" endtime="20231123 16:41:26.547"/>
</kw>
<kw name="Click switch &quot;Ghim&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231123 16:41:26.551" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ghim"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231123 16:41:26.550" endtime="20231123 16:41:26.551"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:26.552" endtime="20231123 16:41:26.722"/>
</kw>
<status status="PASS" starttime="20231123 16:41:26.548" endtime="20231123 16:41:26.722"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:26.725" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:26.724" endtime="20231123 16:41:26.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:26.728" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:26.725" endtime="20231123 16:41:26.729"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:26.731" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:26.730" endtime="20231123 16:41:26.731"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:26.732" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:26.732" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:26.731" endtime="20231123 16:41:26.733"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:26.735" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:26.734" endtime="20231123 16:41:26.735"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:26.737" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:26.737" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:26.736" endtime="20231123 16:41:26.737"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.738" endtime="20231123 16:41:26.739"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.739" endtime="20231123 16:41:26.740"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.738" endtime="20231123 16:41:26.740"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.741" endtime="20231123 16:41:26.742"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.742" endtime="20231123 16:41:26.746"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.747" endtime="20231123 16:41:26.748"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.740" endtime="20231123 16:41:26.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.750" endtime="20231123 16:41:26.751"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.752" endtime="20231123 16:41:26.752"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.749" endtime="20231123 16:41:26.752"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.754" endtime="20231123 16:41:26.754"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.755" endtime="20231123 16:41:26.756"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.753" endtime="20231123 16:41:26.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.757" endtime="20231123 16:41:26.757"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.756" endtime="20231123 16:41:26.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:26.758" endtime="20231123 16:41:26.758"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.757" endtime="20231123 16:41:26.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.764" endtime="20231123 16:41:26.765"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.766" endtime="20231123 16:41:26.766"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.767" endtime="20231123 16:41:26.768"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.759" endtime="20231123 16:41:26.768"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.769" endtime="20231123 16:41:26.770"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.768" endtime="20231123 16:41:26.770"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.771" endtime="20231123 16:41:26.771"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.770" endtime="20231123 16:41:26.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.772" endtime="20231123 16:41:26.772"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.772" endtime="20231123 16:41:26.773"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.773" endtime="20231123 16:41:26.774"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.773" endtime="20231123 16:41:26.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:26.774" endtime="20231123 16:41:26.775"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:26.774" endtime="20231123 16:41:26.775"/>
</branch>
<status status="PASS" starttime="20231123 16:41:26.737" endtime="20231123 16:41:26.775"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:26.782" level="INFO">Length is 13</msg>
<msg timestamp="20231123 16:41:26.782" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231123 16:41:26.775" endtime="20231123 16:41:26.783"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:26.786" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231123 16:41:26.785" endtime="20231123 16:41:26.786"/>
</kw>
<status status="PASS" starttime="20231123 16:41:26.784" endtime="20231123 16:41:26.786"/>
</branch>
<status status="PASS" starttime="20231123 16:41:26.784" endtime="20231123 16:41:26.787"/>
</if>
<msg timestamp="20231123 16:41:26.787" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231123 16:41:26.723" endtime="20231123 16:41:26.788"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:26.789" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:26.788" endtime="20231123 16:41:26.790"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:26.790" endtime="20231123 16:41:27.008"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:27.009" endtime="20231123 16:41:27.055"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:27.057" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:27.056" endtime="20231123 16:41:27.125"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:27.177" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231123 16:41:27.179" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231123 16:41:27.128" endtime="20231123 16:41:27.180"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.182" endtime="20231123 16:41:27.182"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.183" endtime="20231123 16:41:27.184"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.180" endtime="20231123 16:41:27.184"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:27.180" endtime="20231123 16:41:27.185"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:27.185" endtime="20231123 16:41:27.255"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:27.257" level="INFO">Length is 13</msg>
<msg timestamp="20231123 16:41:27.258" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231123 16:41:27.256" endtime="20231123 16:41:27.258"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:27.264" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231123 16:41:27.263" endtime="20231123 16:41:27.265"/>
</kw>
<status status="PASS" starttime="20231123 16:41:27.262" endtime="20231123 16:41:27.265"/>
</branch>
<status status="PASS" starttime="20231123 16:41:27.262" endtime="20231123 16:41:27.265"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:27.266" endtime="20231123 16:41:27.275"/>
</kw>
<status status="PASS" starttime="20231123 16:41:26.723" endtime="20231123 16:41:27.275"/>
</kw>
<kw name="Enter &quot;text&quot; in textarea &quot;Custom CSS&quot; with &quot;{color:1px;}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:27.283" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:27.281" endtime="20231123 16:41:27.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:27.285" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:27.284" endtime="20231123 16:41:27.286"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:27.288" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:27.287" endtime="20231123 16:41:27.289"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:27.291" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:27.292" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:27.290" endtime="20231123 16:41:27.294"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:27.297" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:27.296" endtime="20231123 16:41:27.297"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:27.300" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:27.300" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:27.298" endtime="20231123 16:41:27.301"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.303" endtime="20231123 16:41:27.304"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.305" endtime="20231123 16:41:27.306"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.302" endtime="20231123 16:41:27.306"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.308" endtime="20231123 16:41:27.309"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.312" endtime="20231123 16:41:27.313"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.314" endtime="20231123 16:41:27.315"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.307" endtime="20231123 16:41:27.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.318" endtime="20231123 16:41:27.318"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.319" endtime="20231123 16:41:27.320"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.317" endtime="20231123 16:41:27.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.322" endtime="20231123 16:41:27.322"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.323" endtime="20231123 16:41:27.323"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.321" endtime="20231123 16:41:27.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.325" endtime="20231123 16:41:27.328"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.324" endtime="20231123 16:41:27.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:27.330" endtime="20231123 16:41:27.331"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.329" endtime="20231123 16:41:27.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.333" endtime="20231123 16:41:27.333"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.334" endtime="20231123 16:41:27.334"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.335" endtime="20231123 16:41:27.336"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.332" endtime="20231123 16:41:27.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.339" endtime="20231123 16:41:27.340"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.338" endtime="20231123 16:41:27.341"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.345" endtime="20231123 16:41:27.346"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.342" endtime="20231123 16:41:27.347"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.348" endtime="20231123 16:41:27.349"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.347" endtime="20231123 16:41:27.350"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.351" endtime="20231123 16:41:27.352"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.350" endtime="20231123 16:41:27.353"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.354" endtime="20231123 16:41:27.355"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.353" endtime="20231123 16:41:27.355"/>
</branch>
<status status="PASS" starttime="20231123 16:41:27.301" endtime="20231123 16:41:27.356"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:27.357" level="INFO">Length is 12</msg>
<msg timestamp="20231123 16:41:27.358" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231123 16:41:27.356" endtime="20231123 16:41:27.358"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:27.362" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231123 16:41:27.361" endtime="20231123 16:41:27.363"/>
</kw>
<status status="PASS" starttime="20231123 16:41:27.359" endtime="20231123 16:41:27.363"/>
</branch>
<status status="PASS" starttime="20231123 16:41:27.358" endtime="20231123 16:41:27.364"/>
</if>
<msg timestamp="20231123 16:41:27.364" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231123 16:41:27.280" endtime="20231123 16:41:27.365"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231123 16:41:27.366" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom CSS"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231123 16:41:27.365" endtime="20231123 16:41:27.366"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:27.367" endtime="20231123 16:41:27.422"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:27.425" level="INFO">Fills the text '{color:1px;}' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:27.423" endtime="20231123 16:41:27.483"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:27.539" level="INFO">Text: '{color:1px;}'</msg>
<msg timestamp="20231123 16:41:27.540" level="INFO">${condition} = {color:1px;}</msg>
<status status="PASS" starttime="20231123 16:41:27.484" endtime="20231123 16:41:27.540"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.546" endtime="20231123 16:41:27.547"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:27.548" endtime="20231123 16:41:27.549"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:27.541" endtime="20231123 16:41:27.549"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:27.541" endtime="20231123 16:41:27.550"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:27.551" endtime="20231123 16:41:27.625"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:27.629" level="INFO">Length is 12</msg>
<msg timestamp="20231123 16:41:27.630" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231123 16:41:27.628" endtime="20231123 16:41:27.631"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:27.635" level="INFO">${STATE["Custom CSS"]} = {color:1px;}</msg>
<status status="PASS" starttime="20231123 16:41:27.633" endtime="20231123 16:41:27.635"/>
</kw>
<status status="PASS" starttime="20231123 16:41:27.632" endtime="20231123 16:41:27.636"/>
</branch>
<status status="PASS" starttime="20231123 16:41:27.632" endtime="20231123 16:41:27.637"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:27.637" endtime="20231123 16:41:27.650"/>
</kw>
<status status="PASS" starttime="20231123 16:41:27.279" endtime="20231123 16:41:27.651"/>
</kw>
<kw name="Click &quot;English&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:27.653" endtime="20231123 16:41:27.932"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:28.035" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:27.934" endtime="20231123 16:41:28.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:28.037" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:28.037" endtime="20231123 16:41:28.038"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:28.049" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:28.038" endtime="20231123 16:41:28.050"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:28.051" endtime="20231123 16:41:28.051"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.050" endtime="20231123 16:41:28.052"/>
</branch>
<status status="PASS" starttime="20231123 16:41:28.050" endtime="20231123 16:41:28.052"/>
</if>
<status status="PASS" starttime="20231123 16:41:27.933" endtime="20231123 16:41:28.053"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:28.054" endtime="20231123 16:41:28.062"/>
</kw>
<status status="PASS" starttime="20231123 16:41:27.651" endtime="20231123 16:41:28.062"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:28.066" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:28.066" endtime="20231123 16:41:28.067"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:28.068" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:28.067" endtime="20231123 16:41:28.068"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:28.070" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:28.069" endtime="20231123 16:41:28.070"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.072" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:28.072" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:28.071" endtime="20231123 16:41:28.072"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:28.074" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:28.073" endtime="20231123 16:41:28.075"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.079" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:28.079" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:28.076" endtime="20231123 16:41:28.080"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.081" endtime="20231123 16:41:28.082"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.082" endtime="20231123 16:41:28.083"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.080" endtime="20231123 16:41:28.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:28.087" level="INFO">${random} = Cum enim sit.</msg>
<status status="PASS" starttime="20231123 16:41:28.086" endtime="20231123 16:41:28.088"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231123 16:41:28.090" level="INFO">${words} = ['PO_05', 'Verify', 'that', 'navigating', 'to', 'the', 'right', '"Edit', 'post"', 'page']</msg>
<status status="PASS" starttime="20231123 16:41:28.089" endtime="20231123 16:41:28.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:28.096" level="INFO">${new_text} = PO_05 Cum enim sit.</msg>
<status status="PASS" starttime="20231123 16:41:28.094" endtime="20231123 16:41:28.097"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.084" endtime="20231123 16:41:28.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.098" endtime="20231123 16:41:28.099"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.100" endtime="20231123 16:41:28.101"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.098" endtime="20231123 16:41:28.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.104" endtime="20231123 16:41:28.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.105" endtime="20231123 16:41:28.106"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.102" endtime="20231123 16:41:28.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.108" endtime="20231123 16:41:28.111"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.107" endtime="20231123 16:41:28.111"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:28.113" endtime="20231123 16:41:28.114"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.112" endtime="20231123 16:41:28.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.116" endtime="20231123 16:41:28.117"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.118" endtime="20231123 16:41:28.118"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.119" endtime="20231123 16:41:28.120"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.115" endtime="20231123 16:41:28.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.122" endtime="20231123 16:41:28.122"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.121" endtime="20231123 16:41:28.123"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.124" endtime="20231123 16:41:28.127"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.123" endtime="20231123 16:41:28.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.129" endtime="20231123 16:41:28.130"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.128" endtime="20231123 16:41:28.131"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.133" endtime="20231123 16:41:28.133"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.131" endtime="20231123 16:41:28.133"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.135" endtime="20231123 16:41:28.136"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.134" endtime="20231123 16:41:28.136"/>
</branch>
<status status="PASS" starttime="20231123 16:41:28.080" endtime="20231123 16:41:28.137"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.139" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:28.139" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:28.138" endtime="20231123 16:41:28.139"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:28.144" level="INFO">${text} = PO_05 Cum enim sit.</msg>
<status status="PASS" starttime="20231123 16:41:28.141" endtime="20231123 16:41:28.145"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.140" endtime="20231123 16:41:28.145"/>
</branch>
<status status="PASS" starttime="20231123 16:41:28.140" endtime="20231123 16:41:28.146"/>
</if>
<msg timestamp="20231123 16:41:28.147" level="INFO">${text} = PO_05 Cum enim sit.</msg>
<status status="PASS" starttime="20231123 16:41:28.064" endtime="20231123 16:41:28.147"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:28.149" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:28.148" endtime="20231123 16:41:28.149"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:28.150" endtime="20231123 16:41:28.541"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:28.542" endtime="20231123 16:41:28.578"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:28.580" level="INFO">Fills the text 'PO_05 Cum enim sit.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:28.579" endtime="20231123 16:41:28.636"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:28.674" level="INFO">Text: 'PO_05 Cum enim sit.'</msg>
<msg timestamp="20231123 16:41:28.675" level="INFO">${condition} = PO_05 Cum enim sit.</msg>
<status status="PASS" starttime="20231123 16:41:28.637" endtime="20231123 16:41:28.675"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.680" endtime="20231123 16:41:28.681"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.682" endtime="20231123 16:41:28.682"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.677" endtime="20231123 16:41:28.682"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:28.677" endtime="20231123 16:41:28.683"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:28.683" endtime="20231123 16:41:28.752"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.753" level="INFO">Length is 19</msg>
<msg timestamp="20231123 16:41:28.753" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231123 16:41:28.753" endtime="20231123 16:41:28.754"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:28.755" level="INFO">${STATE["Tiêu đề"]} = PO_05 Cum enim sit.</msg>
<status status="PASS" starttime="20231123 16:41:28.754" endtime="20231123 16:41:28.755"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.754" endtime="20231123 16:41:28.756"/>
</branch>
<status status="PASS" starttime="20231123 16:41:28.754" endtime="20231123 16:41:28.756"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:28.756" endtime="20231123 16:41:28.766"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.063" endtime="20231123 16:41:28.767"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:28.772" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:28.771" endtime="20231123 16:41:28.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:28.774" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:28.773" endtime="20231123 16:41:28.775"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:28.779" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:28.778" endtime="20231123 16:41:28.780"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.782" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:28.782" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:28.781" endtime="20231123 16:41:28.783"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:28.785" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:28.783" endtime="20231123 16:41:28.785"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.787" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:28.787" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:28.786" endtime="20231123 16:41:28.788"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.789" endtime="20231123 16:41:28.790"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.790" endtime="20231123 16:41:28.791"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.788" endtime="20231123 16:41:28.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.793" endtime="20231123 16:41:28.795"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.796" endtime="20231123 16:41:28.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.798" endtime="20231123 16:41:28.798"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.791" endtime="20231123 16:41:28.799"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.800" endtime="20231123 16:41:28.800"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.801" endtime="20231123 16:41:28.801"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.799" endtime="20231123 16:41:28.801"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.802" endtime="20231123 16:41:28.802"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.803" endtime="20231123 16:41:28.803"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.802" endtime="20231123 16:41:28.803"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.804" endtime="20231123 16:41:28.804"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.803" endtime="20231123 16:41:28.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:28.805" endtime="20231123 16:41:28.805"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.804" endtime="20231123 16:41:28.805"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.806" endtime="20231123 16:41:28.806"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.807" endtime="20231123 16:41:28.807"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.808" endtime="20231123 16:41:28.812"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.806" endtime="20231123 16:41:28.813"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.814" endtime="20231123 16:41:28.815"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.813" endtime="20231123 16:41:28.815"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.816" endtime="20231123 16:41:28.816"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.815" endtime="20231123 16:41:28.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.817" endtime="20231123 16:41:28.818"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.817" endtime="20231123 16:41:28.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:28.819" endtime="20231123 16:41:28.819"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:28.818" endtime="20231123 16:41:28.819"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:28.820" level="INFO">${new_text} = Laudantium dolorem distinctio vel occaecati.</msg>
<status status="PASS" starttime="20231123 16:41:28.820" endtime="20231123 16:41:28.820"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.819" endtime="20231123 16:41:28.821"/>
</branch>
<status status="PASS" starttime="20231123 16:41:28.788" endtime="20231123 16:41:28.821"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:28.822" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:28.822" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:28.821" endtime="20231123 16:41:28.822"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:28.825" level="INFO">${text} = Laudantium dolorem distinctio vel occaecati.</msg>
<status status="PASS" starttime="20231123 16:41:28.823" endtime="20231123 16:41:28.829"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.822" endtime="20231123 16:41:28.830"/>
</branch>
<status status="PASS" starttime="20231123 16:41:28.822" endtime="20231123 16:41:28.830"/>
</if>
<msg timestamp="20231123 16:41:28.831" level="INFO">${text} = Laudantium dolorem distinctio vel occaecati.</msg>
<status status="PASS" starttime="20231123 16:41:28.769" endtime="20231123 16:41:28.831"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:28.832" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:28.831" endtime="20231123 16:41:28.832"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:28.833" endtime="20231123 16:41:28.968"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:28.969" endtime="20231123 16:41:29.013"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:29.015" level="INFO">Fills the text 'Laudantium dolorem distinctio vel occaecati.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:29.014" endtime="20231123 16:41:29.087"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:29.131" level="INFO">Text: 'Laudantium dolorem distinctio vel occaecati.'</msg>
<msg timestamp="20231123 16:41:29.132" level="INFO">${condition} = Laudantium dolorem distinctio vel occaecati.</msg>
<status status="PASS" starttime="20231123 16:41:29.088" endtime="20231123 16:41:29.132"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.135" endtime="20231123 16:41:29.135"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.136" endtime="20231123 16:41:29.136"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.133" endtime="20231123 16:41:29.137"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:29.133" endtime="20231123 16:41:29.137"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:29.138" endtime="20231123 16:41:29.221"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.222" level="INFO">Length is 44</msg>
<msg timestamp="20231123 16:41:29.223" level="INFO">${cnt} = 44</msg>
<status status="PASS" starttime="20231123 16:41:29.221" endtime="20231123 16:41:29.223"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:29.228" level="INFO">${STATE["Tác giả"]} = Laudantium dolorem distinctio vel occaecati.</msg>
<status status="PASS" starttime="20231123 16:41:29.224" endtime="20231123 16:41:29.228"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.223" endtime="20231123 16:41:29.230"/>
</branch>
<status status="PASS" starttime="20231123 16:41:29.223" endtime="20231123 16:41:29.231"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:29.232" endtime="20231123 16:41:29.239"/>
</kw>
<status status="PASS" starttime="20231123 16:41:28.768" endtime="20231123 16:41:29.240"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:29.248" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:29.247" endtime="20231123 16:41:29.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:29.250" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:29.249" endtime="20231123 16:41:29.250"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:29.252" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:29.251" endtime="20231123 16:41:29.253"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.255" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:29.255" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:29.254" endtime="20231123 16:41:29.256"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:29.258" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:29.257" endtime="20231123 16:41:29.258"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.263" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:29.264" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:29.261" endtime="20231123 16:41:29.264"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.266" endtime="20231123 16:41:29.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.268" endtime="20231123 16:41:29.268"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.265" endtime="20231123 16:41:29.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.270" endtime="20231123 16:41:29.271"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.272" endtime="20231123 16:41:29.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.273" endtime="20231123 16:41:29.274"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.269" endtime="20231123 16:41:29.274"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.280" endtime="20231123 16:41:29.281"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.282" endtime="20231123 16:41:29.282"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.275" endtime="20231123 16:41:29.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.285" endtime="20231123 16:41:29.286"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.286" endtime="20231123 16:41:29.287"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.284" endtime="20231123 16:41:29.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:29.291" level="INFO">${new_text} = Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.</msg>
<status status="PASS" starttime="20231123 16:41:29.289" endtime="20231123 16:41:29.291"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.288" endtime="20231123 16:41:29.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:29.296" endtime="20231123 16:41:29.296"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.295" endtime="20231123 16:41:29.297"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.298" endtime="20231123 16:41:29.299"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.307" endtime="20231123 16:41:29.308"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.311" endtime="20231123 16:41:29.312"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.297" endtime="20231123 16:41:29.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.314" endtime="20231123 16:41:29.315"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.314" endtime="20231123 16:41:29.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.317" endtime="20231123 16:41:29.317"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.316" endtime="20231123 16:41:29.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.319" endtime="20231123 16:41:29.320"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.318" endtime="20231123 16:41:29.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.322" endtime="20231123 16:41:29.322"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.321" endtime="20231123 16:41:29.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.324" endtime="20231123 16:41:29.327"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.324" endtime="20231123 16:41:29.328"/>
</branch>
<status status="PASS" starttime="20231123 16:41:29.265" endtime="20231123 16:41:29.328"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.330" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:29.330" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:29.329" endtime="20231123 16:41:29.331"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:29.334" level="INFO">${text} = Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.</msg>
<status status="PASS" starttime="20231123 16:41:29.333" endtime="20231123 16:41:29.335"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.331" endtime="20231123 16:41:29.335"/>
</branch>
<status status="PASS" starttime="20231123 16:41:29.331" endtime="20231123 16:41:29.336"/>
</if>
<msg timestamp="20231123 16:41:29.336" level="INFO">${text} = Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.</msg>
<status status="PASS" starttime="20231123 16:41:29.244" endtime="20231123 16:41:29.337"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:29.339" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:29.337" endtime="20231123 16:41:29.339"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:29.340" endtime="20231123 16:41:29.603"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:29.604" endtime="20231123 16:41:29.658"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:29.664" level="INFO">Fills the text 'Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:29.662" endtime="20231123 16:41:29.730"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:29.780" level="INFO">Text: 'Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.'</msg>
<msg timestamp="20231123 16:41:29.780" level="INFO">${condition} = Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.</msg>
<status status="PASS" starttime="20231123 16:41:29.731" endtime="20231123 16:41:29.781"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.783" endtime="20231123 16:41:29.783"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.784" endtime="20231123 16:41:29.785"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.781" endtime="20231123 16:41:29.785"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:29.781" endtime="20231123 16:41:29.786"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:29.787" endtime="20231123 16:41:29.854"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.856" level="INFO">Length is 132</msg>
<msg timestamp="20231123 16:41:29.856" level="INFO">${cnt} = 132</msg>
<status status="PASS" starttime="20231123 16:41:29.855" endtime="20231123 16:41:29.857"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:29.862" level="INFO">${STATE["Mô tả ảnh cover"]} = Molestias rem hic quod ea dolor autem. Cumque rerum voluptatibus. Illum rem vero sed. Quaerat reiciendis inventore ipsa dolores nam.</msg>
<status status="PASS" starttime="20231123 16:41:29.860" endtime="20231123 16:41:29.863"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.858" endtime="20231123 16:41:29.863"/>
</branch>
<status status="PASS" starttime="20231123 16:41:29.857" endtime="20231123 16:41:29.864"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:29.865" endtime="20231123 16:41:29.872"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.241" endtime="20231123 16:41:29.873"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:29.880" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:29.879" endtime="20231123 16:41:29.880"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:29.882" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:29.881" endtime="20231123 16:41:29.882"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:29.884" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:29.883" endtime="20231123 16:41:29.885"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.886" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:29.887" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:29.885" endtime="20231123 16:41:29.887"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:29.889" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:29.888" endtime="20231123 16:41:29.889"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.891" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:29.891" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:29.890" endtime="20231123 16:41:29.892"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.897" endtime="20231123 16:41:29.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.898" endtime="20231123 16:41:29.899"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.895" endtime="20231123 16:41:29.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.901" endtime="20231123 16:41:29.901"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.902" endtime="20231123 16:41:29.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.904" endtime="20231123 16:41:29.905"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.900" endtime="20231123 16:41:29.905"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.907" endtime="20231123 16:41:29.908"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.911" endtime="20231123 16:41:29.911"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.906" endtime="20231123 16:41:29.912"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.913" endtime="20231123 16:41:29.914"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.915" endtime="20231123 16:41:29.916"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.912" endtime="20231123 16:41:29.916"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:29.919" level="INFO">${new_text} = Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.</msg>
<status status="PASS" starttime="20231123 16:41:29.918" endtime="20231123 16:41:29.920"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.917" endtime="20231123 16:41:29.920"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:29.922" endtime="20231123 16:41:29.922"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.921" endtime="20231123 16:41:29.923"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.925" endtime="20231123 16:41:29.927"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.928" endtime="20231123 16:41:29.929"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.949" endtime="20231123 16:41:29.950"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.924" endtime="20231123 16:41:29.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.952" endtime="20231123 16:41:29.952"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.951" endtime="20231123 16:41:29.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.953" endtime="20231123 16:41:29.954"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.953" endtime="20231123 16:41:29.954"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.955" endtime="20231123 16:41:29.956"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.955" endtime="20231123 16:41:29.956"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.957" endtime="20231123 16:41:29.958"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.957" endtime="20231123 16:41:29.958"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:29.960" endtime="20231123 16:41:29.960"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:29.959" endtime="20231123 16:41:29.961"/>
</branch>
<status status="PASS" starttime="20231123 16:41:29.895" endtime="20231123 16:41:29.961"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:29.964" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:29.964" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:29.962" endtime="20231123 16:41:29.964"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:29.969" level="INFO">${text} = Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.</msg>
<status status="PASS" starttime="20231123 16:41:29.967" endtime="20231123 16:41:29.970"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.966" endtime="20231123 16:41:29.970"/>
</branch>
<status status="PASS" starttime="20231123 16:41:29.965" endtime="20231123 16:41:29.971"/>
</if>
<msg timestamp="20231123 16:41:29.972" level="INFO">${text} = Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.</msg>
<status status="PASS" starttime="20231123 16:41:29.876" endtime="20231123 16:41:29.972"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231123 16:41:29.975" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231123 16:41:29.973" endtime="20231123 16:41:29.977"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:29.978" endtime="20231123 16:41:30.028"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:30.030" level="INFO">Fills the text 'Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:30.029" endtime="20231123 16:41:30.116"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:30.165" level="INFO">Text: 'Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.'</msg>
<msg timestamp="20231123 16:41:30.165" level="INFO">${condition} = Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.</msg>
<status status="PASS" starttime="20231123 16:41:30.117" endtime="20231123 16:41:30.166"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.169" endtime="20231123 16:41:30.169"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.170" endtime="20231123 16:41:30.171"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.167" endtime="20231123 16:41:30.172"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:30.167" endtime="20231123 16:41:30.172"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:30.174" endtime="20231123 16:41:30.240"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.242" level="INFO">Length is 115</msg>
<msg timestamp="20231123 16:41:30.245" level="INFO">${cnt} = 115</msg>
<status status="PASS" starttime="20231123 16:41:30.241" endtime="20231123 16:41:30.246"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:30.250" level="INFO">${STATE["Giới thiệu"]} = Corporis consectetur accusantium officiis asperiores consectetur ratione. Voluptatem alias molestiae distinctio id.</msg>
<status status="PASS" starttime="20231123 16:41:30.248" endtime="20231123 16:41:30.250"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.247" endtime="20231123 16:41:30.251"/>
</branch>
<status status="PASS" starttime="20231123 16:41:30.247" endtime="20231123 16:41:30.252"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:30.253" endtime="20231123 16:41:30.264"/>
</kw>
<status status="PASS" starttime="20231123 16:41:29.874" endtime="20231123 16:41:30.265"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:30.270" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:30.269" endtime="20231123 16:41:30.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:30.272" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:30.271" endtime="20231123 16:41:30.272"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:30.274" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:30.273" endtime="20231123 16:41:30.275"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.280" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:30.280" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:30.278" endtime="20231123 16:41:30.281"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:30.283" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:30.282" endtime="20231123 16:41:30.284"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.285" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:30.286" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:30.285" endtime="20231123 16:41:30.286"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.288" endtime="20231123 16:41:30.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.290" endtime="20231123 16:41:30.290"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.287" endtime="20231123 16:41:30.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.296" endtime="20231123 16:41:30.297"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.298" endtime="20231123 16:41:30.298"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.299" endtime="20231123 16:41:30.300"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.291" endtime="20231123 16:41:30.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.302" endtime="20231123 16:41:30.302"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.302" endtime="20231123 16:41:30.303"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.301" endtime="20231123 16:41:30.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.305" endtime="20231123 16:41:30.305"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.306" endtime="20231123 16:41:30.306"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.304" endtime="20231123 16:41:30.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:30.313" level="INFO">${new_text} = Fuga doloribus delectus facere molestiae itaque. Ipsa inventore nam quae architecto eius laboriosam. Atque doloremque laborum cumque.</msg>
<status status="PASS" starttime="20231123 16:41:30.308" endtime="20231123 16:41:30.313"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.307" endtime="20231123 16:41:30.314"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:30.316" endtime="20231123 16:41:30.316"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.314" endtime="20231123 16:41:30.317"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.318" endtime="20231123 16:41:30.319"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.320" endtime="20231123 16:41:30.320"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.321" endtime="20231123 16:41:30.322"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.318" endtime="20231123 16:41:30.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.324" endtime="20231123 16:41:30.325"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.324" endtime="20231123 16:41:30.325"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.330" endtime="20231123 16:41:30.330"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.329" endtime="20231123 16:41:30.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.332" endtime="20231123 16:41:30.332"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.331" endtime="20231123 16:41:30.333"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.334" endtime="20231123 16:41:30.334"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.333" endtime="20231123 16:41:30.335"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.336" endtime="20231123 16:41:30.337"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.335" endtime="20231123 16:41:30.337"/>
</branch>
<status status="PASS" starttime="20231123 16:41:30.287" endtime="20231123 16:41:30.338"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.339" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:30.340" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:30.338" endtime="20231123 16:41:30.340"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:30.346" level="INFO">${text} = Fuga doloribus delectus facere molestiae itaque. Ipsa inventore nam quae architecto eius laboriosam. Atque doloremque laborum cumque.</msg>
<status status="PASS" starttime="20231123 16:41:30.344" endtime="20231123 16:41:30.347"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.341" endtime="20231123 16:41:30.348"/>
</branch>
<status status="PASS" starttime="20231123 16:41:30.341" endtime="20231123 16:41:30.348"/>
</if>
<msg timestamp="20231123 16:41:30.349" level="INFO">${text} = Fuga doloribus delectus facere molestiae itaque. Ipsa inventore nam quae architecto eius laboriosam. Atque doloremque laborum cumque.</msg>
<status status="PASS" starttime="20231123 16:41:30.267" endtime="20231123 16:41:30.349"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231123 16:41:30.352" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231123 16:41:30.350" endtime="20231123 16:41:30.352"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:30.353" endtime="20231123 16:41:30.412"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:30.415" level="INFO">Fills the text 'Fuga doloribus delectus facere molestiae itaque. Ipsa inventore nam quae architecto eius laboriosam. Atque doloremque laborum cumque.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:30.413" endtime="20231123 16:41:30.460"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.266" endtime="20231123 16:41:30.461"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:30.468" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:30.466" endtime="20231123 16:41:30.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:30.470" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:30.469" endtime="20231123 16:41:30.471"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:30.473" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:30.472" endtime="20231123 16:41:30.473"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.475" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:30.476" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:30.474" endtime="20231123 16:41:30.477"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:30.480" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:30.479" endtime="20231123 16:41:30.481"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.483" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:30.483" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:30.482" endtime="20231123 16:41:30.484"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.486" endtime="20231123 16:41:30.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.488" endtime="20231123 16:41:30.488"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.485" endtime="20231123 16:41:30.489"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.491" endtime="20231123 16:41:30.491"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.494" endtime="20231123 16:41:30.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.495" endtime="20231123 16:41:30.496"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.490" endtime="20231123 16:41:30.497"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.499" endtime="20231123 16:41:30.500"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.501" endtime="20231123 16:41:30.502"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.497" endtime="20231123 16:41:30.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.504" endtime="20231123 16:41:30.504"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.505" endtime="20231123 16:41:30.506"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.503" endtime="20231123 16:41:30.507"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.508" endtime="20231123 16:41:30.511"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.507" endtime="20231123 16:41:30.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:30.514" endtime="20231123 16:41:30.515"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.513" endtime="20231123 16:41:30.516"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.518" endtime="20231123 16:41:30.518"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.519" endtime="20231123 16:41:30.520"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.520" endtime="20231123 16:41:30.521"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.517" endtime="20231123 16:41:30.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.523" endtime="20231123 16:41:30.524"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.522" endtime="20231123 16:41:30.524"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.528" endtime="20231123 16:41:30.528"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.525" endtime="20231123 16:41:30.529"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.531" endtime="20231123 16:41:30.532"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.529" endtime="20231123 16:41:30.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.534" endtime="20231123 16:41:30.535"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.533" endtime="20231123 16:41:30.535"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:30.584" level="INFO">${new_text} = Ut recusandae cum pariatur ab nemo animi.</msg>
<status status="PASS" starttime="20231123 16:41:30.536" endtime="20231123 16:41:30.584"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.535" endtime="20231123 16:41:30.585"/>
</branch>
<status status="PASS" starttime="20231123 16:41:30.485" endtime="20231123 16:41:30.586"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.588" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:30.588" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:30.587" endtime="20231123 16:41:30.589"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:30.594" level="INFO">${text} = Ut recusandae cum pariatur ab nemo animi.</msg>
<status status="PASS" starttime="20231123 16:41:30.591" endtime="20231123 16:41:30.594"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.590" endtime="20231123 16:41:30.595"/>
</branch>
<status status="PASS" starttime="20231123 16:41:30.589" endtime="20231123 16:41:30.595"/>
</if>
<msg timestamp="20231123 16:41:30.596" level="INFO">${text} = Ut recusandae cum pariatur ab nemo animi.</msg>
<status status="PASS" starttime="20231123 16:41:30.464" endtime="20231123 16:41:30.596"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:30.600" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:30.597" endtime="20231123 16:41:30.600"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:30.601" endtime="20231123 16:41:30.708"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:30.710" endtime="20231123 16:41:30.755"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:30.757" level="INFO">Fills the text 'Ut recusandae cum pariatur ab nemo animi.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:30.756" endtime="20231123 16:41:30.818"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:30.875" level="INFO">Text: 'Ut recusandae cum pariatur ab nemo animi.'</msg>
<msg timestamp="20231123 16:41:30.876" level="INFO">${condition} = Ut recusandae cum pariatur ab nemo animi.</msg>
<status status="PASS" starttime="20231123 16:41:30.819" endtime="20231123 16:41:30.877"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.880" endtime="20231123 16:41:30.881"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:30.882" endtime="20231123 16:41:30.883"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:30.878" endtime="20231123 16:41:30.884"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:30.878" endtime="20231123 16:41:30.884"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:30.885" endtime="20231123 16:41:30.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.956" level="INFO">Length is 41</msg>
<msg timestamp="20231123 16:41:30.956" level="INFO">${cnt} = 41</msg>
<status status="PASS" starttime="20231123 16:41:30.955" endtime="20231123 16:41:30.957"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:30.963" level="INFO">${STATE["Tiêu đề SEO"]} = Ut recusandae cum pariatur ab nemo animi.</msg>
<status status="PASS" starttime="20231123 16:41:30.961" endtime="20231123 16:41:30.964"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.958" endtime="20231123 16:41:30.964"/>
</branch>
<status status="PASS" starttime="20231123 16:41:30.958" endtime="20231123 16:41:30.965"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:30.966" endtime="20231123 16:41:30.974"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.462" endtime="20231123 16:41:30.975"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:30.981" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:30.980" endtime="20231123 16:41:30.981"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:30.983" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:30.982" endtime="20231123 16:41:30.984"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:30.986" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:30.985" endtime="20231123 16:41:30.986"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:30.988" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:30.989" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:30.987" endtime="20231123 16:41:30.989"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:30.991" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:30.990" endtime="20231123 16:41:30.991"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.001" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:31.002" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:30.999" endtime="20231123 16:41:31.004"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.012" endtime="20231123 16:41:31.013"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.014" endtime="20231123 16:41:31.014"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.008" endtime="20231123 16:41:31.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.016" endtime="20231123 16:41:31.017"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.018" endtime="20231123 16:41:31.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.019" endtime="20231123 16:41:31.020"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.015" endtime="20231123 16:41:31.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.022" endtime="20231123 16:41:31.022"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.023" endtime="20231123 16:41:31.024"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.021" endtime="20231123 16:41:31.024"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.028" endtime="20231123 16:41:31.029"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.030" endtime="20231123 16:41:31.031"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.026" endtime="20231123 16:41:31.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.033" endtime="20231123 16:41:31.034"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.032" endtime="20231123 16:41:31.034"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:31.036" endtime="20231123 16:41:31.037"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.035" endtime="20231123 16:41:31.038"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.046" endtime="20231123 16:41:31.047"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.048" endtime="20231123 16:41:31.048"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.049" endtime="20231123 16:41:31.050"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.044" endtime="20231123 16:41:31.050"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.052" endtime="20231123 16:41:31.052"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.051" endtime="20231123 16:41:31.053"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.054" endtime="20231123 16:41:31.055"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.053" endtime="20231123 16:41:31.055"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.057" endtime="20231123 16:41:31.058"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.056" endtime="20231123 16:41:31.058"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.061" endtime="20231123 16:41:31.062"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.060" endtime="20231123 16:41:31.063"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:31.065" level="INFO">${new_text} = Itaque iste aperiam optio consectetur facilis velit.</msg>
<status status="PASS" starttime="20231123 16:41:31.064" endtime="20231123 16:41:31.065"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.063" endtime="20231123 16:41:31.066"/>
</branch>
<status status="PASS" starttime="20231123 16:41:31.007" endtime="20231123 16:41:31.066"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.067" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:31.068" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:31.067" endtime="20231123 16:41:31.068"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:31.071" level="INFO">${text} = Itaque iste aperiam optio consectetur facilis velit.</msg>
<status status="PASS" starttime="20231123 16:41:31.070" endtime="20231123 16:41:31.072"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.069" endtime="20231123 16:41:31.072"/>
</branch>
<status status="PASS" starttime="20231123 16:41:31.069" endtime="20231123 16:41:31.073"/>
</if>
<msg timestamp="20231123 16:41:31.074" level="INFO">${text} = Itaque iste aperiam optio consectetur facilis velit.</msg>
<status status="PASS" starttime="20231123 16:41:30.978" endtime="20231123 16:41:31.074"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:31.078" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:31.075" endtime="20231123 16:41:31.079"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:31.080" endtime="20231123 16:41:31.160"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:31.161" endtime="20231123 16:41:31.202"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:31.204" level="INFO">Fills the text 'Itaque iste aperiam optio consectetur facilis velit.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:31.203" endtime="20231123 16:41:31.271"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:31.320" level="INFO">Text: 'Itaque iste aperiam optio consectetur facilis velit.'</msg>
<msg timestamp="20231123 16:41:31.321" level="INFO">${condition} = Itaque iste aperiam optio consectetur facilis velit.</msg>
<status status="PASS" starttime="20231123 16:41:31.272" endtime="20231123 16:41:31.321"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.323" endtime="20231123 16:41:31.324"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.325" endtime="20231123 16:41:31.327"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.322" endtime="20231123 16:41:31.328"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:31.322" endtime="20231123 16:41:31.329"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:31.330" endtime="20231123 16:41:31.406"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.408" level="INFO">Length is 52</msg>
<msg timestamp="20231123 16:41:31.408" level="INFO">${cnt} = 52</msg>
<status status="PASS" starttime="20231123 16:41:31.407" endtime="20231123 16:41:31.410"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:31.415" level="INFO">${STATE["Từ khóa SEO"]} = Itaque iste aperiam optio consectetur facilis velit.</msg>
<status status="PASS" starttime="20231123 16:41:31.414" endtime="20231123 16:41:31.415"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.413" endtime="20231123 16:41:31.416"/>
</branch>
<status status="PASS" starttime="20231123 16:41:31.413" endtime="20231123 16:41:31.416"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:31.417" endtime="20231123 16:41:31.424"/>
</kw>
<status status="PASS" starttime="20231123 16:41:30.976" endtime="20231123 16:41:31.424"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:31.431" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:31.430" endtime="20231123 16:41:31.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:31.434" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:31.433" endtime="20231123 16:41:31.434"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:31.436" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:31.435" endtime="20231123 16:41:31.437"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.439" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:31.439" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:31.438" endtime="20231123 16:41:31.440"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:31.445" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:31.441" endtime="20231123 16:41:31.445"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.448" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:31.449" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:31.447" endtime="20231123 16:41:31.450"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.456" endtime="20231123 16:41:31.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.457" endtime="20231123 16:41:31.458"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.451" endtime="20231123 16:41:31.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.464" endtime="20231123 16:41:31.465"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.466" endtime="20231123 16:41:31.466"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.468" endtime="20231123 16:41:31.468"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.463" endtime="20231123 16:41:31.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.470" endtime="20231123 16:41:31.471"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.471" endtime="20231123 16:41:31.472"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.469" endtime="20231123 16:41:31.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.474" endtime="20231123 16:41:31.474"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.478" endtime="20231123 16:41:31.479"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.473" endtime="20231123 16:41:31.479"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:31.482" level="INFO">${new_text} = Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.</msg>
<status status="PASS" starttime="20231123 16:41:31.481" endtime="20231123 16:41:31.483"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.480" endtime="20231123 16:41:31.483"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:31.485" endtime="20231123 16:41:31.485"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.484" endtime="20231123 16:41:31.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.488" endtime="20231123 16:41:31.488"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.489" endtime="20231123 16:41:31.489"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.490" endtime="20231123 16:41:31.491"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.487" endtime="20231123 16:41:31.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.531" endtime="20231123 16:41:31.531"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.520" endtime="20231123 16:41:31.532"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.533" endtime="20231123 16:41:31.534"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.532" endtime="20231123 16:41:31.534"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.536" endtime="20231123 16:41:31.537"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.535" endtime="20231123 16:41:31.538"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.540" endtime="20231123 16:41:31.541"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.539" endtime="20231123 16:41:31.542"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.545" endtime="20231123 16:41:31.546"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.544" endtime="20231123 16:41:31.546"/>
</branch>
<status status="PASS" starttime="20231123 16:41:31.450" endtime="20231123 16:41:31.547"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.548" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:31.548" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:31.547" endtime="20231123 16:41:31.549"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:31.551" level="INFO">${text} = Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.</msg>
<status status="PASS" starttime="20231123 16:41:31.550" endtime="20231123 16:41:31.552"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.549" endtime="20231123 16:41:31.552"/>
</branch>
<status status="PASS" starttime="20231123 16:41:31.549" endtime="20231123 16:41:31.553"/>
</if>
<msg timestamp="20231123 16:41:31.553" level="INFO">${text} = Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.</msg>
<status status="PASS" starttime="20231123 16:41:31.429" endtime="20231123 16:41:31.553"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231123 16:41:31.555" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231123 16:41:31.554" endtime="20231123 16:41:31.555"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:31.556" endtime="20231123 16:41:31.621"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:31.623" level="INFO">Fills the text 'Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:31.622" endtime="20231123 16:41:31.673"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:31.729" level="INFO">Text: 'Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.'</msg>
<msg timestamp="20231123 16:41:31.730" level="INFO">${condition} = Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.</msg>
<status status="PASS" starttime="20231123 16:41:31.674" endtime="20231123 16:41:31.730"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.732" endtime="20231123 16:41:31.733"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:31.734" endtime="20231123 16:41:31.734"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:31.731" endtime="20231123 16:41:31.735"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:31.731" endtime="20231123 16:41:31.735"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:31.737" endtime="20231123 16:41:31.805"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:31.807" level="INFO">Length is 98</msg>
<msg timestamp="20231123 16:41:31.808" level="INFO">${cnt} = 98</msg>
<status status="PASS" starttime="20231123 16:41:31.806" endtime="20231123 16:41:31.808"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:31.814" level="INFO">${STATE["Mô tả SEO"]} = Exercitationem ad vero ipsum expedita quisquam saepe. Aperiam temporibus maiores optio fugit sunt.</msg>
<status status="PASS" starttime="20231123 16:41:31.813" endtime="20231123 16:41:31.815"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.811" endtime="20231123 16:41:31.816"/>
</branch>
<status status="PASS" starttime="20231123 16:41:31.809" endtime="20231123 16:41:31.816"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:31.817" endtime="20231123 16:41:31.825"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.426" endtime="20231123 16:41:31.828"/>
</kw>
<kw name="Click &quot;Tiếng Việt&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:31.831" endtime="20231123 16:41:32.084"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:32.189" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:32.086" endtime="20231123 16:41:32.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.191" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:32.190" endtime="20231123 16:41:32.191"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:32.230" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:32.192" endtime="20231123 16:41:32.231"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:32.233" endtime="20231123 16:41:32.234"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.232" endtime="20231123 16:41:32.234"/>
</branch>
<status status="PASS" starttime="20231123 16:41:32.232" endtime="20231123 16:41:32.235"/>
</if>
<status status="PASS" starttime="20231123 16:41:32.085" endtime="20231123 16:41:32.235"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:32.236" endtime="20231123 16:41:32.249"/>
</kw>
<status status="PASS" starttime="20231123 16:41:31.829" endtime="20231123 16:41:32.250"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.254" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:32.253" endtime="20231123 16:41:32.254"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.256" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:32.255" endtime="20231123 16:41:32.257"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:32.259" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:32.257" endtime="20231123 16:41:32.260"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.263" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:32.264" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:32.262" endtime="20231123 16:41:32.265"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:32.269" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:32.267" endtime="20231123 16:41:32.269"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.271" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:32.272" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:32.270" endtime="20231123 16:41:32.272"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.275" endtime="20231123 16:41:32.282"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.282" endtime="20231123 16:41:32.284"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.273" endtime="20231123 16:41:32.284"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:32.303" level="INFO">${random} = Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.300" endtime="20231123 16:41:32.303"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231123 16:41:32.306" level="INFO">${words} = ['PO_05', 'Verify', 'that', 'navigating', 'to', 'the', 'right', '"Edit', 'post"', 'page']</msg>
<status status="PASS" starttime="20231123 16:41:32.304" endtime="20231123 16:41:32.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.341" level="INFO">${new_text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.310" endtime="20231123 16:41:32.342"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.291" endtime="20231123 16:41:32.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.347" endtime="20231123 16:41:32.347"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.348" endtime="20231123 16:41:32.349"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.346" endtime="20231123 16:41:32.349"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.351" endtime="20231123 16:41:32.352"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.353" endtime="20231123 16:41:32.354"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.350" endtime="20231123 16:41:32.355"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.357" endtime="20231123 16:41:32.358"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.356" endtime="20231123 16:41:32.358"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:32.449" endtime="20231123 16:41:32.449"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.445" endtime="20231123 16:41:32.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.451" endtime="20231123 16:41:32.452"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.453" endtime="20231123 16:41:32.455"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.456" endtime="20231123 16:41:32.457"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.450" endtime="20231123 16:41:32.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.463" endtime="20231123 16:41:32.464"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.458" endtime="20231123 16:41:32.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.468" endtime="20231123 16:41:32.469"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.467" endtime="20231123 16:41:32.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.471" endtime="20231123 16:41:32.471"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.470" endtime="20231123 16:41:32.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.473" endtime="20231123 16:41:32.474"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.472" endtime="20231123 16:41:32.475"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.480" endtime="20231123 16:41:32.481"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.475" endtime="20231123 16:41:32.481"/>
</branch>
<status status="PASS" starttime="20231123 16:41:32.273" endtime="20231123 16:41:32.482"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.484" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:32.485" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:32.483" endtime="20231123 16:41:32.485"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:32.489" level="INFO">${text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.488" endtime="20231123 16:41:32.506"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.486" endtime="20231123 16:41:32.507"/>
</branch>
<status status="PASS" starttime="20231123 16:41:32.486" endtime="20231123 16:41:32.507"/>
</if>
<msg timestamp="20231123 16:41:32.508" level="INFO">${text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.252" endtime="20231123 16:41:32.508"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:32.514" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:32.513" endtime="20231123 16:41:32.515"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:32.516" endtime="20231123 16:41:32.614"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:32.615" endtime="20231123 16:41:32.657"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:32.662" level="INFO">Fills the text 'PO_05 Odit reprehenderit.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:32.658" endtime="20231123 16:41:32.723"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:32.770" level="INFO">Text: 'PO_05 Odit reprehenderit.'</msg>
<msg timestamp="20231123 16:41:32.771" level="INFO">${condition} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.724" endtime="20231123 16:41:32.771"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.774" endtime="20231123 16:41:32.775"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.776" endtime="20231123 16:41:32.778"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.772" endtime="20231123 16:41:32.779"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:32.772" endtime="20231123 16:41:32.780"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:32.781" endtime="20231123 16:41:32.856"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.861" level="INFO">Length is 25</msg>
<msg timestamp="20231123 16:41:32.862" level="INFO">${cnt} = 25</msg>
<status status="PASS" starttime="20231123 16:41:32.858" endtime="20231123 16:41:32.863"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:32.866" level="INFO">${STATE["Tiêu đề"]} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.865" endtime="20231123 16:41:32.867"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.864" endtime="20231123 16:41:32.868"/>
</branch>
<status status="PASS" starttime="20231123 16:41:32.864" endtime="20231123 16:41:32.868"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:32.869" endtime="20231123 16:41:32.884"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.250" endtime="20231123 16:41:32.884"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:32.888" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231123 16:41:32.887" endtime="20231123 16:41:32.889"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.891" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:32.891" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231123 16:41:32.890" endtime="20231123 16:41:32.892"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.899" level="INFO">${text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.896" endtime="20231123 16:41:32.900"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.894" endtime="20231123 16:41:32.901"/>
</branch>
<status status="PASS" starttime="20231123 16:41:32.894" endtime="20231123 16:41:32.901"/>
</if>
<msg timestamp="20231123 16:41:32.902" level="INFO">${text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.885" endtime="20231123 16:41:32.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.905" level="INFO">${name} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:32.904" endtime="20231123 16:41:32.905"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.913" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:32.912" endtime="20231123 16:41:32.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:32.915" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:32.914" endtime="20231123 16:41:32.915"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:32.917" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:32.916" endtime="20231123 16:41:32.918"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.919" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:32.920" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:32.918" endtime="20231123 16:41:32.920"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:32.922" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:32.921" endtime="20231123 16:41:32.923"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:32.928" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:32.928" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:32.924" endtime="20231123 16:41:32.929"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.931" endtime="20231123 16:41:32.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.932" endtime="20231123 16:41:32.933"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.929" endtime="20231123 16:41:32.933"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.936" endtime="20231123 16:41:32.937"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.938" endtime="20231123 16:41:32.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.940" endtime="20231123 16:41:32.940"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.934" endtime="20231123 16:41:32.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.946" endtime="20231123 16:41:32.947"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.948" endtime="20231123 16:41:32.949"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.945" endtime="20231123 16:41:32.949"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.951" endtime="20231123 16:41:32.951"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.952" endtime="20231123 16:41:32.953"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.950" endtime="20231123 16:41:32.954"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.955" endtime="20231123 16:41:32.956"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.954" endtime="20231123 16:41:32.957"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:32.958" endtime="20231123 16:41:32.961"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.957" endtime="20231123 16:41:32.964"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.966" endtime="20231123 16:41:32.967"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.967" endtime="20231123 16:41:32.968"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.969" endtime="20231123 16:41:32.970"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.965" endtime="20231123 16:41:32.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.972" endtime="20231123 16:41:32.973"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.971" endtime="20231123 16:41:32.974"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.977" endtime="20231123 16:41:32.978"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.974" endtime="20231123 16:41:32.979"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.981" endtime="20231123 16:41:32.982"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.980" endtime="20231123 16:41:32.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:32.985" endtime="20231123 16:41:32.986"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:32.983" endtime="20231123 16:41:32.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:32.990" level="INFO">${new_text} = Sunt saepe eveniet rerum enim unde natus sint.</msg>
<status status="PASS" starttime="20231123 16:41:32.989" endtime="20231123 16:41:32.991"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.987" endtime="20231123 16:41:32.991"/>
</branch>
<status status="PASS" starttime="20231123 16:41:32.929" endtime="20231123 16:41:32.995"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.000" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:33.002" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:32.996" endtime="20231123 16:41:33.003"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:33.011" level="INFO">${text} = Sunt saepe eveniet rerum enim unde natus sint.</msg>
<status status="PASS" starttime="20231123 16:41:33.008" endtime="20231123 16:41:33.011"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.006" endtime="20231123 16:41:33.012"/>
</branch>
<status status="PASS" starttime="20231123 16:41:33.006" endtime="20231123 16:41:33.013"/>
</if>
<msg timestamp="20231123 16:41:33.014" level="INFO">${text} = Sunt saepe eveniet rerum enim unde natus sint.</msg>
<status status="PASS" starttime="20231123 16:41:32.908" endtime="20231123 16:41:33.015"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:33.017" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:33.015" endtime="20231123 16:41:33.017"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:33.018" endtime="20231123 16:41:33.107"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:33.108" endtime="20231123 16:41:33.152"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:33.154" level="INFO">Fills the text 'Sunt saepe eveniet rerum enim unde natus sint.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:33.153" endtime="20231123 16:41:33.220"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:33.270" level="INFO">Text: 'Sunt saepe eveniet rerum enim unde natus sint.'</msg>
<msg timestamp="20231123 16:41:33.270" level="INFO">${condition} = Sunt saepe eveniet rerum enim unde natus sint.</msg>
<status status="PASS" starttime="20231123 16:41:33.221" endtime="20231123 16:41:33.271"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.273" endtime="20231123 16:41:33.274"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.275" endtime="20231123 16:41:33.278"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.271" endtime="20231123 16:41:33.279"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:33.271" endtime="20231123 16:41:33.280"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:33.281" endtime="20231123 16:41:33.357"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.362" level="INFO">Length is 46</msg>
<msg timestamp="20231123 16:41:33.362" level="INFO">${cnt} = 46</msg>
<status status="PASS" starttime="20231123 16:41:33.358" endtime="20231123 16:41:33.363"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:33.368" level="INFO">${STATE["Tác giả"]} = Sunt saepe eveniet rerum enim unde natus sint.</msg>
<status status="PASS" starttime="20231123 16:41:33.366" endtime="20231123 16:41:33.368"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.364" endtime="20231123 16:41:33.369"/>
</branch>
<status status="PASS" starttime="20231123 16:41:33.364" endtime="20231123 16:41:33.369"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:33.370" endtime="20231123 16:41:33.384"/>
</kw>
<status status="PASS" starttime="20231123 16:41:32.907" endtime="20231123 16:41:33.385"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:33.390" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:33.389" endtime="20231123 16:41:33.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:33.394" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:33.391" endtime="20231123 16:41:33.394"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:33.397" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:33.395" endtime="20231123 16:41:33.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.400" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:33.400" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:33.399" endtime="20231123 16:41:33.400"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:33.402" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:33.401" endtime="20231123 16:41:33.403"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.404" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:33.405" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:33.403" endtime="20231123 16:41:33.405"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.407" endtime="20231123 16:41:33.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.408" endtime="20231123 16:41:33.411"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.406" endtime="20231123 16:41:33.412"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.414" endtime="20231123 16:41:33.414"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.415" endtime="20231123 16:41:33.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.417" endtime="20231123 16:41:33.417"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.412" endtime="20231123 16:41:33.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.420" endtime="20231123 16:41:33.420"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.421" endtime="20231123 16:41:33.422"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.418" endtime="20231123 16:41:33.422"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.424" endtime="20231123 16:41:33.425"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.427" endtime="20231123 16:41:33.428"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.423" endtime="20231123 16:41:33.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:33.432" level="INFO">${new_text} = Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:33.431" endtime="20231123 16:41:33.432"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.430" endtime="20231123 16:41:33.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:33.434" endtime="20231123 16:41:33.434"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.433" endtime="20231123 16:41:33.435"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.436" endtime="20231123 16:41:33.436"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.437" endtime="20231123 16:41:33.437"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.470" endtime="20231123 16:41:33.472"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.435" endtime="20231123 16:41:33.473"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.475" endtime="20231123 16:41:33.477"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.473" endtime="20231123 16:41:33.478"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.479" endtime="20231123 16:41:33.480"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.479" endtime="20231123 16:41:33.481"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.482" endtime="20231123 16:41:33.482"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.481" endtime="20231123 16:41:33.483"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.484" endtime="20231123 16:41:33.485"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.484" endtime="20231123 16:41:33.485"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.487" endtime="20231123 16:41:33.487"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.486" endtime="20231123 16:41:33.488"/>
</branch>
<status status="PASS" starttime="20231123 16:41:33.406" endtime="20231123 16:41:33.488"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.490" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:33.490" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:33.489" endtime="20231123 16:41:33.490"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:33.495" level="INFO">${text} = Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:33.493" endtime="20231123 16:41:33.495"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.491" endtime="20231123 16:41:33.496"/>
</branch>
<status status="PASS" starttime="20231123 16:41:33.491" endtime="20231123 16:41:33.497"/>
</if>
<msg timestamp="20231123 16:41:33.497" level="INFO">${text} = Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:33.387" endtime="20231123 16:41:33.497"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:33.499" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:33.498" endtime="20231123 16:41:33.500"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:33.500" endtime="20231123 16:41:33.706"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:33.707" endtime="20231123 16:41:33.758"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:33.764" level="INFO">Fills the text 'Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:33.763" endtime="20231123 16:41:33.823"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:33.869" level="INFO">Text: 'Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.'</msg>
<msg timestamp="20231123 16:41:33.870" level="INFO">${condition} = Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:33.823" endtime="20231123 16:41:33.871"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.873" endtime="20231123 16:41:33.874"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:33.874" endtime="20231123 16:41:33.875"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:33.871" endtime="20231123 16:41:33.878"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:33.871" endtime="20231123 16:41:33.880"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:33.881" endtime="20231123 16:41:33.955"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.957" level="INFO">Length is 125</msg>
<msg timestamp="20231123 16:41:33.958" level="INFO">${cnt} = 125</msg>
<status status="PASS" starttime="20231123 16:41:33.956" endtime="20231123 16:41:33.958"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:33.966" level="INFO">${STATE["Mô tả ảnh cover"]} = Praesentium neque repellat incidunt libero. Consectetur cum officia sed est voluptatem pariatur. Ipsa hic occaecati nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:33.964" endtime="20231123 16:41:33.966"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.962" endtime="20231123 16:41:33.967"/>
</branch>
<status status="PASS" starttime="20231123 16:41:33.962" endtime="20231123 16:41:33.967"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:33.968" endtime="20231123 16:41:33.980"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.386" endtime="20231123 16:41:33.981"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:33.986" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:33.985" endtime="20231123 16:41:33.986"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:33.988" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:33.987" endtime="20231123 16:41:33.989"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:33.991" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:33.989" endtime="20231123 16:41:33.991"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:33.995" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:33.995" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:33.992" endtime="20231123 16:41:33.996"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:33.999" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:33.998" endtime="20231123 16:41:33.999"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.001" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:34.002" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:34.000" endtime="20231123 16:41:34.002"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.004" endtime="20231123 16:41:34.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.006" endtime="20231123 16:41:34.007"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.003" endtime="20231123 16:41:34.008"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.012" endtime="20231123 16:41:34.013"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.014" endtime="20231123 16:41:34.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.016" endtime="20231123 16:41:34.016"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.008" endtime="20231123 16:41:34.017"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.019" endtime="20231123 16:41:34.019"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.020" endtime="20231123 16:41:34.021"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.017" endtime="20231123 16:41:34.021"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.023" endtime="20231123 16:41:34.024"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.024" endtime="20231123 16:41:34.026"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.022" endtime="20231123 16:41:34.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:34.030" level="INFO">${new_text} = Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:34.029" endtime="20231123 16:41:34.031"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.028" endtime="20231123 16:41:34.031"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:34.033" endtime="20231123 16:41:34.033"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.032" endtime="20231123 16:41:34.034"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.035" endtime="20231123 16:41:34.036"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.039" endtime="20231123 16:41:34.040"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.044" endtime="20231123 16:41:34.046"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.035" endtime="20231123 16:41:34.046"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.049" endtime="20231123 16:41:34.049"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.047" endtime="20231123 16:41:34.050"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.051" endtime="20231123 16:41:34.052"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.050" endtime="20231123 16:41:34.052"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.054" endtime="20231123 16:41:34.055"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.053" endtime="20231123 16:41:34.055"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.057" endtime="20231123 16:41:34.058"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.056" endtime="20231123 16:41:34.058"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.061" endtime="20231123 16:41:34.062"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.059" endtime="20231123 16:41:34.062"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.003" endtime="20231123 16:41:34.063"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.065" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:34.065" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:34.064" endtime="20231123 16:41:34.066"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:34.069" level="INFO">${text} = Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:34.068" endtime="20231123 16:41:34.070"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.067" endtime="20231123 16:41:34.070"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.067" endtime="20231123 16:41:34.071"/>
</if>
<msg timestamp="20231123 16:41:34.071" level="INFO">${text} = Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:33.983" endtime="20231123 16:41:34.072"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231123 16:41:34.073" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231123 16:41:34.072" endtime="20231123 16:41:34.074"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:34.074" endtime="20231123 16:41:34.162"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:34.164" level="INFO">Fills the text 'Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:34.163" endtime="20231123 16:41:34.222"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:34.270" level="INFO">Text: 'Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.'</msg>
<msg timestamp="20231123 16:41:34.270" level="INFO">${condition} = Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:34.223" endtime="20231123 16:41:34.271"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.273" endtime="20231123 16:41:34.274"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.275" endtime="20231123 16:41:34.276"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.271" endtime="20231123 16:41:34.277"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:34.271" endtime="20231123 16:41:34.278"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:34.279" endtime="20231123 16:41:34.355"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.356" level="INFO">Length is 182</msg>
<msg timestamp="20231123 16:41:34.356" level="INFO">${cnt} = 182</msg>
<status status="PASS" starttime="20231123 16:41:34.355" endtime="20231123 16:41:34.356"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:34.361" level="INFO">${STATE["Giới thiệu"]} = Saepe excepturi quod suscipit dolor reprehenderit consequatur. Quasi facilis sapiente ratione. Laboriosam nihil totam porro. Quidem soluta incidunt odio quidem corporis eum nesciunt.</msg>
<status status="PASS" starttime="20231123 16:41:34.358" endtime="20231123 16:41:34.361"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.357" endtime="20231123 16:41:34.362"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.357" endtime="20231123 16:41:34.362"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:34.363" endtime="20231123 16:41:34.372"/>
</kw>
<status status="PASS" starttime="20231123 16:41:33.982" endtime="20231123 16:41:34.373"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:34.379" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:34.379" endtime="20231123 16:41:34.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:34.382" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:34.381" endtime="20231123 16:41:34.382"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:34.384" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:34.383" endtime="20231123 16:41:34.384"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.386" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:34.387" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:34.385" endtime="20231123 16:41:34.387"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:34.389" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:34.388" endtime="20231123 16:41:34.389"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.391" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:34.393" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:34.390" endtime="20231123 16:41:34.394"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.400" endtime="20231123 16:41:34.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.402" endtime="20231123 16:41:34.403"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.399" endtime="20231123 16:41:34.403"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.405" endtime="20231123 16:41:34.405"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.406" endtime="20231123 16:41:34.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.416" endtime="20231123 16:41:34.416"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.404" endtime="20231123 16:41:34.417"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.419" endtime="20231123 16:41:34.419"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.420" endtime="20231123 16:41:34.420"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.418" endtime="20231123 16:41:34.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.423" endtime="20231123 16:41:34.423"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.424" endtime="20231123 16:41:34.429"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.421" endtime="20231123 16:41:34.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:34.433" level="INFO">${new_text} = Provident praesentium neque nam. Architecto quod corrupti incidunt consequuntur. Aliquam consectetur similique occaecati et cumque magnam ipsa.</msg>
<status status="PASS" starttime="20231123 16:41:34.432" endtime="20231123 16:41:34.434"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.430" endtime="20231123 16:41:34.435"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:34.436" endtime="20231123 16:41:34.436"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.435" endtime="20231123 16:41:34.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.439" endtime="20231123 16:41:34.439"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.440" endtime="20231123 16:41:34.441"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.446" endtime="20231123 16:41:34.447"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.437" endtime="20231123 16:41:34.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.449" endtime="20231123 16:41:34.450"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.448" endtime="20231123 16:41:34.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.451" endtime="20231123 16:41:34.452"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.450" endtime="20231123 16:41:34.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.454" endtime="20231123 16:41:34.455"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.453" endtime="20231123 16:41:34.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.457" endtime="20231123 16:41:34.458"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.456" endtime="20231123 16:41:34.462"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.464" endtime="20231123 16:41:34.464"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.463" endtime="20231123 16:41:34.465"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.394" endtime="20231123 16:41:34.465"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.467" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:34.467" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:34.466" endtime="20231123 16:41:34.468"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:34.471" level="INFO">${text} = Provident praesentium neque nam. Architecto quod corrupti incidunt consequuntur. Aliquam consectetur similique occaecati et cumque magnam ipsa.</msg>
<status status="PASS" starttime="20231123 16:41:34.469" endtime="20231123 16:41:34.471"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.468" endtime="20231123 16:41:34.472"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.468" endtime="20231123 16:41:34.472"/>
</if>
<msg timestamp="20231123 16:41:34.472" level="INFO">${text} = Provident praesentium neque nam. Architecto quod corrupti incidunt consequuntur. Aliquam consectetur similique occaecati et cumque magnam ipsa.</msg>
<status status="PASS" starttime="20231123 16:41:34.376" endtime="20231123 16:41:34.473"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231123 16:41:34.477" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231123 16:41:34.473" endtime="20231123 16:41:34.477"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:34.478" endtime="20231123 16:41:34.534"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:34.537" level="INFO">Fills the text 'Provident praesentium neque nam. Architecto quod corrupti incidunt consequuntur. Aliquam consectetur similique occaecati et cumque magnam ipsa.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:34.536" endtime="20231123 16:41:34.586"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.374" endtime="20231123 16:41:34.587"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:34.593" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:34.591" endtime="20231123 16:41:34.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:34.596" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:34.595" endtime="20231123 16:41:34.597"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:34.600" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:34.598" endtime="20231123 16:41:34.600"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.603" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:34.603" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:34.601" endtime="20231123 16:41:34.603"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:34.606" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:34.604" endtime="20231123 16:41:34.606"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.609" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:34.610" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:34.607" endtime="20231123 16:41:34.610"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.612" endtime="20231123 16:41:34.613"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.614" endtime="20231123 16:41:34.615"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.611" endtime="20231123 16:41:34.615"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.618" endtime="20231123 16:41:34.619"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.619" endtime="20231123 16:41:34.620"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.621" endtime="20231123 16:41:34.622"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.616" endtime="20231123 16:41:34.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.624" endtime="20231123 16:41:34.627"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.630" endtime="20231123 16:41:34.631"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.623" endtime="20231123 16:41:34.631"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.634" endtime="20231123 16:41:34.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.636" endtime="20231123 16:41:34.637"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.632" endtime="20231123 16:41:34.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.641" endtime="20231123 16:41:34.643"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.638" endtime="20231123 16:41:34.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:34.647" endtime="20231123 16:41:34.648"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.645" endtime="20231123 16:41:34.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.651" endtime="20231123 16:41:34.651"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.652" endtime="20231123 16:41:34.653"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.654" endtime="20231123 16:41:34.655"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.649" endtime="20231123 16:41:34.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.660" endtime="20231123 16:41:34.661"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.656" endtime="20231123 16:41:34.661"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.663" endtime="20231123 16:41:34.665"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.662" endtime="20231123 16:41:34.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.668" endtime="20231123 16:41:34.669"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.667" endtime="20231123 16:41:34.670"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:34.672" endtime="20231123 16:41:34.673"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.671" endtime="20231123 16:41:34.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:34.679" level="INFO">${new_text} = Rerum animi doloremque adipisci mollitia consequuntur nisi.</msg>
<status status="PASS" starttime="20231123 16:41:34.678" endtime="20231123 16:41:34.680"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.677" endtime="20231123 16:41:34.681"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.611" endtime="20231123 16:41:34.682"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:34.683" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:34.684" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:34.683" endtime="20231123 16:41:34.684"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:34.688" level="INFO">${text} = Rerum animi doloremque adipisci mollitia consequuntur nisi.</msg>
<status status="PASS" starttime="20231123 16:41:34.686" endtime="20231123 16:41:34.689"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.685" endtime="20231123 16:41:34.689"/>
</branch>
<status status="PASS" starttime="20231123 16:41:34.685" endtime="20231123 16:41:34.690"/>
</if>
<msg timestamp="20231123 16:41:34.691" level="INFO">${text} = Rerum animi doloremque adipisci mollitia consequuntur nisi.</msg>
<status status="PASS" starttime="20231123 16:41:34.589" endtime="20231123 16:41:34.694"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:34.697" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:34.694" endtime="20231123 16:41:34.697"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:34.698" endtime="20231123 16:41:34.809"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:34.810" endtime="20231123 16:41:34.857"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:34.861" level="INFO">Fills the text 'Rerum animi doloremque adipisci mollitia consequuntur nisi.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:34.858" endtime="20231123 16:41:34.937"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:34.996" level="INFO">Text: 'Rerum animi doloremque adipisci mollitia consequuntur nisi.'</msg>
<msg timestamp="20231123 16:41:34.997" level="INFO">${condition} = Rerum animi doloremque adipisci mollitia consequuntur nisi.</msg>
<status status="PASS" starttime="20231123 16:41:34.938" endtime="20231123 16:41:34.998"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.001" endtime="20231123 16:41:35.001"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.002" endtime="20231123 16:41:35.004"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:34.998" endtime="20231123 16:41:35.004"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:34.998" endtime="20231123 16:41:35.005"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:35.006" endtime="20231123 16:41:35.087"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.089" level="INFO">Length is 59</msg>
<msg timestamp="20231123 16:41:35.090" level="INFO">${cnt} = 59</msg>
<status status="PASS" starttime="20231123 16:41:35.088" endtime="20231123 16:41:35.090"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:35.096" level="INFO">${STATE["Tiêu đề SEO"]} = Rerum animi doloremque adipisci mollitia consequuntur nisi.</msg>
<status status="PASS" starttime="20231123 16:41:35.095" endtime="20231123 16:41:35.097"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.091" endtime="20231123 16:41:35.097"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.091" endtime="20231123 16:41:35.098"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:35.099" endtime="20231123 16:41:35.106"/>
</kw>
<status status="PASS" starttime="20231123 16:41:34.588" endtime="20231123 16:41:35.107"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:35.113" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:35.112" endtime="20231123 16:41:35.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:35.115" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:35.114" endtime="20231123 16:41:35.115"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:35.117" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:35.116" endtime="20231123 16:41:35.117"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.119" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:35.119" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:35.118" endtime="20231123 16:41:35.119"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:35.121" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:35.120" endtime="20231123 16:41:35.121"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.123" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:35.124" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:35.122" endtime="20231123 16:41:35.125"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.129" endtime="20231123 16:41:35.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.130" endtime="20231123 16:41:35.131"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.128" endtime="20231123 16:41:35.131"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.133" endtime="20231123 16:41:35.133"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.134" endtime="20231123 16:41:35.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.136" endtime="20231123 16:41:35.136"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.132" endtime="20231123 16:41:35.137"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.138" endtime="20231123 16:41:35.139"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.139" endtime="20231123 16:41:35.140"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.137" endtime="20231123 16:41:35.140"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.144" endtime="20231123 16:41:35.145"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.145" endtime="20231123 16:41:35.146"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.141" endtime="20231123 16:41:35.146"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.148" endtime="20231123 16:41:35.148"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.147" endtime="20231123 16:41:35.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:35.156" endtime="20231123 16:41:35.156"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.155" endtime="20231123 16:41:35.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.160" endtime="20231123 16:41:35.161"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.162" endtime="20231123 16:41:35.162"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.164" endtime="20231123 16:41:35.165"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.157" endtime="20231123 16:41:35.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.167" endtime="20231123 16:41:35.168"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.166" endtime="20231123 16:41:35.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.205" endtime="20231123 16:41:35.206"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.204" endtime="20231123 16:41:35.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.208" endtime="20231123 16:41:35.210"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.207" endtime="20231123 16:41:35.211"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.213" endtime="20231123 16:41:35.213"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.212" endtime="20231123 16:41:35.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231123 16:41:35.217" level="INFO">${new_text} = Et doloribus porro deserunt nesciunt nemo harum nihil.</msg>
<status status="PASS" starttime="20231123 16:41:35.216" endtime="20231123 16:41:35.218"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.215" endtime="20231123 16:41:35.218"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.128" endtime="20231123 16:41:35.219"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.220" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:35.220" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:35.219" endtime="20231123 16:41:35.221"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:35.223" level="INFO">${text} = Et doloribus porro deserunt nesciunt nemo harum nihil.</msg>
<status status="PASS" starttime="20231123 16:41:35.222" endtime="20231123 16:41:35.224"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.221" endtime="20231123 16:41:35.224"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.221" endtime="20231123 16:41:35.226"/>
</if>
<msg timestamp="20231123 16:41:35.227" level="INFO">${text} = Et doloribus porro deserunt nesciunt nemo harum nihil.</msg>
<status status="PASS" starttime="20231123 16:41:35.111" endtime="20231123 16:41:35.227"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231123 16:41:35.229" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231123 16:41:35.228" endtime="20231123 16:41:35.230"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:35.231" endtime="20231123 16:41:35.339"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:35.341" endtime="20231123 16:41:35.387"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:35.390" level="INFO">Fills the text 'Et doloribus porro deserunt nesciunt nemo harum nihil.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:35.388" endtime="20231123 16:41:35.454"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:35.505" level="INFO">Text: 'Et doloribus porro deserunt nesciunt nemo harum nihil.'</msg>
<msg timestamp="20231123 16:41:35.506" level="INFO">${condition} = Et doloribus porro deserunt nesciunt nemo harum nihil.</msg>
<status status="PASS" starttime="20231123 16:41:35.455" endtime="20231123 16:41:35.506"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.511" endtime="20231123 16:41:35.512"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.513" endtime="20231123 16:41:35.514"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.507" endtime="20231123 16:41:35.515"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:35.507" endtime="20231123 16:41:35.515"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:35.517" endtime="20231123 16:41:35.588"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.590" level="INFO">Length is 54</msg>
<msg timestamp="20231123 16:41:35.591" level="INFO">${cnt} = 54</msg>
<status status="PASS" starttime="20231123 16:41:35.589" endtime="20231123 16:41:35.591"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:35.596" level="INFO">${STATE["Từ khóa SEO"]} = Et doloribus porro deserunt nesciunt nemo harum nihil.</msg>
<status status="PASS" starttime="20231123 16:41:35.595" endtime="20231123 16:41:35.597"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.594" endtime="20231123 16:41:35.598"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.592" endtime="20231123 16:41:35.598"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:35.599" endtime="20231123 16:41:35.607"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.108" endtime="20231123 16:41:35.607"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:35.615" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231123 16:41:35.614" endtime="20231123 16:41:35.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:35.617" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231123 16:41:35.616" endtime="20231123 16:41:35.618"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:35.620" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:35.619" endtime="20231123 16:41:35.621"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.623" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:35.623" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:35.621" endtime="20231123 16:41:35.624"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:35.628" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231123 16:41:35.625" endtime="20231123 16:41:35.629"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.632" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:35.633" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:35.630" endtime="20231123 16:41:35.634"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.636" endtime="20231123 16:41:35.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.637" endtime="20231123 16:41:35.638"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.635" endtime="20231123 16:41:35.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.640" endtime="20231123 16:41:35.640"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.641" endtime="20231123 16:41:35.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.646" endtime="20231123 16:41:35.646"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.639" endtime="20231123 16:41:35.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.649" endtime="20231123 16:41:35.650"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.651" endtime="20231123 16:41:35.652"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.648" endtime="20231123 16:41:35.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.654" endtime="20231123 16:41:35.654"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.655" endtime="20231123 16:41:35.656"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.653" endtime="20231123 16:41:35.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231123 16:41:35.659" level="INFO">${new_text} = Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.</msg>
<status status="PASS" starttime="20231123 16:41:35.657" endtime="20231123 16:41:35.661"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.656" endtime="20231123 16:41:35.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231123 16:41:35.663" endtime="20231123 16:41:35.663"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.662" endtime="20231123 16:41:35.664"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.665" endtime="20231123 16:41:35.666"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.667" endtime="20231123 16:41:35.668"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.670" endtime="20231123 16:41:35.671"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.664" endtime="20231123 16:41:35.671"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.673" endtime="20231123 16:41:35.674"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.672" endtime="20231123 16:41:35.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.678" endtime="20231123 16:41:35.678"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.675" endtime="20231123 16:41:35.679"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.681" endtime="20231123 16:41:35.681"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.679" endtime="20231123 16:41:35.682"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.684" endtime="20231123 16:41:35.684"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.683" endtime="20231123 16:41:35.685"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.686" endtime="20231123 16:41:35.687"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.686" endtime="20231123 16:41:35.688"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.635" endtime="20231123 16:41:35.688"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.690" level="INFO">Length is 8</msg>
<msg timestamp="20231123 16:41:35.690" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231123 16:41:35.689" endtime="20231123 16:41:35.691"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231123 16:41:35.696" level="INFO">${text} = Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.</msg>
<status status="PASS" starttime="20231123 16:41:35.695" endtime="20231123 16:41:35.697"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.693" endtime="20231123 16:41:35.697"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.693" endtime="20231123 16:41:35.698"/>
</if>
<msg timestamp="20231123 16:41:35.698" level="INFO">${text} = Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.</msg>
<status status="PASS" starttime="20231123 16:41:35.611" endtime="20231123 16:41:35.699"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231123 16:41:35.701" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231123 16:41:35.700" endtime="20231123 16:41:35.701"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:35.702" endtime="20231123 16:41:35.756"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231123 16:41:35.759" level="INFO">Fills the text 'Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.' in the given field.</msg>
<status status="PASS" starttime="20231123 16:41:35.757" endtime="20231123 16:41:35.814"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:35.864" level="INFO">Text: 'Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.'</msg>
<msg timestamp="20231123 16:41:35.865" level="INFO">${condition} = Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.</msg>
<status status="PASS" starttime="20231123 16:41:35.815" endtime="20231123 16:41:35.865"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.868" endtime="20231123 16:41:35.869"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:35.870" endtime="20231123 16:41:35.871"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:35.866" endtime="20231123 16:41:35.872"/>
</iter>
<status status="NOT RUN" starttime="20231123 16:41:35.866" endtime="20231123 16:41:35.872"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231123 16:41:35.873" endtime="20231123 16:41:35.955"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:35.957" level="INFO">Length is 71</msg>
<msg timestamp="20231123 16:41:35.958" level="INFO">${cnt} = 71</msg>
<status status="PASS" starttime="20231123 16:41:35.956" endtime="20231123 16:41:35.958"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231123 16:41:35.964" level="INFO">${STATE["Mô tả SEO"]} = Id officia iste nam excepturi animi assumenda. Et odio veritatis ipsam.</msg>
<status status="PASS" starttime="20231123 16:41:35.962" endtime="20231123 16:41:35.964"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.961" endtime="20231123 16:41:35.965"/>
</branch>
<status status="PASS" starttime="20231123 16:41:35.961" endtime="20231123 16:41:35.966"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:35.966" endtime="20231123 16:41:35.974"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.608" endtime="20231123 16:41:35.977"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:36.082" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:35.981" endtime="20231123 16:41:36.082"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:36.093" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:36.083" endtime="20231123 16:41:36.094"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:36.096" endtime="20231123 16:41:36.638"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:36.641" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:36.640" endtime="20231123 16:41:36.641"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:36.700" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:36.644" endtime="20231123 16:41:36.701"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:36.703" endtime="20231123 16:41:36.703"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231123 16:41:36.704" endtime="20231123 16:41:36.704"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231123 16:41:36.705" endtime="20231123 16:41:36.705"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:36.702" endtime="20231123 16:41:36.705"/>
</branch>
<status status="PASS" starttime="20231123 16:41:36.702" endtime="20231123 16:41:36.706"/>
</if>
<status status="PASS" starttime="20231123 16:41:36.639" endtime="20231123 16:41:36.706"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231123 16:41:36.836" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:36.838" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:36.882" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:36.884" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:36.900" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231123 16:41:36.707" endtime="20231123 16:41:36.900"/>
</kw>
<status status="PASS" starttime="20231123 16:41:36.095" endtime="20231123 16:41:36.901"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:36.907" endtime="20231123 16:41:36.908"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231123 16:41:36.913" endtime="20231123 16:41:36.914"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231123 16:41:36.919" endtime="20231123 16:41:36.920"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:36.903" endtime="20231123 16:41:36.922"/>
</branch>
<status status="PASS" starttime="20231123 16:41:36.094" endtime="20231123 16:41:36.923"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:36.924" endtime="20231123 16:41:36.941"/>
</kw>
<status status="PASS" starttime="20231123 16:41:35.979" endtime="20231123 16:41:36.945"/>
</kw>
<kw name="User look message &quot;Thêm mới bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:36.953" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231123 16:41:36.951" endtime="20231123 16:41:36.953"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:36.955" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:36.955" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231123 16:41:36.954" endtime="20231123 16:41:36.956"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:36.958" endtime="20231123 16:41:36.962"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:36.956" endtime="20231123 16:41:36.962"/>
</branch>
<status status="PASS" starttime="20231123 16:41:36.956" endtime="20231123 16:41:36.963"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:37.082" level="INFO">Text: 'Thêm mới bài viết thành công'</msg>
<status status="PASS" starttime="20231123 16:41:36.973" endtime="20231123 16:41:37.084"/>
</kw>
<status status="PASS" starttime="20231123 16:41:36.970" endtime="20231123 16:41:37.085"/>
</kw>
<status status="PASS" starttime="20231123 16:41:36.968" endtime="20231123 16:41:37.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:37.090" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231123 16:41:37.089" endtime="20231123 16:41:37.090"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231123 16:41:37.551" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231123 16:41:37.551" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231123 16:41:37.552" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231123 16:41:37.101" endtime="20231123 16:41:37.557"/>
</kw>
<status status="FAIL" starttime="20231123 16:41:37.095" endtime="20231123 16:41:37.559"/>
</kw>
<msg timestamp="20231123 16:41:37.560" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231123 16:41:37.091" endtime="20231123 16:41:37.560"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:37.564" endtime="20231123 16:41:37.564"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:37.563" endtime="20231123 16:41:37.565"/>
</branch>
<status status="PASS" starttime="20231123 16:41:37.562" endtime="20231123 16:41:37.565"/>
</if>
<status status="PASS" starttime="20231123 16:41:36.946" endtime="20231123 16:41:37.566"/>
</kw>
<status status="PASS" starttime="20231123 16:41:22.583" endtime="20231123 16:41:37.566"/>
</kw>
<kw name="When Select on the &quot;Cate1&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:37.675" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:37.573" endtime="20231123 16:41:37.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:37.678" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:37.677" endtime="20231123 16:41:37.678"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:37.686" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:37.678" endtime="20231123 16:41:37.686"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:37.688" endtime="20231123 16:41:37.688"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:37.687" endtime="20231123 16:41:37.689"/>
</branch>
<status status="PASS" starttime="20231123 16:41:37.687" endtime="20231123 16:41:37.689"/>
</if>
<status status="PASS" starttime="20231123 16:41:37.572" endtime="20231123 16:41:37.690"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:37.694" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:37.693" endtime="20231123 16:41:37.694"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:37.695" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:37.695" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:37.695" endtime="20231123 16:41:37.695"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:37.696" endtime="20231123 16:41:37.697"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:37.696" endtime="20231123 16:41:37.697"/>
</branch>
<status status="PASS" starttime="20231123 16:41:37.696" endtime="20231123 16:41:37.697"/>
</if>
<msg timestamp="20231123 16:41:37.698" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:37.691" endtime="20231123 16:41:37.698"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231123 16:41:37.700" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231123 16:41:37.698" endtime="20231123 16:41:37.701"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:37.701" endtime="20231123 16:41:38.138"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:38.139" endtime="20231123 16:41:38.151"/>
</kw>
<status status="PASS" starttime="20231123 16:41:37.571" endtime="20231123 16:41:38.152"/>
</kw>
<kw name="When Click on the &quot;Chi tiết&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:38.258" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:38.156" endtime="20231123 16:41:38.261"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:38.364" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:38.263" endtime="20231123 16:41:38.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:38.364" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:38.364" endtime="20231123 16:41:38.364"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:38.373" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:38.364" endtime="20231123 16:41:38.373"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:38.379" endtime="20231123 16:41:38.379"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:38.378" endtime="20231123 16:41:38.379"/>
</branch>
<status status="PASS" starttime="20231123 16:41:38.377" endtime="20231123 16:41:38.381"/>
</if>
<status status="PASS" starttime="20231123 16:41:38.262" endtime="20231123 16:41:38.381"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:38.383" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231123 16:41:38.382" endtime="20231123 16:41:38.383"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:38.384" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:38.384" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231123 16:41:38.383" endtime="20231123 16:41:38.384"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:38.386" level="INFO">${text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:38.385" endtime="20231123 16:41:38.386"/>
</kw>
<status status="PASS" starttime="20231123 16:41:38.384" endtime="20231123 16:41:38.386"/>
</branch>
<status status="PASS" starttime="20231123 16:41:38.384" endtime="20231123 16:41:38.387"/>
</if>
<msg timestamp="20231123 16:41:38.387" level="INFO">${name} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:38.381" endtime="20231123 16:41:38.387"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231123 16:41:38.388" level="INFO">${element1} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_05 Odit reprehenderit.")]/ancestor::tr//button[@title = "Chi tiết"]</msg>
<status status="PASS" starttime="20231123 16:41:38.388" endtime="20231123 16:41:38.389"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:38.401" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231123 16:41:38.389" endtime="20231123 16:41:38.401"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:38.404" endtime="20231123 16:41:38.770"/>
</kw>
<status status="PASS" starttime="20231123 16:41:38.401" endtime="20231123 16:41:38.771"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231123 16:41:38.772" endtime="20231123 16:41:38.773"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:38.774" endtime="20231123 16:41:38.779"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:38.771" endtime="20231123 16:41:38.780"/>
</branch>
<status status="PASS" starttime="20231123 16:41:38.401" endtime="20231123 16:41:38.780"/>
</if>
<status status="PASS" starttime="20231123 16:41:38.387" endtime="20231123 16:41:38.780"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231123 16:41:38.783" endtime="20231123 16:41:38.784"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:38.784" endtime="20231123 16:41:38.785"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:38.782" endtime="20231123 16:41:38.785"/>
</branch>
<status status="PASS" starttime="20231123 16:41:38.387" endtime="20231123 16:41:38.786"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:38.788" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:38.787" endtime="20231123 16:41:38.790"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:38.967" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:38.791" endtime="20231123 16:41:38.968"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:38.971" endtime="20231123 16:41:38.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231123 16:41:38.973" endtime="20231123 16:41:38.974"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231123 16:41:38.978" endtime="20231123 16:41:38.979"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:38.968" endtime="20231123 16:41:38.980"/>
</branch>
<status status="PASS" starttime="20231123 16:41:38.968" endtime="20231123 16:41:38.981"/>
</if>
<status status="PASS" starttime="20231123 16:41:38.786" endtime="20231123 16:41:38.981"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:38.981" endtime="20231123 16:41:38.993"/>
</kw>
<status status="PASS" starttime="20231123 16:41:38.154" endtime="20231123 16:41:38.995"/>
</kw>
<kw name="Then Heading should contain &quot;Cập nhật bài viết&quot; inner Text" library="common" sourcename="Heading should contain &quot;${text}&quot; inner Text">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:39.028" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:39.022" endtime="20231123 16:41:39.028"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:39.031" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:39.032" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:39.030" endtime="20231123 16:41:39.032"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:39.034" endtime="20231123 16:41:39.035"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:39.033" endtime="20231123 16:41:39.035"/>
</branch>
<status status="PASS" starttime="20231123 16:41:39.033" endtime="20231123 16:41:39.037"/>
</if>
<msg timestamp="20231123 16:41:39.037" level="INFO">${text} = Cập nhật bài viết</msg>
<status status="PASS" starttime="20231123 16:41:39.020" endtime="20231123 16:41:39.055"/>
</kw>
<for flavor="IN RANGE">
<var>${X}</var>
<value>1</value>
<value>6</value>
<value>1</value>
<iter>
<var name="${X}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'mx-auto')]//h${X}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:39.068" level="INFO">${element} = //*[contains(@class,'mx-auto')]//h1</msg>
<status status="PASS" starttime="20231123 16:41:39.063" endtime="20231123 16:41:39.068"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Get Text</arg>
<arg>${element}</arg>
<arg>equal</arg>
<arg>${text}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>equal</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:49.402" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231123 16:41:49.402" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231123 16:41:49.402" level="FAIL">TimeoutError: locator.elementHandle: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class,\'mx-auto\')]//h1')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231123 16:41:39.071" endtime="20231123 16:41:49.437"/>
</kw>
<msg timestamp="20231123 16:41:49.437" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231123 16:41:39.069" endtime="20231123 16:41:49.438"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<break>
<status status="NOT RUN" starttime="20231123 16:41:49.438" endtime="20231123 16:41:49.439"/>
</break>
<status status="NOT RUN" starttime="20231123 16:41:49.438" endtime="20231123 16:41:49.439"/>
</branch>
<status status="PASS" starttime="20231123 16:41:49.438" endtime="20231123 16:41:49.439"/>
</if>
<status status="PASS" starttime="20231123 16:41:39.055" endtime="20231123 16:41:49.439"/>
</iter>
<iter>
<var name="${X}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'mx-auto')]//h${X}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:49.443" level="INFO">${element} = //*[contains(@class,'mx-auto')]//h2</msg>
<status status="PASS" starttime="20231123 16:41:49.441" endtime="20231123 16:41:49.443"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Get Text</arg>
<arg>${element}</arg>
<arg>equal</arg>
<arg>${text}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>equal</arg>
<arg>${text}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231123 16:41:49.524" level="INFO">Text: 'Cập nhật bài viết'</msg>
<status status="PASS" starttime="20231123 16:41:49.445" endtime="20231123 16:41:49.526"/>
</kw>
<msg timestamp="20231123 16:41:49.528" level="INFO">${condition} = True</msg>
<status status="PASS" starttime="20231123 16:41:49.444" endtime="20231123 16:41:49.528"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<break>
<status status="PASS" starttime="20231123 16:41:49.529" endtime="20231123 16:41:49.529"/>
</break>
<status status="PASS" starttime="20231123 16:41:49.529" endtime="20231123 16:41:49.530"/>
</branch>
<status status="PASS" starttime="20231123 16:41:49.529" endtime="20231123 16:41:49.530"/>
</if>
<status status="PASS" starttime="20231123 16:41:49.440" endtime="20231123 16:41:49.530"/>
</iter>
<status status="PASS" starttime="20231123 16:41:39.055" endtime="20231123 16:41:49.531"/>
</for>
<status status="PASS" starttime="20231123 16:41:39.018" endtime="20231123 16:41:49.531"/>
</kw>
<kw name="Then Webpage should contain &quot;Chuyên mục&quot; select field" library="common" sourcename="Webpage should contain &quot;${name}&quot; select field">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//label[text()="${name}"]//ancestor::*[contains(@class,'ant-row')]//input[contains(@class,'ant-select')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:49.535" level="INFO">${element} = //label[text()="Chuyên mục"]//ancestor::*[contains(@class,'ant-row')]//input[contains(@class,'ant-select')]</msg>
<status status="PASS" starttime="20231123 16:41:49.534" endtime="20231123 16:41:49.536"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:49.546" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231123 16:41:49.537" endtime="20231123 16:41:49.546"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${count} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231123 16:41:49.547" endtime="20231123 16:41:49.549"/>
</kw>
<status status="PASS" starttime="20231123 16:41:49.533" endtime="20231123 16:41:49.550"/>
</kw>
<kw name="Then Webpage should contain &quot;Tiêu đề&quot; input field" library="common" sourcename="Webpage should contain &quot;${name}&quot; input field">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//label[text()="${name}"]//ancestor::*[contains(@class,'ant-row')]//*[contains(@class,'ant-input')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:49.554" level="INFO">${element} = //label[text()="Tiêu đề"]//ancestor::*[contains(@class,'ant-row')]//*[contains(@class,'ant-input')]</msg>
<status status="PASS" starttime="20231123 16:41:49.553" endtime="20231123 16:41:49.554"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:49.566" level="INFO">${count} = 8</msg>
<status status="PASS" starttime="20231123 16:41:49.555" endtime="20231123 16:41:49.566"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${count} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231123 16:41:49.567" endtime="20231123 16:41:49.568"/>
</kw>
<status status="PASS" starttime="20231123 16:41:49.551" endtime="20231123 16:41:49.568"/>
</kw>
<kw name="When Click &quot;Trở lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:49.671" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:49.570" endtime="20231123 16:41:49.671"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:49.680" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231123 16:41:49.671" endtime="20231123 16:41:49.680"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:49.682" endtime="20231123 16:41:50.021"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:50.025" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:50.023" endtime="20231123 16:41:50.026"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:50.064" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:50.027" endtime="20231123 16:41:50.065"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.068" endtime="20231123 16:41:50.069"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.069" endtime="20231123 16:41:50.069"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231123 16:41:50.069" endtime="20231123 16:41:50.070"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:50.067" endtime="20231123 16:41:50.070"/>
</branch>
<status status="PASS" starttime="20231123 16:41:50.066" endtime="20231123 16:41:50.070"/>
</if>
<status status="PASS" starttime="20231123 16:41:50.022" endtime="20231123 16:41:50.070"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231123 16:41:50.094" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:50.094" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:50.114" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:50.115" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231123 16:41:50.129" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231123 16:41:50.071" endtime="20231123 16:41:50.130"/>
</kw>
<status status="PASS" starttime="20231123 16:41:49.681" endtime="20231123 16:41:50.130"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.132" endtime="20231123 16:41:50.133"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231123 16:41:50.134" endtime="20231123 16:41:50.134"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.136" endtime="20231123 16:41:50.136"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:50.131" endtime="20231123 16:41:50.137"/>
</branch>
<status status="PASS" starttime="20231123 16:41:49.681" endtime="20231123 16:41:50.138"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:50.139" endtime="20231123 16:41:50.161"/>
</kw>
<status status="PASS" starttime="20231123 16:41:49.569" endtime="20231123 16:41:50.162"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:50.270" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:50.169" endtime="20231123 16:41:50.271"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:50.379" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:50.273" endtime="20231123 16:41:50.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:50.382" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:50.380" endtime="20231123 16:41:50.382"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:50.400" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:50.383" endtime="20231123 16:41:50.401"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:50.403" endtime="20231123 16:41:50.404"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:50.402" endtime="20231123 16:41:50.405"/>
</branch>
<status status="PASS" starttime="20231123 16:41:50.402" endtime="20231123 16:41:50.405"/>
</if>
<status status="PASS" starttime="20231123 16:41:50.271" endtime="20231123 16:41:50.406"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:50.417" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231123 16:41:50.415" endtime="20231123 16:41:50.417"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:50.422" level="INFO">Length is 1</msg>
<msg timestamp="20231123 16:41:50.423" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231123 16:41:50.419" endtime="20231123 16:41:50.423"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:50.432" level="INFO">${text} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:50.428" endtime="20231123 16:41:50.433"/>
</kw>
<status status="PASS" starttime="20231123 16:41:50.427" endtime="20231123 16:41:50.433"/>
</branch>
<status status="PASS" starttime="20231123 16:41:50.427" endtime="20231123 16:41:50.434"/>
</if>
<msg timestamp="20231123 16:41:50.434" level="INFO">${name} = PO_05 Odit reprehenderit.</msg>
<status status="PASS" starttime="20231123 16:41:50.413" endtime="20231123 16:41:50.435"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231123 16:41:50.436" endtime="20231123 16:41:50.437"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.437" endtime="20231123 16:41:50.438"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.439" endtime="20231123 16:41:50.439"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:50.438" endtime="20231123 16:41:50.440"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231123 16:41:50.445" endtime="20231123 16:41:50.448"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231123 16:41:50.449" endtime="20231123 16:41:50.449"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:50.444" endtime="20231123 16:41:50.461"/>
</branch>
<status status="NOT RUN" starttime="20231123 16:41:50.438" endtime="20231123 16:41:50.462"/>
</if>
<status status="NOT RUN" starttime="20231123 16:41:50.435" endtime="20231123 16:41:50.462"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231123 16:41:50.467" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_05 Odit reprehenderit.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231123 16:41:50.463" endtime="20231123 16:41:50.467"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:50.468" endtime="20231123 16:41:50.651"/>
</kw>
<status status="PASS" starttime="20231123 16:41:50.463" endtime="20231123 16:41:50.652"/>
</branch>
<status status="PASS" starttime="20231123 16:41:50.435" endtime="20231123 16:41:50.653"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:50.655" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:50.654" endtime="20231123 16:41:50.656"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:50.668" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231123 16:41:50.657" endtime="20231123 16:41:50.669"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:50.670" endtime="20231123 16:41:50.909"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:51.015" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:50.913" endtime="20231123 16:41:51.015"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:51.118" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:51.016" endtime="20231123 16:41:51.118"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:51.119" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:51.118" endtime="20231123 16:41:51.119"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:51.133" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:51.120" endtime="20231123 16:41:51.134"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:51.136" endtime="20231123 16:41:51.136"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:51.135" endtime="20231123 16:41:51.137"/>
</branch>
<status status="PASS" starttime="20231123 16:41:51.135" endtime="20231123 16:41:51.138"/>
</if>
<status status="PASS" starttime="20231123 16:41:51.016" endtime="20231123 16:41:51.138"/>
</kw>
<status status="PASS" starttime="20231123 16:41:50.669" endtime="20231123 16:41:51.139"/>
</branch>
<status status="PASS" starttime="20231123 16:41:50.669" endtime="20231123 16:41:51.139"/>
</if>
<status status="PASS" starttime="20231123 16:41:50.653" endtime="20231123 16:41:51.140"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:51.144" endtime="20231123 16:41:51.153"/>
</kw>
<status status="PASS" starttime="20231123 16:41:50.165" endtime="20231123 16:41:51.154"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Cate1&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:51.265" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:51.162" endtime="20231123 16:41:51.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:51.266" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:51.265" endtime="20231123 16:41:51.266"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:51.278" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:51.267" endtime="20231123 16:41:51.278"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:51.280" endtime="20231123 16:41:51.281"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:51.279" endtime="20231123 16:41:51.281"/>
</branch>
<status status="PASS" starttime="20231123 16:41:51.279" endtime="20231123 16:41:51.282"/>
</if>
<status status="PASS" starttime="20231123 16:41:51.160" endtime="20231123 16:41:51.282"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231123 16:41:51.285" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231123 16:41:51.284" endtime="20231123 16:41:51.286"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231123 16:41:51.287" level="INFO">Length is 0</msg>
<msg timestamp="20231123 16:41:51.287" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231123 16:41:51.286" endtime="20231123 16:41:51.287"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231123 16:41:51.288" endtime="20231123 16:41:51.288"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:51.288" endtime="20231123 16:41:51.289"/>
</branch>
<status status="PASS" starttime="20231123 16:41:51.287" endtime="20231123 16:41:51.289"/>
</if>
<msg timestamp="20231123 16:41:51.290" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231123 16:41:51.282" endtime="20231123 16:41:51.292"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231123 16:41:51.294" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231123 16:41:51.293" endtime="20231123 16:41:51.295"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:51.296" endtime="20231123 16:41:52.905"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:52.909" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231123 16:41:52.907" endtime="20231123 16:41:52.909"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:52.920" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231123 16:41:52.910" endtime="20231123 16:41:52.920"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231123 16:41:52.923" endtime="20231123 16:41:53.197"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:53.300" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:53.198" endtime="20231123 16:41:53.302"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231123 16:41:53.405" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231123 16:41:53.304" endtime="20231123 16:41:53.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231123 16:41:53.406" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231123 16:41:53.405" endtime="20231123 16:41:53.406"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231123 16:41:53.420" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231123 16:41:53.408" endtime="20231123 16:41:53.420"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231123 16:41:53.422" endtime="20231123 16:41:53.423"/>
</kw>
<status status="NOT RUN" starttime="20231123 16:41:53.421" endtime="20231123 16:41:53.424"/>
</branch>
<status status="PASS" starttime="20231123 16:41:53.421" endtime="20231123 16:41:53.425"/>
</if>
<status status="PASS" starttime="20231123 16:41:53.303" endtime="20231123 16:41:53.425"/>
</kw>
<status status="PASS" starttime="20231123 16:41:52.921" endtime="20231123 16:41:53.426"/>
</branch>
<status status="PASS" starttime="20231123 16:41:52.921" endtime="20231123 16:41:53.427"/>
</if>
<status status="PASS" starttime="20231123 16:41:52.906" endtime="20231123 16:41:53.427"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231123 16:41:53.428" endtime="20231123 16:41:53.437"/>
</kw>
<status status="PASS" starttime="20231123 16:41:51.156" endtime="20231123 16:41:53.438"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231123 16:41:54.530" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231123 16:41:53.442" endtime="20231123 16:41:54.530"/>
</kw>
<status status="PASS" starttime="20231123 16:41:53.440" endtime="20231123 16:41:54.531"/>
</kw>
<tag>DetailedInfo</tag>
<tag>Smoketest</tag>
<status status="PASS" starttime="20231123 16:41:12.396" endtime="20231123 16:41:54.532"/>
</test>
<status status="PASS" starttime="20231123 16:41:10.001" endtime="20231123 16:41:54.582"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">DetailedInfo</stat>
<stat pass="1" fail="0" skip="0">Smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Post">Post</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

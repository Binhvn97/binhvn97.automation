<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231028 14:26:08.830" rpa="false" schemaversion="4">
<suite id="s1" name="Login" source="d:\Intern test\Automation\Auto_Web\testcases\login.robot">
<test id="s1-t1" name="CA_03 TestCode" line="65">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231028 14:26:11.148" endtime="20231028 14:26:11.166"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231028 14:26:11.168" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Intern test\\Automation\\browser\\traces\\d2fc30e9-3722-433f-8a3a-27d3e39fd4e3"}</msg>
<msg timestamp="20231028 14:26:12.781" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Intern test\\Automation\\browser\\traces\\d2fc30e9-3722-433f-8a3a-27d3e39fd4e3"}</msg>
<status status="PASS" starttime="20231028 14:26:11.167" endtime="20231028 14:26:12.783"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231028 14:26:16.325" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231028 14:26:16.326" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231028 14:26:12.784" endtime="20231028 14:26:16.326"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231028 14:26:16.328" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231028 14:26:16.327" endtime="20231028 14:26:16.329"/>
</kw>
<status status="PASS" starttime="20231028 14:26:11.148" endtime="20231028 14:26:16.330"/>
</kw>
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:16.343" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231028 14:26:16.343" endtime="20231028 14:26:16.343"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:16.343" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231028 14:26:16.343" endtime="20231028 14:26:16.343"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 14:26:16.359" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231028 14:26:16.343" endtime="20231028 14:26:16.359"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:16.359" level="INFO">Length is 0</msg>
<msg timestamp="20231028 14:26:16.359" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.359"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 14:26:16.359" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.359"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:16.359" level="INFO">Length is 0</msg>
<msg timestamp="20231028 14:26:16.359" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.359"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.359"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.374"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.374" endtime="20231028 14:26:16.389"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.396" endtime="20231028 14:26:16.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.398" endtime="20231028 14:26:16.401"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.374" endtime="20231028 14:26:16.402"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.405" endtime="20231028 14:26:16.406"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.409" endtime="20231028 14:26:16.409"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.403" endtime="20231028 14:26:16.410"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.412" endtime="20231028 14:26:16.412"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.413" endtime="20231028 14:26:16.413"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.411" endtime="20231028 14:26:16.414"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.417" endtime="20231028 14:26:16.417"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.414" endtime="20231028 14:26:16.417"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231028 14:26:16.417" endtime="20231028 14:26:16.427"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.417" endtime="20231028 14:26:16.428"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.430" endtime="20231028 14:26:16.431"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.433" endtime="20231028 14:26:16.435"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.436" endtime="20231028 14:26:16.437"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.429" endtime="20231028 14:26:16.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.441" endtime="20231028 14:26:16.443"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.438" endtime="20231028 14:26:16.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.470" endtime="20231028 14:26:16.471"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.463" endtime="20231028 14:26:16.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.474" endtime="20231028 14:26:16.475"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.472" endtime="20231028 14:26:16.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.480" endtime="20231028 14:26:16.487"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.478" endtime="20231028 14:26:16.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 14:26:16.490" endtime="20231028 14:26:16.491"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:16.488" endtime="20231028 14:26:16.492"/>
</branch>
<status status="PASS" starttime="20231028 14:26:16.359" endtime="20231028 14:26:16.493"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:16.496" level="INFO">Length is 15</msg>
<msg timestamp="20231028 14:26:16.496" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231028 14:26:16.494" endtime="20231028 14:26:16.497"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231028 14:26:16.504" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231028 14:26:16.502" endtime="20231028 14:26:16.505"/>
</kw>
<status status="PASS" starttime="20231028 14:26:16.497" endtime="20231028 14:26:16.506"/>
</branch>
<status status="PASS" starttime="20231028 14:26:16.497" endtime="20231028 14:26:16.506"/>
</if>
<msg timestamp="20231028 14:26:16.507" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231028 14:26:16.343" endtime="20231028 14:26:16.507"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231028 14:26:16.510" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231028 14:26:16.508" endtime="20231028 14:26:16.511"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:16.512" endtime="20231028 14:26:16.979"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:16.987" endtime="20231028 14:26:17.089"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231028 14:26:17.089" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231028 14:26:17.089" endtime="20231028 14:26:17.138"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:17.138" level="INFO">Length is 15</msg>
<msg timestamp="20231028 14:26:17.138" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231028 14:26:17.138" endtime="20231028 14:26:17.138"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231028 14:26:17.138" endtime="20231028 14:26:17.154"/>
</kw>
<status status="PASS" starttime="20231028 14:26:17.138" endtime="20231028 14:26:17.154"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.138" endtime="20231028 14:26:17.154"/>
</if>
<status status="PASS" starttime="20231028 14:26:16.343" endtime="20231028 14:26:17.154"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.154"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.154"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.154"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">Length is 0</msg>
<msg timestamp="20231028 14:26:17.154" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.154"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.154"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:17.154" level="INFO">Length is 0</msg>
<msg timestamp="20231028 14:26:17.170" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.170"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.185" endtime="20231028 14:26:17.185"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.185" endtime="20231028 14:26:17.189"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.170" endtime="20231028 14:26:17.189"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:17.189" level="INFO">Length is 6</msg>
<msg timestamp="20231028 14:26:17.189" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231028 14:26:17.189" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</kw>
<status status="PASS" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.189" endtime="20231028 14:26:17.189"/>
</if>
<msg timestamp="20231028 14:26:17.189" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.189"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231028 14:26:17.204" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231028 14:26:17.204" endtime="20231028 14:26:17.204"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:17.204" endtime="20231028 14:26:17.373"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:17.373" endtime="20231028 14:26:17.436"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231028 14:26:17.438" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231028 14:26:17.437" endtime="20231028 14:26:17.487"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:17.489" level="INFO">Length is 6</msg>
<msg timestamp="20231028 14:26:17.489" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231028 14:26:17.489" endtime="20231028 14:26:17.489"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231028 14:26:17.489" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231028 14:26:17.489" endtime="20231028 14:26:17.489"/>
</kw>
<status status="PASS" starttime="20231028 14:26:17.489" endtime="20231028 14:26:17.489"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.489" endtime="20231028 14:26:17.489"/>
</if>
<status status="PASS" starttime="20231028 14:26:17.154" endtime="20231028 14:26:17.489"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231028 14:26:17.591" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231028 14:26:17.489" endtime="20231028 14:26:17.591"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231028 14:26:17.602" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231028 14:26:17.592" endtime="20231028 14:26:17.602"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:17.610" endtime="20231028 14:26:17.739"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:17.739" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231028 14:26:17.739" endtime="20231028 14:26:17.739"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231028 14:26:17.755" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231028 14:26:17.739" endtime="20231028 14:26:17.768"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.769" endtime="20231028 14:26:17.769"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.769" endtime="20231028 14:26:17.769"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231028 14:26:17.769" endtime="20231028 14:26:17.775"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.769" endtime="20231028 14:26:17.776"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.769" endtime="20231028 14:26:17.776"/>
</if>
<status status="PASS" starttime="20231028 14:26:17.739" endtime="20231028 14:26:17.777"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231028 14:26:17.810" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 14:26:17.810" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 14:26:17.826" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 14:26:17.836" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231028 14:26:17.845" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231028 14:26:17.778" endtime="20231028 14:26:17.845"/>
</kw>
<status status="PASS" starttime="20231028 14:26:17.602" endtime="20231028 14:26:17.845"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.845"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.845"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.845"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.845"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.602" endtime="20231028 14:26:17.845"/>
</if>
<status status="PASS" starttime="20231028 14:26:17.489" endtime="20231028 14:26:17.845"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231028 14:26:17.845" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.845"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231028 14:26:17.845" level="INFO">Length is 0</msg>
<msg timestamp="20231028 14:26:17.845" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.845"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231028 14:26:17.861" endtime="20231028 14:26:17.861"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.861"/>
</branch>
<status status="PASS" starttime="20231028 14:26:17.845" endtime="20231028 14:26:17.861"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231028 14:26:18.388" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231028 14:26:17.869" endtime="20231028 14:26:18.388"/>
</kw>
<status status="PASS" starttime="20231028 14:26:17.861" endtime="20231028 14:26:18.388"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:18.389" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231028 14:26:18.389" endtime="20231028 14:26:18.390"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231028 14:26:18.721" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231028 14:26:18.722" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231028 14:26:18.722" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231028 14:26:18.392" endtime="20231028 14:26:18.740"/>
</kw>
<status status="FAIL" starttime="20231028 14:26:18.390" endtime="20231028 14:26:18.740"/>
</kw>
<msg timestamp="20231028 14:26:18.741" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231028 14:26:18.390" endtime="20231028 14:26:18.741"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231028 14:26:18.743" endtime="20231028 14:26:18.743"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:18.742" endtime="20231028 14:26:18.744"/>
</branch>
<status status="PASS" starttime="20231028 14:26:18.742" endtime="20231028 14:26:18.744"/>
</if>
<status status="PASS" starttime="20231028 14:26:17.845" endtime="20231028 14:26:18.745"/>
</kw>
<status status="PASS" starttime="20231028 14:26:16.343" endtime="20231028 14:26:18.745"/>
</kw>
<kw name="Click &quot;SUPERADMIN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:18.757" endtime="20231028 14:26:19.788"/>
</kw>
<status status="PASS" starttime="20231028 14:26:18.755" endtime="20231028 14:26:19.788"/>
</kw>
<kw name="Click &quot;Phân quyền điều hướng&quot; sub menu to &quot;/navigation&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231028 14:26:19.892" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231028 14:26:19.791" endtime="20231028 14:26:19.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231028 14:26:19.894" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231028 14:26:19.893" endtime="20231028 14:26:19.894"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231028 14:26:19.918" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231028 14:26:19.895" endtime="20231028 14:26:19.918"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231028 14:26:19.920" endtime="20231028 14:26:19.921"/>
</kw>
<status status="NOT RUN" starttime="20231028 14:26:19.919" endtime="20231028 14:26:19.922"/>
</branch>
<status status="PASS" starttime="20231028 14:26:19.919" endtime="20231028 14:26:19.922"/>
</if>
<status status="PASS" starttime="20231028 14:26:19.790" endtime="20231028 14:26:19.923"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231028 14:26:19.924" endtime="20231028 14:26:20.109"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231028 14:26:20.124" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/vn/navigation</msg>
<status status="PASS" starttime="20231028 14:26:20.109" endtime="20231028 14:26:20.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231028 14:26:20.124" endtime="20231028 14:26:20.124"/>
</kw>
<status status="PASS" starttime="20231028 14:26:19.789" endtime="20231028 14:26:20.124"/>
</kw>
<kw name="Get Property" library="Browser">
<var>${text}</var>
<arg>//body/app-root[1]/app-main[1]/main[1]/div[4]/app-navigations[1]/div[1]/div[1]/div[1]/div[1]/div[2]/nz-spin[1]/div[1]/nz-tree[1]/div[3]/div[1]/nz-tree-node[18]/nz-tree-node-title[1]</arg>
<arg>title</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20231028 14:26:20.573" level="INFO">Property: 'Tài khoản Nội bộ'</msg>
<msg timestamp="20231028 14:26:20.573" level="INFO">${text} = Tài khoản Nội bộ</msg>
<status status="PASS" starttime="20231028 14:26:20.149" endtime="20231028 14:26:20.573"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231028 14:26:20.588" endtime="20231028 14:26:20.603"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231028 14:26:21.495" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231028 14:26:20.609" endtime="20231028 14:26:21.495"/>
</kw>
<status status="PASS" starttime="20231028 14:26:20.607" endtime="20231028 14:26:21.495"/>
</kw>
<status status="PASS" starttime="20231028 14:26:11.135" endtime="20231028 14:26:21.495"/>
</test>
<status status="PASS" starttime="20231028 14:26:08.841" endtime="20231028 14:26:21.515"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

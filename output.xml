<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231101 15:28:41.538" rpa="false" schemaversion="4">
<suite id="s1" name="Data" source="d:\Intern test\Automation\Auto_Web\testcases\data.robot">
<test id="s1-t1" name="DA_11 Check the update of data list after cancel the search action" line="131">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231101 15:28:43.671" endtime="20231101 15:28:43.684"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231101 15:28:43.686" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Intern test\\Automation\\browser\\traces\\573ad4ed-3eb7-4b97-8a65-fe774a7e369d"}</msg>
<msg timestamp="20231101 15:28:44.790" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Intern test\\Automation\\browser\\traces\\573ad4ed-3eb7-4b97-8a65-fe774a7e369d"}</msg>
<status status="PASS" starttime="20231101 15:28:43.685" endtime="20231101 15:28:44.791"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231101 15:28:48.207" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231101 15:28:48.207" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231101 15:28:44.792" endtime="20231101 15:28:48.208"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231101 15:28:48.210" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231101 15:28:48.209" endtime="20231101 15:28:48.210"/>
</kw>
<status status="PASS" starttime="20231101 15:28:43.669" endtime="20231101 15:28:48.213"/>
</kw>
<kw name="Create a category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:48.356" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:28:48.231" endtime="20231101 15:28:48.356"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231101 15:28:48.358" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231101 15:28:48.357" endtime="20231101 15:28:48.359"/>
</kw>
<status status="FAIL" starttime="20231101 15:28:48.230" endtime="20231101 15:28:48.360"/>
</kw>
<msg timestamp="20231101 15:28:48.360" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231101 15:28:48.227" endtime="20231101 15:28:48.361"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231101 15:28:48.367" endtime="20231101 15:28:48.367"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.366" endtime="20231101 15:28:48.369"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Quản lý dữ liệu&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:48.377" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:48.376" endtime="20231101 15:28:48.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:48.383" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:48.382" endtime="20231101 15:28:48.384"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:48.386" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:48.384" endtime="20231101 15:28:48.386"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:48.388" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:48.389" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:48.387" endtime="20231101 15:28:48.389"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:48.392" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:28:48.390" endtime="20231101 15:28:48.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:48.398" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:48.399" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:28:48.394" endtime="20231101 15:28:48.399"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.404" endtime="20231101 15:28:48.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.406" endtime="20231101 15:28:48.407"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.402" endtime="20231101 15:28:48.407"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.409" endtime="20231101 15:28:48.410"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.411" endtime="20231101 15:28:48.413"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.414" endtime="20231101 15:28:48.415"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.408" endtime="20231101 15:28:48.415"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.418" endtime="20231101 15:28:48.419"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.421" endtime="20231101 15:28:48.422"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.416" endtime="20231101 15:28:48.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.424" endtime="20231101 15:28:48.425"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.425" endtime="20231101 15:28:48.426"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.423" endtime="20231101 15:28:48.426"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.428" endtime="20231101 15:28:48.430"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.427" endtime="20231101 15:28:48.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:48.432" endtime="20231101 15:28:48.433"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.431" endtime="20231101 15:28:48.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.435" endtime="20231101 15:28:48.436"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.436" endtime="20231101 15:28:48.437"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.438" endtime="20231101 15:28:48.438"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.434" endtime="20231101 15:28:48.439"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.440" endtime="20231101 15:28:48.441"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.439" endtime="20231101 15:28:48.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.442" endtime="20231101 15:28:48.443"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.441" endtime="20231101 15:28:48.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.446" endtime="20231101 15:28:48.447"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.444" endtime="20231101 15:28:48.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.449" endtime="20231101 15:28:48.450"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.448" endtime="20231101 15:28:48.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:48.451" endtime="20231101 15:28:48.452"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:48.451" endtime="20231101 15:28:48.452"/>
</branch>
<status status="PASS" starttime="20231101 15:28:48.402" endtime="20231101 15:28:48.452"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:48.454" level="INFO">Length is 15</msg>
<msg timestamp="20231101 15:28:48.454" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231101 15:28:48.453" endtime="20231101 15:28:48.454"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:48.457" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 15:28:48.456" endtime="20231101 15:28:48.457"/>
</kw>
<status status="PASS" starttime="20231101 15:28:48.455" endtime="20231101 15:28:48.457"/>
</branch>
<status status="PASS" starttime="20231101 15:28:48.455" endtime="20231101 15:28:48.458"/>
</if>
<msg timestamp="20231101 15:28:48.458" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 15:28:48.375" endtime="20231101 15:28:48.459"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:28:48.460" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:28:48.459" endtime="20231101 15:28:48.460"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:48.460" endtime="20231101 15:28:48.940"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:48.941" endtime="20231101 15:28:49.006"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:49.008" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:49.007" endtime="20231101 15:28:49.068"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:49.122" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231101 15:28:49.123" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 15:28:49.068" endtime="20231101 15:28:49.123"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.124" endtime="20231101 15:28:49.124"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.125" endtime="20231101 15:28:49.125"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.123" endtime="20231101 15:28:49.125"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:49.123" endtime="20231101 15:28:49.126"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:49.126" level="INFO">Length is 15</msg>
<msg timestamp="20231101 15:28:49.126" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231101 15:28:49.126" endtime="20231101 15:28:49.127"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:49.132" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 15:28:49.127" endtime="20231101 15:28:49.133"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.127" endtime="20231101 15:28:49.133"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.127" endtime="20231101 15:28:49.134"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:49.134" endtime="20231101 15:28:49.150"/>
</kw>
<status status="PASS" starttime="20231101 15:28:48.373" endtime="20231101 15:28:49.151"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:49.157" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:49.155" endtime="20231101 15:28:49.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:49.159" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:49.158" endtime="20231101 15:28:49.159"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:49.164" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:49.160" endtime="20231101 15:28:49.165"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:49.167" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:49.168" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:49.166" endtime="20231101 15:28:49.168"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:49.170" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:28:49.169" endtime="20231101 15:28:49.170"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:49.172" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:49.173" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:28:49.171" endtime="20231101 15:28:49.173"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.175" endtime="20231101 15:28:49.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.176" endtime="20231101 15:28:49.177"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.174" endtime="20231101 15:28:49.177"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.182" endtime="20231101 15:28:49.183"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.184" endtime="20231101 15:28:49.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.185" endtime="20231101 15:28:49.186"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.177" endtime="20231101 15:28:49.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.188" endtime="20231101 15:28:49.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.189" endtime="20231101 15:28:49.190"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.187" endtime="20231101 15:28:49.190"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.191" endtime="20231101 15:28:49.191"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.192" endtime="20231101 15:28:49.192"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.190" endtime="20231101 15:28:49.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.193" endtime="20231101 15:28:49.193"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.192" endtime="20231101 15:28:49.193"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:49.194" endtime="20231101 15:28:49.198"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.193" endtime="20231101 15:28:49.199"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.200" endtime="20231101 15:28:49.200"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.201" endtime="20231101 15:28:49.202"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.202" endtime="20231101 15:28:49.202"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.199" endtime="20231101 15:28:49.202"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.203" endtime="20231101 15:28:49.203"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.203" endtime="20231101 15:28:49.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.204" endtime="20231101 15:28:49.205"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.204" endtime="20231101 15:28:49.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.206" endtime="20231101 15:28:49.206"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.205" endtime="20231101 15:28:49.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.207" endtime="20231101 15:28:49.207"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.206" endtime="20231101 15:28:49.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.208" endtime="20231101 15:28:49.208"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.207" endtime="20231101 15:28:49.208"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.174" endtime="20231101 15:28:49.208"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:49.209" level="INFO">Length is 6</msg>
<msg timestamp="20231101 15:28:49.209" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231101 15:28:49.208" endtime="20231101 15:28:49.209"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:49.215" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231101 15:28:49.211" endtime="20231101 15:28:49.215"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.210" endtime="20231101 15:28:49.215"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.209" endtime="20231101 15:28:49.216"/>
</if>
<msg timestamp="20231101 15:28:49.216" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231101 15:28:49.154" endtime="20231101 15:28:49.216"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:28:49.217" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:28:49.216" endtime="20231101 15:28:49.217"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:49.217" endtime="20231101 15:28:49.341"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:49.342" endtime="20231101 15:28:49.390"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:49.392" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:49.391" endtime="20231101 15:28:49.457"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:49.493" level="INFO">Text: '123123'</msg>
<msg timestamp="20231101 15:28:49.493" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231101 15:28:49.458" endtime="20231101 15:28:49.494"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.498" endtime="20231101 15:28:49.499"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.500" endtime="20231101 15:28:49.500"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.494" endtime="20231101 15:28:49.501"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:49.494" endtime="20231101 15:28:49.501"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:49.502" level="INFO">Length is 6</msg>
<msg timestamp="20231101 15:28:49.503" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231101 15:28:49.502" endtime="20231101 15:28:49.503"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:49.505" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231101 15:28:49.504" endtime="20231101 15:28:49.505"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.503" endtime="20231101 15:28:49.506"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.503" endtime="20231101 15:28:49.506"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:49.506" endtime="20231101 15:28:49.516"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.152" endtime="20231101 15:28:49.517"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:28:49.621" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:28:49.519" endtime="20231101 15:28:49.621"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:49.635" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:49.622" endtime="20231101 15:28:49.636"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:49.638" endtime="20231101 15:28:49.777"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:49.781" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:28:49.779" endtime="20231101 15:28:49.781"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:49.793" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:28:49.782" endtime="20231101 15:28:49.793"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.797" endtime="20231101 15:28:49.798"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.798" endtime="20231101 15:28:49.799"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:28:49.800" endtime="20231101 15:28:49.801"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.794" endtime="20231101 15:28:49.801"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.794" endtime="20231101 15:28:49.803"/>
</if>
<status status="PASS" starttime="20231101 15:28:49.777" endtime="20231101 15:28:49.804"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:28:49.842" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:49.843" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:49.870" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:49.870" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:49.883" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:28:49.806" endtime="20231101 15:28:49.884"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.636" endtime="20231101 15:28:49.884"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.886" endtime="20231101 15:28:49.886"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:28:49.887" endtime="20231101 15:28:49.888"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.888" endtime="20231101 15:28:49.889"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.885" endtime="20231101 15:28:49.889"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.636" endtime="20231101 15:28:49.890"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:49.890" endtime="20231101 15:28:49.902"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.517" endtime="20231101 15:28:49.903"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:49.906" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:28:49.905" endtime="20231101 15:28:49.906"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:49.908" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:49.908" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:28:49.907" endtime="20231101 15:28:49.908"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:49.910" endtime="20231101 15:28:49.910"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:49.909" endtime="20231101 15:28:49.911"/>
</branch>
<status status="PASS" starttime="20231101 15:28:49.909" endtime="20231101 15:28:49.913"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:50.185" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 15:28:49.919" endtime="20231101 15:28:50.186"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.916" endtime="20231101 15:28:50.187"/>
</kw>
<status status="PASS" starttime="20231101 15:28:49.914" endtime="20231101 15:28:50.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:50.190" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 15:28:50.189" endtime="20231101 15:28:50.190"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 15:28:50.567" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 15:28:50.567" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 15:28:50.568" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 15:28:50.196" endtime="20231101 15:28:50.577"/>
</kw>
<status status="FAIL" starttime="20231101 15:28:50.192" endtime="20231101 15:28:50.579"/>
</kw>
<msg timestamp="20231101 15:28:50.580" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 15:28:50.191" endtime="20231101 15:28:50.580"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:50.582" endtime="20231101 15:28:50.582"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:50.581" endtime="20231101 15:28:50.582"/>
</branch>
<status status="PASS" starttime="20231101 15:28:50.581" endtime="20231101 15:28:50.583"/>
</if>
<status status="PASS" starttime="20231101 15:28:49.904" endtime="20231101 15:28:50.583"/>
</kw>
<status status="PASS" starttime="20231101 15:28:48.372" endtime="20231101 15:28:50.584"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:50.586" endtime="20231101 15:28:52.186"/>
</kw>
<status status="PASS" starttime="20231101 15:28:50.585" endtime="20231101 15:28:52.186"/>
</kw>
<kw name="Click &quot;Quản lý dữ liệu&quot; sub menu to &quot;/data&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:28:52.288" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:28:52.187" endtime="20231101 15:28:52.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:52.289" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:28:52.288" endtime="20231101 15:28:52.290"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:52.308" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:28:52.290" endtime="20231101 15:28:52.308"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:28:52.312" endtime="20231101 15:28:52.313"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:52.310" endtime="20231101 15:28:52.313"/>
</branch>
<status status="PASS" starttime="20231101 15:28:52.309" endtime="20231101 15:28:52.314"/>
</if>
<status status="PASS" starttime="20231101 15:28:52.187" endtime="20231101 15:28:52.314"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:52.315" endtime="20231101 15:28:52.810"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231101 15:28:52.817" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/vn/data</msg>
<status status="PASS" starttime="20231101 15:28:52.812" endtime="20231101 15:28:52.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231101 15:28:52.819" endtime="20231101 15:28:52.820"/>
</kw>
<status status="PASS" starttime="20231101 15:28:52.186" endtime="20231101 15:28:52.820"/>
</kw>
<status status="PASS" starttime="20231101 15:28:48.371" endtime="20231101 15:28:52.821"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:28:52.924" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:28:52.823" endtime="20231101 15:28:52.924"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:53.407" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:52.925" endtime="20231101 15:28:53.408"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:53.409" endtime="20231101 15:28:53.709"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:53.712" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:28:53.710" endtime="20231101 15:28:53.712"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:53.726" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:28:53.714" endtime="20231101 15:28:53.726"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.729" endtime="20231101 15:28:53.730"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.731" endtime="20231101 15:28:53.732"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:28:53.732" endtime="20231101 15:28:53.733"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.727" endtime="20231101 15:28:53.734"/>
</branch>
<status status="PASS" starttime="20231101 15:28:53.727" endtime="20231101 15:28:53.735"/>
</if>
<status status="PASS" starttime="20231101 15:28:53.709" endtime="20231101 15:28:53.735"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:28:53.760" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:53.762" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:53.782" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:53.783" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:53.793" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:28:53.736" endtime="20231101 15:28:53.793"/>
</kw>
<status status="PASS" starttime="20231101 15:28:53.408" endtime="20231101 15:28:53.794"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.797" endtime="20231101 15:28:53.798"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:28:53.799" endtime="20231101 15:28:53.799"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.800" endtime="20231101 15:28:53.801"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.796" endtime="20231101 15:28:53.801"/>
</branch>
<status status="PASS" starttime="20231101 15:28:53.408" endtime="20231101 15:28:53.802"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:53.802" endtime="20231101 15:28:53.884"/>
</kw>
<status status="PASS" starttime="20231101 15:28:52.822" endtime="20231101 15:28:53.885"/>
</kw>
<status status="PASS" starttime="20231101 15:28:48.370" endtime="20231101 15:28:53.885"/>
</branch>
<status status="PASS" starttime="20231101 15:28:48.365" endtime="20231101 15:28:53.885"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên loại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:53.887" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:53.887" endtime="20231101 15:28:53.887"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:53.888" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:53.888" endtime="20231101 15:28:53.888"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:53.889" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:53.888" endtime="20231101 15:28:53.889"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:53.890" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:53.890" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:53.889" endtime="20231101 15:28:53.890"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:53.892" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:28:53.891" endtime="20231101 15:28:53.892"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:53.893" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:53.893" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:53.893" endtime="20231101 15:28:53.893"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.896" endtime="20231101 15:28:53.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.898" endtime="20231101 15:28:53.899"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.894" endtime="20231101 15:28:53.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 15:28:53.903" level="INFO">${random} = Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:53.902" endtime="20231101 15:28:53.903"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 15:28:53.904" level="INFO">${words} = ['DA_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231101 15:28:53.904" endtime="20231101 15:28:53.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:53.906" level="INFO">${new_text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:53.905" endtime="20231101 15:28:53.907"/>
</kw>
<status status="PASS" starttime="20231101 15:28:53.901" endtime="20231101 15:28:53.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.907" endtime="20231101 15:28:53.907"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.907" endtime="20231101 15:28:53.908"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.907" endtime="20231101 15:28:53.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.909" endtime="20231101 15:28:53.909"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.909" endtime="20231101 15:28:53.909"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.908" endtime="20231101 15:28:53.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.911" endtime="20231101 15:28:53.912"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.910" endtime="20231101 15:28:53.914"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:53.916" endtime="20231101 15:28:53.916"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.915" endtime="20231101 15:28:53.917"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.917" endtime="20231101 15:28:53.918"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.918" endtime="20231101 15:28:53.919"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.919" endtime="20231101 15:28:53.920"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.917" endtime="20231101 15:28:53.920"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.921" endtime="20231101 15:28:53.921"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.920" endtime="20231101 15:28:53.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.922" endtime="20231101 15:28:53.922"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.922" endtime="20231101 15:28:53.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.923" endtime="20231101 15:28:53.923"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.923" endtime="20231101 15:28:53.924"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.924" endtime="20231101 15:28:53.925"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.924" endtime="20231101 15:28:53.925"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:53.926" endtime="20231101 15:28:53.926"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:53.925" endtime="20231101 15:28:53.927"/>
</branch>
<status status="PASS" starttime="20231101 15:28:53.893" endtime="20231101 15:28:53.930"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:53.932" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:28:53.933" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:28:53.932" endtime="20231101 15:28:53.933"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:53.934" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:53.934" endtime="20231101 15:28:53.935"/>
</kw>
<status status="PASS" starttime="20231101 15:28:53.933" endtime="20231101 15:28:53.935"/>
</branch>
<status status="PASS" starttime="20231101 15:28:53.933" endtime="20231101 15:28:53.935"/>
</if>
<msg timestamp="20231101 15:28:53.935" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:53.886" endtime="20231101 15:28:53.935"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:28:53.936" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên loại"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:28:53.936" endtime="20231101 15:28:53.937"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:53.937" endtime="20231101 15:28:54.233"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:54.234" endtime="20231101 15:28:54.288"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:54.289" level="INFO">Fills the text 'DA_11 Voluptates in.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:54.289" endtime="20231101 15:28:54.332"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:54.364" level="INFO">Text: 'DA_11 Voluptates in.'</msg>
<msg timestamp="20231101 15:28:54.364" level="INFO">${condition} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:54.333" endtime="20231101 15:28:54.365"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.367" endtime="20231101 15:28:54.367"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.368" endtime="20231101 15:28:54.368"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.365" endtime="20231101 15:28:54.368"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:54.365" endtime="20231101 15:28:54.368"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:54.369" level="INFO">Length is 20</msg>
<msg timestamp="20231101 15:28:54.369" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20231101 15:28:54.369" endtime="20231101 15:28:54.369"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:54.371" level="INFO">${STATE["Tên loại"]} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:54.370" endtime="20231101 15:28:54.371"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.370" endtime="20231101 15:28:54.371"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.370" endtime="20231101 15:28:54.371"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:54.372" endtime="20231101 15:28:54.380"/>
</kw>
<status status="PASS" starttime="20231101 15:28:53.885" endtime="20231101 15:28:54.381"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên loại@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:54.385" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 15:28:54.383" endtime="20231101 15:28:54.385"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:54.387" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:54.387" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:28:54.386" endtime="20231101 15:28:54.387"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:54.391" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:54.389" endtime="20231101 15:28:54.391"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.388" endtime="20231101 15:28:54.392"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.388" endtime="20231101 15:28:54.392"/>
</if>
<msg timestamp="20231101 15:28:54.393" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:54.382" endtime="20231101 15:28:54.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:54.398" level="INFO">${name} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:54.397" endtime="20231101 15:28:54.398"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:54.402" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:54.401" endtime="20231101 15:28:54.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:54.404" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:54.403" endtime="20231101 15:28:54.404"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:54.406" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:54.405" endtime="20231101 15:28:54.406"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:54.408" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:54.409" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:54.407" endtime="20231101 15:28:54.409"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:54.414" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:28:54.410" endtime="20231101 15:28:54.415"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:54.417" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:54.417" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:54.416" endtime="20231101 15:28:54.418"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.419" endtime="20231101 15:28:54.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.420" endtime="20231101 15:28:54.421"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.418" endtime="20231101 15:28:54.421"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.422" endtime="20231101 15:28:54.425"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.426" endtime="20231101 15:28:54.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.430" endtime="20231101 15:28:54.431"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.421" endtime="20231101 15:28:54.431"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 15:28:54.434" level="INFO">${new_text} = 751</msg>
<status status="PASS" starttime="20231101 15:28:54.433" endtime="20231101 15:28:54.434"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 15:28:54.435" level="INFO">${new_text} = 751</msg>
<status status="PASS" starttime="20231101 15:28:54.435" endtime="20231101 15:28:54.435"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.432" endtime="20231101 15:28:54.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.436" endtime="20231101 15:28:54.437"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.437" endtime="20231101 15:28:54.437"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.436" endtime="20231101 15:28:54.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.438" endtime="20231101 15:28:54.438"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.438" endtime="20231101 15:28:54.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:54.439" endtime="20231101 15:28:54.439"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.439" endtime="20231101 15:28:54.440"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.440" endtime="20231101 15:28:54.441"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.441" endtime="20231101 15:28:54.441"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.442" endtime="20231101 15:28:54.442"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.440" endtime="20231101 15:28:54.442"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.443" endtime="20231101 15:28:54.446"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.442" endtime="20231101 15:28:54.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.448" endtime="20231101 15:28:54.449"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.447" endtime="20231101 15:28:54.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.451" endtime="20231101 15:28:54.451"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.450" endtime="20231101 15:28:54.451"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.452" endtime="20231101 15:28:54.452"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.451" endtime="20231101 15:28:54.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.453" endtime="20231101 15:28:54.453"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.452" endtime="20231101 15:28:54.453"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.418" endtime="20231101 15:28:54.453"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:54.454" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:28:54.454" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:28:54.454" endtime="20231101 15:28:54.454"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:54.456" level="INFO">${text} = 751</msg>
<status status="PASS" starttime="20231101 15:28:54.455" endtime="20231101 15:28:54.456"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.455" endtime="20231101 15:28:54.456"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.455" endtime="20231101 15:28:54.456"/>
</if>
<msg timestamp="20231101 15:28:54.456" level="INFO">${text} = 751</msg>
<status status="PASS" starttime="20231101 15:28:54.400" endtime="20231101 15:28:54.456"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:28:54.457" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:28:54.457" endtime="20231101 15:28:54.457"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:54.458" endtime="20231101 15:28:54.578"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:54.579" endtime="20231101 15:28:54.619"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:54.620" level="INFO">Fills the text '751' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:54.619" endtime="20231101 15:28:54.672"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:54.716" level="INFO">Text: '751'</msg>
<msg timestamp="20231101 15:28:54.717" level="INFO">${condition} = 751</msg>
<status status="PASS" starttime="20231101 15:28:54.673" endtime="20231101 15:28:54.718"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.720" endtime="20231101 15:28:54.721"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.722" endtime="20231101 15:28:54.722"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.718" endtime="20231101 15:28:54.723"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:54.718" endtime="20231101 15:28:54.724"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:54.726" level="INFO">Length is 3</msg>
<msg timestamp="20231101 15:28:54.726" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231101 15:28:54.725" endtime="20231101 15:28:54.727"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:54.732" level="INFO">${STATE["Mã"]} = 751</msg>
<status status="PASS" starttime="20231101 15:28:54.731" endtime="20231101 15:28:54.733"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.729" endtime="20231101 15:28:54.733"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.729" endtime="20231101 15:28:54.734"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:54.735" endtime="20231101 15:28:54.743"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.399" endtime="20231101 15:28:54.743"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:28:54.850" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:28:54.748" endtime="20231101 15:28:54.850"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:54.860" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:54.851" endtime="20231101 15:28:54.860"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:54.863" endtime="20231101 15:28:54.963"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:54.967" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:28:54.965" endtime="20231101 15:28:54.967"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:54.979" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:28:54.968" endtime="20231101 15:28:54.980"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.982" endtime="20231101 15:28:54.983"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:28:54.983" endtime="20231101 15:28:54.984"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:28:54.984" endtime="20231101 15:28:54.985"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:54.981" endtime="20231101 15:28:54.985"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.980" endtime="20231101 15:28:54.986"/>
</if>
<status status="PASS" starttime="20231101 15:28:54.964" endtime="20231101 15:28:54.986"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:28:55.013" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:55.014" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:55.035" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:55.035" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:55.279" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:28:54.987" endtime="20231101 15:28:55.279"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.862" endtime="20231101 15:28:55.281"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:55.283" endtime="20231101 15:28:55.284"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:28:55.285" endtime="20231101 15:28:55.285"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:28:55.286" endtime="20231101 15:28:55.286"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:55.282" endtime="20231101 15:28:55.287"/>
</branch>
<status status="PASS" starttime="20231101 15:28:54.861" endtime="20231101 15:28:55.287"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:55.288" endtime="20231101 15:28:55.299"/>
</kw>
<status status="PASS" starttime="20231101 15:28:54.747" endtime="20231101 15:28:55.300"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:55.303" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:28:55.302" endtime="20231101 15:28:55.303"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:55.305" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:55.305" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:28:55.304" endtime="20231101 15:28:55.305"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:55.307" endtime="20231101 15:28:55.308"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:55.306" endtime="20231101 15:28:55.308"/>
</branch>
<status status="PASS" starttime="20231101 15:28:55.306" endtime="20231101 15:28:55.309"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:56.176" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 15:28:55.317" endtime="20231101 15:28:56.176"/>
</kw>
<status status="PASS" starttime="20231101 15:28:55.311" endtime="20231101 15:28:56.179"/>
</kw>
<status status="PASS" starttime="20231101 15:28:55.309" endtime="20231101 15:28:56.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:56.182" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 15:28:56.181" endtime="20231101 15:28:56.182"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 15:28:56.571" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 15:28:56.572" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 15:28:56.575" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 15:28:56.185" endtime="20231101 15:28:56.580"/>
</kw>
<status status="FAIL" starttime="20231101 15:28:56.183" endtime="20231101 15:28:56.581"/>
</kw>
<msg timestamp="20231101 15:28:56.581" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 15:28:56.183" endtime="20231101 15:28:56.582"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:56.583" endtime="20231101 15:28:56.584"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:56.582" endtime="20231101 15:28:56.585"/>
</branch>
<status status="PASS" starttime="20231101 15:28:56.582" endtime="20231101 15:28:56.585"/>
</if>
<status status="PASS" starttime="20231101 15:28:55.300" endtime="20231101 15:28:56.586"/>
</kw>
<status status="PASS" starttime="20231101 15:28:48.225" endtime="20231101 15:28:56.586"/>
</kw>
<kw name="Create a test data with &quot;_@Tên loại@_&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<var>${Data1}</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:56.673" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:56.599" endtime="20231101 15:28:56.673"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 15:28:56.673" endtime="20231101 15:28:56.674"/>
</kw>
<status status="PASS" starttime="20231101 15:28:56.597" endtime="20231101 15:28:56.675"/>
</kw>
<msg timestamp="20231101 15:28:56.675" level="INFO">${condition} = True</msg>
<status status="PASS" starttime="20231101 15:28:56.596" endtime="20231101 15:28:56.676"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Thêm mới dữ liệu&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:28:56.783" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:28:56.681" endtime="20231101 15:28:56.783"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:56.810" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:56.785" endtime="20231101 15:28:56.811"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:56.815" endtime="20231101 15:28:57.145"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:57.148" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:28:57.147" endtime="20231101 15:28:57.148"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:57.201" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:28:57.149" endtime="20231101 15:28:57.202"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.203" endtime="20231101 15:28:57.204"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.204" endtime="20231101 15:28:57.205"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:28:57.205" endtime="20231101 15:28:57.205"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.202" endtime="20231101 15:28:57.206"/>
</branch>
<status status="PASS" starttime="20231101 15:28:57.202" endtime="20231101 15:28:57.206"/>
</if>
<status status="PASS" starttime="20231101 15:28:57.146" endtime="20231101 15:28:57.206"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:28:57.241" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:57.241" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:57.260" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:57.261" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:28:57.271" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:28:57.207" endtime="20231101 15:28:57.271"/>
</kw>
<status status="PASS" starttime="20231101 15:28:56.814" endtime="20231101 15:28:57.272"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.274" endtime="20231101 15:28:57.274"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:28:57.275" endtime="20231101 15:28:57.276"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.277" endtime="20231101 15:28:57.278"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.273" endtime="20231101 15:28:57.279"/>
</branch>
<status status="PASS" starttime="20231101 15:28:56.813" endtime="20231101 15:28:57.279"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:57.280" endtime="20231101 15:28:57.287"/>
</kw>
<status status="PASS" starttime="20231101 15:28:56.679" endtime="20231101 15:28:57.287"/>
</kw>
<status status="PASS" starttime="20231101 15:28:56.676" endtime="20231101 15:28:57.288"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create data &quot;Quản lý dữ liệu&quot; with &quot;/data&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20231101 15:28:57.289" endtime="20231101 15:28:57.290"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.288" endtime="20231101 15:28:57.290"/>
</branch>
<status status="PASS" starttime="20231101 15:28:56.676" endtime="20231101 15:28:57.291"/>
</if>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:57.295" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:57.293" endtime="20231101 15:28:57.295"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:57.297" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:57.296" endtime="20231101 15:28:57.297"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:57.299" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 15:28:57.298" endtime="20231101 15:28:57.299"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:57.300" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:57.301" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:28:57.299" endtime="20231101 15:28:57.301"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:57.302" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:28:57.301" endtime="20231101 15:28:57.303"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:57.305" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:57.305" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:28:57.304" endtime="20231101 15:28:57.306"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:57.312" level="INFO">${new_text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:57.308" endtime="20231101 15:28:57.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:57.316" level="INFO">${symbol} = _@Tên loại@_</msg>
<status status="PASS" starttime="20231101 15:28:57.313" endtime="20231101 15:28:57.316"/>
</kw>
<status status="PASS" starttime="20231101 15:28:57.307" endtime="20231101 15:28:57.317"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.318" endtime="20231101 15:28:57.318"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.319" endtime="20231101 15:28:57.320"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.320" endtime="20231101 15:28:57.321"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.317" endtime="20231101 15:28:57.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.322" endtime="20231101 15:28:57.323"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.323" endtime="20231101 15:28:57.324"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.322" endtime="20231101 15:28:57.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.325" endtime="20231101 15:28:57.326"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.326" endtime="20231101 15:28:57.327"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.325" endtime="20231101 15:28:57.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.330" endtime="20231101 15:28:57.330"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.329" endtime="20231101 15:28:57.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:57.332" endtime="20231101 15:28:57.332"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.331" endtime="20231101 15:28:57.333"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.334" endtime="20231101 15:28:57.335"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.336" endtime="20231101 15:28:57.336"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.336" endtime="20231101 15:28:57.337"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.333" endtime="20231101 15:28:57.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.338" endtime="20231101 15:28:57.338"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.337" endtime="20231101 15:28:57.338"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.339" endtime="20231101 15:28:57.339"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.338" endtime="20231101 15:28:57.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.340" endtime="20231101 15:28:57.340"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.340" endtime="20231101 15:28:57.341"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.341" endtime="20231101 15:28:57.341"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.341" endtime="20231101 15:28:57.342"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:57.342" endtime="20231101 15:28:57.343"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:57.342" endtime="20231101 15:28:57.343"/>
</branch>
<status status="PASS" starttime="20231101 15:28:57.306" endtime="20231101 15:28:57.343"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:57.346" level="INFO">Length is 12</msg>
<msg timestamp="20231101 15:28:57.346" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231101 15:28:57.343" endtime="20231101 15:28:57.346"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:57.348" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:57.348" endtime="20231101 15:28:57.349"/>
</kw>
<status status="PASS" starttime="20231101 15:28:57.347" endtime="20231101 15:28:57.349"/>
</branch>
<status status="PASS" starttime="20231101 15:28:57.347" endtime="20231101 15:28:57.349"/>
</if>
<msg timestamp="20231101 15:28:57.350" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:57.292" endtime="20231101 15:28:57.350"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231101 15:28:57.351" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231101 15:28:57.350" endtime="20231101 15:28:57.359"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:57.360" endtime="20231101 15:28:57.940"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231101 15:28:57.942" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231101 15:28:57.940" endtime="20231101 15:28:57.942"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:57.945" level="INFO">Fills the text 'DA_11 Voluptates in.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:57.943" endtime="20231101 15:28:58.005"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:58.006" endtime="20231101 15:28:58.214"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.216" level="INFO">Length is 20</msg>
<msg timestamp="20231101 15:28:58.217" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20231101 15:28:58.215" endtime="20231101 15:28:58.217"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:58.220" level="INFO">${STATE["Chuyên mục"]} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:28:58.219" endtime="20231101 15:28:58.221"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.218" endtime="20231101 15:28:58.221"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.218" endtime="20231101 15:28:58.221"/>
</if>
<status status="PASS" starttime="20231101 15:28:57.291" endtime="20231101 15:28:58.222"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:58.225" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:58.224" endtime="20231101 15:28:58.225"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:58.227" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:58.226" endtime="20231101 15:28:58.227"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:58.231" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:58.229" endtime="20231101 15:28:58.232"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.234" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:58.234" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:58.233" endtime="20231101 15:28:58.234"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:58.236" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:28:58.235" endtime="20231101 15:28:58.237"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.238" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:58.238" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:58.237" endtime="20231101 15:28:58.238"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.239" endtime="20231101 15:28:58.239"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.240" endtime="20231101 15:28:58.240"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.238" endtime="20231101 15:28:58.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.241" endtime="20231101 15:28:58.241"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.242" endtime="20231101 15:28:58.242"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.242" endtime="20231101 15:28:58.243"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.240" endtime="20231101 15:28:58.243"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 15:28:58.247" level="INFO">${new_text} = 3565</msg>
<status status="PASS" starttime="20231101 15:28:58.246" endtime="20231101 15:28:58.248"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 15:28:58.249" level="INFO">${new_text} = 3565</msg>
<status status="PASS" starttime="20231101 15:28:58.248" endtime="20231101 15:28:58.250"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.243" endtime="20231101 15:28:58.250"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.252" endtime="20231101 15:28:58.252"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.253" endtime="20231101 15:28:58.253"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.251" endtime="20231101 15:28:58.253"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.254" endtime="20231101 15:28:58.255"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.254" endtime="20231101 15:28:58.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:58.256" endtime="20231101 15:28:58.256"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.255" endtime="20231101 15:28:58.256"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.257" endtime="20231101 15:28:58.258"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.259" endtime="20231101 15:28:58.259"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.259" endtime="20231101 15:28:58.260"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.257" endtime="20231101 15:28:58.260"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.264" endtime="20231101 15:28:58.265"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.263" endtime="20231101 15:28:58.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.267" endtime="20231101 15:28:58.268"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.266" endtime="20231101 15:28:58.268"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.269" endtime="20231101 15:28:58.270"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.268" endtime="20231101 15:28:58.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.270" endtime="20231101 15:28:58.271"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.270" endtime="20231101 15:28:58.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.271" endtime="20231101 15:28:58.272"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.271" endtime="20231101 15:28:58.272"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.238" endtime="20231101 15:28:58.272"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.273" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:28:58.273" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:28:58.272" endtime="20231101 15:28:58.273"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:58.274" level="INFO">${text} = 3565</msg>
<status status="PASS" starttime="20231101 15:28:58.274" endtime="20231101 15:28:58.274"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.273" endtime="20231101 15:28:58.275"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.273" endtime="20231101 15:28:58.275"/>
</if>
<msg timestamp="20231101 15:28:58.275" level="INFO">${text} = 3565</msg>
<status status="PASS" starttime="20231101 15:28:58.223" endtime="20231101 15:28:58.275"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:28:58.276" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:28:58.275" endtime="20231101 15:28:58.276"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:58.277" endtime="20231101 15:28:58.392"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:58.393" endtime="20231101 15:28:58.464"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:58.466" level="INFO">Fills the text '3565' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:58.465" endtime="20231101 15:28:58.506"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:58.547" level="INFO">Text: '3565'</msg>
<msg timestamp="20231101 15:28:58.547" level="INFO">${condition} = 3565</msg>
<status status="PASS" starttime="20231101 15:28:58.506" endtime="20231101 15:28:58.548"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.550" endtime="20231101 15:28:58.551"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.552" endtime="20231101 15:28:58.553"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.548" endtime="20231101 15:28:58.553"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:58.548" endtime="20231101 15:28:58.554"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.556" level="INFO">Length is 4</msg>
<msg timestamp="20231101 15:28:58.557" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231101 15:28:58.555" endtime="20231101 15:28:58.557"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:58.561" level="INFO">${STATE["Thứ tự"]} = 3565</msg>
<status status="PASS" starttime="20231101 15:28:58.559" endtime="20231101 15:28:58.562"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.558" endtime="20231101 15:28:58.563"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.558" endtime="20231101 15:28:58.564"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:58.565" endtime="20231101 15:28:58.574"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.222" endtime="20231101 15:28:58.575"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:58.582" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:58.581" endtime="20231101 15:28:58.582"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:58.584" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:58.583" endtime="20231101 15:28:58.585"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:58.587" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:58.586" endtime="20231101 15:28:58.587"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.589" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:58.589" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:58.588" endtime="20231101 15:28:58.589"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:58.591" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:28:58.590" endtime="20231101 15:28:58.592"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.596" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:58.597" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:58.592" endtime="20231101 15:28:58.598"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.600" endtime="20231101 15:28:58.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.601" endtime="20231101 15:28:58.602"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.599" endtime="20231101 15:28:58.602"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 15:28:58.605" level="INFO">${random} = Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:58.604" endtime="20231101 15:28:58.606"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 15:28:58.608" level="INFO">${words} = ['DA_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231101 15:28:58.607" endtime="20231101 15:28:58.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:58.621" level="INFO">${new_text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:58.609" endtime="20231101 15:28:58.621"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.603" endtime="20231101 15:28:58.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.623" endtime="20231101 15:28:58.623"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.624" endtime="20231101 15:28:58.624"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.622" endtime="20231101 15:28:58.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.626" endtime="20231101 15:28:58.627"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.630" endtime="20231101 15:28:58.630"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.625" endtime="20231101 15:28:58.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.633" endtime="20231101 15:28:58.634"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.632" endtime="20231101 15:28:58.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:58.659" endtime="20231101 15:28:58.659"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.634" endtime="20231101 15:28:58.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.664" endtime="20231101 15:28:58.665"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.666" endtime="20231101 15:28:58.667"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.668" endtime="20231101 15:28:58.668"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.663" endtime="20231101 15:28:58.669"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.670" endtime="20231101 15:28:58.670"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.669" endtime="20231101 15:28:58.671"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.672" endtime="20231101 15:28:58.672"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.671" endtime="20231101 15:28:58.673"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.674" endtime="20231101 15:28:58.675"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.673" endtime="20231101 15:28:58.675"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.677" endtime="20231101 15:28:58.680"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.676" endtime="20231101 15:28:58.681"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.682" endtime="20231101 15:28:58.683"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.681" endtime="20231101 15:28:58.683"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.598" endtime="20231101 15:28:58.684"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.685" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:28:58.686" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:28:58.684" endtime="20231101 15:28:58.686"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:58.688" level="INFO">${text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:58.687" endtime="20231101 15:28:58.689"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.687" endtime="20231101 15:28:58.690"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.686" endtime="20231101 15:28:58.690"/>
</if>
<msg timestamp="20231101 15:28:58.691" level="INFO">${text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:58.577" endtime="20231101 15:28:58.691"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:28:58.693" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:28:58.692" endtime="20231101 15:28:58.693"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:58.696" endtime="20231101 15:28:58.808"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:58.809" endtime="20231101 15:28:58.871"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:58.873" level="INFO">Fills the text 'DA_11 Tenetur ipsa maxime.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:58.872" endtime="20231101 15:28:58.925"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:58.972" level="INFO">Text: 'DA_11 Tenetur ipsa maxime.'</msg>
<msg timestamp="20231101 15:28:58.973" level="INFO">${condition} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:58.925" endtime="20231101 15:28:58.973"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.975" endtime="20231101 15:28:58.976"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:58.977" endtime="20231101 15:28:58.978"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:58.974" endtime="20231101 15:28:58.979"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:58.973" endtime="20231101 15:28:58.980"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:58.983" level="INFO">Length is 26</msg>
<msg timestamp="20231101 15:28:58.983" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231101 15:28:58.982" endtime="20231101 15:28:58.984"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:58.987" level="INFO">${STATE["Tiêu đề"]} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:58.986" endtime="20231101 15:28:58.987"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.984" endtime="20231101 15:28:58.988"/>
</branch>
<status status="PASS" starttime="20231101 15:28:58.984" endtime="20231101 15:28:58.989"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:58.989" endtime="20231101 15:28:58.999"/>
</kw>
<status status="PASS" starttime="20231101 15:28:58.576" endtime="20231101 15:28:59.000"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:59.004" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 15:28:59.003" endtime="20231101 15:28:59.004"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.006" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:59.007" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:28:59.005" endtime="20231101 15:28:59.007"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.015" level="INFO">${text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:59.009" endtime="20231101 15:28:59.016"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.008" endtime="20231101 15:28:59.016"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.008" endtime="20231101 15:28:59.017"/>
</if>
<msg timestamp="20231101 15:28:59.018" level="INFO">${text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:59.001" endtime="20231101 15:28:59.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.020" level="INFO">${name} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:59.019" endtime="20231101 15:28:59.021"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.025" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:59.024" endtime="20231101 15:28:59.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.027" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:59.026" endtime="20231101 15:28:59.029"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:59.032" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:59.031" endtime="20231101 15:28:59.032"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.034" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:59.034" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:59.033" endtime="20231101 15:28:59.035"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:59.037" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:28:59.035" endtime="20231101 15:28:59.037"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.039" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:59.039" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:59.038" endtime="20231101 15:28:59.039"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.041" endtime="20231101 15:28:59.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.043" endtime="20231101 15:28:59.043"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.040" endtime="20231101 15:28:59.043"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.048" endtime="20231101 15:28:59.049"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.050" endtime="20231101 15:28:59.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.051" endtime="20231101 15:28:59.052"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.046" endtime="20231101 15:28:59.053"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.071" endtime="20231101 15:28:59.072"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.074" endtime="20231101 15:28:59.074"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.054" endtime="20231101 15:28:59.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.085" endtime="20231101 15:28:59.086"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.086" endtime="20231101 15:28:59.087"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.076" endtime="20231101 15:28:59.088"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 15:28:59.091" level="INFO">${new_text} = Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.</msg>
<status status="PASS" starttime="20231101 15:28:59.090" endtime="20231101 15:28:59.092"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.089" endtime="20231101 15:28:59.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:59.093" endtime="20231101 15:28:59.096"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.093" endtime="20231101 15:28:59.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.099" endtime="20231101 15:28:59.099"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.100" endtime="20231101 15:28:59.101"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.101" endtime="20231101 15:28:59.102"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.098" endtime="20231101 15:28:59.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.104" endtime="20231101 15:28:59.105"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.103" endtime="20231101 15:28:59.105"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.107" endtime="20231101 15:28:59.107"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.106" endtime="20231101 15:28:59.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.109" endtime="20231101 15:28:59.110"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.108" endtime="20231101 15:28:59.111"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.116" endtime="20231101 15:28:59.117"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.112" endtime="20231101 15:28:59.117"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.120" endtime="20231101 15:28:59.121"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.119" endtime="20231101 15:28:59.121"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.040" endtime="20231101 15:28:59.122"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.123" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:28:59.124" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:28:59.122" endtime="20231101 15:28:59.125"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:59.130" level="INFO">${text} = Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.</msg>
<status status="PASS" starttime="20231101 15:28:59.127" endtime="20231101 15:28:59.130"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.126" endtime="20231101 15:28:59.131"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.125" endtime="20231101 15:28:59.131"/>
</if>
<msg timestamp="20231101 15:28:59.131" level="INFO">${text} = Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.</msg>
<status status="PASS" starttime="20231101 15:28:59.022" endtime="20231101 15:28:59.132"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 15:28:59.133" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 15:28:59.132" endtime="20231101 15:28:59.134"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:59.134" endtime="20231101 15:28:59.188"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:59.190" level="INFO">Fills the text 'Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:59.189" endtime="20231101 15:28:59.242"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:59.283" level="INFO">Text: 'Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.'</msg>
<msg timestamp="20231101 15:28:59.284" level="INFO">${condition} = Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.</msg>
<status status="PASS" starttime="20231101 15:28:59.243" endtime="20231101 15:28:59.284"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.288" endtime="20231101 15:28:59.288"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.289" endtime="20231101 15:28:59.290"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.285" endtime="20231101 15:28:59.290"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:59.285" endtime="20231101 15:28:59.291"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.293" level="INFO">Length is 117</msg>
<msg timestamp="20231101 15:28:59.293" level="INFO">${cnt} = 117</msg>
<status status="PASS" starttime="20231101 15:28:59.292" endtime="20231101 15:28:59.294"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:59.299" level="INFO">${STATE["Mô tả"]} = Perferendis fugiat cum sunt sint. Blanditiis enim voluptate labore. Dolorum aspernatur culpa nihil eligendi quasi at.</msg>
<status status="PASS" starttime="20231101 15:28:59.297" endtime="20231101 15:28:59.299"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.296" endtime="20231101 15:28:59.300"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.296" endtime="20231101 15:28:59.300"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:59.301" endtime="20231101 15:28:59.309"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.021" endtime="20231101 15:28:59.310"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.316" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:28:59.315" endtime="20231101 15:28:59.316"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.318" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:28:59.317" endtime="20231101 15:28:59.318"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:59.321" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:28:59.319" endtime="20231101 15:28:59.321"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.323" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:28:59.324" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:28:59.322" endtime="20231101 15:28:59.325"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:28:59.329" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:28:59.326" endtime="20231101 15:28:59.330"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.332" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:28:59.332" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:59.331" endtime="20231101 15:28:59.333"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.335" endtime="20231101 15:28:59.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.337" endtime="20231101 15:28:59.337"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.333" endtime="20231101 15:28:59.338"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.340" endtime="20231101 15:28:59.340"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.341" endtime="20231101 15:28:59.341"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.342" endtime="20231101 15:28:59.342"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.339" endtime="20231101 15:28:59.343"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.346" endtime="20231101 15:28:59.347"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.348" endtime="20231101 15:28:59.348"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.343" endtime="20231101 15:28:59.349"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.351" endtime="20231101 15:28:59.353"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.354" endtime="20231101 15:28:59.355"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.350" endtime="20231101 15:28:59.356"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 15:28:59.359" level="INFO">${new_text} = Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.</msg>
<status status="PASS" starttime="20231101 15:28:59.357" endtime="20231101 15:28:59.360"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.356" endtime="20231101 15:28:59.364"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:28:59.384" endtime="20231101 15:28:59.385"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.365" endtime="20231101 15:28:59.386"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.389" endtime="20231101 15:28:59.390"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.391" endtime="20231101 15:28:59.391"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.392" endtime="20231101 15:28:59.392"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.388" endtime="20231101 15:28:59.393"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.396" endtime="20231101 15:28:59.397"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.393" endtime="20231101 15:28:59.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.402" endtime="20231101 15:28:59.403"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.402" endtime="20231101 15:28:59.403"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.405" endtime="20231101 15:28:59.405"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.404" endtime="20231101 15:28:59.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.407" endtime="20231101 15:28:59.407"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.406" endtime="20231101 15:28:59.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.409" endtime="20231101 15:28:59.409"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.408" endtime="20231101 15:28:59.410"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.333" endtime="20231101 15:28:59.412"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.413" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:28:59.414" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:28:59.412" endtime="20231101 15:28:59.414"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:28:59.420" level="INFO">${text} = Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.</msg>
<status status="PASS" starttime="20231101 15:28:59.417" endtime="20231101 15:28:59.420"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.415" endtime="20231101 15:28:59.420"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.415" endtime="20231101 15:28:59.421"/>
</if>
<msg timestamp="20231101 15:28:59.422" level="INFO">${text} = Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.</msg>
<status status="PASS" starttime="20231101 15:28:59.313" endtime="20231101 15:28:59.423"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 15:28:59.426" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 15:28:59.424" endtime="20231101 15:28:59.426"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:59.429" endtime="20231101 15:28:59.477"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:28:59.481" level="INFO">Fills the text 'Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:28:59.479" endtime="20231101 15:28:59.524"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:28:59.602" level="INFO">Text: 'Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.'</msg>
<msg timestamp="20231101 15:28:59.603" level="INFO">${condition} = Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.</msg>
<status status="PASS" starttime="20231101 15:28:59.525" endtime="20231101 15:28:59.603"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.605" endtime="20231101 15:28:59.605"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.606" endtime="20231101 15:28:59.606"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.604" endtime="20231101 15:28:59.607"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:28:59.604" endtime="20231101 15:28:59.607"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:28:59.608" level="INFO">Length is 183</msg>
<msg timestamp="20231101 15:28:59.609" level="INFO">${cnt} = 183</msg>
<status status="PASS" starttime="20231101 15:28:59.608" endtime="20231101 15:28:59.609"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:28:59.615" level="INFO">${STATE["Nội dung"]} = Omnis occaecati corrupti temporibus porro ex. Cumque assumenda necessitatibus blanditiis nulla. Commodi dicta consequuntur ipsum. Quae voluptatem debitis laudantium quaerat veritatis.</msg>
<status status="PASS" starttime="20231101 15:28:59.612" endtime="20231101 15:28:59.615"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.610" endtime="20231101 15:28:59.615"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.609" endtime="20231101 15:28:59.616"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:28:59.617" endtime="20231101 15:28:59.623"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.311" endtime="20231101 15:28:59.624"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:28:59.730" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:28:59.626" endtime="20231101 15:28:59.731"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:59.773" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:28:59.731" endtime="20231101 15:28:59.774"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:28:59.776" endtime="20231101 15:28:59.903"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:28:59.908" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:28:59.907" endtime="20231101 15:28:59.908"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:28:59.941" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:28:59.909" endtime="20231101 15:28:59.942"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.945" endtime="20231101 15:28:59.945"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:28:59.947" endtime="20231101 15:28:59.948"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:28:59.949" endtime="20231101 15:28:59.951"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:28:59.943" endtime="20231101 15:28:59.951"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.942" endtime="20231101 15:28:59.952"/>
</if>
<status status="PASS" starttime="20231101 15:28:59.905" endtime="20231101 15:28:59.952"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:29:00.876" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:00.879" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:01.308" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:01.308" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:01.337" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:28:59.953" endtime="20231101 15:29:01.338"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.775" endtime="20231101 15:29:01.338"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:01.340" endtime="20231101 15:29:01.340"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:29:01.341" endtime="20231101 15:29:01.341"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:29:01.342" endtime="20231101 15:29:01.343"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:01.339" endtime="20231101 15:29:01.343"/>
</branch>
<status status="PASS" starttime="20231101 15:28:59.775" endtime="20231101 15:29:01.345"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:01.348" endtime="20231101 15:29:01.357"/>
</kw>
<status status="PASS" starttime="20231101 15:28:59.624" endtime="20231101 15:29:01.357"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:01.362" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:29:01.359" endtime="20231101 15:29:01.363"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:01.365" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:01.365" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:01.364" endtime="20231101 15:29:01.366"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:01.367" endtime="20231101 15:29:01.368"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:01.366" endtime="20231101 15:29:01.368"/>
</branch>
<status status="PASS" starttime="20231101 15:29:01.366" endtime="20231101 15:29:01.368"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:01.431" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 15:29:01.373" endtime="20231101 15:29:01.432"/>
</kw>
<status status="PASS" starttime="20231101 15:29:01.370" endtime="20231101 15:29:01.432"/>
</kw>
<status status="PASS" starttime="20231101 15:29:01.369" endtime="20231101 15:29:01.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:01.434" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 15:29:01.433" endtime="20231101 15:29:01.434"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 15:29:01.846" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 15:29:01.847" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 15:29:01.847" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 15:29:01.440" endtime="20231101 15:29:01.850"/>
</kw>
<status status="FAIL" starttime="20231101 15:29:01.437" endtime="20231101 15:29:01.851"/>
</kw>
<msg timestamp="20231101 15:29:01.851" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 15:29:01.435" endtime="20231101 15:29:01.851"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:01.853" endtime="20231101 15:29:01.854"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:01.852" endtime="20231101 15:29:01.854"/>
</branch>
<status status="PASS" starttime="20231101 15:29:01.852" endtime="20231101 15:29:01.855"/>
</if>
<status status="PASS" starttime="20231101 15:29:01.358" endtime="20231101 15:29:01.855"/>
</kw>
<msg timestamp="20231101 15:29:01.856" level="INFO">${Data1} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:28:56.592" endtime="20231101 15:29:01.856"/>
</kw>
<kw name="Create a test data with &quot;_@Tên loại@_&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:01.935" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:01.869" endtime="20231101 15:29:01.936"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 15:29:01.937" endtime="20231101 15:29:01.938"/>
</kw>
<status status="PASS" starttime="20231101 15:29:01.867" endtime="20231101 15:29:01.938"/>
</kw>
<msg timestamp="20231101 15:29:01.939" level="INFO">${condition} = True</msg>
<status status="PASS" starttime="20231101 15:29:01.866" endtime="20231101 15:29:01.939"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Thêm mới dữ liệu&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:02.049" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:01.942" endtime="20231101 15:29:02.049"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:02.057" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:02.049" endtime="20231101 15:29:02.058"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:02.060" endtime="20231101 15:29:02.304"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:02.305" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:29:02.305" endtime="20231101 15:29:02.305"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:02.316" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:02.306" endtime="20231101 15:29:02.316"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.318" endtime="20231101 15:29:02.319"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.319" endtime="20231101 15:29:02.320"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:29:02.320" endtime="20231101 15:29:02.321"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.317" endtime="20231101 15:29:02.321"/>
</branch>
<status status="PASS" starttime="20231101 15:29:02.317" endtime="20231101 15:29:02.322"/>
</if>
<status status="PASS" starttime="20231101 15:29:02.304" endtime="20231101 15:29:02.322"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:29:02.344" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:02.345" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:02.361" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:02.362" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:02.369" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:29:02.323" endtime="20231101 15:29:02.370"/>
</kw>
<status status="PASS" starttime="20231101 15:29:02.059" endtime="20231101 15:29:02.370"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.372" endtime="20231101 15:29:02.373"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:29:02.373" endtime="20231101 15:29:02.374"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.374" endtime="20231101 15:29:02.376"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.371" endtime="20231101 15:29:02.377"/>
</branch>
<status status="PASS" starttime="20231101 15:29:02.058" endtime="20231101 15:29:02.378"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:02.379" endtime="20231101 15:29:02.399"/>
</kw>
<status status="PASS" starttime="20231101 15:29:01.941" endtime="20231101 15:29:02.400"/>
</kw>
<status status="PASS" starttime="20231101 15:29:01.940" endtime="20231101 15:29:02.401"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create data &quot;Quản lý dữ liệu&quot; with &quot;/data&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20231101 15:29:02.402" endtime="20231101 15:29:02.402"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.401" endtime="20231101 15:29:02.403"/>
</branch>
<status status="PASS" starttime="20231101 15:29:01.940" endtime="20231101 15:29:02.403"/>
</if>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:02.407" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:02.406" endtime="20231101 15:29:02.407"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:02.409" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:02.408" endtime="20231101 15:29:02.409"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:02.412" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 15:29:02.411" endtime="20231101 15:29:02.412"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:02.414" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:02.414" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:29:02.413" endtime="20231101 15:29:02.414"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:02.416" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:29:02.415" endtime="20231101 15:29:02.416"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:02.418" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:02.418" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:02.417" endtime="20231101 15:29:02.419"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:02.423" level="INFO">${new_text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:29:02.421" endtime="20231101 15:29:02.424"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:02.428" level="INFO">${symbol} = _@Tên loại@_</msg>
<status status="PASS" starttime="20231101 15:29:02.425" endtime="20231101 15:29:02.429"/>
</kw>
<status status="PASS" starttime="20231101 15:29:02.420" endtime="20231101 15:29:02.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.430" endtime="20231101 15:29:02.431"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.431" endtime="20231101 15:29:02.432"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.433" endtime="20231101 15:29:02.433"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.430" endtime="20231101 15:29:02.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.435" endtime="20231101 15:29:02.436"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.436" endtime="20231101 15:29:02.437"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.434" endtime="20231101 15:29:02.437"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.438" endtime="20231101 15:29:02.439"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.439" endtime="20231101 15:29:02.440"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.438" endtime="20231101 15:29:02.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.442" endtime="20231101 15:29:02.442"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.441" endtime="20231101 15:29:02.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:02.445" endtime="20231101 15:29:02.446"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.445" endtime="20231101 15:29:02.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.448" endtime="20231101 15:29:02.449"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.449" endtime="20231101 15:29:02.450"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.451" endtime="20231101 15:29:02.451"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.447" endtime="20231101 15:29:02.452"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.453" endtime="20231101 15:29:02.454"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.452" endtime="20231101 15:29:02.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.456" endtime="20231101 15:29:02.457"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.455" endtime="20231101 15:29:02.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.458" endtime="20231101 15:29:02.459"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.458" endtime="20231101 15:29:02.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.481" endtime="20231101 15:29:02.483"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.461" endtime="20231101 15:29:02.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:02.502" endtime="20231101 15:29:02.503"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:02.502" endtime="20231101 15:29:02.504"/>
</branch>
<status status="PASS" starttime="20231101 15:29:02.419" endtime="20231101 15:29:02.504"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:02.506" level="INFO">Length is 12</msg>
<msg timestamp="20231101 15:29:02.506" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231101 15:29:02.505" endtime="20231101 15:29:02.507"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:29:02.511" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:29:02.509" endtime="20231101 15:29:02.512"/>
</kw>
<status status="PASS" starttime="20231101 15:29:02.508" endtime="20231101 15:29:02.513"/>
</branch>
<status status="PASS" starttime="20231101 15:29:02.507" endtime="20231101 15:29:02.513"/>
</if>
<msg timestamp="20231101 15:29:02.514" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:29:02.405" endtime="20231101 15:29:02.514"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231101 15:29:02.518" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231101 15:29:02.515" endtime="20231101 15:29:02.518"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:02.521" endtime="20231101 15:29:02.981"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231101 15:29:02.984" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231101 15:29:02.982" endtime="20231101 15:29:02.985"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:02.986" level="INFO">Fills the text 'DA_11 Voluptates in.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:02.986" endtime="20231101 15:29:03.049"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:03.049" endtime="20231101 15:29:03.240"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.241" level="INFO">Length is 20</msg>
<msg timestamp="20231101 15:29:03.242" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20231101 15:29:03.241" endtime="20231101 15:29:03.242"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:29:03.245" level="INFO">${STATE["Chuyên mục"]} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:29:03.242" endtime="20231101 15:29:03.247"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.242" endtime="20231101 15:29:03.248"/>
</branch>
<status status="PASS" starttime="20231101 15:29:03.242" endtime="20231101 15:29:03.249"/>
</if>
<status status="PASS" starttime="20231101 15:29:02.404" endtime="20231101 15:29:03.250"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:03.253" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:03.253" endtime="20231101 15:29:03.253"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:03.254" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:03.254" endtime="20231101 15:29:03.254"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:03.255" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:03.254" endtime="20231101 15:29:03.255"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.256" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:03.256" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:03.255" endtime="20231101 15:29:03.256"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:03.257" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:29:03.256" endtime="20231101 15:29:03.257"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.258" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:03.259" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:03.257" endtime="20231101 15:29:03.259"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.263" endtime="20231101 15:29:03.264"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.266" endtime="20231101 15:29:03.266"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.262" endtime="20231101 15:29:03.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.268" endtime="20231101 15:29:03.268"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.269" endtime="20231101 15:29:03.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.270" endtime="20231101 15:29:03.270"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.267" endtime="20231101 15:29:03.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 15:29:03.273" level="INFO">${new_text} = 390</msg>
<status status="PASS" starttime="20231101 15:29:03.272" endtime="20231101 15:29:03.273"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 15:29:03.275" level="INFO">${new_text} = 390</msg>
<status status="PASS" starttime="20231101 15:29:03.273" endtime="20231101 15:29:03.275"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.271" endtime="20231101 15:29:03.275"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.278" endtime="20231101 15:29:03.279"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.280" endtime="20231101 15:29:03.281"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.276" endtime="20231101 15:29:03.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.282" endtime="20231101 15:29:03.283"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.282" endtime="20231101 15:29:03.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:03.283" endtime="20231101 15:29:03.284"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.283" endtime="20231101 15:29:03.284"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.285" endtime="20231101 15:29:03.285"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.286" endtime="20231101 15:29:03.286"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.287" endtime="20231101 15:29:03.287"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.284" endtime="20231101 15:29:03.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.288" endtime="20231101 15:29:03.289"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.288" endtime="20231101 15:29:03.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.290" endtime="20231101 15:29:03.291"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.289" endtime="20231101 15:29:03.291"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.292" endtime="20231101 15:29:03.292"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.291" endtime="20231101 15:29:03.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.296" endtime="20231101 15:29:03.297"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.295" endtime="20231101 15:29:03.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.299" endtime="20231101 15:29:03.300"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.298" endtime="20231101 15:29:03.300"/>
</branch>
<status status="PASS" starttime="20231101 15:29:03.261" endtime="20231101 15:29:03.301"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.302" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:29:03.302" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:29:03.301" endtime="20231101 15:29:03.302"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:29:03.304" level="INFO">${text} = 390</msg>
<status status="PASS" starttime="20231101 15:29:03.304" endtime="20231101 15:29:03.305"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.303" endtime="20231101 15:29:03.305"/>
</branch>
<status status="PASS" starttime="20231101 15:29:03.303" endtime="20231101 15:29:03.305"/>
</if>
<msg timestamp="20231101 15:29:03.306" level="INFO">${text} = 390</msg>
<status status="PASS" starttime="20231101 15:29:03.252" endtime="20231101 15:29:03.306"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:29:03.308" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:29:03.307" endtime="20231101 15:29:03.308"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:03.309" endtime="20231101 15:29:03.458"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:03.459" endtime="20231101 15:29:03.549"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:03.551" level="INFO">Fills the text '390' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:03.550" endtime="20231101 15:29:03.593"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:03.647" level="INFO">Text: '390'</msg>
<msg timestamp="20231101 15:29:03.648" level="INFO">${condition} = 390</msg>
<status status="PASS" starttime="20231101 15:29:03.594" endtime="20231101 15:29:03.648"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.651" endtime="20231101 15:29:03.652"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.653" endtime="20231101 15:29:03.653"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.649" endtime="20231101 15:29:03.654"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:29:03.649" endtime="20231101 15:29:03.655"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.656" level="INFO">Length is 3</msg>
<msg timestamp="20231101 15:29:03.657" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231101 15:29:03.655" endtime="20231101 15:29:03.657"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:29:03.661" level="INFO">${STATE["Thứ tự"]} = 390</msg>
<status status="PASS" starttime="20231101 15:29:03.659" endtime="20231101 15:29:03.662"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.658" endtime="20231101 15:29:03.662"/>
</branch>
<status status="PASS" starttime="20231101 15:29:03.658" endtime="20231101 15:29:03.663"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:03.664" endtime="20231101 15:29:03.671"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.251" endtime="20231101 15:29:03.671"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:03.675" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:03.675" endtime="20231101 15:29:03.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:03.678" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:03.677" endtime="20231101 15:29:03.678"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:03.680" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:03.679" endtime="20231101 15:29:03.681"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.683" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:03.683" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:03.682" endtime="20231101 15:29:03.684"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:03.685" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:29:03.684" endtime="20231101 15:29:03.686"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.687" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:03.688" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:03.687" endtime="20231101 15:29:03.688"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.690" endtime="20231101 15:29:03.691"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.692" endtime="20231101 15:29:03.692"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.689" endtime="20231101 15:29:03.695"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 15:29:03.699" level="INFO">${random} = Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:03.698" endtime="20231101 15:29:03.702"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 15:29:03.704" level="INFO">${words} = ['DA_11', 'Check', 'the', 'update', 'of', 'data', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231101 15:29:03.703" endtime="20231101 15:29:03.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:03.708" level="INFO">${new_text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:03.705" endtime="20231101 15:29:03.708"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.696" endtime="20231101 15:29:03.709"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.711" endtime="20231101 15:29:03.713"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.714" endtime="20231101 15:29:03.715"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.709" endtime="20231101 15:29:03.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.717" endtime="20231101 15:29:03.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.718" endtime="20231101 15:29:03.718"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.716" endtime="20231101 15:29:03.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.720" endtime="20231101 15:29:03.721"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.719" endtime="20231101 15:29:03.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:03.722" endtime="20231101 15:29:03.723"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.722" endtime="20231101 15:29:03.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.747" endtime="20231101 15:29:03.747"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.748" endtime="20231101 15:29:03.749"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.750" endtime="20231101 15:29:03.751"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.746" endtime="20231101 15:29:03.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.752" endtime="20231101 15:29:03.753"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.751" endtime="20231101 15:29:03.754"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.755" endtime="20231101 15:29:03.756"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.754" endtime="20231101 15:29:03.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.758" endtime="20231101 15:29:03.759"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.757" endtime="20231101 15:29:03.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.763" endtime="20231101 15:29:03.763"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.762" endtime="20231101 15:29:03.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:03.765" endtime="20231101 15:29:03.765"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:03.764" endtime="20231101 15:29:03.766"/>
</branch>
<status status="PASS" starttime="20231101 15:29:03.689" endtime="20231101 15:29:03.766"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:03.767" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:29:03.768" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:29:03.766" endtime="20231101 15:29:03.768"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:29:03.770" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:03.769" endtime="20231101 15:29:03.771"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.769" endtime="20231101 15:29:03.771"/>
</branch>
<status status="PASS" starttime="20231101 15:29:03.768" endtime="20231101 15:29:03.772"/>
</if>
<msg timestamp="20231101 15:29:03.772" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:03.673" endtime="20231101 15:29:03.772"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:29:03.774" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:29:03.773" endtime="20231101 15:29:03.775"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:03.776" endtime="20231101 15:29:03.891"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:03.892" endtime="20231101 15:29:03.930"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:03.932" level="INFO">Fills the text 'DA_11 Nam excepturi atque.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:03.931" endtime="20231101 15:29:03.987"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:04.031" level="INFO">Text: 'DA_11 Nam excepturi atque.'</msg>
<msg timestamp="20231101 15:29:04.031" level="INFO">${condition} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:03.988" endtime="20231101 15:29:04.032"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.034" endtime="20231101 15:29:04.035"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.036" endtime="20231101 15:29:04.036"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.032" endtime="20231101 15:29:04.037"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:29:04.032" endtime="20231101 15:29:04.037"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.039" level="INFO">Length is 26</msg>
<msg timestamp="20231101 15:29:04.040" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231101 15:29:04.038" endtime="20231101 15:29:04.040"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:29:04.044" level="INFO">${STATE["Tiêu đề"]} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:04.042" endtime="20231101 15:29:04.045"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.041" endtime="20231101 15:29:04.045"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.041" endtime="20231101 15:29:04.046"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:04.046" endtime="20231101 15:29:04.056"/>
</kw>
<status status="PASS" starttime="20231101 15:29:03.672" endtime="20231101 15:29:04.056"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:04.061" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 15:29:04.059" endtime="20231101 15:29:04.061"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.063" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:04.064" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:29:04.062" endtime="20231101 15:29:04.065"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.069" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:04.067" endtime="20231101 15:29:04.070"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.066" endtime="20231101 15:29:04.070"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.066" endtime="20231101 15:29:04.070"/>
</if>
<msg timestamp="20231101 15:29:04.071" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:04.057" endtime="20231101 15:29:04.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.073" level="INFO">${name} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:04.072" endtime="20231101 15:29:04.073"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.080" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:04.079" endtime="20231101 15:29:04.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.083" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:04.082" endtime="20231101 15:29:04.083"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:04.086" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:04.084" endtime="20231101 15:29:04.086"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.088" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:04.089" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:04.087" endtime="20231101 15:29:04.089"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:04.091" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:29:04.090" endtime="20231101 15:29:04.092"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.096" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:04.097" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:04.093" endtime="20231101 15:29:04.098"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.100" endtime="20231101 15:29:04.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.101" endtime="20231101 15:29:04.102"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.099" endtime="20231101 15:29:04.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.105" endtime="20231101 15:29:04.105"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.107" endtime="20231101 15:29:04.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.119" endtime="20231101 15:29:04.119"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.103" endtime="20231101 15:29:04.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.121" endtime="20231101 15:29:04.122"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.123" endtime="20231101 15:29:04.123"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.120" endtime="20231101 15:29:04.124"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.125" endtime="20231101 15:29:04.126"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.129" endtime="20231101 15:29:04.130"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.124" endtime="20231101 15:29:04.131"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 15:29:04.133" level="INFO">${new_text} = Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.</msg>
<status status="PASS" starttime="20231101 15:29:04.132" endtime="20231101 15:29:04.134"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.131" endtime="20231101 15:29:04.134"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:04.136" endtime="20231101 15:29:04.136"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.135" endtime="20231101 15:29:04.137"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.138" endtime="20231101 15:29:04.139"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.140" endtime="20231101 15:29:04.141"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.142" endtime="20231101 15:29:04.142"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.138" endtime="20231101 15:29:04.145"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.146" endtime="20231101 15:29:04.147"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.145" endtime="20231101 15:29:04.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.149" endtime="20231101 15:29:04.149"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.148" endtime="20231101 15:29:04.150"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.151" endtime="20231101 15:29:04.152"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.150" endtime="20231101 15:29:04.152"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.154" endtime="20231101 15:29:04.155"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.153" endtime="20231101 15:29:04.156"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.158" endtime="20231101 15:29:04.159"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.157" endtime="20231101 15:29:04.159"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.098" endtime="20231101 15:29:04.162"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.164" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:29:04.165" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:29:04.163" endtime="20231101 15:29:04.166"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:29:04.169" level="INFO">${text} = Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.</msg>
<status status="PASS" starttime="20231101 15:29:04.167" endtime="20231101 15:29:04.169"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.166" endtime="20231101 15:29:04.170"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.166" endtime="20231101 15:29:04.170"/>
</if>
<msg timestamp="20231101 15:29:04.171" level="INFO">${text} = Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.</msg>
<status status="PASS" starttime="20231101 15:29:04.075" endtime="20231101 15:29:04.171"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 15:29:04.173" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 15:29:04.172" endtime="20231101 15:29:04.174"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:04.175" endtime="20231101 15:29:04.236"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:04.238" level="INFO">Fills the text 'Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:04.237" endtime="20231101 15:29:04.290"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:04.337" level="INFO">Text: 'Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.'</msg>
<msg timestamp="20231101 15:29:04.337" level="INFO">${condition} = Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.</msg>
<status status="PASS" starttime="20231101 15:29:04.291" endtime="20231101 15:29:04.338"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.341" endtime="20231101 15:29:04.342"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.343" endtime="20231101 15:29:04.345"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.339" endtime="20231101 15:29:04.345"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:29:04.339" endtime="20231101 15:29:04.346"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.349" level="INFO">Length is 76</msg>
<msg timestamp="20231101 15:29:04.349" level="INFO">${cnt} = 76</msg>
<status status="PASS" starttime="20231101 15:29:04.348" endtime="20231101 15:29:04.350"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:29:04.354" level="INFO">${STATE["Mô tả"]} = Ipsa ipsum doloribus modi laborum. Nulla ipsum unde et similique illo nulla.</msg>
<status status="PASS" starttime="20231101 15:29:04.352" endtime="20231101 15:29:04.354"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.351" endtime="20231101 15:29:04.355"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.351" endtime="20231101 15:29:04.355"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:04.356" endtime="20231101 15:29:04.367"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.074" endtime="20231101 15:29:04.368"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.372" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:04.371" endtime="20231101 15:29:04.373"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.374" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:04.374" endtime="20231101 15:29:04.375"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:04.382" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:04.376" endtime="20231101 15:29:04.382"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.384" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:04.385" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:04.383" endtime="20231101 15:29:04.386"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:04.388" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 15:29:04.387" endtime="20231101 15:29:04.388"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.389" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:04.390" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:04.389" endtime="20231101 15:29:04.390"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.392" endtime="20231101 15:29:04.392"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.396" endtime="20231101 15:29:04.406"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.391" endtime="20231101 15:29:04.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.407" endtime="20231101 15:29:04.408"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.409" endtime="20231101 15:29:04.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.412" endtime="20231101 15:29:04.413"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.407" endtime="20231101 15:29:04.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.415" endtime="20231101 15:29:04.416"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.417" endtime="20231101 15:29:04.418"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.414" endtime="20231101 15:29:04.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.420" endtime="20231101 15:29:04.421"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.422" endtime="20231101 15:29:04.422"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.419" endtime="20231101 15:29:04.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 15:29:04.425" level="INFO">${new_text} = Earum quam esse accusamus nisi. A consequuntur in corrupti.</msg>
<status status="PASS" starttime="20231101 15:29:04.425" endtime="20231101 15:29:04.426"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.424" endtime="20231101 15:29:04.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:04.432" endtime="20231101 15:29:04.433"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.431" endtime="20231101 15:29:04.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.435" endtime="20231101 15:29:04.436"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.437" endtime="20231101 15:29:04.439"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.440" endtime="20231101 15:29:04.440"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.434" endtime="20231101 15:29:04.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.443" endtime="20231101 15:29:04.445"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.442" endtime="20231101 15:29:04.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.447" endtime="20231101 15:29:04.447"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.446" endtime="20231101 15:29:04.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.449" endtime="20231101 15:29:04.450"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.448" endtime="20231101 15:29:04.451"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.453" endtime="20231101 15:29:04.453"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.452" endtime="20231101 15:29:04.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.455" endtime="20231101 15:29:04.456"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.455" endtime="20231101 15:29:04.456"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.391" endtime="20231101 15:29:04.457"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.459" level="INFO">Length is 8</msg>
<msg timestamp="20231101 15:29:04.459" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 15:29:04.458" endtime="20231101 15:29:04.459"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:29:04.464" level="INFO">${text} = Earum quam esse accusamus nisi. A consequuntur in corrupti.</msg>
<status status="PASS" starttime="20231101 15:29:04.463" endtime="20231101 15:29:04.465"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.462" endtime="20231101 15:29:04.466"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.461" endtime="20231101 15:29:04.466"/>
</if>
<msg timestamp="20231101 15:29:04.486" level="INFO">${text} = Earum quam esse accusamus nisi. A consequuntur in corrupti.</msg>
<status status="PASS" starttime="20231101 15:29:04.370" endtime="20231101 15:29:04.486"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 15:29:04.489" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 15:29:04.487" endtime="20231101 15:29:04.490"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:04.491" endtime="20231101 15:29:04.558"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:04.560" level="INFO">Fills the text 'Earum quam esse accusamus nisi. A consequuntur in corrupti.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:04.559" endtime="20231101 15:29:04.603"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:04.652" level="INFO">Text: 'Earum quam esse accusamus nisi. A consequuntur in corrupti.'</msg>
<msg timestamp="20231101 15:29:04.653" level="INFO">${condition} = Earum quam esse accusamus nisi. A consequuntur in corrupti.</msg>
<status status="PASS" starttime="20231101 15:29:04.604" endtime="20231101 15:29:04.653"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.656" endtime="20231101 15:29:04.657"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.657" endtime="20231101 15:29:04.658"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.654" endtime="20231101 15:29:04.658"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:29:04.654" endtime="20231101 15:29:04.659"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:04.661" level="INFO">Length is 59</msg>
<msg timestamp="20231101 15:29:04.663" level="INFO">${cnt} = 59</msg>
<status status="PASS" starttime="20231101 15:29:04.659" endtime="20231101 15:29:04.663"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:29:04.667" level="INFO">${STATE["Nội dung"]} = Earum quam esse accusamus nisi. A consequuntur in corrupti.</msg>
<status status="PASS" starttime="20231101 15:29:04.665" endtime="20231101 15:29:04.667"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.664" endtime="20231101 15:29:04.668"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.664" endtime="20231101 15:29:04.669"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:04.670" endtime="20231101 15:29:04.677"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.369" endtime="20231101 15:29:04.678"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:04.782" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:04.680" endtime="20231101 15:29:04.782"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:04.796" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:04.783" endtime="20231101 15:29:04.796"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:04.798" endtime="20231101 15:29:04.952"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:04.957" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:29:04.955" endtime="20231101 15:29:04.958"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:04.975" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:04.958" endtime="20231101 15:29:04.976"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.979" endtime="20231101 15:29:04.980"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 15:29:04.981" endtime="20231101 15:29:04.982"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 15:29:04.983" endtime="20231101 15:29:04.984"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:04.977" endtime="20231101 15:29:04.985"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.977" endtime="20231101 15:29:04.985"/>
</if>
<status status="PASS" starttime="20231101 15:29:04.953" endtime="20231101 15:29:04.986"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 15:29:05.855" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:05.856" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:06.299" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:06.299" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 15:29:06.327" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 15:29:04.986" endtime="20231101 15:29:06.327"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.797" endtime="20231101 15:29:06.329"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.330" endtime="20231101 15:29:06.331"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 15:29:06.332" endtime="20231101 15:29:06.332"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.333" endtime="20231101 15:29:06.334"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.329" endtime="20231101 15:29:06.336"/>
</branch>
<status status="PASS" starttime="20231101 15:29:04.796" endtime="20231101 15:29:06.338"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:06.338" endtime="20231101 15:29:06.349"/>
</kw>
<status status="PASS" starttime="20231101 15:29:04.679" endtime="20231101 15:29:06.350"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:06.353" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:29:06.352" endtime="20231101 15:29:06.353"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:06.355" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:06.356" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:06.354" endtime="20231101 15:29:06.356"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.358" endtime="20231101 15:29:06.359"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.357" endtime="20231101 15:29:06.360"/>
</branch>
<status status="PASS" starttime="20231101 15:29:06.357" endtime="20231101 15:29:06.362"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:06.424" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 15:29:06.372" endtime="20231101 15:29:06.425"/>
</kw>
<status status="PASS" starttime="20231101 15:29:06.367" endtime="20231101 15:29:06.426"/>
</kw>
<status status="PASS" starttime="20231101 15:29:06.366" endtime="20231101 15:29:06.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:06.429" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 15:29:06.428" endtime="20231101 15:29:06.430"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 15:29:06.898" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 15:29:06.898" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 15:29:06.899" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 15:29:06.434" endtime="20231101 15:29:06.901"/>
</kw>
<status status="FAIL" starttime="20231101 15:29:06.432" endtime="20231101 15:29:06.902"/>
</kw>
<msg timestamp="20231101 15:29:06.903" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 15:29:06.431" endtime="20231101 15:29:06.903"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.905" endtime="20231101 15:29:06.905"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.904" endtime="20231101 15:29:06.906"/>
</branch>
<status status="PASS" starttime="20231101 15:29:06.904" endtime="20231101 15:29:06.906"/>
</if>
<status status="PASS" starttime="20231101 15:29:06.351" endtime="20231101 15:29:06.907"/>
</kw>
<status status="PASS" starttime="20231101 15:29:01.865" endtime="20231101 15:29:06.911"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;${Data1}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:06.947" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:06.946" endtime="20231101 15:29:06.947"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:06.948" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:06.948" endtime="20231101 15:29:06.948"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:06.950" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:06.949" endtime="20231101 15:29:06.950"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:06.951" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:06.952" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:06.951" endtime="20231101 15:29:06.952"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:06.954" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:29:06.953" endtime="20231101 15:29:06.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:06.955" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:06.956" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:06.955" endtime="20231101 15:29:06.956"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.958" endtime="20231101 15:29:06.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.960" endtime="20231101 15:29:06.961"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.956" endtime="20231101 15:29:06.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.963" endtime="20231101 15:29:06.964"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.965" endtime="20231101 15:29:06.965"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.966" endtime="20231101 15:29:06.966"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.962" endtime="20231101 15:29:06.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.968" endtime="20231101 15:29:06.969"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.969" endtime="20231101 15:29:06.970"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.967" endtime="20231101 15:29:06.970"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.972" endtime="20231101 15:29:06.972"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.973" endtime="20231101 15:29:06.974"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.971" endtime="20231101 15:29:06.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.978" endtime="20231101 15:29:06.979"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.975" endtime="20231101 15:29:06.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:06.982" endtime="20231101 15:29:06.982"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.980" endtime="20231101 15:29:06.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.984" endtime="20231101 15:29:06.984"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.985" endtime="20231101 15:29:06.985"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.986" endtime="20231101 15:29:06.986"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.983" endtime="20231101 15:29:06.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.988" endtime="20231101 15:29:06.989"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.987" endtime="20231101 15:29:06.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.990" endtime="20231101 15:29:06.991"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.990" endtime="20231101 15:29:06.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.992" endtime="20231101 15:29:06.994"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.992" endtime="20231101 15:29:06.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:06.999" endtime="20231101 15:29:06.999"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:06.998" endtime="20231101 15:29:06.999"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:07.001" endtime="20231101 15:29:07.001"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:07.000" endtime="20231101 15:29:07.002"/>
</branch>
<status status="PASS" starttime="20231101 15:29:06.956" endtime="20231101 15:29:07.002"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:07.003" level="INFO">Length is 26</msg>
<msg timestamp="20231101 15:29:07.004" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231101 15:29:07.002" endtime="20231101 15:29:07.004"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 15:29:07.007" level="INFO">${text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:29:07.006" endtime="20231101 15:29:07.007"/>
</kw>
<status status="PASS" starttime="20231101 15:29:07.005" endtime="20231101 15:29:07.007"/>
</branch>
<status status="PASS" starttime="20231101 15:29:07.005" endtime="20231101 15:29:07.008"/>
</if>
<msg timestamp="20231101 15:29:07.008" level="INFO">${text} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:29:06.945" endtime="20231101 15:29:07.008"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:29:07.013" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:29:07.009" endtime="20231101 15:29:07.013"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:07.014" endtime="20231101 15:29:07.262"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:07.263" endtime="20231101 15:29:07.302"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:07.303" level="INFO">Fills the text 'DA_11 Tenetur ipsa maxime.' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:07.302" endtime="20231101 15:29:07.396"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:07.437" level="INFO">Text: 'DA_11 Tenetur ipsa maxime.'</msg>
<msg timestamp="20231101 15:29:07.438" level="INFO">${condition} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:29:07.397" endtime="20231101 15:29:07.438"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:07.440" endtime="20231101 15:29:07.440"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:07.441" endtime="20231101 15:29:07.442"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:07.439" endtime="20231101 15:29:07.443"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:29:07.438" endtime="20231101 15:29:07.444"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:07.446" level="INFO">Length is 26</msg>
<msg timestamp="20231101 15:29:07.447" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231101 15:29:07.445" endtime="20231101 15:29:07.447"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 15:29:07.450" level="INFO">${STATE["Tìm kiếm"]} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:29:07.449" endtime="20231101 15:29:07.450"/>
</kw>
<status status="PASS" starttime="20231101 15:29:07.448" endtime="20231101 15:29:07.450"/>
</branch>
<status status="PASS" starttime="20231101 15:29:07.447" endtime="20231101 15:29:07.451"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:07.451" endtime="20231101 15:29:07.458"/>
</kw>
<status status="PASS" starttime="20231101 15:29:06.942" endtime="20231101 15:29:07.459"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:07.484" endtime="20231101 15:29:07.568"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:07.671" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:07.570" endtime="20231101 15:29:07.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:07.672" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:07.672" endtime="20231101 15:29:07.672"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:07.685" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:07.673" endtime="20231101 15:29:07.686"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:07.688" endtime="20231101 15:29:07.688"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:07.687" endtime="20231101 15:29:07.689"/>
</branch>
<status status="PASS" starttime="20231101 15:29:07.687" endtime="20231101 15:29:07.690"/>
</if>
<status status="PASS" starttime="20231101 15:29:07.569" endtime="20231101 15:29:07.690"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:07.691" endtime="20231101 15:29:07.701"/>
</kw>
<status status="PASS" starttime="20231101 15:29:07.482" endtime="20231101 15:29:07.701"/>
</kw>
<kw name="Then &quot;${Data1}&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:07.845" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:07.743" endtime="20231101 15:29:07.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:07.848" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:07.847" endtime="20231101 15:29:07.849"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:07.933" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:07.849" endtime="20231101 15:29:07.934"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:07.935" endtime="20231101 15:29:07.936"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:07.935" endtime="20231101 15:29:07.936"/>
</branch>
<status status="PASS" starttime="20231101 15:29:07.934" endtime="20231101 15:29:07.936"/>
</if>
<status status="PASS" starttime="20231101 15:29:07.741" endtime="20231101 15:29:07.937"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:07.939" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:07.938" endtime="20231101 15:29:07.939"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:07.940" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:07.941" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:07.940" endtime="20231101 15:29:07.941"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:07.943" endtime="20231101 15:29:07.944"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:07.941" endtime="20231101 15:29:07.945"/>
</branch>
<status status="PASS" starttime="20231101 15:29:07.941" endtime="20231101 15:29:07.945"/>
</if>
<msg timestamp="20231101 15:29:07.946" level="INFO">${name} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:29:07.937" endtime="20231101 15:29:07.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:07.947" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"DA_11 Tenetur ipsa maxime.")]</msg>
<status status="PASS" starttime="20231101 15:29:07.946" endtime="20231101 15:29:07.947"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:07.956" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:07.948" endtime="20231101 15:29:07.957"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 15:29:07.957" endtime="20231101 15:29:07.959"/>
</kw>
<status status="PASS" starttime="20231101 15:29:07.740" endtime="20231101 15:29:07.961"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:08.084" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:07.982" endtime="20231101 15:29:08.084"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:08.085" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:08.085" endtime="20231101 15:29:08.086"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:08.094" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:08.086" endtime="20231101 15:29:08.095"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:08.096" endtime="20231101 15:29:08.097"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:08.095" endtime="20231101 15:29:08.097"/>
</branch>
<status status="PASS" starttime="20231101 15:29:08.095" endtime="20231101 15:29:08.098"/>
</if>
<status status="PASS" starttime="20231101 15:29:07.980" endtime="20231101 15:29:08.098"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:08.100" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 15:29:08.099" endtime="20231101 15:29:08.101"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:08.103" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:08.103" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:29:08.102" endtime="20231101 15:29:08.104"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:08.108" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:08.106" endtime="20231101 15:29:08.108"/>
</kw>
<status status="PASS" starttime="20231101 15:29:08.104" endtime="20231101 15:29:08.109"/>
</branch>
<status status="PASS" starttime="20231101 15:29:08.104" endtime="20231101 15:29:08.110"/>
</if>
<msg timestamp="20231101 15:29:08.111" level="INFO">${name} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:08.098" endtime="20231101 15:29:08.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:08.113" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"DA_11 Nam excepturi atque.")]</msg>
<status status="PASS" starttime="20231101 15:29:08.112" endtime="20231101 15:29:08.113"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:08.122" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:08.114" endtime="20231101 15:29:08.122"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &lt; 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 15:29:08.123" endtime="20231101 15:29:08.124"/>
</kw>
<status status="PASS" starttime="20231101 15:29:07.978" endtime="20231101 15:29:08.124"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;${Data1}&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:08.350" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:08.248" endtime="20231101 15:29:08.350"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:08.452" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:08.351" endtime="20231101 15:29:08.452"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:08.453" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:08.453" endtime="20231101 15:29:08.454"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:08.465" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:08.454" endtime="20231101 15:29:08.465"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:08.467" endtime="20231101 15:29:08.468"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:08.466" endtime="20231101 15:29:08.469"/>
</branch>
<status status="PASS" starttime="20231101 15:29:08.466" endtime="20231101 15:29:08.469"/>
</if>
<status status="PASS" starttime="20231101 15:29:08.350" endtime="20231101 15:29:08.470"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:08.473" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:08.471" endtime="20231101 15:29:08.473"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:08.474" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:08.475" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:08.474" endtime="20231101 15:29:08.475"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:08.477" endtime="20231101 15:29:08.477"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:08.475" endtime="20231101 15:29:08.478"/>
</branch>
<status status="PASS" starttime="20231101 15:29:08.475" endtime="20231101 15:29:08.478"/>
</if>
<msg timestamp="20231101 15:29:08.479" level="INFO">${name} = DA_11 Tenetur ipsa maxime.</msg>
<status status="PASS" starttime="20231101 15:29:08.470" endtime="20231101 15:29:08.479"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231101 15:29:08.481" endtime="20231101 15:29:08.481"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:08.482" endtime="20231101 15:29:08.483"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:08.485" endtime="20231101 15:29:08.485"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:08.484" endtime="20231101 15:29:08.486"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231101 15:29:08.487" endtime="20231101 15:29:08.488"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:08.488" endtime="20231101 15:29:08.489"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:08.486" endtime="20231101 15:29:08.490"/>
</branch>
<status status="NOT RUN" starttime="20231101 15:29:08.484" endtime="20231101 15:29:08.490"/>
</if>
<status status="NOT RUN" starttime="20231101 15:29:08.480" endtime="20231101 15:29:08.490"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 15:29:08.494" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"DA_11 Tenetur ipsa maxime.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 15:29:08.491" endtime="20231101 15:29:08.494"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:08.495" endtime="20231101 15:29:08.622"/>
</kw>
<status status="PASS" starttime="20231101 15:29:08.491" endtime="20231101 15:29:08.623"/>
</branch>
<status status="PASS" starttime="20231101 15:29:08.479" endtime="20231101 15:29:08.623"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:08.627" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:29:08.625" endtime="20231101 15:29:08.627"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:08.652" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 15:29:08.628" endtime="20231101 15:29:08.652"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:08.654" endtime="20231101 15:29:08.828"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:08.931" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:08.829" endtime="20231101 15:29:08.931"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:09.035" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:08.933" endtime="20231101 15:29:09.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:09.036" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:09.035" endtime="20231101 15:29:09.036"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:09.048" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:09.037" endtime="20231101 15:29:09.049"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:09.050" endtime="20231101 15:29:09.051"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.049" endtime="20231101 15:29:09.051"/>
</branch>
<status status="PASS" starttime="20231101 15:29:09.049" endtime="20231101 15:29:09.052"/>
</if>
<status status="PASS" starttime="20231101 15:29:08.932" endtime="20231101 15:29:09.052"/>
</kw>
<status status="PASS" starttime="20231101 15:29:08.653" endtime="20231101 15:29:09.053"/>
</branch>
<status status="PASS" starttime="20231101 15:29:08.653" endtime="20231101 15:29:09.053"/>
</if>
<status status="PASS" starttime="20231101 15:29:08.624" endtime="20231101 15:29:09.054"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:09.054" endtime="20231101 15:29:09.065"/>
</kw>
<status status="PASS" starttime="20231101 15:29:08.247" endtime="20231101 15:29:09.066"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:09.072" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 15:29:09.071" endtime="20231101 15:29:09.072"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:09.074" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 15:29:09.073" endtime="20231101 15:29:09.074"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:09.076" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 15:29:09.075" endtime="20231101 15:29:09.079"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:09.082" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:09.082" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 15:29:09.080" endtime="20231101 15:29:09.083"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:09.085" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 15:29:09.084" endtime="20231101 15:29:09.085"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:09.086" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:09.087" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:09.086" endtime="20231101 15:29:09.087"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.089" endtime="20231101 15:29:09.089"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.090" endtime="20231101 15:29:09.090"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.088" endtime="20231101 15:29:09.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.092" endtime="20231101 15:29:09.096"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.096" endtime="20231101 15:29:09.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.103" endtime="20231101 15:29:09.104"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.091" endtime="20231101 15:29:09.104"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.106" endtime="20231101 15:29:09.107"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.107" endtime="20231101 15:29:09.108"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.105" endtime="20231101 15:29:09.116"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.118" endtime="20231101 15:29:09.118"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.119" endtime="20231101 15:29:09.120"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.117" endtime="20231101 15:29:09.121"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.122" endtime="20231101 15:29:09.123"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.121" endtime="20231101 15:29:09.124"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 15:29:09.133" endtime="20231101 15:29:09.134"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.125" endtime="20231101 15:29:09.134"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.140" endtime="20231101 15:29:09.141"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.142" endtime="20231101 15:29:09.148"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.149" endtime="20231101 15:29:09.150"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.138" endtime="20231101 15:29:09.150"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.152" endtime="20231101 15:29:09.154"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.151" endtime="20231101 15:29:09.154"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.165" endtime="20231101 15:29:09.166"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.164" endtime="20231101 15:29:09.166"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.168" endtime="20231101 15:29:09.168"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.167" endtime="20231101 15:29:09.169"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.170" endtime="20231101 15:29:09.171"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.169" endtime="20231101 15:29:09.172"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.174" endtime="20231101 15:29:09.174"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.173" endtime="20231101 15:29:09.175"/>
</branch>
<status status="PASS" starttime="20231101 15:29:09.088" endtime="20231101 15:29:09.175"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:09.181" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:09.181" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:09.178" endtime="20231101 15:29:09.182"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:09.183" endtime="20231101 15:29:09.184"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:09.182" endtime="20231101 15:29:09.184"/>
</branch>
<status status="PASS" starttime="20231101 15:29:09.182" endtime="20231101 15:29:09.185"/>
</if>
<msg timestamp="20231101 15:29:09.186" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231101 15:29:09.070" endtime="20231101 15:29:09.186"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 15:29:09.188" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 15:29:09.187" endtime="20231101 15:29:09.189"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:09.190" endtime="20231101 15:29:10.788"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:10.789" endtime="20231101 15:29:10.828"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 15:29:10.829" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231101 15:29:10.828" endtime="20231101 15:29:10.859"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 15:29:10.893" level="INFO">Text: ''</msg>
<msg timestamp="20231101 15:29:10.894" level="INFO">${condition} = </msg>
<status status="PASS" starttime="20231101 15:29:10.860" endtime="20231101 15:29:10.894"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:10.896" endtime="20231101 15:29:10.897"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:10.898" endtime="20231101 15:29:10.898"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:10.895" endtime="20231101 15:29:10.899"/>
</iter>
<status status="NOT RUN" starttime="20231101 15:29:10.895" endtime="20231101 15:29:10.900"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:10.901" level="INFO">Length is 0</msg>
<msg timestamp="20231101 15:29:10.902" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 15:29:10.901" endtime="20231101 15:29:10.902"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231101 15:29:10.904" endtime="20231101 15:29:10.904"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:10.903" endtime="20231101 15:29:10.904"/>
</branch>
<status status="PASS" starttime="20231101 15:29:10.902" endtime="20231101 15:29:10.905"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:10.905" endtime="20231101 15:29:10.914"/>
</kw>
<status status="PASS" starttime="20231101 15:29:09.069" endtime="20231101 15:29:10.915"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:10.920" endtime="20231101 15:29:11.004"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:11.106" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:11.005" endtime="20231101 15:29:11.106"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.107" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:11.106" endtime="20231101 15:29:11.107"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:11.117" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:11.107" endtime="20231101 15:29:11.118"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:11.119" endtime="20231101 15:29:11.120"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:11.119" endtime="20231101 15:29:11.120"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.118" endtime="20231101 15:29:11.121"/>
</if>
<status status="PASS" starttime="20231101 15:29:11.004" endtime="20231101 15:29:11.121"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:11.122" endtime="20231101 15:29:11.132"/>
</kw>
<status status="PASS" starttime="20231101 15:29:10.918" endtime="20231101 15:29:11.133"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@__&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:11.240" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:11.138" endtime="20231101 15:29:11.240"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.243" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:11.241" endtime="20231101 15:29:11.244"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:11.555" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:11.246" endtime="20231101 15:29:11.556"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:11.558" endtime="20231101 15:29:11.558"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:11.557" endtime="20231101 15:29:11.560"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.556" endtime="20231101 15:29:11.561"/>
</if>
<status status="PASS" starttime="20231101 15:29:11.137" endtime="20231101 15:29:11.561"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:11.564" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 15:29:11.563" endtime="20231101 15:29:11.565"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:11.566" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:11.566" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:29:11.565" endtime="20231101 15:29:11.567"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.570" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:11.568" endtime="20231101 15:29:11.571"/>
</kw>
<status status="PASS" starttime="20231101 15:29:11.567" endtime="20231101 15:29:11.571"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.567" endtime="20231101 15:29:11.571"/>
</if>
<msg timestamp="20231101 15:29:11.572" level="INFO">${name} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:11.562" endtime="20231101 15:29:11.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.574" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"DA_11 Nam excepturi atque.")]</msg>
<status status="PASS" starttime="20231101 15:29:11.573" endtime="20231101 15:29:11.574"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:11.586" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 15:29:11.574" endtime="20231101 15:29:11.586"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 15:29:11.589" endtime="20231101 15:29:11.590"/>
</kw>
<status status="PASS" starttime="20231101 15:29:11.135" endtime="20231101 15:29:11.591"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:11.702" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:11.601" endtime="20231101 15:29:11.702"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:11.806" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:11.704" endtime="20231101 15:29:11.806"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.808" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:11.807" endtime="20231101 15:29:11.808"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:11.819" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:11.810" endtime="20231101 15:29:11.820"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:11.822" endtime="20231101 15:29:11.822"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:11.821" endtime="20231101 15:29:11.823"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.820" endtime="20231101 15:29:11.824"/>
</if>
<status status="PASS" starttime="20231101 15:29:11.703" endtime="20231101 15:29:11.825"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:11.829" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 15:29:11.827" endtime="20231101 15:29:11.829"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:11.831" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:11.832" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:29:11.830" endtime="20231101 15:29:11.832"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.837" level="INFO">${text} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:11.835" endtime="20231101 15:29:11.838"/>
</kw>
<status status="PASS" starttime="20231101 15:29:11.833" endtime="20231101 15:29:11.838"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.833" endtime="20231101 15:29:11.839"/>
</if>
<msg timestamp="20231101 15:29:11.839" level="INFO">${name} = DA_11 Nam excepturi atque.</msg>
<status status="PASS" starttime="20231101 15:29:11.826" endtime="20231101 15:29:11.839"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231101 15:29:11.841" endtime="20231101 15:29:11.841"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:11.843" endtime="20231101 15:29:11.844"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:11.846" endtime="20231101 15:29:11.846"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:11.845" endtime="20231101 15:29:11.847"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231101 15:29:11.848" endtime="20231101 15:29:11.849"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 15:29:11.850" endtime="20231101 15:29:11.851"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:11.847" endtime="20231101 15:29:11.851"/>
</branch>
<status status="NOT RUN" starttime="20231101 15:29:11.845" endtime="20231101 15:29:11.851"/>
</if>
<status status="NOT RUN" starttime="20231101 15:29:11.840" endtime="20231101 15:29:11.851"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 15:29:11.853" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"DA_11 Nam excepturi atque.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 15:29:11.852" endtime="20231101 15:29:11.853"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:11.853" endtime="20231101 15:29:11.973"/>
</kw>
<status status="PASS" starttime="20231101 15:29:11.852" endtime="20231101 15:29:11.974"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.840" endtime="20231101 15:29:11.974"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:11.980" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:29:11.978" endtime="20231101 15:29:11.980"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:11.995" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 15:29:11.981" endtime="20231101 15:29:11.996"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:11.998" endtime="20231101 15:29:12.273"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:12.375" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:12.274" endtime="20231101 15:29:12.375"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:12.481" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:12.380" endtime="20231101 15:29:12.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:12.483" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:12.482" endtime="20231101 15:29:12.483"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:12.668" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:12.484" endtime="20231101 15:29:12.670"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:12.671" endtime="20231101 15:29:12.672"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:12.671" endtime="20231101 15:29:12.672"/>
</branch>
<status status="PASS" starttime="20231101 15:29:12.670" endtime="20231101 15:29:12.673"/>
</if>
<status status="PASS" starttime="20231101 15:29:12.379" endtime="20231101 15:29:12.673"/>
</kw>
<status status="PASS" starttime="20231101 15:29:11.997" endtime="20231101 15:29:12.674"/>
</branch>
<status status="PASS" starttime="20231101 15:29:11.996" endtime="20231101 15:29:12.677"/>
</if>
<status status="PASS" starttime="20231101 15:29:11.975" endtime="20231101 15:29:12.678"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:12.680" endtime="20231101 15:29:12.687"/>
</kw>
<status status="PASS" starttime="20231101 15:29:11.600" endtime="20231101 15:29:12.687"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tên loại@_&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:12.835" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:12.732" endtime="20231101 15:29:12.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:12.837" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:12.836" endtime="20231101 15:29:12.837"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:12.853" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:12.837" endtime="20231101 15:29:12.853"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:12.855" endtime="20231101 15:29:12.856"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:12.854" endtime="20231101 15:29:12.856"/>
</branch>
<status status="PASS" starttime="20231101 15:29:12.854" endtime="20231101 15:29:12.857"/>
</if>
<status status="PASS" starttime="20231101 15:29:12.731" endtime="20231101 15:29:12.857"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 15:29:12.862" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 15:29:12.861" endtime="20231101 15:29:12.863"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 15:29:12.864" level="INFO">Length is 1</msg>
<msg timestamp="20231101 15:29:12.865" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 15:29:12.864" endtime="20231101 15:29:12.865"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:12.870" level="INFO">${text} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:29:12.867" endtime="20231101 15:29:12.870"/>
</kw>
<status status="PASS" starttime="20231101 15:29:12.866" endtime="20231101 15:29:12.870"/>
</branch>
<status status="PASS" starttime="20231101 15:29:12.866" endtime="20231101 15:29:12.871"/>
</if>
<msg timestamp="20231101 15:29:12.871" level="INFO">${name} = DA_11 Voluptates in.</msg>
<status status="PASS" starttime="20231101 15:29:12.858" endtime="20231101 15:29:12.872"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 15:29:12.874" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "DA_11 Voluptates in.")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 15:29:12.872" endtime="20231101 15:29:12.874"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:12.875" endtime="20231101 15:29:14.530"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:14.534" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 15:29:14.532" endtime="20231101 15:29:14.535"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:14.547" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 15:29:14.535" endtime="20231101 15:29:14.547"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 15:29:14.550" endtime="20231101 15:29:14.913"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:15.016" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:14.914" endtime="20231101 15:29:15.016"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 15:29:15.118" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 15:29:15.017" endtime="20231101 15:29:15.118"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 15:29:15.119" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 15:29:15.118" endtime="20231101 15:29:15.119"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 15:29:15.151" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 15:29:15.119" endtime="20231101 15:29:15.152"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 15:29:15.153" endtime="20231101 15:29:15.153"/>
</kw>
<status status="NOT RUN" starttime="20231101 15:29:15.152" endtime="20231101 15:29:15.153"/>
</branch>
<status status="PASS" starttime="20231101 15:29:15.152" endtime="20231101 15:29:15.153"/>
</if>
<status status="PASS" starttime="20231101 15:29:15.017" endtime="20231101 15:29:15.154"/>
</kw>
<status status="PASS" starttime="20231101 15:29:14.549" endtime="20231101 15:29:15.154"/>
</branch>
<status status="PASS" starttime="20231101 15:29:14.548" endtime="20231101 15:29:15.155"/>
</if>
<status status="PASS" starttime="20231101 15:29:14.531" endtime="20231101 15:29:15.155"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 15:29:15.155" endtime="20231101 15:29:15.168"/>
</kw>
<status status="PASS" starttime="20231101 15:29:12.730" endtime="20231101 15:29:15.169"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231101 15:29:16.011" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231101 15:29:15.172" endtime="20231101 15:29:16.012"/>
</kw>
<status status="PASS" starttime="20231101 15:29:15.171" endtime="20231101 15:29:16.012"/>
</kw>
<tag>Search</tag>
<status status="PASS" starttime="20231101 15:28:43.662" endtime="20231101 15:29:16.013"/>
</test>
<status status="PASS" starttime="20231101 15:28:41.545" endtime="20231101 15:29:16.023"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Data">Data</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

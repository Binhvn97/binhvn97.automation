<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231124 16:52:51.862" rpa="false" schemaversion="4">
<suite id="s1" name="Navigation" source="d:\TESTER\Automation\Auto_Web\testcases\navigation.robot">
<test id="s1-t1" name="DH_28 Verify the search function when enter the name was not existed" line="347">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231124 16:52:54.252" endtime="20231124 16:52:54.253"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231124 16:52:54.255" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\00856d48-44f1-4fc6-ba53-0b6738a85572"}</msg>
<msg timestamp="20231124 16:52:55.553" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\00856d48-44f1-4fc6-ba53-0b6738a85572"}</msg>
<status status="PASS" starttime="20231124 16:52:54.254" endtime="20231124 16:52:55.554"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231124 16:53:00.031" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231124 16:53:00.031" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231124 16:52:55.555" endtime="20231124 16:53:00.032"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231124 16:53:00.037" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231124 16:53:00.033" endtime="20231124 16:53:00.037"/>
</kw>
<status status="PASS" starttime="20231124 16:52:54.250" endtime="20231124 16:53:00.038"/>
</kw>
<kw name="Create a test data">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Phân quyền điều hướng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Phân quyền điều hướng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:00.146" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:00.062" endtime="20231124 16:53:00.146"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231124 16:53:00.148" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231124 16:53:00.147" endtime="20231124 16:53:00.149"/>
</kw>
<status status="FAIL" starttime="20231124 16:53:00.060" endtime="20231124 16:53:00.149"/>
</kw>
<msg timestamp="20231124 16:53:00.150" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231124 16:53:00.058" endtime="20231124 16:53:00.150"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231124 16:53:00.152" endtime="20231124 16:53:00.152"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.151" endtime="20231124 16:53:00.152"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Điều hướng&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:00.165" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:00.164" endtime="20231124 16:53:00.166"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:00.168" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:00.167" endtime="20231124 16:53:00.168"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:00.171" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:00.169" endtime="20231124 16:53:00.171"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:00.175" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:00.177" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:00.173" endtime="20231124 16:53:00.177"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:00.180" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:00.179" endtime="20231124 16:53:00.180"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:00.182" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:00.186" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:00.181" endtime="20231124 16:53:00.186"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.195" endtime="20231124 16:53:00.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.198" endtime="20231124 16:53:00.198"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.193" endtime="20231124 16:53:00.199"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.201" endtime="20231124 16:53:00.202"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.203" endtime="20231124 16:53:00.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.205" endtime="20231124 16:53:00.205"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.200" endtime="20231124 16:53:00.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.214" endtime="20231124 16:53:00.214"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.215" endtime="20231124 16:53:00.215"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.210" endtime="20231124 16:53:00.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.218" endtime="20231124 16:53:00.218"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.219" endtime="20231124 16:53:00.237"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.216" endtime="20231124 16:53:00.238"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.247" endtime="20231124 16:53:00.248"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.238" endtime="20231124 16:53:00.248"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:00.250" endtime="20231124 16:53:00.250"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.249" endtime="20231124 16:53:00.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.254" endtime="20231124 16:53:00.303"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.305" endtime="20231124 16:53:00.308"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.310" endtime="20231124 16:53:00.311"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.252" endtime="20231124 16:53:00.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.314" endtime="20231124 16:53:00.315"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.313" endtime="20231124 16:53:00.316"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.317" endtime="20231124 16:53:00.319"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.316" endtime="20231124 16:53:00.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.321" endtime="20231124 16:53:00.321"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.320" endtime="20231124 16:53:00.322"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.326" endtime="20231124 16:53:00.327"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.325" endtime="20231124 16:53:00.328"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.332" endtime="20231124 16:53:00.333"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.330" endtime="20231124 16:53:00.334"/>
</branch>
<status status="PASS" starttime="20231124 16:53:00.189" endtime="20231124 16:53:00.335"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:00.336" level="INFO">Length is 15</msg>
<msg timestamp="20231124 16:53:00.337" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231124 16:53:00.335" endtime="20231124 16:53:00.337"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:00.361" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231124 16:53:00.359" endtime="20231124 16:53:00.361"/>
</kw>
<status status="PASS" starttime="20231124 16:53:00.338" endtime="20231124 16:53:00.362"/>
</branch>
<status status="PASS" starttime="20231124 16:53:00.338" endtime="20231124 16:53:00.362"/>
</if>
<msg timestamp="20231124 16:53:00.363" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231124 16:53:00.158" endtime="20231124 16:53:00.363"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:00.366" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:00.364" endtime="20231124 16:53:00.366"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:00.367" endtime="20231124 16:53:00.710"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:00.711" endtime="20231124 16:53:00.764"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:00.769" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:00.767" endtime="20231124 16:53:00.840"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:00.922" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231124 16:53:00.925" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231124 16:53:00.843" endtime="20231124 16:53:00.926"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.929" endtime="20231124 16:53:00.930"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:00.931" endtime="20231124 16:53:00.931"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:00.927" endtime="20231124 16:53:00.932"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:00.927" endtime="20231124 16:53:00.932"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:00.933" endtime="20231124 16:53:01.004"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:01.009" level="INFO">Length is 15</msg>
<msg timestamp="20231124 16:53:01.010" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231124 16:53:01.005" endtime="20231124 16:53:01.010"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:01.014" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231124 16:53:01.013" endtime="20231124 16:53:01.015"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.011" endtime="20231124 16:53:01.015"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.011" endtime="20231124 16:53:01.016"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:01.016" endtime="20231124 16:53:01.034"/>
</kw>
<status status="PASS" starttime="20231124 16:53:00.156" endtime="20231124 16:53:01.035"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:01.043" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:01.040" endtime="20231124 16:53:01.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:01.045" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:01.044" endtime="20231124 16:53:01.046"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:01.048" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:01.047" endtime="20231124 16:53:01.048"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:01.050" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:01.051" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:01.049" endtime="20231124 16:53:01.051"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:01.053" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:01.052" endtime="20231124 16:53:01.053"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:01.060" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:01.061" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:01.055" endtime="20231124 16:53:01.061"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.063" endtime="20231124 16:53:01.064"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.065" endtime="20231124 16:53:01.065"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.062" endtime="20231124 16:53:01.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.068" endtime="20231124 16:53:01.068"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.069" endtime="20231124 16:53:01.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.071" endtime="20231124 16:53:01.074"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.067" endtime="20231124 16:53:01.076"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.078" endtime="20231124 16:53:01.078"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.079" endtime="20231124 16:53:01.080"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.077" endtime="20231124 16:53:01.080"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.082" endtime="20231124 16:53:01.082"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.083" endtime="20231124 16:53:01.084"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.080" endtime="20231124 16:53:01.084"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.086" endtime="20231124 16:53:01.087"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.085" endtime="20231124 16:53:01.087"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:01.093" endtime="20231124 16:53:01.094"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.088" endtime="20231124 16:53:01.094"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.096" endtime="20231124 16:53:01.097"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.097" endtime="20231124 16:53:01.098"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.098" endtime="20231124 16:53:01.098"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.095" endtime="20231124 16:53:01.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.099" endtime="20231124 16:53:01.100"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.099" endtime="20231124 16:53:01.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.104" endtime="20231124 16:53:01.105"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.102" endtime="20231124 16:53:01.111"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.112" endtime="20231124 16:53:01.112"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.111" endtime="20231124 16:53:01.113"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.114" endtime="20231124 16:53:01.114"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.113" endtime="20231124 16:53:01.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.115" endtime="20231124 16:53:01.115"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.114" endtime="20231124 16:53:01.116"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.062" endtime="20231124 16:53:01.116"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:01.117" level="INFO">Length is 6</msg>
<msg timestamp="20231124 16:53:01.117" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231124 16:53:01.116" endtime="20231124 16:53:01.117"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:01.119" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231124 16:53:01.118" endtime="20231124 16:53:01.119"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.118" endtime="20231124 16:53:01.120"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.117" endtime="20231124 16:53:01.120"/>
</if>
<msg timestamp="20231124 16:53:01.121" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231124 16:53:01.037" endtime="20231124 16:53:01.121"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:01.127" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:01.121" endtime="20231124 16:53:01.128"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:01.129" endtime="20231124 16:53:01.235"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:01.236" endtime="20231124 16:53:01.283"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:01.285" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:01.284" endtime="20231124 16:53:01.343"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:01.396" level="INFO">Text: '123123'</msg>
<msg timestamp="20231124 16:53:01.397" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231124 16:53:01.345" endtime="20231124 16:53:01.398"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.400" endtime="20231124 16:53:01.401"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.402" endtime="20231124 16:53:01.403"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.398" endtime="20231124 16:53:01.403"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:01.398" endtime="20231124 16:53:01.404"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:01.405" endtime="20231124 16:53:01.488"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:01.492" level="INFO">Length is 6</msg>
<msg timestamp="20231124 16:53:01.493" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231124 16:53:01.490" endtime="20231124 16:53:01.494"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:01.498" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231124 16:53:01.496" endtime="20231124 16:53:01.498"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.495" endtime="20231124 16:53:01.499"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.495" endtime="20231124 16:53:01.500"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:01.500" endtime="20231124 16:53:01.512"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.036" endtime="20231124 16:53:01.512"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:01.616" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:01.514" endtime="20231124 16:53:01.616"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:01.630" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:01.617" endtime="20231124 16:53:01.630"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:01.632" endtime="20231124 16:53:01.754"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:01.760" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231124 16:53:01.757" endtime="20231124 16:53:01.760"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:01.771" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:01.761" endtime="20231124 16:53:01.772"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.774" endtime="20231124 16:53:01.775"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.777" endtime="20231124 16:53:01.778"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231124 16:53:01.781" endtime="20231124 16:53:01.781"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.773" endtime="20231124 16:53:01.782"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.773" endtime="20231124 16:53:01.783"/>
</if>
<status status="PASS" starttime="20231124 16:53:01.755" endtime="20231124 16:53:01.784"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231124 16:53:01.820" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:01.821" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:01.847" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:01.847" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:01.863" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231124 16:53:01.785" endtime="20231124 16:53:01.864"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.631" endtime="20231124 16:53:01.865"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.866" endtime="20231124 16:53:01.867"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231124 16:53:01.868" endtime="20231124 16:53:01.868"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.870" endtime="20231124 16:53:01.870"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.865" endtime="20231124 16:53:01.871"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.631" endtime="20231124 16:53:01.874"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:01.874" endtime="20231124 16:53:01.883"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.513" endtime="20231124 16:53:01.883"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:01.886" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:01.885" endtime="20231124 16:53:01.887"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:01.888" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:01.890" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:01.887" endtime="20231124 16:53:01.890"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:01.892" endtime="20231124 16:53:01.893"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:01.891" endtime="20231124 16:53:01.894"/>
</branch>
<status status="PASS" starttime="20231124 16:53:01.891" endtime="20231124 16:53:01.895"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:02.436" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231124 16:53:01.913" endtime="20231124 16:53:02.436"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.897" endtime="20231124 16:53:02.436"/>
</kw>
<status status="PASS" starttime="20231124 16:53:01.896" endtime="20231124 16:53:02.436"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:02.437" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231124 16:53:02.437" endtime="20231124 16:53:02.437"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231124 16:53:02.824" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231124 16:53:02.825" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231124 16:53:02.825" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231124 16:53:02.445" endtime="20231124 16:53:02.835"/>
</kw>
<status status="FAIL" starttime="20231124 16:53:02.438" endtime="20231124 16:53:02.836"/>
</kw>
<msg timestamp="20231124 16:53:02.837" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231124 16:53:02.438" endtime="20231124 16:53:02.837"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:02.840" endtime="20231124 16:53:02.841"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:02.838" endtime="20231124 16:53:02.842"/>
</branch>
<status status="PASS" starttime="20231124 16:53:02.838" endtime="20231124 16:53:02.842"/>
</if>
<status status="PASS" starttime="20231124 16:53:01.884" endtime="20231124 16:53:02.843"/>
</kw>
<status status="PASS" starttime="20231124 16:53:00.155" endtime="20231124 16:53:02.844"/>
</kw>
<kw name="Click &quot;SUPERADMIN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:02.846" endtime="20231124 16:53:03.882"/>
</kw>
<status status="PASS" starttime="20231124 16:53:02.844" endtime="20231124 16:53:03.883"/>
</kw>
<kw name="Click &quot;Phân quyền điều hướng&quot; sub menu to &quot;/navigation&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:03.986" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:03.884" endtime="20231124 16:53:03.986"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:03.987" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:03.986" endtime="20231124 16:53:03.987"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:03.999" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:03.987" endtime="20231124 16:53:04.000"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:04.001" endtime="20231124 16:53:04.002"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:04.001" endtime="20231124 16:53:04.003"/>
</branch>
<status status="PASS" starttime="20231124 16:53:04.000" endtime="20231124 16:53:04.003"/>
</if>
<status status="PASS" starttime="20231124 16:53:03.884" endtime="20231124 16:53:04.004"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:04.004" endtime="20231124 16:53:04.201"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231124 16:53:04.209" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/navigation</msg>
<status status="PASS" starttime="20231124 16:53:04.201" endtime="20231124 16:53:04.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231124 16:53:04.210" endtime="20231124 16:53:04.212"/>
</kw>
<status status="PASS" starttime="20231124 16:53:03.883" endtime="20231124 16:53:04.212"/>
</kw>
<status status="PASS" starttime="20231124 16:53:00.154" endtime="20231124 16:53:04.213"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:04.317" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:04.215" endtime="20231124 16:53:04.317"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:04.647" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:04.318" endtime="20231124 16:53:04.648"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:04.650" endtime="20231124 16:53:06.559"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:06.562" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231124 16:53:06.561" endtime="20231124 16:53:06.563"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:06.574" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:06.563" endtime="20231124 16:53:06.574"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.577" endtime="20231124 16:53:06.577"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.578" endtime="20231124 16:53:06.579"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231124 16:53:06.579" endtime="20231124 16:53:06.580"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.575" endtime="20231124 16:53:06.580"/>
</branch>
<status status="PASS" starttime="20231124 16:53:06.575" endtime="20231124 16:53:06.581"/>
</if>
<status status="PASS" starttime="20231124 16:53:06.560" endtime="20231124 16:53:06.581"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231124 16:53:06.602" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:06.602" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:06.620" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:06.621" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:06.633" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231124 16:53:06.582" endtime="20231124 16:53:06.634"/>
</kw>
<status status="PASS" starttime="20231124 16:53:04.648" endtime="20231124 16:53:06.634"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.635" endtime="20231124 16:53:06.636"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231124 16:53:06.637" endtime="20231124 16:53:06.637"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.638" endtime="20231124 16:53:06.638"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.635" endtime="20231124 16:53:06.641"/>
</branch>
<status status="PASS" starttime="20231124 16:53:04.648" endtime="20231124 16:53:06.642"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:06.643" endtime="20231124 16:53:06.654"/>
</kw>
<status status="PASS" starttime="20231124 16:53:04.214" endtime="20231124 16:53:06.655"/>
</kw>
<status status="PASS" starttime="20231124 16:53:00.153" endtime="20231124 16:53:06.657"/>
</branch>
<status status="PASS" starttime="20231124 16:53:00.151" endtime="20231124 16:53:06.659"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên điều hướng&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:06.666" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:06.665" endtime="20231124 16:53:06.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:06.669" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:06.668" endtime="20231124 16:53:06.669"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:06.675" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:06.670" endtime="20231124 16:53:06.675"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:06.677" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:06.678" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:06.677" endtime="20231124 16:53:06.678"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:06.681" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231124 16:53:06.679" endtime="20231124 16:53:06.681"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:06.684" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:06.684" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:06.682" endtime="20231124 16:53:06.685"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.687" endtime="20231124 16:53:06.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.695" endtime="20231124 16:53:06.696"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.685" endtime="20231124 16:53:06.696"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231124 16:53:06.699" level="INFO">${random} = Error.</msg>
<status status="PASS" starttime="20231124 16:53:06.698" endtime="20231124 16:53:06.700"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231124 16:53:06.702" level="INFO">${words} = ['DH_28', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231124 16:53:06.701" endtime="20231124 16:53:06.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:06.709" level="INFO">${new_text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:06.704" endtime="20231124 16:53:06.709"/>
</kw>
<status status="PASS" starttime="20231124 16:53:06.697" endtime="20231124 16:53:06.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.711" endtime="20231124 16:53:06.712"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.713" endtime="20231124 16:53:06.714"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.710" endtime="20231124 16:53:06.715"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.717" endtime="20231124 16:53:06.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.718" endtime="20231124 16:53:06.719"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.716" endtime="20231124 16:53:06.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.721" endtime="20231124 16:53:06.721"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.720" endtime="20231124 16:53:06.722"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:06.725" endtime="20231124 16:53:06.725"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.723" endtime="20231124 16:53:06.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.729" endtime="20231124 16:53:06.730"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.731" endtime="20231124 16:53:06.732"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.732" endtime="20231124 16:53:06.733"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.727" endtime="20231124 16:53:06.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.736" endtime="20231124 16:53:06.737"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.735" endtime="20231124 16:53:06.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.741" endtime="20231124 16:53:06.742"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.738" endtime="20231124 16:53:06.742"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.744" endtime="20231124 16:53:06.744"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.743" endtime="20231124 16:53:06.744"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.746" endtime="20231124 16:53:06.746"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.745" endtime="20231124 16:53:06.747"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:06.748" endtime="20231124 16:53:06.749"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:06.747" endtime="20231124 16:53:06.750"/>
</branch>
<status status="PASS" starttime="20231124 16:53:06.685" endtime="20231124 16:53:06.750"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:06.752" level="INFO">Length is 8</msg>
<msg timestamp="20231124 16:53:06.753" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231124 16:53:06.751" endtime="20231124 16:53:06.753"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:06.760" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:06.759" endtime="20231124 16:53:06.761"/>
</kw>
<status status="PASS" starttime="20231124 16:53:06.754" endtime="20231124 16:53:06.762"/>
</branch>
<status status="PASS" starttime="20231124 16:53:06.753" endtime="20231124 16:53:06.763"/>
</if>
<msg timestamp="20231124 16:53:06.763" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:06.662" endtime="20231124 16:53:06.764"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:06.767" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên điều hướng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:06.764" endtime="20231124 16:53:06.767"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:06.768" endtime="20231124 16:53:06.877"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:06.877" endtime="20231124 16:53:06.928"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:06.930" level="INFO">Fills the text 'DH_28 Error.' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:06.929" endtime="20231124 16:53:07.021"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:07.068" level="INFO">Text: 'DH_28 Error.'</msg>
<msg timestamp="20231124 16:53:07.069" level="INFO">${condition} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:07.025" endtime="20231124 16:53:07.069"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.074" endtime="20231124 16:53:07.075"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.076" endtime="20231124 16:53:07.077"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.070" endtime="20231124 16:53:07.078"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:07.070" endtime="20231124 16:53:07.078"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:07.079" endtime="20231124 16:53:07.153"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.155" level="INFO">Length is 12</msg>
<msg timestamp="20231124 16:53:07.158" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231124 16:53:07.154" endtime="20231124 16:53:07.158"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:07.162" level="INFO">${STATE["Tên điều hướng"]} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:07.161" endtime="20231124 16:53:07.163"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.159" endtime="20231124 16:53:07.164"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.159" endtime="20231124 16:53:07.164"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:07.165" endtime="20231124 16:53:07.177"/>
</kw>
<status status="PASS" starttime="20231124 16:53:06.660" endtime="20231124 16:53:07.178"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên điều hướng@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:07.182" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231124 16:53:07.180" endtime="20231124 16:53:07.182"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.184" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:07.184" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231124 16:53:07.183" endtime="20231124 16:53:07.184"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.192" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:07.187" endtime="20231124 16:53:07.193"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.185" endtime="20231124 16:53:07.193"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.185" endtime="20231124 16:53:07.194"/>
</if>
<msg timestamp="20231124 16:53:07.194" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:07.179" endtime="20231124 16:53:07.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.198" level="INFO">${name} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:07.197" endtime="20231124 16:53:07.198"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Mã điều hướng&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.203" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:07.202" endtime="20231124 16:53:07.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.209" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:07.205" endtime="20231124 16:53:07.209"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:07.211" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:07.210" endtime="20231124 16:53:07.211"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.213" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:07.213" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:07.212" endtime="20231124 16:53:07.213"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:07.215" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231124 16:53:07.214" endtime="20231124 16:53:07.215"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.217" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:07.217" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:07.216" endtime="20231124 16:53:07.218"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.220" endtime="20231124 16:53:07.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.222" endtime="20231124 16:53:07.225"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.218" endtime="20231124 16:53:07.226"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.228" endtime="20231124 16:53:07.228"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.229" endtime="20231124 16:53:07.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.231" endtime="20231124 16:53:07.231"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.227" endtime="20231124 16:53:07.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.233" endtime="20231124 16:53:07.245"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.246" endtime="20231124 16:53:07.246"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.232" endtime="20231124 16:53:07.247"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.249" endtime="20231124 16:53:07.249"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.250" endtime="20231124 16:53:07.251"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.248" endtime="20231124 16:53:07.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.260" endtime="20231124 16:53:07.261"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.258" endtime="20231124 16:53:07.261"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:07.263" endtime="20231124 16:53:07.264"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.262" endtime="20231124 16:53:07.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.266" endtime="20231124 16:53:07.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.267" endtime="20231124 16:53:07.269"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.270" endtime="20231124 16:53:07.270"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.265" endtime="20231124 16:53:07.271"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.275" endtime="20231124 16:53:07.276"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.272" endtime="20231124 16:53:07.277"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.278" endtime="20231124 16:53:07.279"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.277" endtime="20231124 16:53:07.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.281" endtime="20231124 16:53:07.281"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.280" endtime="20231124 16:53:07.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231124 16:53:07.287" level="INFO">${new_text} = Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.284" endtime="20231124 16:53:07.288"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.282" endtime="20231124 16:53:07.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.294" endtime="20231124 16:53:07.294"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.293" endtime="20231124 16:53:07.295"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.218" endtime="20231124 16:53:07.295"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.297" level="INFO">Length is 8</msg>
<msg timestamp="20231124 16:53:07.297" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231124 16:53:07.296" endtime="20231124 16:53:07.297"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:07.301" level="INFO">${text} = Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.300" endtime="20231124 16:53:07.301"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.298" endtime="20231124 16:53:07.302"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.298" endtime="20231124 16:53:07.302"/>
</if>
<msg timestamp="20231124 16:53:07.303" level="INFO">${text} = Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.201" endtime="20231124 16:53:07.303"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:07.305" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã điều hướng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:07.304" endtime="20231124 16:53:07.308"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:07.310" endtime="20231124 16:53:07.421"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:07.425" endtime="20231124 16:53:07.469"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:07.471" level="INFO">Fills the text 'Vitae saepe.' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:07.469" endtime="20231124 16:53:07.536"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:07.586" level="INFO">Text: 'Vitae saepe.'</msg>
<msg timestamp="20231124 16:53:07.587" level="INFO">${condition} = Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.537" endtime="20231124 16:53:07.587"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.592" endtime="20231124 16:53:07.593"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.594" endtime="20231124 16:53:07.594"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.588" endtime="20231124 16:53:07.595"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:07.588" endtime="20231124 16:53:07.595"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:07.597" endtime="20231124 16:53:07.669"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.671" level="INFO">Length is 12</msg>
<msg timestamp="20231124 16:53:07.671" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231124 16:53:07.670" endtime="20231124 16:53:07.672"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:07.677" level="INFO">${STATE["Mã điều hướng"]} = Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.676" endtime="20231124 16:53:07.678"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.675" endtime="20231124 16:53:07.679"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.675" endtime="20231124 16:53:07.679"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:07.680" endtime="20231124 16:53:07.690"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.199" endtime="20231124 16:53:07.692"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Link&quot; with &quot;/_@Mã điều hướng@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.696" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:07.695" endtime="20231124 16:53:07.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.697" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:07.697" endtime="20231124 16:53:07.697"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:07.698" level="INFO">${containsS} = ['Mã điều hướng']</msg>
<status status="PASS" starttime="20231124 16:53:07.698" endtime="20231124 16:53:07.699"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.700" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:07.700" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231124 16:53:07.699" endtime="20231124 16:53:07.701"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:07.702" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:07.701" endtime="20231124 16:53:07.703"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.705" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:07.708" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:07.703" endtime="20231124 16:53:07.708"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.713" level="INFO">${new_text} = Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.711" endtime="20231124 16:53:07.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:07.715" level="INFO">${symbol} = _@Mã điều hướng@_</msg>
<status status="PASS" starttime="20231124 16:53:07.713" endtime="20231124 16:53:07.715"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.710" endtime="20231124 16:53:07.716"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.717" endtime="20231124 16:53:07.717"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.718" endtime="20231124 16:53:07.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.719" endtime="20231124 16:53:07.719"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.716" endtime="20231124 16:53:07.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.737" endtime="20231124 16:53:07.737"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.738" endtime="20231124 16:53:07.742"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.721" endtime="20231124 16:53:07.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.744" endtime="20231124 16:53:07.744"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.745" endtime="20231124 16:53:07.746"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.743" endtime="20231124 16:53:07.746"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.747" endtime="20231124 16:53:07.748"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.747" endtime="20231124 16:53:07.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:07.749" endtime="20231124 16:53:07.750"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.749" endtime="20231124 16:53:07.750"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.752" endtime="20231124 16:53:07.752"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.753" endtime="20231124 16:53:07.753"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.754" endtime="20231124 16:53:07.755"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.751" endtime="20231124 16:53:07.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.760" endtime="20231124 16:53:07.761"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.759" endtime="20231124 16:53:07.761"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.763" endtime="20231124 16:53:07.763"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.762" endtime="20231124 16:53:07.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.795" endtime="20231124 16:53:07.795"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.794" endtime="20231124 16:53:07.796"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.797" endtime="20231124 16:53:07.798"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.796" endtime="20231124 16:53:07.798"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:07.818" endtime="20231124 16:53:07.819"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:07.817" endtime="20231124 16:53:07.819"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.709" endtime="20231124 16:53:07.820"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:07.821" level="INFO">Length is 18</msg>
<msg timestamp="20231124 16:53:07.824" level="INFO">${cnt} = 18</msg>
<status status="PASS" starttime="20231124 16:53:07.820" endtime="20231124 16:53:07.825"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:07.828" level="INFO">${text} = /Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.827" endtime="20231124 16:53:07.828"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.826" endtime="20231124 16:53:07.829"/>
</branch>
<status status="PASS" starttime="20231124 16:53:07.826" endtime="20231124 16:53:07.829"/>
</if>
<msg timestamp="20231124 16:53:07.830" level="INFO">${text} = /Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:07.694" endtime="20231124 16:53:07.831"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:07.833" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Link"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:07.831" endtime="20231124 16:53:07.833"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:07.834" endtime="20231124 16:53:07.941"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:07.942" endtime="20231124 16:53:07.985"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:07.987" level="INFO">Fills the text '/Vitae saepe.' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:07.986" endtime="20231124 16:53:08.051"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:08.102" level="INFO">Text: '/Vitae saepe.'</msg>
<msg timestamp="20231124 16:53:08.103" level="INFO">${condition} = /Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:08.052" endtime="20231124 16:53:08.103"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.108" endtime="20231124 16:53:08.109"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.110" endtime="20231124 16:53:08.110"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.104" endtime="20231124 16:53:08.111"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:08.104" endtime="20231124 16:53:08.112"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:08.112" endtime="20231124 16:53:08.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.187" level="INFO">Length is 13</msg>
<msg timestamp="20231124 16:53:08.188" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231124 16:53:08.186" endtime="20231124 16:53:08.188"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:08.194" level="INFO">${STATE["Link"]} = /Vitae saepe.</msg>
<status status="PASS" starttime="20231124 16:53:08.192" endtime="20231124 16:53:08.195"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.191" endtime="20231124 16:53:08.195"/>
</branch>
<status status="PASS" starttime="20231124 16:53:08.191" endtime="20231124 16:53:08.196"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:08.197" endtime="20231124 16:53:08.208"/>
</kw>
<status status="PASS" starttime="20231124 16:53:07.693" endtime="20231124 16:53:08.209"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Số thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:08.214" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:08.213" endtime="20231124 16:53:08.214"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:08.216" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:08.215" endtime="20231124 16:53:08.217"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:08.219" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:08.217" endtime="20231124 16:53:08.219"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.221" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:08.222" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:08.220" endtime="20231124 16:53:08.224"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:08.228" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231124 16:53:08.226" endtime="20231124 16:53:08.228"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.231" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:08.231" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:08.230" endtime="20231124 16:53:08.232"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.233" endtime="20231124 16:53:08.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.235" endtime="20231124 16:53:08.235"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.232" endtime="20231124 16:53:08.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.238" endtime="20231124 16:53:08.243"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.244" endtime="20231124 16:53:08.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.246" endtime="20231124 16:53:08.247"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.237" endtime="20231124 16:53:08.248"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231124 16:53:08.250" level="INFO">${new_text} = 1458</msg>
<status status="PASS" starttime="20231124 16:53:08.249" endtime="20231124 16:53:08.251"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231124 16:53:08.253" level="INFO">${new_text} = 1458</msg>
<status status="PASS" starttime="20231124 16:53:08.252" endtime="20231124 16:53:08.253"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.248" endtime="20231124 16:53:08.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.258" endtime="20231124 16:53:08.259"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.260" endtime="20231124 16:53:08.261"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.254" endtime="20231124 16:53:08.262"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.263" endtime="20231124 16:53:08.264"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.262" endtime="20231124 16:53:08.264"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:08.265" endtime="20231124 16:53:08.266"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.265" endtime="20231124 16:53:08.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.267" endtime="20231124 16:53:08.268"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.269" endtime="20231124 16:53:08.269"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.269" endtime="20231124 16:53:08.270"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.267" endtime="20231124 16:53:08.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.278" endtime="20231124 16:53:08.278"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.277" endtime="20231124 16:53:08.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.281" endtime="20231124 16:53:08.281"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.280" endtime="20231124 16:53:08.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.283" endtime="20231124 16:53:08.284"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.282" endtime="20231124 16:53:08.284"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.286" endtime="20231124 16:53:08.286"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.285" endtime="20231124 16:53:08.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.288" endtime="20231124 16:53:08.291"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.287" endtime="20231124 16:53:08.292"/>
</branch>
<status status="PASS" starttime="20231124 16:53:08.232" endtime="20231124 16:53:08.292"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.294" level="INFO">Length is 8</msg>
<msg timestamp="20231124 16:53:08.294" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231124 16:53:08.293" endtime="20231124 16:53:08.294"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:08.296" level="INFO">${text} = 1458</msg>
<status status="PASS" starttime="20231124 16:53:08.295" endtime="20231124 16:53:08.297"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.294" endtime="20231124 16:53:08.297"/>
</branch>
<status status="PASS" starttime="20231124 16:53:08.294" endtime="20231124 16:53:08.298"/>
</if>
<msg timestamp="20231124 16:53:08.298" level="INFO">${text} = 1458</msg>
<status status="PASS" starttime="20231124 16:53:08.211" endtime="20231124 16:53:08.299"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:08.301" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số thứ tự"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:08.299" endtime="20231124 16:53:08.301"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:08.302" endtime="20231124 16:53:08.421"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:08.423" endtime="20231124 16:53:08.469"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:08.471" level="INFO">Fills the text '1458' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:08.470" endtime="20231124 16:53:08.541"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:08.586" level="INFO">Text: '1458'</msg>
<msg timestamp="20231124 16:53:08.587" level="INFO">${condition} = 1458</msg>
<status status="PASS" starttime="20231124 16:53:08.542" endtime="20231124 16:53:08.587"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.591" endtime="20231124 16:53:08.592"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.593" endtime="20231124 16:53:08.593"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.587" endtime="20231124 16:53:08.594"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:08.587" endtime="20231124 16:53:08.594"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:08.595" endtime="20231124 16:53:08.668"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.670" level="INFO">Length is 4</msg>
<msg timestamp="20231124 16:53:08.671" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231124 16:53:08.669" endtime="20231124 16:53:08.672"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:08.677" level="INFO">${STATE["Số thứ tự"]} = 1458</msg>
<status status="PASS" starttime="20231124 16:53:08.676" endtime="20231124 16:53:08.678"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.674" endtime="20231124 16:53:08.679"/>
</branch>
<status status="PASS" starttime="20231124 16:53:08.674" endtime="20231124 16:53:08.680"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:08.681" endtime="20231124 16:53:08.691"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.210" endtime="20231124 16:53:08.692"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Biểu tượng&quot; with &quot;las la-folder-minus&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:08.697" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:08.696" endtime="20231124 16:53:08.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:08.699" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:08.698" endtime="20231124 16:53:08.700"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:08.701" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:08.700" endtime="20231124 16:53:08.701"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.702" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:08.702" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:08.701" endtime="20231124 16:53:08.702"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:08.703" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:08.703" endtime="20231124 16:53:08.704"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.704" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:08.705" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:08.704" endtime="20231124 16:53:08.705"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.709" endtime="20231124 16:53:08.710"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.711" endtime="20231124 16:53:08.712"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.708" endtime="20231124 16:53:08.713"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.714" endtime="20231124 16:53:08.715"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.716" endtime="20231124 16:53:08.716"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.717" endtime="20231124 16:53:08.717"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.713" endtime="20231124 16:53:08.718"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.719" endtime="20231124 16:53:08.719"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.720" endtime="20231124 16:53:08.720"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.718" endtime="20231124 16:53:08.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.725" endtime="20231124 16:53:08.726"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.727" endtime="20231124 16:53:08.727"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.721" endtime="20231124 16:53:08.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.735" endtime="20231124 16:53:08.736"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.735" endtime="20231124 16:53:08.736"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:08.738" endtime="20231124 16:53:08.741"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.737" endtime="20231124 16:53:08.742"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.746" endtime="20231124 16:53:08.747"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.748" endtime="20231124 16:53:08.748"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.749" endtime="20231124 16:53:08.750"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.743" endtime="20231124 16:53:08.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.752" endtime="20231124 16:53:08.753"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.751" endtime="20231124 16:53:08.753"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.763" endtime="20231124 16:53:08.765"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.754" endtime="20231124 16:53:08.766"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.771" endtime="20231124 16:53:08.774"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.766" endtime="20231124 16:53:08.775"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.779" endtime="20231124 16:53:08.780"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.775" endtime="20231124 16:53:08.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:08.785" endtime="20231124 16:53:08.786"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:08.784" endtime="20231124 16:53:08.796"/>
</branch>
<status status="PASS" starttime="20231124 16:53:08.708" endtime="20231124 16:53:08.798"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:08.800" level="INFO">Length is 19</msg>
<msg timestamp="20231124 16:53:08.800" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231124 16:53:08.799" endtime="20231124 16:53:08.801"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:08.804" level="INFO">${text} = las la-folder-minus</msg>
<status status="PASS" starttime="20231124 16:53:08.803" endtime="20231124 16:53:08.805"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.801" endtime="20231124 16:53:08.807"/>
</branch>
<status status="PASS" starttime="20231124 16:53:08.801" endtime="20231124 16:53:08.808"/>
</if>
<msg timestamp="20231124 16:53:08.809" level="INFO">${text} = las la-folder-minus</msg>
<status status="PASS" starttime="20231124 16:53:08.694" endtime="20231124 16:53:08.809"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:08.812" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Biểu tượng"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:08.810" endtime="20231124 16:53:08.812"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:08.813" endtime="20231124 16:53:10.193"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:10.193" endtime="20231124 16:53:10.244"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:10.245" level="INFO">Fills the text 'las la-folder-minus' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:10.244" endtime="20231124 16:53:10.477"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:10.517" level="INFO">Text: 'las la-folder-minus'</msg>
<msg timestamp="20231124 16:53:10.517" level="INFO">${condition} = las la-folder-minus</msg>
<status status="PASS" starttime="20231124 16:53:10.478" endtime="20231124 16:53:10.517"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.518" endtime="20231124 16:53:10.519"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.519" endtime="20231124 16:53:10.519"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.518" endtime="20231124 16:53:10.519"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:10.518" endtime="20231124 16:53:10.520"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:10.520" endtime="20231124 16:53:10.580"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:10.581" level="INFO">Length is 19</msg>
<msg timestamp="20231124 16:53:10.581" level="INFO">${cnt} = 19</msg>
<status status="PASS" starttime="20231124 16:53:10.581" endtime="20231124 16:53:10.582"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:10.583" level="INFO">${STATE["Biểu tượng"]} = las la-folder-minus</msg>
<status status="PASS" starttime="20231124 16:53:10.582" endtime="20231124 16:53:10.583"/>
</kw>
<status status="PASS" starttime="20231124 16:53:10.582" endtime="20231124 16:53:10.583"/>
</branch>
<status status="PASS" starttime="20231124 16:53:10.582" endtime="20231124 16:53:10.584"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:10.584" endtime="20231124 16:53:10.593"/>
</kw>
<status status="PASS" starttime="20231124 16:53:08.693" endtime="20231124 16:53:10.594"/>
</kw>
<kw name="Click tree select &quot;Điều hướng cha&quot; with &quot;DASHBOARD&quot;" library="common" sourcename="Click tree select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:10.598" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:10.597" endtime="20231124 16:53:10.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:10.601" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:10.599" endtime="20231124 16:53:10.601"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:10.603" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:10.602" endtime="20231124 16:53:10.604"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:10.606" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:10.607" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:10.604" endtime="20231124 16:53:10.608"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:10.610" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:10.609" endtime="20231124 16:53:10.611"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:10.613" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:10.613" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:10.612" endtime="20231124 16:53:10.613"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.615" endtime="20231124 16:53:10.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.616" endtime="20231124 16:53:10.617"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.614" endtime="20231124 16:53:10.617"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.619" endtime="20231124 16:53:10.619"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.619" endtime="20231124 16:53:10.620"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.620" endtime="20231124 16:53:10.620"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.618" endtime="20231124 16:53:10.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.624" endtime="20231124 16:53:10.626"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.626" endtime="20231124 16:53:10.626"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.621" endtime="20231124 16:53:10.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.628" endtime="20231124 16:53:10.628"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.629" endtime="20231124 16:53:10.629"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.627" endtime="20231124 16:53:10.629"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.630" endtime="20231124 16:53:10.630"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.629" endtime="20231124 16:53:10.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:10.631" endtime="20231124 16:53:10.632"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.630" endtime="20231124 16:53:10.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.633" endtime="20231124 16:53:10.634"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.634" endtime="20231124 16:53:10.634"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.635" endtime="20231124 16:53:10.635"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.633" endtime="20231124 16:53:10.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.636" endtime="20231124 16:53:10.637"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.636" endtime="20231124 16:53:10.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.640" endtime="20231124 16:53:10.641"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.637" endtime="20231124 16:53:10.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.643" endtime="20231124 16:53:10.643"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.642" endtime="20231124 16:53:10.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.644" endtime="20231124 16:53:10.644"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.643" endtime="20231124 16:53:10.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:10.645" endtime="20231124 16:53:10.646"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:10.645" endtime="20231124 16:53:10.646"/>
</branch>
<status status="PASS" starttime="20231124 16:53:10.614" endtime="20231124 16:53:10.647"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:10.648" level="INFO">Length is 9</msg>
<msg timestamp="20231124 16:53:10.648" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231124 16:53:10.647" endtime="20231124 16:53:10.648"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:10.650" level="INFO">${text} = DASHBOARD</msg>
<status status="PASS" starttime="20231124 16:53:10.649" endtime="20231124 16:53:10.650"/>
</kw>
<status status="PASS" starttime="20231124 16:53:10.649" endtime="20231124 16:53:10.650"/>
</branch>
<status status="PASS" starttime="20231124 16:53:10.648" endtime="20231124 16:53:10.650"/>
</if>
<msg timestamp="20231124 16:53:10.650" level="INFO">${text} = DASHBOARD</msg>
<status status="PASS" starttime="20231124 16:53:10.596" endtime="20231124 16:53:10.651"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-tree-select")]</arg>
<msg timestamp="20231124 16:53:10.652" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Điều hướng cha"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-tree-select")]</msg>
<status status="PASS" starttime="20231124 16:53:10.651" endtime="20231124 16:53:10.652"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:10.652" endtime="20231124 16:53:10.969"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}//input</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:10.976" level="INFO">Fills the text 'DASHBOARD' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:10.975" endtime="20231124 16:53:11.115"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-tree-node-content-wrapper") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:11.116" endtime="20231124 16:53:11.298"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:11.300" level="INFO">Length is 9</msg>
<msg timestamp="20231124 16:53:11.300" level="INFO">${cnt} = 9</msg>
<status status="PASS" starttime="20231124 16:53:11.299" endtime="20231124 16:53:11.300"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:11.303" level="INFO">${STATE["Điều hướng cha"]} = DASHBOARD</msg>
<status status="PASS" starttime="20231124 16:53:11.302" endtime="20231124 16:53:11.303"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.301" endtime="20231124 16:53:11.303"/>
</branch>
<status status="PASS" starttime="20231124 16:53:11.301" endtime="20231124 16:53:11.304"/>
</if>
<status status="PASS" starttime="20231124 16:53:10.595" endtime="20231124 16:53:11.304"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tham số truy vấn&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:11.312" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:11.310" endtime="20231124 16:53:11.312"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:11.313" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:11.313" endtime="20231124 16:53:11.313"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:11.314" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:11.314" endtime="20231124 16:53:11.314"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:11.315" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:11.315" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:11.315" endtime="20231124 16:53:11.315"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:11.316" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231124 16:53:11.316" endtime="20231124 16:53:11.316"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:11.317" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:11.317" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:11.317" endtime="20231124 16:53:11.317"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.318" endtime="20231124 16:53:11.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.319" endtime="20231124 16:53:11.319"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.318" endtime="20231124 16:53:11.319"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.320" endtime="20231124 16:53:11.320"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.320" endtime="20231124 16:53:11.321"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.323" endtime="20231124 16:53:11.325"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.319" endtime="20231124 16:53:11.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.328" endtime="20231124 16:53:11.328"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.329" endtime="20231124 16:53:11.329"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.327" endtime="20231124 16:53:11.329"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.330" endtime="20231124 16:53:11.330"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.331" endtime="20231124 16:53:11.331"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.330" endtime="20231124 16:53:11.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.332" endtime="20231124 16:53:11.332"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.331" endtime="20231124 16:53:11.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:11.333" endtime="20231124 16:53:11.333"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.333" endtime="20231124 16:53:11.333"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.334" endtime="20231124 16:53:11.334"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.335" endtime="20231124 16:53:11.335"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.336" endtime="20231124 16:53:11.336"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.334" endtime="20231124 16:53:11.336"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.337" endtime="20231124 16:53:11.337"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.336" endtime="20231124 16:53:11.337"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.342" endtime="20231124 16:53:11.343"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.337" endtime="20231124 16:53:11.343"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.344" endtime="20231124 16:53:11.345"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.344" endtime="20231124 16:53:11.345"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.346" endtime="20231124 16:53:11.346"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.345" endtime="20231124 16:53:11.346"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231124 16:53:11.347" level="INFO">${new_text} = Nam odio distinctio.</msg>
<status status="PASS" starttime="20231124 16:53:11.347" endtime="20231124 16:53:11.347"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.346" endtime="20231124 16:53:11.347"/>
</branch>
<status status="PASS" starttime="20231124 16:53:11.318" endtime="20231124 16:53:11.348"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:11.348" level="INFO">Length is 8</msg>
<msg timestamp="20231124 16:53:11.349" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231124 16:53:11.348" endtime="20231124 16:53:11.349"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:11.350" level="INFO">${text} = Nam odio distinctio.</msg>
<status status="PASS" starttime="20231124 16:53:11.349" endtime="20231124 16:53:11.350"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.349" endtime="20231124 16:53:11.350"/>
</branch>
<status status="PASS" starttime="20231124 16:53:11.349" endtime="20231124 16:53:11.351"/>
</if>
<msg timestamp="20231124 16:53:11.351" level="INFO">${text} = Nam odio distinctio.</msg>
<status status="PASS" starttime="20231124 16:53:11.307" endtime="20231124 16:53:11.351"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231124 16:53:11.352" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tham số truy vấn"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231124 16:53:11.351" endtime="20231124 16:53:11.352"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:11.352" endtime="20231124 16:53:11.466"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:11.467" endtime="20231124 16:53:11.519"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:11.522" level="INFO">Fills the text 'Nam odio distinctio.' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:11.520" endtime="20231124 16:53:11.580"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:11.624" level="INFO">Text: 'Nam odio distinctio.'</msg>
<msg timestamp="20231124 16:53:11.625" level="INFO">${condition} = Nam odio distinctio.</msg>
<status status="PASS" starttime="20231124 16:53:11.581" endtime="20231124 16:53:11.625"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.627" endtime="20231124 16:53:11.628"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:11.629" endtime="20231124 16:53:11.629"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:11.626" endtime="20231124 16:53:11.630"/>
</iter>
<status status="NOT RUN" starttime="20231124 16:53:11.626" endtime="20231124 16:53:11.630"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:11.631" endtime="20231124 16:53:11.700"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:11.702" level="INFO">Length is 20</msg>
<msg timestamp="20231124 16:53:11.703" level="INFO">${cnt} = 20</msg>
<status status="PASS" starttime="20231124 16:53:11.701" endtime="20231124 16:53:11.703"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:11.708" level="INFO">${STATE["Tham số truy vấn"]} = Nam odio distinctio.</msg>
<status status="PASS" starttime="20231124 16:53:11.706" endtime="20231124 16:53:11.708"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.704" endtime="20231124 16:53:11.709"/>
</branch>
<status status="PASS" starttime="20231124 16:53:11.703" endtime="20231124 16:53:11.709"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:11.710" endtime="20231124 16:53:11.717"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.304" endtime="20231124 16:53:11.718"/>
</kw>
<kw name="Click switch &quot;Kích hoạt&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231124 16:53:11.721" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Kích hoạt"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231124 16:53:11.720" endtime="20231124 16:53:11.722"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:11.724" endtime="20231124 16:53:11.841"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.719" endtime="20231124 16:53:11.842"/>
</kw>
<kw name="Click assign list &quot;Order Side, Farmer Side&quot;" library="common" sourcename="Click assign list &quot;${list}&quot;">
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${list}</arg>
<arg>,${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231124 16:53:11.845" level="INFO">${words} = ['Order Side', 'Farmer Side']</msg>
<status status="PASS" starttime="20231124 16:53:11.844" endtime="20231124 16:53:11.845"/>
</kw>
<for flavor="IN">
<var>${word}</var>
<value>@{words}</value>
<iter>
<var name="${word}">Order Side</var>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-checkbox-wrapper")]/*[text()="${word}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:11.848" endtime="20231124 16:53:12.042"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.847" endtime="20231124 16:53:12.042"/>
</iter>
<iter>
<var name="${word}">Farmer Side</var>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-checkbox-wrapper")]/*[text()="${word}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:12.043" endtime="20231124 16:53:12.168"/>
</kw>
<status status="PASS" starttime="20231124 16:53:12.043" endtime="20231124 16:53:12.169"/>
</iter>
<status status="PASS" starttime="20231124 16:53:11.846" endtime="20231124 16:53:12.169"/>
</for>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-transfer-operation")]/button[2]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:12.170" endtime="20231124 16:53:12.301"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:12.403" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:12.302" endtime="20231124 16:53:12.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:12.404" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:12.404" endtime="20231124 16:53:12.404"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:12.420" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:12.405" endtime="20231124 16:53:12.420"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:12.423" endtime="20231124 16:53:12.424"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:12.421" endtime="20231124 16:53:12.425"/>
</branch>
<status status="PASS" starttime="20231124 16:53:12.421" endtime="20231124 16:53:12.426"/>
</if>
<status status="PASS" starttime="20231124 16:53:12.301" endtime="20231124 16:53:12.426"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:12.427" endtime="20231124 16:53:12.435"/>
</kw>
<status status="PASS" starttime="20231124 16:53:11.843" endtime="20231124 16:53:12.436"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:12.541" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:12.439" endtime="20231124 16:53:12.541"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:12.551" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:12.543" endtime="20231124 16:53:12.551"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:12.553" endtime="20231124 16:53:12.716"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:12.718" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231124 16:53:12.718" endtime="20231124 16:53:12.718"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:12.754" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:12.719" endtime="20231124 16:53:12.754"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:12.758" endtime="20231124 16:53:12.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231124 16:53:12.759" endtime="20231124 16:53:12.760"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231124 16:53:12.760" endtime="20231124 16:53:12.761"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:12.755" endtime="20231124 16:53:12.761"/>
</branch>
<status status="PASS" starttime="20231124 16:53:12.755" endtime="20231124 16:53:12.762"/>
</if>
<status status="PASS" starttime="20231124 16:53:12.717" endtime="20231124 16:53:12.762"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231124 16:53:12.865" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:12.865" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:12.886" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:12.886" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231124 16:53:12.900" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231124 16:53:12.763" endtime="20231124 16:53:12.900"/>
</kw>
<status status="PASS" starttime="20231124 16:53:12.552" endtime="20231124 16:53:12.901"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:12.902" endtime="20231124 16:53:12.903"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231124 16:53:12.904" endtime="20231124 16:53:12.904"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231124 16:53:12.906" endtime="20231124 16:53:12.908"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:12.901" endtime="20231124 16:53:12.909"/>
</branch>
<status status="PASS" starttime="20231124 16:53:12.552" endtime="20231124 16:53:12.909"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:12.910" endtime="20231124 16:53:12.919"/>
</kw>
<status status="PASS" starttime="20231124 16:53:12.437" endtime="20231124 16:53:12.920"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:12.926" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:12.923" endtime="20231124 16:53:12.926"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:12.930" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:12.930" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:12.928" endtime="20231124 16:53:12.931"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:12.933" endtime="20231124 16:53:12.934"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:12.931" endtime="20231124 16:53:12.934"/>
</branch>
<status status="PASS" starttime="20231124 16:53:12.931" endtime="20231124 16:53:12.935"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231124 16:53:13.004" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231124 16:53:12.947" endtime="20231124 16:53:13.004"/>
</kw>
<status status="PASS" starttime="20231124 16:53:12.937" endtime="20231124 16:53:13.006"/>
</kw>
<status status="PASS" starttime="20231124 16:53:12.936" endtime="20231124 16:53:13.008"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:13.010" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231124 16:53:13.009" endtime="20231124 16:53:13.011"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231124 16:53:13.428" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231124 16:53:13.428" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231124 16:53:13.429" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231124 16:53:13.016" endtime="20231124 16:53:13.432"/>
</kw>
<status status="FAIL" starttime="20231124 16:53:13.014" endtime="20231124 16:53:13.433"/>
</kw>
<msg timestamp="20231124 16:53:13.435" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231124 16:53:13.013" endtime="20231124 16:53:13.435"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.437" endtime="20231124 16:53:13.438"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.436" endtime="20231124 16:53:13.440"/>
</branch>
<status status="PASS" starttime="20231124 16:53:13.436" endtime="20231124 16:53:13.441"/>
</if>
<status status="PASS" starttime="20231124 16:53:12.921" endtime="20231124 16:53:13.442"/>
</kw>
<status status="PASS" starttime="20231124 16:53:00.055" endtime="20231124 16:53:13.443"/>
</kw>
<kw name="When Enter &quot;text&quot; in placeholder &quot;Nhập để tìm kiếm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in placeholder &quot;${placeholder}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:13.492" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:13.491" endtime="20231124 16:53:13.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:13.494" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:13.493" endtime="20231124 16:53:13.495"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:13.498" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:13.497" endtime="20231124 16:53:13.499"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:13.501" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:13.501" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:13.500" endtime="20231124 16:53:13.501"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:13.504" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231124 16:53:13.502" endtime="20231124 16:53:13.505"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:13.509" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:13.509" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:13.508" endtime="20231124 16:53:13.509"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.513" endtime="20231124 16:53:13.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.514" endtime="20231124 16:53:13.515"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.510" endtime="20231124 16:53:13.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.517" endtime="20231124 16:53:13.518"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.518" endtime="20231124 16:53:13.520"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.523" endtime="20231124 16:53:13.523"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.516" endtime="20231124 16:53:13.525"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.567" endtime="20231124 16:53:13.568"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.569" endtime="20231124 16:53:13.570"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.564" endtime="20231124 16:53:13.571"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.576" endtime="20231124 16:53:13.576"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.577" endtime="20231124 16:53:13.578"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.571" endtime="20231124 16:53:13.579"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.580" endtime="20231124 16:53:13.581"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.579" endtime="20231124 16:53:13.581"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:13.583" endtime="20231124 16:53:13.583"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.582" endtime="20231124 16:53:13.584"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.585" endtime="20231124 16:53:13.586"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.587" endtime="20231124 16:53:13.587"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.592" endtime="20231124 16:53:13.594"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.584" endtime="20231124 16:53:13.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.596" endtime="20231124 16:53:13.597"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.595" endtime="20231124 16:53:13.598"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.599" endtime="20231124 16:53:13.600"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.598" endtime="20231124 16:53:13.600"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.602" endtime="20231124 16:53:13.602"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.601" endtime="20231124 16:53:13.603"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:13.614" endtime="20231124 16:53:13.615"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.603" endtime="20231124 16:53:13.615"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231124 16:53:13.618" level="INFO">${new_text} = Quo porro beatae sequi consequuntur illo quaerat.</msg>
<status status="PASS" starttime="20231124 16:53:13.617" endtime="20231124 16:53:13.619"/>
</kw>
<status status="PASS" starttime="20231124 16:53:13.616" endtime="20231124 16:53:13.619"/>
</branch>
<status status="PASS" starttime="20231124 16:53:13.510" endtime="20231124 16:53:13.620"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:13.624" level="INFO">Length is 8</msg>
<msg timestamp="20231124 16:53:13.625" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231124 16:53:13.620" endtime="20231124 16:53:13.625"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231124 16:53:13.629" level="INFO">${text} = Quo porro beatae sequi consequuntur illo quaerat.</msg>
<status status="PASS" starttime="20231124 16:53:13.628" endtime="20231124 16:53:13.629"/>
</kw>
<status status="PASS" starttime="20231124 16:53:13.626" endtime="20231124 16:53:13.630"/>
</branch>
<status status="PASS" starttime="20231124 16:53:13.626" endtime="20231124 16:53:13.630"/>
</if>
<msg timestamp="20231124 16:53:13.631" level="INFO">${text} = Quo porro beatae sequi consequuntur illo quaerat.</msg>
<status status="PASS" starttime="20231124 16:53:13.486" endtime="20231124 16:53:13.631"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${placeholder}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231124 16:53:13.649" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231124 16:53:13.650" level="INFO">${element} = //input[contains(@placeholder, "Nhập để tìm kiếm")]</msg>
<status status="PASS" starttime="20231124 16:53:13.632" endtime="20231124 16:53:13.650"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:13.651" endtime="20231124 16:53:13.687"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:13.692" level="INFO">Fills the text 'Quo porro beatae sequi consequuntur illo quaerat.' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:13.689" endtime="20231124 16:53:13.782"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:13.785" level="INFO">Length is 49</msg>
<msg timestamp="20231124 16:53:13.786" level="INFO">${cnt} = 49</msg>
<status status="PASS" starttime="20231124 16:53:13.783" endtime="20231124 16:53:13.786"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${placeholder}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231124 16:53:13.792" level="INFO">${STATE["Nhập để tìm kiếm"]} = Quo porro beatae sequi consequuntur illo quaerat.</msg>
<status status="PASS" starttime="20231124 16:53:13.790" endtime="20231124 16:53:13.793"/>
</kw>
<status status="PASS" starttime="20231124 16:53:13.788" endtime="20231124 16:53:13.794"/>
</branch>
<status status="PASS" starttime="20231124 16:53:13.787" endtime="20231124 16:53:13.794"/>
</if>
<status status="PASS" starttime="20231124 16:53:13.485" endtime="20231124 16:53:13.795"/>
</kw>
<kw name="Then &quot;_@Tên điều hướng@_&quot; should not be visible in the tree line" library="common" sourcename="&quot;${name}&quot; should not be visible in the tree line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:13.915" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:13.814" endtime="20231124 16:53:13.915"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:13.917" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:13.916" endtime="20231124 16:53:13.918"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:13.937" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:13.919" endtime="20231124 16:53:13.937"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:13.942" endtime="20231124 16:53:13.942"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:13.939" endtime="20231124 16:53:13.943"/>
</branch>
<status status="PASS" starttime="20231124 16:53:13.938" endtime="20231124 16:53:13.943"/>
</if>
<status status="PASS" starttime="20231124 16:53:13.813" endtime="20231124 16:53:13.945"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:13.949" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231124 16:53:13.948" endtime="20231124 16:53:13.949"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:13.951" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:13.952" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231124 16:53:13.950" endtime="20231124 16:53:13.952"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:13.962" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:13.959" endtime="20231124 16:53:13.962"/>
</kw>
<status status="PASS" starttime="20231124 16:53:13.953" endtime="20231124 16:53:13.963"/>
</branch>
<status status="PASS" starttime="20231124 16:53:13.953" endtime="20231124 16:53:13.963"/>
</if>
<msg timestamp="20231124 16:53:13.964" level="INFO">${name} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:13.946" endtime="20231124 16:53:13.964"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//nz-tree-node-title[@title="${name}" and contains(@class,"ant-tree-node-content-wrapper")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:13.985" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:13.965" endtime="20231124 16:53:13.985"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &lt; 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231124 16:53:13.986" endtime="20231124 16:53:13.988"/>
</kw>
<status status="PASS" starttime="20231124 16:53:13.812" endtime="20231124 16:53:13.990"/>
</kw>
<kw name="When Enter &quot;test name&quot; in placeholder &quot;Nhập để tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in placeholder &quot;${placeholder}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:13.998" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231124 16:53:13.997" endtime="20231124 16:53:13.998"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:14.000" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231124 16:53:13.999" endtime="20231124 16:53:14.001"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:14.003" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:14.002" endtime="20231124 16:53:14.004"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:14.009" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:14.009" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.007" endtime="20231124 16:53:14.010"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:14.012" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231124 16:53:14.011" endtime="20231124 16:53:14.012"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:14.014" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:14.015" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.013" endtime="20231124 16:53:14.015"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.018" endtime="20231124 16:53:14.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.020" endtime="20231124 16:53:14.024"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.016" endtime="20231124 16:53:14.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.027" endtime="20231124 16:53:14.028"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.028" endtime="20231124 16:53:14.029"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.029" endtime="20231124 16:53:14.030"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.026" endtime="20231124 16:53:14.030"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.032" endtime="20231124 16:53:14.034"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.035" endtime="20231124 16:53:14.036"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.031" endtime="20231124 16:53:14.036"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.042" endtime="20231124 16:53:14.043"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.044" endtime="20231124 16:53:14.044"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.037" endtime="20231124 16:53:14.045"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.047" endtime="20231124 16:53:14.049"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.046" endtime="20231124 16:53:14.050"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231124 16:53:14.052" endtime="20231124 16:53:14.052"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.051" endtime="20231124 16:53:14.053"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.058" endtime="20231124 16:53:14.059"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.059" endtime="20231124 16:53:14.060"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.061" endtime="20231124 16:53:14.061"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.054" endtime="20231124 16:53:14.062"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.064" endtime="20231124 16:53:14.065"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.062" endtime="20231124 16:53:14.065"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.066" endtime="20231124 16:53:14.067"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.066" endtime="20231124 16:53:14.067"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.068" endtime="20231124 16:53:14.068"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.067" endtime="20231124 16:53:14.069"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.070" endtime="20231124 16:53:14.070"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.069" endtime="20231124 16:53:14.071"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.074" endtime="20231124 16:53:14.074"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.071" endtime="20231124 16:53:14.075"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.016" endtime="20231124 16:53:14.076"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:14.078" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:14.078" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.077" endtime="20231124 16:53:14.079"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.081" endtime="20231124 16:53:14.083"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.080" endtime="20231124 16:53:14.085"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.079" endtime="20231124 16:53:14.087"/>
</if>
<msg timestamp="20231124 16:53:14.091" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231124 16:53:13.996" endtime="20231124 16:53:14.092"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//input[contains(@placeholder, "${placeholder}")]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231124 16:53:14.113" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231124 16:53:14.114" level="INFO">${element} = //input[contains(@placeholder, "Nhập để tìm kiếm")]</msg>
<status status="PASS" starttime="20231124 16:53:14.093" endtime="20231124 16:53:14.114"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:14.115" endtime="20231124 16:53:14.158"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231124 16:53:14.160" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231124 16:53:14.159" endtime="20231124 16:53:14.190"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:14.192" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:14.192" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.191" endtime="20231124 16:53:14.192"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${placeholder}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.194" endtime="20231124 16:53:14.195"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.193" endtime="20231124 16:53:14.195"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.193" endtime="20231124 16:53:14.196"/>
</if>
<status status="PASS" starttime="20231124 16:53:13.994" endtime="20231124 16:53:14.196"/>
</kw>
<kw name="When Click tree select &quot;DASHBOARD&quot; to show data" library="common" sourcename="Click tree select &quot;${name}&quot; to show data">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:14.203" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231124 16:53:14.202" endtime="20231124 16:53:14.204"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:14.208" level="INFO">Length is 0</msg>
<msg timestamp="20231124 16:53:14.209" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.206" endtime="20231124 16:53:14.209"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231124 16:53:14.211" endtime="20231124 16:53:14.212"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.210" endtime="20231124 16:53:14.212"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.210" endtime="20231124 16:53:14.213"/>
</if>
<msg timestamp="20231124 16:53:14.214" level="INFO">${name} = DASHBOARD</msg>
<status status="PASS" starttime="20231124 16:53:14.201" endtime="20231124 16:53:14.214"/>
</kw>
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//nz-tree-node-title[@title="${name}"]/..//i[contains(@class,'la-angle-down')]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231124 16:53:14.229" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231124 16:53:14.230" level="INFO">${element} = //nz-tree-node-title[@title="DASHBOARD"]/..//i[contains(@class,'la-angle-down')]</msg>
<status status="PASS" starttime="20231124 16:53:14.215" endtime="20231124 16:53:14.230"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:14.231" endtime="20231124 16:53:14.601"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:14.601" endtime="20231124 16:53:14.611"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:14.715" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:14.613" endtime="20231124 16:53:14.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:14.716" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:14.715" endtime="20231124 16:53:14.716"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:14.727" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.716" endtime="20231124 16:53:14.728"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:14.729" endtime="20231124 16:53:14.730"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.728" endtime="20231124 16:53:14.731"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.728" endtime="20231124 16:53:14.731"/>
</if>
<status status="PASS" starttime="20231124 16:53:14.612" endtime="20231124 16:53:14.731"/>
</kw>
<status status="PASS" starttime="20231124 16:53:14.200" endtime="20231124 16:53:14.732"/>
</kw>
<kw name="Then &quot;_@Tên điều hướng@_&quot; should be visible in the tree line" library="common" sourcename="&quot;${name}&quot; should be visible in the tree line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:14.844" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:14.742" endtime="20231124 16:53:14.844"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:14.845" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:14.844" endtime="20231124 16:53:14.845"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:14.854" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.846" endtime="20231124 16:53:14.855"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:14.857" endtime="20231124 16:53:14.858"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:14.857" endtime="20231124 16:53:14.859"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.856" endtime="20231124 16:53:14.859"/>
</if>
<status status="PASS" starttime="20231124 16:53:14.740" endtime="20231124 16:53:14.860"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:14.863" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231124 16:53:14.862" endtime="20231124 16:53:14.864"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:14.864" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:14.865" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231124 16:53:14.864" endtime="20231124 16:53:14.865"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:14.867" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:14.866" endtime="20231124 16:53:14.868"/>
</kw>
<status status="PASS" starttime="20231124 16:53:14.866" endtime="20231124 16:53:14.868"/>
</branch>
<status status="PASS" starttime="20231124 16:53:14.865" endtime="20231124 16:53:14.868"/>
</if>
<msg timestamp="20231124 16:53:14.868" level="INFO">${name} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:14.861" endtime="20231124 16:53:14.868"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//nz-tree-node-title[@title="${name}" and contains(@class,"ant-tree-node-content-wrapper")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:14.878" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231124 16:53:14.869" endtime="20231124 16:53:14.878"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231124 16:53:14.879" endtime="20231124 16:53:14.880"/>
</kw>
<status status="PASS" starttime="20231124 16:53:14.737" endtime="20231124 16:53:14.881"/>
</kw>
<kw name="When Click on the &quot;_@Tên điều hướng@_&quot; tree to delete" library="common" sourcename="Click on the &quot;${name}&quot; tree to delete">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:14.993" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:14.891" endtime="20231124 16:53:14.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:14.994" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:14.994" endtime="20231124 16:53:14.994"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:15.002" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:14.995" endtime="20231124 16:53:15.003"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:15.005" endtime="20231124 16:53:15.006"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:15.004" endtime="20231124 16:53:15.007"/>
</branch>
<status status="PASS" starttime="20231124 16:53:15.003" endtime="20231124 16:53:15.008"/>
</if>
<status status="PASS" starttime="20231124 16:53:14.888" endtime="20231124 16:53:15.008"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231124 16:53:15.012" level="INFO">${containsS} = ['Tên điều hướng']</msg>
<status status="PASS" starttime="20231124 16:53:15.011" endtime="20231124 16:53:15.012"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231124 16:53:15.013" level="INFO">Length is 1</msg>
<msg timestamp="20231124 16:53:15.014" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231124 16:53:15.013" endtime="20231124 16:53:15.014"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:15.016" level="INFO">${text} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:15.015" endtime="20231124 16:53:15.016"/>
</kw>
<status status="PASS" starttime="20231124 16:53:15.014" endtime="20231124 16:53:15.016"/>
</branch>
<status status="PASS" starttime="20231124 16:53:15.014" endtime="20231124 16:53:15.016"/>
</if>
<msg timestamp="20231124 16:53:15.016" level="INFO">${name} = DH_28 Error.</msg>
<status status="PASS" starttime="20231124 16:53:15.009" endtime="20231124 16:53:15.017"/>
</kw>
<kw name="Get Element Tree By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<msg timestamp="20231124 16:53:15.018" level="INFO">${element} = xpath=//*[contains(@class, "ant-tree-node-content-wrapper") and @title = "DH_28 Error."]/*[contains(@class, "group")]</msg>
<status status="PASS" starttime="20231124 16:53:15.017" endtime="20231124 16:53:15.018"/>
</kw>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231124 16:53:15.019" endtime="20231124 16:53:15.065"/>
</kw>
<kw name="Mouse Move Relative To" library="Browser">
<arg>${element}</arg>
<arg>0</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Moves the mouse cursor relative to the selected element.</doc>
<msg timestamp="20231124 16:53:15.092" level="INFO">Moving mouse relative to element center by x: 0.0, y: 0.0 coordinates.</msg>
<status status="PASS" starttime="20231124 16:53:15.066" endtime="20231124 16:53:15.108"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}//*[contains(@class, "la-trash")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:15.109" endtime="20231124 16:53:15.363"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:15.365" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231124 16:53:15.364" endtime="20231124 16:53:15.365"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:15.381" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231124 16:53:15.366" endtime="20231124 16:53:15.381"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231124 16:53:15.383" endtime="20231124 16:53:15.566"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:15.668" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:15.567" endtime="20231124 16:53:15.668"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231124 16:53:15.770" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231124 16:53:15.669" endtime="20231124 16:53:15.770"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231124 16:53:15.777" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231124 16:53:15.771" endtime="20231124 16:53:15.778"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231124 16:53:15.975" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231124 16:53:15.779" endtime="20231124 16:53:15.975"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231124 16:53:15.976" endtime="20231124 16:53:15.977"/>
</kw>
<status status="NOT RUN" starttime="20231124 16:53:15.976" endtime="20231124 16:53:15.978"/>
</branch>
<status status="PASS" starttime="20231124 16:53:15.976" endtime="20231124 16:53:15.979"/>
</if>
<status status="PASS" starttime="20231124 16:53:15.668" endtime="20231124 16:53:15.979"/>
</kw>
<status status="PASS" starttime="20231124 16:53:15.382" endtime="20231124 16:53:15.979"/>
</branch>
<status status="PASS" starttime="20231124 16:53:15.382" endtime="20231124 16:53:15.980"/>
</if>
<status status="PASS" starttime="20231124 16:53:15.363" endtime="20231124 16:53:15.980"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231124 16:53:15.981" endtime="20231124 16:53:15.995"/>
</kw>
<status status="PASS" starttime="20231124 16:53:14.886" endtime="20231124 16:53:15.996"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231124 16:53:16.982" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231124 16:53:16.002" endtime="20231124 16:53:16.982"/>
</kw>
<status status="PASS" starttime="20231124 16:53:16.001" endtime="20231124 16:53:16.982"/>
</kw>
<tag>Search</tag>
<tag>Smoketest</tag>
<status status="PASS" starttime="20231124 16:52:54.242" endtime="20231124 16:53:16.985"/>
</test>
<status status="PASS" starttime="20231124 16:52:51.874" endtime="20231124 16:53:17.044"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
<stat pass="1" fail="0" skip="0">Smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Navigation">Navigation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

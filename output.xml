<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231129 16:33:09.419" rpa="false" schemaversion="4">
<suite id="s1" name="Data" source="d:\TESTER\Automation\Auto_Web\testcases\data.robot">
<test id="s1-t1" name="DA_17 Create a new data when leaving &quot;Tiêu đề&quot; field blank" line="209">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231129 16:33:12.819" endtime="20231129 16:33:12.821"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231129 16:33:12.825" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\950efb5e-bcf4-4bd6-99ac-9d76bddf4560"}</msg>
<msg timestamp="20231129 16:33:14.702" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\950efb5e-bcf4-4bd6-99ac-9d76bddf4560"}</msg>
<status status="PASS" starttime="20231129 16:33:12.822" endtime="20231129 16:33:14.703"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231129 16:33:19.987" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231129 16:33:19.988" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231129 16:33:14.704" endtime="20231129 16:33:19.988"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 16:33:19.993" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231129 16:33:19.990" endtime="20231129 16:33:19.994"/>
</kw>
<status status="PASS" starttime="20231129 16:33:12.817" endtime="20231129 16:33:19.996"/>
</kw>
<kw name="Create a category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:20.225" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 16:33:20.104" endtime="20231129 16:33:20.225"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231129 16:33:20.227" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231129 16:33:20.226" endtime="20231129 16:33:20.227"/>
</kw>
<status status="FAIL" starttime="20231129 16:33:20.102" endtime="20231129 16:33:20.228"/>
</kw>
<msg timestamp="20231129 16:33:20.229" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231129 16:33:20.101" endtime="20231129 16:33:20.229"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231129 16:33:20.234" endtime="20231129 16:33:20.235"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.229" endtime="20231129 16:33:20.235"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Quản lý dữ liệu&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:20.342" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:20.240" endtime="20231129 16:33:20.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:20.343" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 16:33:20.343" endtime="20231129 16:33:20.343"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:20.362" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:20.344" endtime="20231129 16:33:20.362"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 16:33:20.370" endtime="20231129 16:33:20.371"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.369" endtime="20231129 16:33:20.372"/>
</branch>
<status status="PASS" starttime="20231129 16:33:20.363" endtime="20231129 16:33:20.372"/>
</if>
<status status="PASS" starttime="20231129 16:33:20.239" endtime="20231129 16:33:20.373"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:20.376" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 16:33:20.375" endtime="20231129 16:33:20.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:20.378" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 16:33:20.377" endtime="20231129 16:33:20.378"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:20.387" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 16:33:20.379" endtime="20231129 16:33:20.388"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:20.390" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:20.390" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 16:33:20.389" endtime="20231129 16:33:20.391"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:20.393" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 16:33:20.392" endtime="20231129 16:33:20.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:20.395" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:20.395" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 16:33:20.394" endtime="20231129 16:33:20.396"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.403" endtime="20231129 16:33:20.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.405" endtime="20231129 16:33:20.405"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.402" endtime="20231129 16:33:20.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.408" endtime="20231129 16:33:20.409"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.409" endtime="20231129 16:33:20.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.410" endtime="20231129 16:33:20.411"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.407" endtime="20231129 16:33:20.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.412" endtime="20231129 16:33:20.413"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.426" endtime="20231129 16:33:20.427"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.412" endtime="20231129 16:33:20.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.430" endtime="20231129 16:33:20.435"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.436" endtime="20231129 16:33:20.437"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.428" endtime="20231129 16:33:20.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.439" endtime="20231129 16:33:20.440"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.438" endtime="20231129 16:33:20.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 16:33:20.442" endtime="20231129 16:33:20.443"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.441" endtime="20231129 16:33:20.444"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.446" endtime="20231129 16:33:20.451"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.452" endtime="20231129 16:33:20.453"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.454" endtime="20231129 16:33:20.454"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.445" endtime="20231129 16:33:20.455"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.456" endtime="20231129 16:33:20.457"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.455" endtime="20231129 16:33:20.457"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.459" endtime="20231129 16:33:20.460"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.458" endtime="20231129 16:33:20.461"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.463" endtime="20231129 16:33:20.463"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.461" endtime="20231129 16:33:20.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.469" endtime="20231129 16:33:20.469"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.468" endtime="20231129 16:33:20.470"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.471" endtime="20231129 16:33:20.472"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.470" endtime="20231129 16:33:20.472"/>
</branch>
<status status="PASS" starttime="20231129 16:33:20.402" endtime="20231129 16:33:20.473"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:20.474" level="INFO">Length is 15</msg>
<msg timestamp="20231129 16:33:20.477" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231129 16:33:20.473" endtime="20231129 16:33:20.478"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 16:33:20.479" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 16:33:20.479" endtime="20231129 16:33:20.480"/>
</kw>
<status status="PASS" starttime="20231129 16:33:20.478" endtime="20231129 16:33:20.480"/>
</branch>
<status status="PASS" starttime="20231129 16:33:20.478" endtime="20231129 16:33:20.484"/>
</if>
<msg timestamp="20231129 16:33:20.484" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 16:33:20.373" endtime="20231129 16:33:20.485"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 16:33:20.486" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 16:33:20.485" endtime="20231129 16:33:20.486"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:20.487" endtime="20231129 16:33:20.721"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:20.722" endtime="20231129 16:33:20.795"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 16:33:20.799" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231129 16:33:20.796" endtime="20231129 16:33:20.873"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:20.982" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231129 16:33:20.983" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 16:33:20.874" endtime="20231129 16:33:20.983"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.986" endtime="20231129 16:33:20.987"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:20.989" endtime="20231129 16:33:20.989"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:20.984" endtime="20231129 16:33:20.990"/>
</iter>
<status status="NOT RUN" starttime="20231129 16:33:20.984" endtime="20231129 16:33:20.990"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 16:33:20.991" endtime="20231129 16:33:21.065"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:21.069" level="INFO">Length is 15</msg>
<msg timestamp="20231129 16:33:21.069" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231129 16:33:21.068" endtime="20231129 16:33:21.070"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 16:33:21.074" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 16:33:21.072" endtime="20231129 16:33:21.074"/>
</kw>
<status status="PASS" starttime="20231129 16:33:21.071" endtime="20231129 16:33:21.075"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.070" endtime="20231129 16:33:21.075"/>
</if>
<status status="PASS" starttime="20231129 16:33:20.238" endtime="20231129 16:33:21.076"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:21.180" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:21.079" endtime="20231129 16:33:21.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:21.185" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 16:33:21.184" endtime="20231129 16:33:21.186"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:21.198" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:21.186" endtime="20231129 16:33:21.199"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 16:33:21.202" endtime="20231129 16:33:21.203"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.201" endtime="20231129 16:33:21.203"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.200" endtime="20231129 16:33:21.204"/>
</if>
<status status="PASS" starttime="20231129 16:33:21.077" endtime="20231129 16:33:21.205"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:21.209" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 16:33:21.207" endtime="20231129 16:33:21.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:21.211" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 16:33:21.210" endtime="20231129 16:33:21.211"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:21.218" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 16:33:21.212" endtime="20231129 16:33:21.218"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:21.220" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:21.221" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 16:33:21.219" endtime="20231129 16:33:21.221"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:21.223" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 16:33:21.222" endtime="20231129 16:33:21.223"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:21.225" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:21.226" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 16:33:21.224" endtime="20231129 16:33:21.226"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.228" endtime="20231129 16:33:21.229"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.230" endtime="20231129 16:33:21.233"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.227" endtime="20231129 16:33:21.233"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.236" endtime="20231129 16:33:21.237"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.238" endtime="20231129 16:33:21.239"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.239" endtime="20231129 16:33:21.240"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.235" endtime="20231129 16:33:21.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.242" endtime="20231129 16:33:21.243"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.253" endtime="20231129 16:33:21.254"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.241" endtime="20231129 16:33:21.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.256" endtime="20231129 16:33:21.257"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.258" endtime="20231129 16:33:21.259"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.255" endtime="20231129 16:33:21.259"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.261" endtime="20231129 16:33:21.262"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.260" endtime="20231129 16:33:21.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 16:33:21.267" endtime="20231129 16:33:21.268"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.264" endtime="20231129 16:33:21.270"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.271" endtime="20231129 16:33:21.272"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.272" endtime="20231129 16:33:21.273"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.274" endtime="20231129 16:33:21.274"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.270" endtime="20231129 16:33:21.274"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.276" endtime="20231129 16:33:21.276"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.275" endtime="20231129 16:33:21.276"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.278" endtime="20231129 16:33:21.279"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.277" endtime="20231129 16:33:21.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.285" endtime="20231129 16:33:21.286"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.283" endtime="20231129 16:33:21.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.288" endtime="20231129 16:33:21.289"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.287" endtime="20231129 16:33:21.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.301" endtime="20231129 16:33:21.302"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.290" endtime="20231129 16:33:21.302"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.227" endtime="20231129 16:33:21.303"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:21.311" level="INFO">Length is 6</msg>
<msg timestamp="20231129 16:33:21.313" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231129 16:33:21.310" endtime="20231129 16:33:21.318"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 16:33:21.323" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231129 16:33:21.320" endtime="20231129 16:33:21.323"/>
</kw>
<status status="PASS" starttime="20231129 16:33:21.319" endtime="20231129 16:33:21.324"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.318" endtime="20231129 16:33:21.324"/>
</if>
<msg timestamp="20231129 16:33:21.325" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231129 16:33:21.205" endtime="20231129 16:33:21.325"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 16:33:21.327" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 16:33:21.326" endtime="20231129 16:33:21.328"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:21.329" endtime="20231129 16:33:21.445"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:21.446" endtime="20231129 16:33:21.493"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 16:33:21.496" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231129 16:33:21.494" endtime="20231129 16:33:21.554"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:21.608" level="INFO">Text: '123123'</msg>
<msg timestamp="20231129 16:33:21.609" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231129 16:33:21.555" endtime="20231129 16:33:21.610"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.612" endtime="20231129 16:33:21.614"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.617" endtime="20231129 16:33:21.618"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.610" endtime="20231129 16:33:21.620"/>
</iter>
<status status="NOT RUN" starttime="20231129 16:33:21.610" endtime="20231129 16:33:21.621"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 16:33:21.622" endtime="20231129 16:33:21.694"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:21.695" level="INFO">Length is 6</msg>
<msg timestamp="20231129 16:33:21.696" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231129 16:33:21.695" endtime="20231129 16:33:21.696"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 16:33:21.703" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231129 16:33:21.701" endtime="20231129 16:33:21.704"/>
</kw>
<status status="PASS" starttime="20231129 16:33:21.699" endtime="20231129 16:33:21.704"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.698" endtime="20231129 16:33:21.705"/>
</if>
<status status="PASS" starttime="20231129 16:33:21.076" endtime="20231129 16:33:21.705"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:21.808" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:21.707" endtime="20231129 16:33:21.808"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:21.824" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 16:33:21.809" endtime="20231129 16:33:21.825"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:21.826" endtime="20231129 16:33:21.959"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:21.962" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 16:33:21.961" endtime="20231129 16:33:21.963"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:21.977" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:21.966" endtime="20231129 16:33:21.978"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.986" endtime="20231129 16:33:21.987"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 16:33:21.988" endtime="20231129 16:33:21.989"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 16:33:21.991" endtime="20231129 16:33:21.991"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:21.979" endtime="20231129 16:33:21.992"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.979" endtime="20231129 16:33:21.993"/>
</if>
<status status="PASS" starttime="20231129 16:33:21.960" endtime="20231129 16:33:21.993"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 16:33:22.029" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:22.035" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:22.058" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:22.058" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:22.075" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 16:33:21.994" endtime="20231129 16:33:22.076"/>
</kw>
<status status="PASS" starttime="20231129 16:33:21.825" endtime="20231129 16:33:22.077"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:22.079" endtime="20231129 16:33:22.079"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 16:33:22.083" endtime="20231129 16:33:22.084"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 16:33:22.085" endtime="20231129 16:33:22.085"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:22.078" endtime="20231129 16:33:22.086"/>
</branch>
<status status="PASS" starttime="20231129 16:33:21.825" endtime="20231129 16:33:22.087"/>
</if>
<status status="PASS" starttime="20231129 16:33:21.706" endtime="20231129 16:33:22.087"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:22.090" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 16:33:22.089" endtime="20231129 16:33:22.091"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:22.092" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:22.093" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 16:33:22.092" endtime="20231129 16:33:22.094"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:22.095" endtime="20231129 16:33:22.096"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:22.094" endtime="20231129 16:33:22.096"/>
</branch>
<status status="PASS" starttime="20231129 16:33:22.094" endtime="20231129 16:33:22.099"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:22.485" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231129 16:33:22.106" endtime="20231129 16:33:22.485"/>
</kw>
<status status="PASS" starttime="20231129 16:33:22.101" endtime="20231129 16:33:22.486"/>
</kw>
<status status="PASS" starttime="20231129 16:33:22.100" endtime="20231129 16:33:22.486"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:22.487" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231129 16:33:22.487" endtime="20231129 16:33:22.488"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 16:33:23.003" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231129 16:33:23.004" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231129 16:33:23.004" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231129 16:33:22.491" endtime="20231129 16:33:23.024"/>
</kw>
<status status="FAIL" starttime="20231129 16:33:22.489" endtime="20231129 16:33:23.025"/>
</kw>
<msg timestamp="20231129 16:33:23.025" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231129 16:33:22.488" endtime="20231129 16:33:23.026"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:23.028" endtime="20231129 16:33:23.028"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:23.026" endtime="20231129 16:33:23.029"/>
</branch>
<status status="PASS" starttime="20231129 16:33:23.026" endtime="20231129 16:33:23.031"/>
</if>
<status status="PASS" starttime="20231129 16:33:22.088" endtime="20231129 16:33:23.032"/>
</kw>
<status status="PASS" starttime="20231129 16:33:20.237" endtime="20231129 16:33:23.033"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 16:33:23.060" level="INFO">Waited for Element with selector //li[contains(@class, "menu") and descendant::span[contains(text(), "QUẢN LÝ DANH MỤC")]] at state attached</msg>
<status status="PASS" starttime="20231129 16:33:23.041" endtime="20231129 16:33:23.061"/>
</kw>
<status status="PASS" starttime="20231129 16:33:23.035" endtime="20231129 16:33:23.061"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:23.062" endtime="20231129 16:33:24.091"/>
</kw>
<status status="PASS" starttime="20231129 16:33:23.034" endtime="20231129 16:33:24.091"/>
</kw>
<kw name="Click &quot;Quản lý dữ liệu&quot; sub menu to &quot;/data&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 16:33:24.118" level="INFO">Waited for Element with selector //a[contains(@class, "sub-menu") and descendant::span[contains(text(), "Quản lý dữ liệu")]] at state attached</msg>
<status status="PASS" starttime="20231129 16:33:24.095" endtime="20231129 16:33:24.119"/>
</kw>
<status status="PASS" starttime="20231129 16:33:24.092" endtime="20231129 16:33:24.119"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:24.120" endtime="20231129 16:33:24.652"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231129 16:33:24.658" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/data</msg>
<status status="PASS" starttime="20231129 16:33:24.653" endtime="20231129 16:33:24.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 16:33:24.659" endtime="20231129 16:33:24.660"/>
</kw>
<status status="PASS" starttime="20231129 16:33:24.092" endtime="20231129 16:33:24.661"/>
</kw>
<status status="PASS" starttime="20231129 16:33:20.236" endtime="20231129 16:33:24.661"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:24.767" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:24.665" endtime="20231129 16:33:24.767"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:25.172" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 16:33:24.768" endtime="20231129 16:33:25.173"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:25.175" endtime="20231129 16:33:25.485"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:25.487" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 16:33:25.486" endtime="20231129 16:33:25.487"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:25.496" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:25.487" endtime="20231129 16:33:25.497"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.500" endtime="20231129 16:33:25.501"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.503" endtime="20231129 16:33:25.505"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 16:33:25.506" endtime="20231129 16:33:25.506"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.499" endtime="20231129 16:33:25.507"/>
</branch>
<status status="PASS" starttime="20231129 16:33:25.498" endtime="20231129 16:33:25.507"/>
</if>
<status status="PASS" starttime="20231129 16:33:25.486" endtime="20231129 16:33:25.508"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 16:33:25.528" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:25.528" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:25.546" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:25.547" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:25.558" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 16:33:25.509" endtime="20231129 16:33:25.559"/>
</kw>
<status status="PASS" starttime="20231129 16:33:25.174" endtime="20231129 16:33:25.560"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.561" endtime="20231129 16:33:25.562"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 16:33:25.562" endtime="20231129 16:33:25.562"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.565" endtime="20231129 16:33:25.566"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.560" endtime="20231129 16:33:25.566"/>
</branch>
<status status="PASS" starttime="20231129 16:33:25.174" endtime="20231129 16:33:25.567"/>
</if>
<status status="PASS" starttime="20231129 16:33:24.662" endtime="20231129 16:33:25.568"/>
</kw>
<status status="PASS" starttime="20231129 16:33:20.236" endtime="20231129 16:33:25.568"/>
</branch>
<status status="PASS" starttime="20231129 16:33:20.229" endtime="20231129 16:33:25.569"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên loại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:25.672" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:25.571" endtime="20231129 16:33:25.672"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:25.673" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 16:33:25.672" endtime="20231129 16:33:25.673"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:25.684" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:25.673" endtime="20231129 16:33:25.685"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 16:33:25.687" endtime="20231129 16:33:25.687"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.686" endtime="20231129 16:33:25.688"/>
</branch>
<status status="PASS" starttime="20231129 16:33:25.685" endtime="20231129 16:33:25.688"/>
</if>
<status status="PASS" starttime="20231129 16:33:25.570" endtime="20231129 16:33:25.689"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:25.692" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 16:33:25.691" endtime="20231129 16:33:25.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:25.694" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 16:33:25.693" endtime="20231129 16:33:25.694"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:25.695" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 16:33:25.695" endtime="20231129 16:33:25.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:25.699" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:25.700" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 16:33:25.698" endtime="20231129 16:33:25.700"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:25.701" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231129 16:33:25.700" endtime="20231129 16:33:25.701"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:25.702" level="INFO">Length is 1</msg>
<msg timestamp="20231129 16:33:25.703" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 16:33:25.702" endtime="20231129 16:33:25.703"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.704" endtime="20231129 16:33:25.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.704" endtime="20231129 16:33:25.704"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.703" endtime="20231129 16:33:25.705"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231129 16:33:25.706" level="INFO">${random} = Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:25.705" endtime="20231129 16:33:25.706"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231129 16:33:25.707" level="INFO">${words} = ['DA_17', 'Create', 'a', 'new', 'data', 'when', 'leaving', '"Tiêu', 'đề"', 'field', 'blank']</msg>
<status status="PASS" starttime="20231129 16:33:25.706" endtime="20231129 16:33:25.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:25.709" level="INFO">${new_text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:25.707" endtime="20231129 16:33:25.710"/>
</kw>
<status status="PASS" starttime="20231129 16:33:25.705" endtime="20231129 16:33:25.710"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.711" endtime="20231129 16:33:25.711"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.711" endtime="20231129 16:33:25.712"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.710" endtime="20231129 16:33:25.712"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.717" endtime="20231129 16:33:25.717"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.718" endtime="20231129 16:33:25.718"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.715" endtime="20231129 16:33:25.719"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.719" endtime="20231129 16:33:25.720"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.719" endtime="20231129 16:33:25.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 16:33:25.720" endtime="20231129 16:33:25.720"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.720" endtime="20231129 16:33:25.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.721" endtime="20231129 16:33:25.721"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.722" endtime="20231129 16:33:25.722"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.722" endtime="20231129 16:33:25.723"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.721" endtime="20231129 16:33:25.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.723" endtime="20231129 16:33:25.724"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.723" endtime="20231129 16:33:25.724"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.726" endtime="20231129 16:33:25.727"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.725" endtime="20231129 16:33:25.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.728" endtime="20231129 16:33:25.732"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.728" endtime="20231129 16:33:25.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.734" endtime="20231129 16:33:25.734"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.733" endtime="20231129 16:33:25.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:25.736" endtime="20231129 16:33:25.736"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:25.735" endtime="20231129 16:33:25.737"/>
</branch>
<status status="PASS" starttime="20231129 16:33:25.703" endtime="20231129 16:33:25.737"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:25.738" level="INFO">Length is 8</msg>
<msg timestamp="20231129 16:33:25.738" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231129 16:33:25.737" endtime="20231129 16:33:25.738"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 16:33:25.740" level="INFO">${text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:25.739" endtime="20231129 16:33:25.740"/>
</kw>
<status status="PASS" starttime="20231129 16:33:25.738" endtime="20231129 16:33:25.741"/>
</branch>
<status status="PASS" starttime="20231129 16:33:25.738" endtime="20231129 16:33:25.741"/>
</if>
<msg timestamp="20231129 16:33:25.741" level="INFO">${text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:25.689" endtime="20231129 16:33:25.742"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 16:33:25.743" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên loại"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 16:33:25.742" endtime="20231129 16:33:25.743"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:25.743" endtime="20231129 16:33:26.016"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:26.018" endtime="20231129 16:33:26.060"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 16:33:26.062" level="INFO">Fills the text 'DA_17 Alias corrupti.' in the given field.</msg>
<status status="PASS" starttime="20231129 16:33:26.061" endtime="20231129 16:33:26.109"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:26.149" level="INFO">Text: 'DA_17 Alias corrupti.'</msg>
<msg timestamp="20231129 16:33:26.151" level="INFO">${condition} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:26.110" endtime="20231129 16:33:26.151"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.154" endtime="20231129 16:33:26.155"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.156" endtime="20231129 16:33:26.156"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.152" endtime="20231129 16:33:26.157"/>
</iter>
<status status="NOT RUN" starttime="20231129 16:33:26.152" endtime="20231129 16:33:26.157"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 16:33:26.159" endtime="20231129 16:33:26.226"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:26.228" level="INFO">Length is 21</msg>
<msg timestamp="20231129 16:33:26.229" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20231129 16:33:26.227" endtime="20231129 16:33:26.229"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 16:33:26.236" level="INFO">${STATE["Tên loại"]} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:26.233" endtime="20231129 16:33:26.236"/>
</kw>
<status status="PASS" starttime="20231129 16:33:26.232" endtime="20231129 16:33:26.237"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.231" endtime="20231129 16:33:26.238"/>
</if>
<status status="PASS" starttime="20231129 16:33:25.570" endtime="20231129 16:33:26.238"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên loại@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:26.242" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231129 16:33:26.241" endtime="20231129 16:33:26.242"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:26.244" level="INFO">Length is 1</msg>
<msg timestamp="20231129 16:33:26.245" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 16:33:26.243" endtime="20231129 16:33:26.245"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:26.252" level="INFO">${text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:26.249" endtime="20231129 16:33:26.253"/>
</kw>
<status status="PASS" starttime="20231129 16:33:26.248" endtime="20231129 16:33:26.254"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.247" endtime="20231129 16:33:26.255"/>
</if>
<msg timestamp="20231129 16:33:26.255" level="INFO">${text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:26.239" endtime="20231129 16:33:26.256"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:26.259" level="INFO">${name} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:26.257" endtime="20231129 16:33:26.259"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:26.367" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:26.265" endtime="20231129 16:33:26.367"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:26.368" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 16:33:26.367" endtime="20231129 16:33:26.368"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:26.376" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:26.368" endtime="20231129 16:33:26.377"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 16:33:26.378" endtime="20231129 16:33:26.380"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.377" endtime="20231129 16:33:26.381"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.377" endtime="20231129 16:33:26.382"/>
</if>
<status status="PASS" starttime="20231129 16:33:26.262" endtime="20231129 16:33:26.382"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:26.385" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 16:33:26.384" endtime="20231129 16:33:26.385"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:26.387" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 16:33:26.386" endtime="20231129 16:33:26.387"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:26.388" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 16:33:26.387" endtime="20231129 16:33:26.388"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:26.389" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:26.389" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 16:33:26.389" endtime="20231129 16:33:26.389"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:26.391" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231129 16:33:26.390" endtime="20231129 16:33:26.391"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:26.392" level="INFO">Length is 1</msg>
<msg timestamp="20231129 16:33:26.392" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 16:33:26.392" endtime="20231129 16:33:26.393"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.394" endtime="20231129 16:33:26.394"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.394" endtime="20231129 16:33:26.395"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.393" endtime="20231129 16:33:26.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.398" endtime="20231129 16:33:26.398"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.398" endtime="20231129 16:33:26.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.399" endtime="20231129 16:33:26.400"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.397" endtime="20231129 16:33:26.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231129 16:33:26.402" level="INFO">${new_text} = 968</msg>
<status status="PASS" starttime="20231129 16:33:26.401" endtime="20231129 16:33:26.402"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231129 16:33:26.403" level="INFO">${new_text} = 968</msg>
<status status="PASS" starttime="20231129 16:33:26.403" endtime="20231129 16:33:26.403"/>
</kw>
<status status="PASS" starttime="20231129 16:33:26.401" endtime="20231129 16:33:26.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.404" endtime="20231129 16:33:26.404"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.405" endtime="20231129 16:33:26.405"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.404" endtime="20231129 16:33:26.405"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.406" endtime="20231129 16:33:26.406"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.405" endtime="20231129 16:33:26.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 16:33:26.407" endtime="20231129 16:33:26.407"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.406" endtime="20231129 16:33:26.407"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.408" endtime="20231129 16:33:26.408"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.408" endtime="20231129 16:33:26.408"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.409" endtime="20231129 16:33:26.409"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.407" endtime="20231129 16:33:26.409"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.410" endtime="20231129 16:33:26.410"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.409" endtime="20231129 16:33:26.410"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.411" endtime="20231129 16:33:26.412"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.410" endtime="20231129 16:33:26.413"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.415" endtime="20231129 16:33:26.416"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.414" endtime="20231129 16:33:26.416"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.417" endtime="20231129 16:33:26.418"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.417" endtime="20231129 16:33:26.418"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.419" endtime="20231129 16:33:26.420"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.419" endtime="20231129 16:33:26.420"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.393" endtime="20231129 16:33:26.420"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:26.422" level="INFO">Length is 8</msg>
<msg timestamp="20231129 16:33:26.423" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231129 16:33:26.421" endtime="20231129 16:33:26.423"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 16:33:26.425" level="INFO">${text} = 968</msg>
<status status="PASS" starttime="20231129 16:33:26.424" endtime="20231129 16:33:26.425"/>
</kw>
<status status="PASS" starttime="20231129 16:33:26.424" endtime="20231129 16:33:26.425"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.424" endtime="20231129 16:33:26.426"/>
</if>
<msg timestamp="20231129 16:33:26.426" level="INFO">${text} = 968</msg>
<status status="PASS" starttime="20231129 16:33:26.383" endtime="20231129 16:33:26.426"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 16:33:26.428" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 16:33:26.426" endtime="20231129 16:33:26.428"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:26.429" endtime="20231129 16:33:26.510"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:26.511" endtime="20231129 16:33:26.551"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 16:33:26.553" level="INFO">Fills the text '968' in the given field.</msg>
<status status="PASS" starttime="20231129 16:33:26.552" endtime="20231129 16:33:26.601"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:26.650" level="INFO">Text: '968'</msg>
<msg timestamp="20231129 16:33:26.651" level="INFO">${condition} = 968</msg>
<status status="PASS" starttime="20231129 16:33:26.602" endtime="20231129 16:33:26.651"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.653" endtime="20231129 16:33:26.654"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.655" endtime="20231129 16:33:26.656"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.652" endtime="20231129 16:33:26.656"/>
</iter>
<status status="NOT RUN" starttime="20231129 16:33:26.652" endtime="20231129 16:33:26.656"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 16:33:26.657" endtime="20231129 16:33:26.725"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:26.726" level="INFO">Length is 3</msg>
<msg timestamp="20231129 16:33:26.727" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231129 16:33:26.725" endtime="20231129 16:33:26.727"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 16:33:26.734" level="INFO">${STATE["Mã"]} = 968</msg>
<status status="PASS" starttime="20231129 16:33:26.733" endtime="20231129 16:33:26.735"/>
</kw>
<status status="PASS" starttime="20231129 16:33:26.728" endtime="20231129 16:33:26.735"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.728" endtime="20231129 16:33:26.736"/>
</if>
<status status="PASS" starttime="20231129 16:33:26.260" endtime="20231129 16:33:26.736"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:26.841" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:26.739" endtime="20231129 16:33:26.841"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:26.854" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 16:33:26.842" endtime="20231129 16:33:26.855"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:26.857" endtime="20231129 16:33:26.943"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:26.949" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 16:33:26.945" endtime="20231129 16:33:26.949"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:26.962" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:26.951" endtime="20231129 16:33:26.963"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.968" endtime="20231129 16:33:26.969"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 16:33:26.970" endtime="20231129 16:33:26.970"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 16:33:26.971" endtime="20231129 16:33:26.972"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:26.966" endtime="20231129 16:33:26.973"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.966" endtime="20231129 16:33:26.973"/>
</if>
<status status="PASS" starttime="20231129 16:33:26.944" endtime="20231129 16:33:26.974"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 16:33:27.466" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:27.466" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:27.974" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:27.974" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:28.002" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 16:33:26.974" endtime="20231129 16:33:28.004"/>
</kw>
<status status="PASS" starttime="20231129 16:33:26.856" endtime="20231129 16:33:28.005"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.006" endtime="20231129 16:33:28.007"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 16:33:28.008" endtime="20231129 16:33:28.009"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.010" endtime="20231129 16:33:28.010"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.005" endtime="20231129 16:33:28.011"/>
</branch>
<status status="PASS" starttime="20231129 16:33:26.855" endtime="20231129 16:33:28.011"/>
</if>
<status status="PASS" starttime="20231129 16:33:26.737" endtime="20231129 16:33:28.011"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:28.018" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 16:33:28.016" endtime="20231129 16:33:28.019"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:28.024" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:28.024" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 16:33:28.022" endtime="20231129 16:33:28.025"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.027" endtime="20231129 16:33:28.027"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.026" endtime="20231129 16:33:28.027"/>
</branch>
<status status="PASS" starttime="20231129 16:33:28.025" endtime="20231129 16:33:28.028"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:28.092" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231129 16:33:28.038" endtime="20231129 16:33:28.093"/>
</kw>
<status status="PASS" starttime="20231129 16:33:28.033" endtime="20231129 16:33:28.093"/>
</kw>
<status status="PASS" starttime="20231129 16:33:28.028" endtime="20231129 16:33:28.094"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:28.098" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231129 16:33:28.095" endtime="20231129 16:33:28.099"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 16:33:28.558" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231129 16:33:28.558" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231129 16:33:28.560" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231129 16:33:28.103" endtime="20231129 16:33:28.566"/>
</kw>
<status status="FAIL" starttime="20231129 16:33:28.101" endtime="20231129 16:33:28.569"/>
</kw>
<msg timestamp="20231129 16:33:28.570" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231129 16:33:28.100" endtime="20231129 16:33:28.571"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.573" endtime="20231129 16:33:28.574"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.572" endtime="20231129 16:33:28.574"/>
</branch>
<status status="PASS" starttime="20231129 16:33:28.572" endtime="20231129 16:33:28.575"/>
</if>
<status status="PASS" starttime="20231129 16:33:28.012" endtime="20231129 16:33:28.575"/>
</kw>
<status status="PASS" starttime="20231129 16:33:20.096" endtime="20231129 16:33:28.576"/>
</kw>
<kw name="When Click select &quot;Chuyên mục&quot; with &quot;_@Tên loại@_&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:28.590" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 16:33:28.589" endtime="20231129 16:33:28.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:28.593" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 16:33:28.592" endtime="20231129 16:33:28.593"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:28.598" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231129 16:33:28.595" endtime="20231129 16:33:28.599"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:28.600" level="INFO">Length is 1</msg>
<msg timestamp="20231129 16:33:28.608" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 16:33:28.599" endtime="20231129 16:33:28.609"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 16:33:28.614" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 16:33:28.611" endtime="20231129 16:33:28.615"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:28.617" level="INFO">Length is 0</msg>
<msg timestamp="20231129 16:33:28.617" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 16:33:28.616" endtime="20231129 16:33:28.618"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:28.639" level="INFO">${new_text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:28.637" endtime="20231129 16:33:28.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:28.643" level="INFO">${symbol} = _@Tên loại@_</msg>
<status status="PASS" starttime="20231129 16:33:28.640" endtime="20231129 16:33:28.643"/>
</kw>
<status status="PASS" starttime="20231129 16:33:28.636" endtime="20231129 16:33:28.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.649" endtime="20231129 16:33:28.650"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.651" endtime="20231129 16:33:28.651"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.652" endtime="20231129 16:33:28.653"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.644" endtime="20231129 16:33:28.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.655" endtime="20231129 16:33:28.655"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.656" endtime="20231129 16:33:28.657"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.654" endtime="20231129 16:33:28.657"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.659" endtime="20231129 16:33:28.659"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.660" endtime="20231129 16:33:28.660"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.658" endtime="20231129 16:33:28.661"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.666" endtime="20231129 16:33:28.725"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.665" endtime="20231129 16:33:28.725"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 16:33:28.727" endtime="20231129 16:33:28.727"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.726" endtime="20231129 16:33:28.728"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.732" endtime="20231129 16:33:28.733"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.742" endtime="20231129 16:33:28.742"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.743" endtime="20231129 16:33:28.744"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.728" endtime="20231129 16:33:28.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.756" endtime="20231129 16:33:28.757"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.751" endtime="20231129 16:33:28.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.759" endtime="20231129 16:33:28.760"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.758" endtime="20231129 16:33:28.761"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.766" endtime="20231129 16:33:28.769"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.761" endtime="20231129 16:33:28.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.774" endtime="20231129 16:33:28.775"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.772" endtime="20231129 16:33:28.775"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 16:33:28.776" endtime="20231129 16:33:28.777"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:28.775" endtime="20231129 16:33:28.777"/>
</branch>
<status status="PASS" starttime="20231129 16:33:28.618" endtime="20231129 16:33:28.810"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:28.812" level="INFO">Length is 12</msg>
<msg timestamp="20231129 16:33:28.816" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231129 16:33:28.811" endtime="20231129 16:33:28.818"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 16:33:28.823" level="INFO">${text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:28.822" endtime="20231129 16:33:28.824"/>
</kw>
<status status="PASS" starttime="20231129 16:33:28.820" endtime="20231129 16:33:28.824"/>
</branch>
<status status="PASS" starttime="20231129 16:33:28.819" endtime="20231129 16:33:28.825"/>
</if>
<msg timestamp="20231129 16:33:28.825" level="INFO">${text} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:28.587" endtime="20231129 16:33:28.826"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231129 16:33:28.828" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231129 16:33:28.826" endtime="20231129 16:33:28.829"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 16:33:33.909" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231129 16:33:28.836" endtime="20231129 16:33:33.910"/>
</kw>
<status status="PASS" starttime="20231129 16:33:28.833" endtime="20231129 16:33:33.911"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:33.913" endtime="20231129 16:33:34.639"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231129 16:33:34.640" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231129 16:33:34.639" endtime="20231129 16:33:34.640"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 16:33:34.641" level="INFO">Fills the text 'DA_17 Alias corrupti.' in the given field.</msg>
<status status="PASS" starttime="20231129 16:33:34.640" endtime="20231129 16:33:34.706"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:34.707" endtime="20231129 16:33:34.959"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 16:33:34.961" level="INFO">Length is 21</msg>
<msg timestamp="20231129 16:33:34.961" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20231129 16:33:34.960" endtime="20231129 16:33:34.961"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 16:33:34.971" level="INFO">${STATE["Chuyên mục"]} = DA_17 Alias corrupti.</msg>
<status status="PASS" starttime="20231129 16:33:34.967" endtime="20231129 16:33:34.972"/>
</kw>
<status status="PASS" starttime="20231129 16:33:34.965" endtime="20231129 16:33:34.973"/>
</branch>
<status status="PASS" starttime="20231129 16:33:34.964" endtime="20231129 16:33:34.974"/>
</if>
<status status="PASS" starttime="20231129 16:33:28.585" endtime="20231129 16:33:34.974"/>
</kw>
<kw name="When Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 16:33:35.169" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 16:33:35.067" endtime="20231129 16:33:35.170"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:35.181" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 16:33:35.170" endtime="20231129 16:33:35.184"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 16:33:35.187" endtime="20231129 16:33:35.291"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 16:33:35.299" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 16:33:35.294" endtime="20231129 16:33:35.300"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 16:33:35.318" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 16:33:35.302" endtime="20231129 16:33:35.319"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:35.324" endtime="20231129 16:33:35.324"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 16:33:35.325" endtime="20231129 16:33:35.325"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 16:33:35.326" endtime="20231129 16:33:35.326"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:35.322" endtime="20231129 16:33:35.326"/>
</branch>
<status status="PASS" starttime="20231129 16:33:35.321" endtime="20231129 16:33:35.326"/>
</if>
<status status="PASS" starttime="20231129 16:33:35.292" endtime="20231129 16:33:35.327"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 16:33:35.360" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:35.361" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:35.388" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:35.388" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 16:33:35.399" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 16:33:35.327" endtime="20231129 16:33:35.400"/>
</kw>
<status status="PASS" starttime="20231129 16:33:35.186" endtime="20231129 16:33:35.401"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 16:33:35.403" endtime="20231129 16:33:35.404"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 16:33:35.404" endtime="20231129 16:33:35.405"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 16:33:35.406" endtime="20231129 16:33:35.407"/>
</kw>
<status status="NOT RUN" starttime="20231129 16:33:35.401" endtime="20231129 16:33:35.407"/>
</branch>
<status status="PASS" starttime="20231129 16:33:35.185" endtime="20231129 16:33:35.408"/>
</if>
<status status="PASS" starttime="20231129 16:33:35.061" endtime="20231129 16:33:35.409"/>
</kw>
<kw name="Then Required message &quot;Xin vui lòng nhập tiêu đề&quot; displayed under &quot;Tiêu đề&quot; field" library="common" sourcename="Required message &quot;${text}&quot; displayed under &quot;${name}&quot; field">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-form-item-explain-error")]</arg>
<msg timestamp="20231129 16:33:35.428" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-form-item-explain-error")]</msg>
<status status="PASS" starttime="20231129 16:33:35.423" endtime="20231129 16:33:35.431"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>${element}</arg>
<arg>${text}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 16:33:35.491" level="INFO">Text: 'Xin vui lòng nhập tiêu đề'</msg>
<status status="PASS" starttime="20231129 16:33:35.439" endtime="20231129 16:33:35.492"/>
</kw>
<status status="PASS" starttime="20231129 16:33:35.432" endtime="20231129 16:33:35.493"/>
</kw>
<status status="PASS" starttime="20231129 16:33:35.422" endtime="20231129 16:33:35.494"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231129 16:33:36.862" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231129 16:33:35.503" endtime="20231129 16:33:36.863"/>
</kw>
<status status="PASS" starttime="20231129 16:33:35.501" endtime="20231129 16:33:36.864"/>
</kw>
<tag>BlankField</tag>
<tag>Create</tag>
<status status="PASS" starttime="20231129 16:33:12.808" endtime="20231129 16:33:36.873"/>
</test>
<status status="PASS" starttime="20231129 16:33:09.428" endtime="20231129 16:33:36.950"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">BlankField</stat>
<stat pass="1" fail="0" skip="0">Create</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Data">Data</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

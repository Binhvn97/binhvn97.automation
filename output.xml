<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231127 16:45:09.131" rpa="false" schemaversion="4">
<suite id="s1" name="Post" source="d:\TESTER\Automation\Auto_Web\testcases\post.robot">
<test id="s1-t1" name="PO_45 Verify the changing &quot;Custom Class&quot; field" line="624">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231127 16:45:11.550" endtime="20231127 16:45:11.552"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231127 16:45:11.553" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\810fd3ae-4853-4497-9f77-dc76953d99be"}</msg>
<msg timestamp="20231127 16:45:12.766" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\810fd3ae-4853-4497-9f77-dc76953d99be"}</msg>
<status status="PASS" starttime="20231127 16:45:11.552" endtime="20231127 16:45:12.767"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231127 16:45:16.679" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231127 16:45:16.680" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231127 16:45:12.768" endtime="20231127 16:45:16.681"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231127 16:45:16.691" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231127 16:45:16.684" endtime="20231127 16:45:16.691"/>
</kw>
<status status="PASS" starttime="20231127 16:45:11.548" endtime="20231127 16:45:16.693"/>
</kw>
<kw name="Create a category with &quot;Cate1&quot; name" sourcename="Create a category with &quot;${name}&quot; name">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:16.700" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:16.699" endtime="20231127 16:45:16.701"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:16.703" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:16.705" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:16.702" endtime="20231127 16:45:16.707"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:16.710" endtime="20231127 16:45:16.711"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:16.708" endtime="20231127 16:45:16.712"/>
</branch>
<status status="PASS" starttime="20231127 16:45:16.707" endtime="20231127 16:45:16.712"/>
</if>
<msg timestamp="20231127 16:45:16.713" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:16.697" endtime="20231127 16:45:16.714"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:16.817" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:16.716" endtime="20231127 16:45:16.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:16.832" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:16.830" endtime="20231127 16:45:16.832"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:16.936" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:16.834" endtime="20231127 16:45:16.938"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:16.941" endtime="20231127 16:45:16.942"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:16.939" endtime="20231127 16:45:16.942"/>
</branch>
<status status="PASS" starttime="20231127 16:45:16.939" endtime="20231127 16:45:16.943"/>
</if>
<status status="PASS" starttime="20231127 16:45:16.714" endtime="20231127 16:45:16.943"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:17.046" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:16.944" endtime="20231127 16:45:17.046"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Post" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Post&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:17.064" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:17.049" endtime="20231127 16:45:17.064"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231127 16:45:17.067" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231127 16:45:17.065" endtime="20231127 16:45:17.067"/>
</kw>
<status status="FAIL" starttime="20231127 16:45:17.048" endtime="20231127 16:45:17.068"/>
</kw>
<msg timestamp="20231127 16:45:17.069" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231127 16:45:17.047" endtime="20231127 16:45:17.070"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.075" endtime="20231127 16:45:17.075"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.076" endtime="20231127 16:45:17.077"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231127 16:45:17.079" endtime="20231127 16:45:17.080"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231127 16:45:17.080" endtime="20231127 16:45:17.081"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231127 16:45:17.082" endtime="20231127 16:45:17.082"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231127 16:45:17.083" endtime="20231127 16:45:17.084"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231127 16:45:17.085" endtime="20231127 16:45:17.085"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.078" endtime="20231127 16:45:17.086"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231127 16:45:17.091" endtime="20231127 16:45:17.092"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.090" endtime="20231127 16:45:17.092"/>
</branch>
<status status="NOT RUN" starttime="20231127 16:45:17.078" endtime="20231127 16:45:17.093"/>
</if>
<status status="NOT RUN" starttime="20231127 16:45:17.073" endtime="20231127 16:45:17.093"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Post&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:17.100" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:17.099" endtime="20231127 16:45:17.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:17.101" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:17.101" endtime="20231127 16:45:17.102"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:17.108" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:17.102" endtime="20231127 16:45:17.108"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.110" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:17.110" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:17.109" endtime="20231127 16:45:17.110"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:17.112" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:17.111" endtime="20231127 16:45:17.113"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.114" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:17.115" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:17.114" endtime="20231127 16:45:17.115"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.117" endtime="20231127 16:45:17.117"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.118" endtime="20231127 16:45:17.126"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.116" endtime="20231127 16:45:17.127"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.130" endtime="20231127 16:45:17.131"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.132" endtime="20231127 16:45:17.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.133" endtime="20231127 16:45:17.134"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.129" endtime="20231127 16:45:17.134"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.148" endtime="20231127 16:45:17.149"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.149" endtime="20231127 16:45:17.150"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.147" endtime="20231127 16:45:17.150"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.152" endtime="20231127 16:45:17.152"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.157" endtime="20231127 16:45:17.157"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.151" endtime="20231127 16:45:17.158"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.160" endtime="20231127 16:45:17.160"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.159" endtime="20231127 16:45:17.161"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:17.162" endtime="20231127 16:45:17.163"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.161" endtime="20231127 16:45:17.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.165" endtime="20231127 16:45:17.165"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.166" endtime="20231127 16:45:17.166"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.167" endtime="20231127 16:45:17.168"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.164" endtime="20231127 16:45:17.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.173" endtime="20231127 16:45:17.175"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.169" endtime="20231127 16:45:17.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.177" endtime="20231127 16:45:17.178"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.176" endtime="20231127 16:45:17.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.197" endtime="20231127 16:45:17.198"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.196" endtime="20231127 16:45:17.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.200" endtime="20231127 16:45:17.200"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.199" endtime="20231127 16:45:17.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.202" endtime="20231127 16:45:17.206"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.201" endtime="20231127 16:45:17.207"/>
</branch>
<status status="PASS" starttime="20231127 16:45:17.116" endtime="20231127 16:45:17.207"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.209" level="INFO">Length is 15</msg>
<msg timestamp="20231127 16:45:17.209" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231127 16:45:17.208" endtime="20231127 16:45:17.209"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:17.213" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231127 16:45:17.211" endtime="20231127 16:45:17.213"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.210" endtime="20231127 16:45:17.214"/>
</branch>
<status status="PASS" starttime="20231127 16:45:17.210" endtime="20231127 16:45:17.214"/>
</if>
<msg timestamp="20231127 16:45:17.215" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231127 16:45:17.097" endtime="20231127 16:45:17.216"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:17.218" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:17.216" endtime="20231127 16:45:17.218"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:17.219" endtime="20231127 16:45:17.348"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:17.349" endtime="20231127 16:45:17.422"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:17.425" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:17.424" endtime="20231127 16:45:17.496"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:17.578" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231127 16:45:17.579" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231127 16:45:17.498" endtime="20231127 16:45:17.580"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.582" endtime="20231127 16:45:17.583"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.584" endtime="20231127 16:45:17.584"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.580" endtime="20231127 16:45:17.585"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:17.580" endtime="20231127 16:45:17.588"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:17.590" endtime="20231127 16:45:17.670"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.674" level="INFO">Length is 15</msg>
<msg timestamp="20231127 16:45:17.674" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231127 16:45:17.673" endtime="20231127 16:45:17.675"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:17.678" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231127 16:45:17.676" endtime="20231127 16:45:17.678"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.675" endtime="20231127 16:45:17.679"/>
</branch>
<status status="PASS" starttime="20231127 16:45:17.675" endtime="20231127 16:45:17.680"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:17.680" endtime="20231127 16:45:17.697"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.096" endtime="20231127 16:45:17.698"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:17.705" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:17.702" endtime="20231127 16:45:17.706"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:17.708" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:17.707" endtime="20231127 16:45:17.708"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:17.710" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:17.709" endtime="20231127 16:45:17.711"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.713" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:17.714" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:17.712" endtime="20231127 16:45:17.714"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:17.716" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:17.715" endtime="20231127 16:45:17.717"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.719" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:17.723" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:17.718" endtime="20231127 16:45:17.723"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.725" endtime="20231127 16:45:17.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.726" endtime="20231127 16:45:17.727"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.724" endtime="20231127 16:45:17.727"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.729" endtime="20231127 16:45:17.729"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.730" endtime="20231127 16:45:17.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.732" endtime="20231127 16:45:17.732"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.728" endtime="20231127 16:45:17.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.734" endtime="20231127 16:45:17.735"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.736" endtime="20231127 16:45:17.740"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.733" endtime="20231127 16:45:17.740"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.742" endtime="20231127 16:45:17.743"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.744" endtime="20231127 16:45:17.745"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.741" endtime="20231127 16:45:17.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.747" endtime="20231127 16:45:17.748"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.746" endtime="20231127 16:45:17.749"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:17.750" endtime="20231127 16:45:17.751"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.749" endtime="20231127 16:45:17.752"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.757" endtime="20231127 16:45:17.757"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.758" endtime="20231127 16:45:17.811"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.812" endtime="20231127 16:45:17.813"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.752" endtime="20231127 16:45:17.814"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.818" endtime="20231127 16:45:17.819"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.816" endtime="20231127 16:45:17.823"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.825" endtime="20231127 16:45:17.825"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.824" endtime="20231127 16:45:17.826"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.827" endtime="20231127 16:45:17.828"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.826" endtime="20231127 16:45:17.829"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.830" endtime="20231127 16:45:17.831"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.829" endtime="20231127 16:45:17.831"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:17.832" endtime="20231127 16:45:17.833"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:17.832" endtime="20231127 16:45:17.833"/>
</branch>
<status status="PASS" starttime="20231127 16:45:17.724" endtime="20231127 16:45:17.834"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:17.836" level="INFO">Length is 6</msg>
<msg timestamp="20231127 16:45:17.839" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231127 16:45:17.835" endtime="20231127 16:45:17.840"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:17.843" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231127 16:45:17.842" endtime="20231127 16:45:17.843"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.841" endtime="20231127 16:45:17.844"/>
</branch>
<status status="PASS" starttime="20231127 16:45:17.840" endtime="20231127 16:45:17.844"/>
</if>
<msg timestamp="20231127 16:45:17.845" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231127 16:45:17.701" endtime="20231127 16:45:17.845"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:17.847" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:17.846" endtime="20231127 16:45:17.847"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:17.848" endtime="20231127 16:45:18.008"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:18.010" endtime="20231127 16:45:18.052"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:18.057" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:18.055" endtime="20231127 16:45:18.109"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:18.158" level="INFO">Text: '123123'</msg>
<msg timestamp="20231127 16:45:18.159" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231127 16:45:18.110" endtime="20231127 16:45:18.159"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.161" endtime="20231127 16:45:18.162"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.163" endtime="20231127 16:45:18.164"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:18.160" endtime="20231127 16:45:18.164"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:18.160" endtime="20231127 16:45:18.165"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:18.166" endtime="20231127 16:45:18.250"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:18.252" level="INFO">Length is 6</msg>
<msg timestamp="20231127 16:45:18.254" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231127 16:45:18.251" endtime="20231127 16:45:18.256"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:18.260" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231127 16:45:18.258" endtime="20231127 16:45:18.260"/>
</kw>
<status status="PASS" starttime="20231127 16:45:18.257" endtime="20231127 16:45:18.261"/>
</branch>
<status status="PASS" starttime="20231127 16:45:18.257" endtime="20231127 16:45:18.261"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:18.262" endtime="20231127 16:45:18.274"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.699" endtime="20231127 16:45:18.275"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:18.378" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:18.277" endtime="20231127 16:45:18.378"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:18.393" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:18.379" endtime="20231127 16:45:18.393"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:18.395" endtime="20231127 16:45:18.523"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:18.527" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:18.526" endtime="20231127 16:45:18.527"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:18.541" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:18.528" endtime="20231127 16:45:18.541"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.543" endtime="20231127 16:45:18.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.546" endtime="20231127 16:45:18.546"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:18.548" endtime="20231127 16:45:18.550"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:18.542" endtime="20231127 16:45:18.551"/>
</branch>
<status status="PASS" starttime="20231127 16:45:18.542" endtime="20231127 16:45:18.552"/>
</if>
<status status="PASS" starttime="20231127 16:45:18.524" endtime="20231127 16:45:18.554"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231127 16:45:18.581" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:18.581" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:18.602" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:18.602" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:18.614" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231127 16:45:18.555" endtime="20231127 16:45:18.615"/>
</kw>
<status status="PASS" starttime="20231127 16:45:18.394" endtime="20231127 16:45:18.615"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.617" endtime="20231127 16:45:18.617"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231127 16:45:18.618" endtime="20231127 16:45:18.618"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.620" endtime="20231127 16:45:18.621"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:18.616" endtime="20231127 16:45:18.622"/>
</branch>
<status status="PASS" starttime="20231127 16:45:18.394" endtime="20231127 16:45:18.623"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:18.624" endtime="20231127 16:45:18.635"/>
</kw>
<status status="PASS" starttime="20231127 16:45:18.276" endtime="20231127 16:45:18.638"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:18.641" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:18.640" endtime="20231127 16:45:18.642"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:18.644" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:18.644" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:18.643" endtime="20231127 16:45:18.644"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:18.646" endtime="20231127 16:45:18.647"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:18.645" endtime="20231127 16:45:18.648"/>
</branch>
<status status="PASS" starttime="20231127 16:45:18.645" endtime="20231127 16:45:18.649"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:19.029" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231127 16:45:18.661" endtime="20231127 16:45:19.030"/>
</kw>
<status status="PASS" starttime="20231127 16:45:18.656" endtime="20231127 16:45:19.031"/>
</kw>
<status status="PASS" starttime="20231127 16:45:18.650" endtime="20231127 16:45:19.031"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:19.033" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231127 16:45:19.032" endtime="20231127 16:45:19.033"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231127 16:45:19.552" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231127 16:45:19.552" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231127 16:45:19.553" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231127 16:45:19.038" endtime="20231127 16:45:19.566"/>
</kw>
<status status="FAIL" starttime="20231127 16:45:19.035" endtime="20231127 16:45:19.567"/>
</kw>
<msg timestamp="20231127 16:45:19.567" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231127 16:45:19.034" endtime="20231127 16:45:19.568"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:19.571" endtime="20231127 16:45:19.572"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:19.568" endtime="20231127 16:45:19.573"/>
</branch>
<status status="PASS" starttime="20231127 16:45:19.568" endtime="20231127 16:45:19.573"/>
</if>
<status status="PASS" starttime="20231127 16:45:18.638" endtime="20231127 16:45:19.574"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.095" endtime="20231127 16:45:19.574"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:19.575" endtime="20231127 16:45:20.595"/>
</kw>
<status status="PASS" starttime="20231127 16:45:19.575" endtime="20231127 16:45:20.595"/>
</kw>
<kw name="Click &quot;Post&quot; sub menu to &quot;/post&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:20.697" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:20.597" endtime="20231127 16:45:20.697"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:20.698" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:20.697" endtime="20231127 16:45:20.698"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:20.708" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:20.698" endtime="20231127 16:45:20.708"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:20.710" endtime="20231127 16:45:20.711"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:20.709" endtime="20231127 16:45:20.711"/>
</branch>
<status status="PASS" starttime="20231127 16:45:20.709" endtime="20231127 16:45:20.712"/>
</if>
<status status="PASS" starttime="20231127 16:45:20.596" endtime="20231127 16:45:20.712"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:20.713" endtime="20231127 16:45:21.076"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231127 16:45:21.082" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/post</msg>
<status status="PASS" starttime="20231127 16:45:21.077" endtime="20231127 16:45:21.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231127 16:45:21.083" endtime="20231127 16:45:21.084"/>
</kw>
<status status="PASS" starttime="20231127 16:45:20.596" endtime="20231127 16:45:21.085"/>
</kw>
<status status="PASS" starttime="20231127 16:45:17.094" endtime="20231127 16:45:21.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//*[contains(@class,'ant-spin-container')]//span[contains(text(),'${name}')]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:21.089" level="INFO">${element} = //*[contains(@class,'ant-spin-container')]//span[contains(text(),'Cate1')]</msg>
<status status="PASS" starttime="20231127 16:45:21.088" endtime="20231127 16:45:21.090"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:21.314" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:21.091" endtime="20231127 16:45:21.314"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &lt; 1">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231127 16:45:21.316" endtime="20231127 16:45:21.317"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;${name}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231127 16:45:21.318" endtime="20231127 16:45:21.318"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<status status="NOT RUN" starttime="20231127 16:45:21.321" endtime="20231127 16:45:21.321"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231127 16:45:21.322" endtime="20231127 16:45:21.322"/>
</kw>
<kw name="User look message &quot;Thêm mới danh mục bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<status status="NOT RUN" starttime="20231127 16:45:21.323" endtime="20231127 16:45:21.324"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:21.315" endtime="20231127 16:45:21.325"/>
</branch>
<branch type="ELSE">
<kw name="Select on the &quot;${name}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:21.428" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:21.328" endtime="20231127 16:45:21.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:21.430" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:21.429" endtime="20231127 16:45:21.430"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:21.474" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:21.431" endtime="20231127 16:45:21.475"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:21.477" endtime="20231127 16:45:21.479"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:21.476" endtime="20231127 16:45:21.480"/>
</branch>
<status status="PASS" starttime="20231127 16:45:21.475" endtime="20231127 16:45:21.481"/>
</if>
<status status="PASS" starttime="20231127 16:45:21.327" endtime="20231127 16:45:21.481"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:21.484" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:21.483" endtime="20231127 16:45:21.485"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:21.489" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:21.490" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:21.486" endtime="20231127 16:45:21.490"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:21.496" endtime="20231127 16:45:21.496"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:21.491" endtime="20231127 16:45:21.497"/>
</branch>
<status status="PASS" starttime="20231127 16:45:21.491" endtime="20231127 16:45:21.497"/>
</if>
<msg timestamp="20231127 16:45:21.498" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:21.482" endtime="20231127 16:45:21.498"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231127 16:45:21.501" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231127 16:45:21.499" endtime="20231127 16:45:21.502"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:21.504" endtime="20231127 16:45:21.712"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:21.713" endtime="20231127 16:45:22.434"/>
</kw>
<status status="PASS" starttime="20231127 16:45:21.326" endtime="20231127 16:45:22.434"/>
</kw>
<status status="PASS" starttime="20231127 16:45:21.325" endtime="20231127 16:45:22.434"/>
</branch>
<status status="PASS" starttime="20231127 16:45:21.314" endtime="20231127 16:45:22.435"/>
</if>
<status status="PASS" starttime="20231127 16:45:17.094" endtime="20231127 16:45:22.435"/>
</branch>
<status status="PASS" starttime="20231127 16:45:17.073" endtime="20231127 16:45:22.436"/>
</if>
<status status="PASS" starttime="20231127 16:45:16.696" endtime="20231127 16:45:22.436"/>
</kw>
<kw name="Create a test post with &quot;Cate1&quot; type" sourcename="Create a test post with &quot;${type}&quot; type">
<kw name="Click &quot;Tạo mới bài viết&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:22.542" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:22.440" endtime="20231127 16:45:22.542"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:22.550" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:22.542" endtime="20231127 16:45:22.550"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:22.551" endtime="20231127 16:45:23.076"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:23.079" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:23.078" endtime="20231127 16:45:23.080"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:23.114" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:23.081" endtime="20231127 16:45:23.115"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.116" endtime="20231127 16:45:23.117"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.117" endtime="20231127 16:45:23.118"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:23.119" endtime="20231127 16:45:23.120"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.115" endtime="20231127 16:45:23.121"/>
</branch>
<status status="PASS" starttime="20231127 16:45:23.115" endtime="20231127 16:45:23.121"/>
</if>
<status status="PASS" starttime="20231127 16:45:23.077" endtime="20231127 16:45:23.121"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231127 16:45:23.191" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:23.192" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:23.220" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:23.221" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:23.231" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231127 16:45:23.122" endtime="20231127 16:45:23.231"/>
</kw>
<status status="PASS" starttime="20231127 16:45:22.551" endtime="20231127 16:45:23.232"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.233" endtime="20231127 16:45:23.234"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231127 16:45:23.234" endtime="20231127 16:45:23.235"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.236" endtime="20231127 16:45:23.237"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.233" endtime="20231127 16:45:23.238"/>
</branch>
<status status="PASS" starttime="20231127 16:45:22.551" endtime="20231127 16:45:23.238"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:23.239" endtime="20231127 16:45:23.247"/>
</kw>
<status status="PASS" starttime="20231127 16:45:22.439" endtime="20231127 16:45:23.248"/>
</kw>
<kw name="Click radio &quot;Loại editor&quot; in line &quot;Block&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231127 16:45:23.251" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại editor"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "Block"...</msg>
<status status="PASS" starttime="20231127 16:45:23.250" endtime="20231127 16:45:23.251"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:23.252" endtime="20231127 16:45:23.473"/>
</kw>
<status status="PASS" starttime="20231127 16:45:23.249" endtime="20231127 16:45:23.473"/>
</kw>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:23.478" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:23.477" endtime="20231127 16:45:23.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:23.480" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:23.479" endtime="20231127 16:45:23.481"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:23.484" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:23.482" endtime="20231127 16:45:23.485"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:23.489" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:23.489" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:23.486" endtime="20231127 16:45:23.490"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:23.492" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:23.490" endtime="20231127 16:45:23.493"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:23.495" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:23.495" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:23.494" endtime="20231127 16:45:23.495"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.496" endtime="20231127 16:45:23.497"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.498" endtime="20231127 16:45:23.498"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.496" endtime="20231127 16:45:23.499"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.500" endtime="20231127 16:45:23.500"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.500" endtime="20231127 16:45:23.501"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.501" endtime="20231127 16:45:23.501"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.499" endtime="20231127 16:45:23.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.504" endtime="20231127 16:45:23.505"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.507" endtime="20231127 16:45:23.508"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.503" endtime="20231127 16:45:23.509"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.511" endtime="20231127 16:45:23.512"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.512" endtime="20231127 16:45:23.513"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.509" endtime="20231127 16:45:23.513"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.514" endtime="20231127 16:45:23.515"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.514" endtime="20231127 16:45:23.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:23.516" endtime="20231127 16:45:23.517"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.516" endtime="20231127 16:45:23.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.530" endtime="20231127 16:45:23.530"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.531" endtime="20231127 16:45:23.532"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.532" endtime="20231127 16:45:23.533"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.529" endtime="20231127 16:45:23.534"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.539" endtime="20231127 16:45:23.539"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.535" endtime="20231127 16:45:23.540"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.541" endtime="20231127 16:45:23.542"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.540" endtime="20231127 16:45:23.544"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.545" endtime="20231127 16:45:23.546"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.544" endtime="20231127 16:45:23.546"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.548" endtime="20231127 16:45:23.548"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.547" endtime="20231127 16:45:23.549"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:23.550" endtime="20231127 16:45:23.551"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:23.549" endtime="20231127 16:45:23.551"/>
</branch>
<status status="PASS" starttime="20231127 16:45:23.496" endtime="20231127 16:45:23.553"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:23.564" level="INFO">Length is 5</msg>
<msg timestamp="20231127 16:45:23.565" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231127 16:45:23.562" endtime="20231127 16:45:23.566"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:23.573" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:23.571" endtime="20231127 16:45:23.573"/>
</kw>
<status status="PASS" starttime="20231127 16:45:23.568" endtime="20231127 16:45:23.574"/>
</branch>
<status status="PASS" starttime="20231127 16:45:23.567" endtime="20231127 16:45:23.575"/>
</if>
<msg timestamp="20231127 16:45:23.577" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:23.476" endtime="20231127 16:45:23.578"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231127 16:45:23.581" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231127 16:45:23.580" endtime="20231127 16:45:23.582"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:23.583" endtime="20231127 16:45:23.791"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231127 16:45:23.793" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231127 16:45:23.792" endtime="20231127 16:45:23.794"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:23.796" level="INFO">Fills the text 'Cate1' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:23.795" endtime="20231127 16:45:23.850"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:23.851" endtime="20231127 16:45:24.159"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:24.161" level="INFO">Length is 5</msg>
<msg timestamp="20231127 16:45:24.161" level="INFO">${cnt} = 5</msg>
<status status="PASS" starttime="20231127 16:45:24.160" endtime="20231127 16:45:24.162"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:24.164" level="INFO">${STATE["Chuyên mục"]} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:24.163" endtime="20231127 16:45:24.165"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.162" endtime="20231127 16:45:24.165"/>
</branch>
<status status="PASS" starttime="20231127 16:45:24.162" endtime="20231127 16:45:24.166"/>
</if>
<status status="PASS" starttime="20231127 16:45:23.474" endtime="20231127 16:45:24.166"/>
</kw>
<kw name="Select file in &quot;Ảnh cover&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231127 16:45:24.171" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh cover"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231127 16:45:24.168" endtime="20231127 16:45:24.172"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231127 16:45:24.173" endtime="20231127 16:45:24.232"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:24.233" endtime="20231127 16:45:24.241"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.167" endtime="20231127 16:45:24.242"/>
</kw>
<kw name="Select file in &quot;Ảnh thumbnail&quot; with &quot;image.jpg&quot;" library="common" sourcename="Select file in &quot;${name}&quot; with &quot;${image_name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[@type = "file"]</arg>
<msg timestamp="20231127 16:45:24.246" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ảnh thumbnail"]/../../*[contains(@class, "ant-form-item")]//input[@type = "file"]</msg>
<status status="PASS" starttime="20231127 16:45:24.244" endtime="20231127 16:45:24.246"/>
</kw>
<kw name="Upload File By Selector" library="Browser">
<arg>${element}</arg>
<arg>Auto_Web/upload/${image_name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Uploads file from `path` to file input element matched by selector.</doc>
<status status="PASS" starttime="20231127 16:45:24.247" endtime="20231127 16:45:24.300"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:24.301" endtime="20231127 16:45:24.312"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.242" endtime="20231127 16:45:24.313"/>
</kw>
<kw name="Click radio &quot;Định dạng bài viết&quot; in line &quot;Longform&quot;" library="common" sourcename="Click radio &quot;${name}&quot; in line &quot;${text}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), "${text}")]</arg>
<msg timestamp="20231127 16:45:24.317" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Định dạng bài viết"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-radio-button-wrapper")]/span[contains(text(), ...</msg>
<status status="PASS" starttime="20231127 16:45:24.315" endtime="20231127 16:45:24.317"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:24.321" endtime="20231127 16:45:24.415"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.313" endtime="20231127 16:45:24.416"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Background Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:24.420" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:24.418" endtime="20231127 16:45:24.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:24.426" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:24.425" endtime="20231127 16:45:24.426"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:24.428" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:24.427" endtime="20231127 16:45:24.428"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:24.430" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:24.430" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:24.429" endtime="20231127 16:45:24.431"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:24.432" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:24.432" endtime="20231127 16:45:24.433"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:24.434" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:24.434" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:24.433" endtime="20231127 16:45:24.434"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.439" endtime="20231127 16:45:24.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.445" endtime="20231127 16:45:24.446"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.434" endtime="20231127 16:45:24.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.448" endtime="20231127 16:45:24.448"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.449" endtime="20231127 16:45:24.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.451" endtime="20231127 16:45:24.453"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.447" endtime="20231127 16:45:24.454"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.456" endtime="20231127 16:45:24.457"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.458" endtime="20231127 16:45:24.458"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.455" endtime="20231127 16:45:24.459"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.461" endtime="20231127 16:45:24.463"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.463" endtime="20231127 16:45:24.464"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.460" endtime="20231127 16:45:24.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.466" endtime="20231127 16:45:24.466"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.465" endtime="20231127 16:45:24.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:24.470" endtime="20231127 16:45:24.471"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.467" endtime="20231127 16:45:24.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.472" endtime="20231127 16:45:24.472"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.473" endtime="20231127 16:45:24.473"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.473" endtime="20231127 16:45:24.474"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.471" endtime="20231127 16:45:24.475"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231127 16:45:24.478" level="INFO">${new_text} = #55eebb</msg>
<status status="PASS" starttime="20231127 16:45:24.476" endtime="20231127 16:45:24.478"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.475" endtime="20231127 16:45:24.479"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.480" endtime="20231127 16:45:24.481"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.480" endtime="20231127 16:45:24.482"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.483" endtime="20231127 16:45:24.483"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.482" endtime="20231127 16:45:24.484"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.487" endtime="20231127 16:45:24.487"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.485" endtime="20231127 16:45:24.488"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:24.489" endtime="20231127 16:45:24.489"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:24.488" endtime="20231127 16:45:24.489"/>
</branch>
<status status="PASS" starttime="20231127 16:45:24.434" endtime="20231127 16:45:24.490"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:24.490" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:24.491" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:24.490" endtime="20231127 16:45:24.491"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:24.493" level="INFO">${text} = #55eebb</msg>
<status status="PASS" starttime="20231127 16:45:24.492" endtime="20231127 16:45:24.493"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.491" endtime="20231127 16:45:24.494"/>
</branch>
<status status="PASS" starttime="20231127 16:45:24.491" endtime="20231127 16:45:24.494"/>
</if>
<msg timestamp="20231127 16:45:24.495" level="INFO">${text} = #55eebb</msg>
<status status="PASS" starttime="20231127 16:45:24.417" endtime="20231127 16:45:24.495"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:24.530" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Background Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:24.527" endtime="20231127 16:45:24.544"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:24.546" endtime="20231127 16:45:24.817"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:24.819" endtime="20231127 16:45:24.915"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:24.918" level="INFO">Fills the text '#55eebb' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:24.916" endtime="20231127 16:45:24.983"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:25.034" level="INFO">Text: '#55eebb'</msg>
<msg timestamp="20231127 16:45:25.034" level="INFO">${condition} = #55eebb</msg>
<status status="PASS" starttime="20231127 16:45:24.984" endtime="20231127 16:45:25.035"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.040" endtime="20231127 16:45:25.040"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.041" endtime="20231127 16:45:25.042"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.038" endtime="20231127 16:45:25.042"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:25.038" endtime="20231127 16:45:25.043"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:25.044" endtime="20231127 16:45:25.113"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:25.115" level="INFO">Length is 7</msg>
<msg timestamp="20231127 16:45:25.116" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231127 16:45:25.114" endtime="20231127 16:45:25.116"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:25.123" level="INFO">${STATE["Background Color"]} = #55eebb</msg>
<status status="PASS" starttime="20231127 16:45:25.120" endtime="20231127 16:45:25.123"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.117" endtime="20231127 16:45:25.124"/>
</branch>
<status status="PASS" starttime="20231127 16:45:25.117" endtime="20231127 16:45:25.125"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:25.125" endtime="20231127 16:45:25.132"/>
</kw>
<status status="PASS" starttime="20231127 16:45:24.416" endtime="20231127 16:45:25.133"/>
</kw>
<kw name="Enter &quot;color&quot; in &quot;Title Fore Color&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:25.140" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:25.139" endtime="20231127 16:45:25.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:25.142" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:25.141" endtime="20231127 16:45:25.142"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:25.145" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:25.143" endtime="20231127 16:45:25.145"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:25.147" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:25.147" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:25.146" endtime="20231127 16:45:25.148"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:25.149" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:25.148" endtime="20231127 16:45:25.149"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:25.151" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:25.151" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:25.150" endtime="20231127 16:45:25.154"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.157" endtime="20231127 16:45:25.158"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.159" endtime="20231127 16:45:25.159"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.156" endtime="20231127 16:45:25.160"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.161" endtime="20231127 16:45:25.162"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.163" endtime="20231127 16:45:25.164"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.165" endtime="20231127 16:45:25.165"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.160" endtime="20231127 16:45:25.166"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.168" endtime="20231127 16:45:25.171"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.172" endtime="20231127 16:45:25.173"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.167" endtime="20231127 16:45:25.173"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.175" endtime="20231127 16:45:25.175"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.176" endtime="20231127 16:45:25.177"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.174" endtime="20231127 16:45:25.178"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.179" endtime="20231127 16:45:25.180"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.178" endtime="20231127 16:45:25.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:25.182" endtime="20231127 16:45:25.183"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.181" endtime="20231127 16:45:25.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.184" endtime="20231127 16:45:25.184"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.189" endtime="20231127 16:45:25.189"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.190" endtime="20231127 16:45:25.191"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.183" endtime="20231127 16:45:25.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<msg timestamp="20231127 16:45:25.195" level="INFO">${new_text} = #1133ee</msg>
<status status="PASS" starttime="20231127 16:45:25.194" endtime="20231127 16:45:25.195"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.192" endtime="20231127 16:45:25.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.197" endtime="20231127 16:45:25.197"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.196" endtime="20231127 16:45:25.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.199" endtime="20231127 16:45:25.200"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.198" endtime="20231127 16:45:25.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.204" endtime="20231127 16:45:25.206"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.201" endtime="20231127 16:45:25.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.207" endtime="20231127 16:45:25.208"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.207" endtime="20231127 16:45:25.208"/>
</branch>
<status status="PASS" starttime="20231127 16:45:25.156" endtime="20231127 16:45:25.209"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:25.210" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:25.211" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:25.209" endtime="20231127 16:45:25.211"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:25.214" level="INFO">${text} = #1133ee</msg>
<status status="PASS" starttime="20231127 16:45:25.213" endtime="20231127 16:45:25.214"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.212" endtime="20231127 16:45:25.215"/>
</branch>
<status status="PASS" starttime="20231127 16:45:25.211" endtime="20231127 16:45:25.215"/>
</if>
<msg timestamp="20231127 16:45:25.216" level="INFO">${text} = #1133ee</msg>
<status status="PASS" starttime="20231127 16:45:25.135" endtime="20231127 16:45:25.216"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:25.222" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Title Fore Color"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:25.217" endtime="20231127 16:45:25.222"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:25.223" endtime="20231127 16:45:25.392"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:25.393" endtime="20231127 16:45:25.448"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:25.450" level="INFO">Fills the text '#1133ee' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:25.449" endtime="20231127 16:45:25.516"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:25.554" level="INFO">Text: '#1133ee'</msg>
<msg timestamp="20231127 16:45:25.555" level="INFO">${condition} = #1133ee</msg>
<status status="PASS" starttime="20231127 16:45:25.516" endtime="20231127 16:45:25.555"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.557" endtime="20231127 16:45:25.558"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:25.559" endtime="20231127 16:45:25.559"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:25.556" endtime="20231127 16:45:25.560"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:25.556" endtime="20231127 16:45:25.560"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:25.561" endtime="20231127 16:45:25.629"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:25.631" level="INFO">Length is 7</msg>
<msg timestamp="20231127 16:45:25.632" level="INFO">${cnt} = 7</msg>
<status status="PASS" starttime="20231127 16:45:25.630" endtime="20231127 16:45:25.632"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:25.638" level="INFO">${STATE["Title Fore Color"]} = #1133ee</msg>
<status status="PASS" starttime="20231127 16:45:25.634" endtime="20231127 16:45:25.638"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.633" endtime="20231127 16:45:25.639"/>
</branch>
<status status="PASS" starttime="20231127 16:45:25.633" endtime="20231127 16:45:25.639"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:25.640" endtime="20231127 16:45:25.649"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.133" endtime="20231127 16:45:25.649"/>
</kw>
<kw name="Click switch &quot;Show Title&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231127 16:45:25.655" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Show Title"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231127 16:45:25.653" endtime="20231127 16:45:25.655"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:25.656" endtime="20231127 16:45:25.779"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.650" endtime="20231127 16:45:25.780"/>
</kw>
<kw name="Click switch &quot;Ghim&quot; to change button status" library="common" sourcename="Click switch &quot;${name}&quot; to change button status">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[contains(@class, "ant-switch")]</arg>
<msg timestamp="20231127 16:45:25.782" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Ghim"]/../../*[contains(@class, "ant-form-item")]//button[contains(@class, "ant-switch")]</msg>
<status status="PASS" starttime="20231127 16:45:25.781" endtime="20231127 16:45:25.783"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:25.784" endtime="20231127 16:45:26.030"/>
</kw>
<status status="PASS" starttime="20231127 16:45:25.780" endtime="20231127 16:45:26.031"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:26.034" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:26.033" endtime="20231127 16:45:26.034"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:26.037" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:26.034" endtime="20231127 16:45:26.038"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:26.040" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:26.039" endtime="20231127 16:45:26.040"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.042" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:26.042" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:26.041" endtime="20231127 16:45:26.043"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:26.045" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:26.044" endtime="20231127 16:45:26.046"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.048" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:26.048" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:26.047" endtime="20231127 16:45:26.048"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.050" endtime="20231127 16:45:26.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.055" endtime="20231127 16:45:26.056"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.049" endtime="20231127 16:45:26.056"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.058" endtime="20231127 16:45:26.059"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.060" endtime="20231127 16:45:26.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.061" endtime="20231127 16:45:26.062"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.057" endtime="20231127 16:45:26.062"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.063" endtime="20231127 16:45:26.064"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.065" endtime="20231127 16:45:26.065"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.063" endtime="20231127 16:45:26.072"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.074" endtime="20231127 16:45:26.075"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.076" endtime="20231127 16:45:26.077"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.072" endtime="20231127 16:45:26.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.079" endtime="20231127 16:45:26.080"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.078" endtime="20231127 16:45:26.081"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:26.082" endtime="20231127 16:45:26.083"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.081" endtime="20231127 16:45:26.084"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.089" endtime="20231127 16:45:26.090"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.091" endtime="20231127 16:45:26.092"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.092" endtime="20231127 16:45:26.093"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.084" endtime="20231127 16:45:26.094"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.096" endtime="20231127 16:45:26.097"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.095" endtime="20231127 16:45:26.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.099" endtime="20231127 16:45:26.100"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.098" endtime="20231127 16:45:26.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.106" endtime="20231127 16:45:26.106"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.101" endtime="20231127 16:45:26.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.109" endtime="20231127 16:45:26.110"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.108" endtime="20231127 16:45:26.110"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.112" endtime="20231127 16:45:26.113"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.111" endtime="20231127 16:45:26.114"/>
</branch>
<status status="PASS" starttime="20231127 16:45:26.049" endtime="20231127 16:45:26.114"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.117" level="INFO">Length is 13</msg>
<msg timestamp="20231127 16:45:26.118" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231127 16:45:26.115" endtime="20231127 16:45:26.118"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:26.127" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:26.125" endtime="20231127 16:45:26.127"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.124" endtime="20231127 16:45:26.128"/>
</branch>
<status status="PASS" starttime="20231127 16:45:26.124" endtime="20231127 16:45:26.128"/>
</if>
<msg timestamp="20231127 16:45:26.129" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:26.032" endtime="20231127 16:45:26.129"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:26.132" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:26.130" endtime="20231127 16:45:26.132"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:26.133" endtime="20231127 16:45:26.281"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:26.281" endtime="20231127 16:45:26.323"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:26.325" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:26.324" endtime="20231127 16:45:26.382"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:26.425" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231127 16:45:26.425" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:26.383" endtime="20231127 16:45:26.426"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.428" endtime="20231127 16:45:26.429"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.430" endtime="20231127 16:45:26.430"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.426" endtime="20231127 16:45:26.431"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:26.426" endtime="20231127 16:45:26.431"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:26.432" endtime="20231127 16:45:26.497"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.499" level="INFO">Length is 13</msg>
<msg timestamp="20231127 16:45:26.499" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231127 16:45:26.498" endtime="20231127 16:45:26.499"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:26.504" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:26.501" endtime="20231127 16:45:26.504"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.500" endtime="20231127 16:45:26.505"/>
</branch>
<status status="PASS" starttime="20231127 16:45:26.500" endtime="20231127 16:45:26.506"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:26.506" endtime="20231127 16:45:26.524"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.031" endtime="20231127 16:45:26.525"/>
</kw>
<kw name="Enter &quot;text&quot; in textarea &quot;Custom CSS&quot; with &quot;{color:1px;}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:26.529" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:26.528" endtime="20231127 16:45:26.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:26.532" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:26.531" endtime="20231127 16:45:26.532"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:26.534" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:26.533" endtime="20231127 16:45:26.535"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.539" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:26.540" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:26.537" endtime="20231127 16:45:26.540"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:26.542" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:26.541" endtime="20231127 16:45:26.543"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.544" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:26.545" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:26.543" endtime="20231127 16:45:26.545"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.546" endtime="20231127 16:45:26.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.548" endtime="20231127 16:45:26.548"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.546" endtime="20231127 16:45:26.549"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.550" endtime="20231127 16:45:26.551"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.554" endtime="20231127 16:45:26.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.556" endtime="20231127 16:45:26.557"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.549" endtime="20231127 16:45:26.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.559" endtime="20231127 16:45:26.559"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.560" endtime="20231127 16:45:26.560"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.558" endtime="20231127 16:45:26.561"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.562" endtime="20231127 16:45:26.563"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.563" endtime="20231127 16:45:26.564"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.561" endtime="20231127 16:45:26.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.566" endtime="20231127 16:45:26.567"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.565" endtime="20231127 16:45:26.567"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:26.571" endtime="20231127 16:45:26.572"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.567" endtime="20231127 16:45:26.572"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.574" endtime="20231127 16:45:26.574"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.575" endtime="20231127 16:45:26.576"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.577" endtime="20231127 16:45:26.577"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.573" endtime="20231127 16:45:26.578"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.580" endtime="20231127 16:45:26.581"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.579" endtime="20231127 16:45:26.582"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.584" endtime="20231127 16:45:26.592"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.583" endtime="20231127 16:45:26.592"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.594" endtime="20231127 16:45:26.595"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.593" endtime="20231127 16:45:26.596"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.598" endtime="20231127 16:45:26.599"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.597" endtime="20231127 16:45:26.600"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.601" endtime="20231127 16:45:26.606"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.600" endtime="20231127 16:45:26.607"/>
</branch>
<status status="PASS" starttime="20231127 16:45:26.545" endtime="20231127 16:45:26.608"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.609" level="INFO">Length is 12</msg>
<msg timestamp="20231127 16:45:26.610" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231127 16:45:26.608" endtime="20231127 16:45:26.611"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:26.625" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231127 16:45:26.622" endtime="20231127 16:45:26.625"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.612" endtime="20231127 16:45:26.626"/>
</branch>
<status status="PASS" starttime="20231127 16:45:26.611" endtime="20231127 16:45:26.627"/>
</if>
<msg timestamp="20231127 16:45:26.629" level="INFO">${text} = {color:1px;}</msg>
<status status="PASS" starttime="20231127 16:45:26.527" endtime="20231127 16:45:26.629"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231127 16:45:26.631" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom CSS"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231127 16:45:26.630" endtime="20231127 16:45:26.632"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:26.632" endtime="20231127 16:45:26.686"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:26.688" level="INFO">Fills the text '{color:1px;}' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:26.687" endtime="20231127 16:45:26.739"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:26.784" level="INFO">Text: '{color:1px;}'</msg>
<msg timestamp="20231127 16:45:26.786" level="INFO">${condition} = {color:1px;}</msg>
<status status="PASS" starttime="20231127 16:45:26.740" endtime="20231127 16:45:26.787"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.790" endtime="20231127 16:45:26.791"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:26.792" endtime="20231127 16:45:26.793"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:26.788" endtime="20231127 16:45:26.794"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:26.788" endtime="20231127 16:45:26.794"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:26.795" endtime="20231127 16:45:26.864"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:26.865" level="INFO">Length is 12</msg>
<msg timestamp="20231127 16:45:26.866" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231127 16:45:26.865" endtime="20231127 16:45:26.866"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:26.870" level="INFO">${STATE["Custom CSS"]} = {color:1px;}</msg>
<status status="PASS" starttime="20231127 16:45:26.868" endtime="20231127 16:45:26.871"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.867" endtime="20231127 16:45:26.872"/>
</branch>
<status status="PASS" starttime="20231127 16:45:26.867" endtime="20231127 16:45:26.873"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:26.873" endtime="20231127 16:45:26.880"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.526" endtime="20231127 16:45:26.880"/>
</kw>
<kw name="Click &quot;English&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:26.882" endtime="20231127 16:45:27.158"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:27.262" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:27.160" endtime="20231127 16:45:27.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:27.265" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:27.263" endtime="20231127 16:45:27.266"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:27.283" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:27.266" endtime="20231127 16:45:27.284"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:27.288" endtime="20231127 16:45:27.289"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.286" endtime="20231127 16:45:27.289"/>
</branch>
<status status="PASS" starttime="20231127 16:45:27.286" endtime="20231127 16:45:27.290"/>
</if>
<status status="PASS" starttime="20231127 16:45:27.159" endtime="20231127 16:45:27.290"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:27.291" endtime="20231127 16:45:27.300"/>
</kw>
<status status="PASS" starttime="20231127 16:45:26.881" endtime="20231127 16:45:27.300"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:27.306" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:27.305" endtime="20231127 16:45:27.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:27.308" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:27.307" endtime="20231127 16:45:27.309"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:27.312" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:27.310" endtime="20231127 16:45:27.312"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.314" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:27.314" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:27.313" endtime="20231127 16:45:27.315"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:27.317" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:27.316" endtime="20231127 16:45:27.317"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.323" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:27.324" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:27.320" endtime="20231127 16:45:27.324"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.327" endtime="20231127 16:45:27.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.329" endtime="20231127 16:45:27.330"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.325" endtime="20231127 16:45:27.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:27.333" level="INFO">${random} = Cumque exercitationem ad.</msg>
<status status="PASS" starttime="20231127 16:45:27.332" endtime="20231127 16:45:27.334"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 16:45:27.337" level="INFO">${words} = ['PO_45', 'Verify', 'the', 'changing', '"Custom', 'Class"', 'field']</msg>
<status status="PASS" starttime="20231127 16:45:27.335" endtime="20231127 16:45:27.338"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:27.343" level="INFO">${new_text} = PO_45 Cumque exercitationem ad.</msg>
<status status="PASS" starttime="20231127 16:45:27.340" endtime="20231127 16:45:27.343"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.331" endtime="20231127 16:45:27.344"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.345" endtime="20231127 16:45:27.346"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.409" endtime="20231127 16:45:27.410"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.344" endtime="20231127 16:45:27.410"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.412" endtime="20231127 16:45:27.413"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.415" endtime="20231127 16:45:27.416"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.411" endtime="20231127 16:45:27.416"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.418" endtime="20231127 16:45:27.422"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.417" endtime="20231127 16:45:27.424"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:27.426" endtime="20231127 16:45:27.426"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.425" endtime="20231127 16:45:27.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.429" endtime="20231127 16:45:27.429"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.430" endtime="20231127 16:45:27.431"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.432" endtime="20231127 16:45:27.432"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.428" endtime="20231127 16:45:27.433"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.434" endtime="20231127 16:45:27.434"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.433" endtime="20231127 16:45:27.434"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.437" endtime="20231127 16:45:27.438"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.435" endtime="20231127 16:45:27.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.439" endtime="20231127 16:45:27.440"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.439" endtime="20231127 16:45:27.440"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.441" endtime="20231127 16:45:27.441"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.440" endtime="20231127 16:45:27.441"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.442" endtime="20231127 16:45:27.443"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.442" endtime="20231127 16:45:27.443"/>
</branch>
<status status="PASS" starttime="20231127 16:45:27.325" endtime="20231127 16:45:27.443"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.445" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:27.445" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:27.444" endtime="20231127 16:45:27.446"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:27.478" level="INFO">${text} = PO_45 Cumque exercitationem ad.</msg>
<status status="PASS" starttime="20231127 16:45:27.447" endtime="20231127 16:45:27.478"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.446" endtime="20231127 16:45:27.479"/>
</branch>
<status status="PASS" starttime="20231127 16:45:27.446" endtime="20231127 16:45:27.479"/>
</if>
<msg timestamp="20231127 16:45:27.481" level="INFO">${text} = PO_45 Cumque exercitationem ad.</msg>
<status status="PASS" starttime="20231127 16:45:27.303" endtime="20231127 16:45:27.481"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:27.483" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:27.482" endtime="20231127 16:45:27.484"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:27.488" endtime="20231127 16:45:27.590"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:27.591" endtime="20231127 16:45:27.630"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:27.632" level="INFO">Fills the text 'PO_45 Cumque exercitationem ad.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:27.631" endtime="20231127 16:45:27.705"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:27.745" level="INFO">Text: 'PO_45 Cumque exercitationem ad.'</msg>
<msg timestamp="20231127 16:45:27.746" level="INFO">${condition} = PO_45 Cumque exercitationem ad.</msg>
<status status="PASS" starttime="20231127 16:45:27.706" endtime="20231127 16:45:27.747"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.749" endtime="20231127 16:45:27.750"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.751" endtime="20231127 16:45:27.752"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.747" endtime="20231127 16:45:27.753"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:27.747" endtime="20231127 16:45:27.754"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:27.755" endtime="20231127 16:45:27.813"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.815" level="INFO">Length is 31</msg>
<msg timestamp="20231127 16:45:27.815" level="INFO">${cnt} = 31</msg>
<status status="PASS" starttime="20231127 16:45:27.814" endtime="20231127 16:45:27.816"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:27.821" level="INFO">${STATE["Tiêu đề"]} = PO_45 Cumque exercitationem ad.</msg>
<status status="PASS" starttime="20231127 16:45:27.818" endtime="20231127 16:45:27.821"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.817" endtime="20231127 16:45:27.822"/>
</branch>
<status status="PASS" starttime="20231127 16:45:27.816" endtime="20231127 16:45:27.823"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:27.823" endtime="20231127 16:45:27.833"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.301" endtime="20231127 16:45:27.833"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:27.840" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:27.839" endtime="20231127 16:45:27.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:27.842" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:27.841" endtime="20231127 16:45:27.843"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:27.845" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:27.844" endtime="20231127 16:45:27.846"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.847" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:27.848" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:27.847" endtime="20231127 16:45:27.848"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:27.850" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:27.849" endtime="20231127 16:45:27.850"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.859" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:27.859" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:27.851" endtime="20231127 16:45:27.860"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.862" endtime="20231127 16:45:27.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.863" endtime="20231127 16:45:27.863"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.861" endtime="20231127 16:45:27.864"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.865" endtime="20231127 16:45:27.866"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.867" endtime="20231127 16:45:27.867"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.873" endtime="20231127 16:45:27.874"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.864" endtime="20231127 16:45:27.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.876" endtime="20231127 16:45:27.876"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.877" endtime="20231127 16:45:27.878"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.875" endtime="20231127 16:45:27.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.879" endtime="20231127 16:45:27.880"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.881" endtime="20231127 16:45:27.881"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.879" endtime="20231127 16:45:27.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.884" endtime="20231127 16:45:27.884"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.882" endtime="20231127 16:45:27.887"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:27.890" endtime="20231127 16:45:27.891"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.889" endtime="20231127 16:45:27.891"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.893" endtime="20231127 16:45:27.894"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.895" endtime="20231127 16:45:27.896"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.897" endtime="20231127 16:45:27.898"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.892" endtime="20231127 16:45:27.900"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.929" endtime="20231127 16:45:27.929"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.928" endtime="20231127 16:45:27.930"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.931" endtime="20231127 16:45:27.932"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.930" endtime="20231127 16:45:27.933"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.934" endtime="20231127 16:45:27.936"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.933" endtime="20231127 16:45:27.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:27.939" endtime="20231127 16:45:27.940"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:27.938" endtime="20231127 16:45:27.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:27.943" level="INFO">${new_text} = Dicta quisquam voluptatibus reiciendis voluptate esse.</msg>
<status status="PASS" starttime="20231127 16:45:27.942" endtime="20231127 16:45:27.944"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.941" endtime="20231127 16:45:27.944"/>
</branch>
<status status="PASS" starttime="20231127 16:45:27.860" endtime="20231127 16:45:27.945"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:27.947" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:27.947" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:27.945" endtime="20231127 16:45:27.948"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:27.951" level="INFO">${text} = Dicta quisquam voluptatibus reiciendis voluptate esse.</msg>
<status status="PASS" starttime="20231127 16:45:27.950" endtime="20231127 16:45:27.951"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.948" endtime="20231127 16:45:27.952"/>
</branch>
<status status="PASS" starttime="20231127 16:45:27.948" endtime="20231127 16:45:27.953"/>
</if>
<msg timestamp="20231127 16:45:27.954" level="INFO">${text} = Dicta quisquam voluptatibus reiciendis voluptate esse.</msg>
<status status="PASS" starttime="20231127 16:45:27.837" endtime="20231127 16:45:27.954"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:27.956" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:27.955" endtime="20231127 16:45:27.957"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:27.958" endtime="20231127 16:45:28.065"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:28.066" endtime="20231127 16:45:28.109"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:28.111" level="INFO">Fills the text 'Dicta quisquam voluptatibus reiciendis voluptate esse.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:28.110" endtime="20231127 16:45:28.184"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:28.231" level="INFO">Text: 'Dicta quisquam voluptatibus reiciendis voluptate esse.'</msg>
<msg timestamp="20231127 16:45:28.232" level="INFO">${condition} = Dicta quisquam voluptatibus reiciendis voluptate esse.</msg>
<status status="PASS" starttime="20231127 16:45:28.186" endtime="20231127 16:45:28.232"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.235" endtime="20231127 16:45:28.236"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.237" endtime="20231127 16:45:28.237"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.233" endtime="20231127 16:45:28.238"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:28.233" endtime="20231127 16:45:28.238"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:28.239" endtime="20231127 16:45:28.315"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.316" level="INFO">Length is 54</msg>
<msg timestamp="20231127 16:45:28.317" level="INFO">${cnt} = 54</msg>
<status status="PASS" starttime="20231127 16:45:28.315" endtime="20231127 16:45:28.318"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:28.322" level="INFO">${STATE["Tác giả"]} = Dicta quisquam voluptatibus reiciendis voluptate esse.</msg>
<status status="PASS" starttime="20231127 16:45:28.321" endtime="20231127 16:45:28.323"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.319" endtime="20231127 16:45:28.324"/>
</branch>
<status status="PASS" starttime="20231127 16:45:28.319" endtime="20231127 16:45:28.324"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:28.326" endtime="20231127 16:45:28.334"/>
</kw>
<status status="PASS" starttime="20231127 16:45:27.834" endtime="20231127 16:45:28.336"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:28.341" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:28.340" endtime="20231127 16:45:28.341"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:28.344" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:28.342" endtime="20231127 16:45:28.344"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:28.346" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:28.345" endtime="20231127 16:45:28.346"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.348" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:28.349" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:28.347" endtime="20231127 16:45:28.349"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:28.352" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:28.350" endtime="20231127 16:45:28.353"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.355" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:28.355" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:28.354" endtime="20231127 16:45:28.355"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.357" endtime="20231127 16:45:28.358"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.359" endtime="20231127 16:45:28.360"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.356" endtime="20231127 16:45:28.360"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.362" endtime="20231127 16:45:28.362"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.363" endtime="20231127 16:45:28.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.365" endtime="20231127 16:45:28.366"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.361" endtime="20231127 16:45:28.366"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.369" endtime="20231127 16:45:28.370"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.371" endtime="20231127 16:45:28.371"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.367" endtime="20231127 16:45:28.372"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.374" endtime="20231127 16:45:28.374"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.375" endtime="20231127 16:45:28.375"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.373" endtime="20231127 16:45:28.376"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.377" endtime="20231127 16:45:28.378"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.376" endtime="20231127 16:45:28.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:28.380" endtime="20231127 16:45:28.381"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.379" endtime="20231127 16:45:28.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.383" endtime="20231127 16:45:28.383"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.385" endtime="20231127 16:45:28.386"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.388" endtime="20231127 16:45:28.389"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.382" endtime="20231127 16:45:28.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.392" endtime="20231127 16:45:28.393"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.390" endtime="20231127 16:45:28.394"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.396" endtime="20231127 16:45:28.397"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.395" endtime="20231127 16:45:28.398"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.400" endtime="20231127 16:45:28.400"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.399" endtime="20231127 16:45:28.402"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.404" endtime="20231127 16:45:28.405"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.403" endtime="20231127 16:45:28.405"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:28.408" level="INFO">${new_text} = Provident vel quibusdam enim consequuntur voluptate tempora corporis.</msg>
<status status="PASS" starttime="20231127 16:45:28.407" endtime="20231127 16:45:28.409"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.406" endtime="20231127 16:45:28.409"/>
</branch>
<status status="PASS" starttime="20231127 16:45:28.356" endtime="20231127 16:45:28.410"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.411" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:28.412" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:28.410" endtime="20231127 16:45:28.412"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:28.416" level="INFO">${text} = Provident vel quibusdam enim consequuntur voluptate tempora corporis.</msg>
<status status="PASS" starttime="20231127 16:45:28.414" endtime="20231127 16:45:28.416"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.413" endtime="20231127 16:45:28.417"/>
</branch>
<status status="PASS" starttime="20231127 16:45:28.413" endtime="20231127 16:45:28.417"/>
</if>
<msg timestamp="20231127 16:45:28.417" level="INFO">${text} = Provident vel quibusdam enim consequuntur voluptate tempora corporis.</msg>
<status status="PASS" starttime="20231127 16:45:28.338" endtime="20231127 16:45:28.418"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:28.421" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:28.419" endtime="20231127 16:45:28.421"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:28.422" endtime="20231127 16:45:28.612"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:28.612" endtime="20231127 16:45:28.655"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:28.658" level="INFO">Fills the text 'Provident vel quibusdam enim consequuntur voluptate tempora corporis.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:28.656" endtime="20231127 16:45:28.722"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:28.763" level="INFO">Text: 'Provident vel quibusdam enim consequuntur voluptate tempora corporis.'</msg>
<msg timestamp="20231127 16:45:28.764" level="INFO">${condition} = Provident vel quibusdam enim consequuntur voluptate tempora corporis.</msg>
<status status="PASS" starttime="20231127 16:45:28.723" endtime="20231127 16:45:28.764"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.767" endtime="20231127 16:45:28.768"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.770" endtime="20231127 16:45:28.770"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.765" endtime="20231127 16:45:28.771"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:28.765" endtime="20231127 16:45:28.771"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:28.772" endtime="20231127 16:45:28.830"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.832" level="INFO">Length is 69</msg>
<msg timestamp="20231127 16:45:28.833" level="INFO">${cnt} = 69</msg>
<status status="PASS" starttime="20231127 16:45:28.831" endtime="20231127 16:45:28.833"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:28.838" level="INFO">${STATE["Mô tả ảnh cover"]} = Provident vel quibusdam enim consequuntur voluptate tempora corporis.</msg>
<status status="PASS" starttime="20231127 16:45:28.836" endtime="20231127 16:45:28.838"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.834" endtime="20231127 16:45:28.839"/>
</branch>
<status status="PASS" starttime="20231127 16:45:28.834" endtime="20231127 16:45:28.839"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:28.840" endtime="20231127 16:45:28.848"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.337" endtime="20231127 16:45:28.849"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:28.854" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:28.853" endtime="20231127 16:45:28.855"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:28.856" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:28.856" endtime="20231127 16:45:28.857"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:28.860" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:28.858" endtime="20231127 16:45:28.860"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.862" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:28.863" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:28.861" endtime="20231127 16:45:28.863"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:28.866" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:28.864" endtime="20231127 16:45:28.866"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.870" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:28.871" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:28.867" endtime="20231127 16:45:28.871"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.873" endtime="20231127 16:45:28.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.875" endtime="20231127 16:45:28.876"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.872" endtime="20231127 16:45:28.877"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.878" endtime="20231127 16:45:28.879"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.880" endtime="20231127 16:45:28.881"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.882" endtime="20231127 16:45:28.882"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.877" endtime="20231127 16:45:28.883"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.886" endtime="20231127 16:45:28.887"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.888" endtime="20231127 16:45:28.888"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.883" endtime="20231127 16:45:28.889"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.890" endtime="20231127 16:45:28.891"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.892" endtime="20231127 16:45:28.892"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.889" endtime="20231127 16:45:28.893"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:28.895" level="INFO">${new_text} = Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.</msg>
<status status="PASS" starttime="20231127 16:45:28.894" endtime="20231127 16:45:28.896"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.893" endtime="20231127 16:45:28.896"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:28.897" endtime="20231127 16:45:28.898"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.897" endtime="20231127 16:45:28.898"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.900" endtime="20231127 16:45:28.903"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.904" endtime="20231127 16:45:28.904"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.942" endtime="20231127 16:45:28.943"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.899" endtime="20231127 16:45:28.944"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.945" endtime="20231127 16:45:28.946"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.945" endtime="20231127 16:45:28.947"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.948" endtime="20231127 16:45:28.949"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.947" endtime="20231127 16:45:28.949"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.951" endtime="20231127 16:45:28.952"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.950" endtime="20231127 16:45:28.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.954" endtime="20231127 16:45:28.955"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.954" endtime="20231127 16:45:28.955"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:28.957" endtime="20231127 16:45:28.957"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:28.956" endtime="20231127 16:45:28.958"/>
</branch>
<status status="PASS" starttime="20231127 16:45:28.872" endtime="20231127 16:45:28.960"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:28.961" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:28.962" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:28.960" endtime="20231127 16:45:28.962"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:28.965" level="INFO">${text} = Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.</msg>
<status status="PASS" starttime="20231127 16:45:28.964" endtime="20231127 16:45:28.966"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.963" endtime="20231127 16:45:28.966"/>
</branch>
<status status="PASS" starttime="20231127 16:45:28.963" endtime="20231127 16:45:28.967"/>
</if>
<msg timestamp="20231127 16:45:28.967" level="INFO">${text} = Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.</msg>
<status status="PASS" starttime="20231127 16:45:28.851" endtime="20231127 16:45:28.968"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231127 16:45:28.971" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231127 16:45:28.969" endtime="20231127 16:45:28.971"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:28.972" endtime="20231127 16:45:29.020"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:29.022" level="INFO">Fills the text 'Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:29.021" endtime="20231127 16:45:29.081"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:29.130" level="INFO">Text: 'Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.'</msg>
<msg timestamp="20231127 16:45:29.131" level="INFO">${condition} = Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.</msg>
<status status="PASS" starttime="20231127 16:45:29.082" endtime="20231127 16:45:29.131"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.134" endtime="20231127 16:45:29.136"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.137" endtime="20231127 16:45:29.138"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.132" endtime="20231127 16:45:29.138"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:29.132" endtime="20231127 16:45:29.139"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:29.140" endtime="20231127 16:45:29.215"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.216" level="INFO">Length is 67</msg>
<msg timestamp="20231127 16:45:29.217" level="INFO">${cnt} = 67</msg>
<status status="PASS" starttime="20231127 16:45:29.216" endtime="20231127 16:45:29.217"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:29.223" level="INFO">${STATE["Giới thiệu"]} = Beatae modi esse eos. Quos adipisci labore reiciendis quo ipsa hic.</msg>
<status status="PASS" starttime="20231127 16:45:29.221" endtime="20231127 16:45:29.223"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.218" endtime="20231127 16:45:29.224"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.218" endtime="20231127 16:45:29.225"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:29.225" endtime="20231127 16:45:29.234"/>
</kw>
<status status="PASS" starttime="20231127 16:45:28.850" endtime="20231127 16:45:29.234"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:29.240" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:29.239" endtime="20231127 16:45:29.241"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:29.242" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:29.241" endtime="20231127 16:45:29.243"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:29.245" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:29.243" endtime="20231127 16:45:29.245"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.247" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:29.248" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:29.246" endtime="20231127 16:45:29.248"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:29.251" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:29.249" endtime="20231127 16:45:29.251"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.255" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:29.255" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:29.253" endtime="20231127 16:45:29.256"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.257" endtime="20231127 16:45:29.258"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.258" endtime="20231127 16:45:29.258"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.257" endtime="20231127 16:45:29.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.260" endtime="20231127 16:45:29.261"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.261" endtime="20231127 16:45:29.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.262" endtime="20231127 16:45:29.263"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.259" endtime="20231127 16:45:29.263"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.264" endtime="20231127 16:45:29.264"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.265" endtime="20231127 16:45:29.265"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.263" endtime="20231127 16:45:29.265"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.267" endtime="20231127 16:45:29.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.268" endtime="20231127 16:45:29.272"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.265" endtime="20231127 16:45:29.273"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:29.277" level="INFO">${new_text} = Enim beatae id consectetur. Quaerat distinctio doloremque est quia dicta molestiae. Molestiae consequuntur molestias assumenda.</msg>
<status status="PASS" starttime="20231127 16:45:29.275" endtime="20231127 16:45:29.278"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.274" endtime="20231127 16:45:29.278"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:29.280" endtime="20231127 16:45:29.280"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.279" endtime="20231127 16:45:29.281"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.282" endtime="20231127 16:45:29.283"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.284" endtime="20231127 16:45:29.284"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.288" endtime="20231127 16:45:29.289"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.281" endtime="20231127 16:45:29.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.291" endtime="20231127 16:45:29.292"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.290" endtime="20231127 16:45:29.292"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.295" endtime="20231127 16:45:29.308"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.293" endtime="20231127 16:45:29.309"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.310" endtime="20231127 16:45:29.310"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.309" endtime="20231127 16:45:29.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.312" endtime="20231127 16:45:29.312"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.311" endtime="20231127 16:45:29.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.315" endtime="20231127 16:45:29.316"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.314" endtime="20231127 16:45:29.317"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.256" endtime="20231127 16:45:29.317"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.326" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:29.326" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:29.318" endtime="20231127 16:45:29.327"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:29.330" level="INFO">${text} = Enim beatae id consectetur. Quaerat distinctio doloremque est quia dicta molestiae. Molestiae consequuntur molestias assumenda.</msg>
<status status="PASS" starttime="20231127 16:45:29.329" endtime="20231127 16:45:29.330"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.328" endtime="20231127 16:45:29.331"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.327" endtime="20231127 16:45:29.331"/>
</if>
<msg timestamp="20231127 16:45:29.332" level="INFO">${text} = Enim beatae id consectetur. Quaerat distinctio doloremque est quia dicta molestiae. Molestiae consequuntur molestias assumenda.</msg>
<status status="PASS" starttime="20231127 16:45:29.238" endtime="20231127 16:45:29.332"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231127 16:45:29.335" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231127 16:45:29.333" endtime="20231127 16:45:29.338"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:29.340" endtime="20231127 16:45:29.411"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:29.414" level="INFO">Fills the text 'Enim beatae id consectetur. Quaerat distinctio doloremque est quia dicta molestiae. Molestiae consequuntur molestias assumenda.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:29.412" endtime="20231127 16:45:29.471"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.236" endtime="20231127 16:45:29.473"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:29.478" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:29.477" endtime="20231127 16:45:29.478"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:29.479" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:29.479" endtime="20231127 16:45:29.480"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:29.481" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:29.480" endtime="20231127 16:45:29.482"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.483" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:29.483" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:29.482" endtime="20231127 16:45:29.484"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:29.486" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:29.484" endtime="20231127 16:45:29.487"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.489" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:29.490" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:29.489" endtime="20231127 16:45:29.490"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.492" endtime="20231127 16:45:29.492"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.493" endtime="20231127 16:45:29.494"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.491" endtime="20231127 16:45:29.494"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.496" endtime="20231127 16:45:29.497"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.498" endtime="20231127 16:45:29.499"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.500" endtime="20231127 16:45:29.500"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.495" endtime="20231127 16:45:29.501"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.505" endtime="20231127 16:45:29.506"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.507" endtime="20231127 16:45:29.508"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.502" endtime="20231127 16:45:29.508"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.510" endtime="20231127 16:45:29.510"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.511" endtime="20231127 16:45:29.512"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.509" endtime="20231127 16:45:29.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.514" endtime="20231127 16:45:29.515"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.513" endtime="20231127 16:45:29.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:29.517" endtime="20231127 16:45:29.518"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.516" endtime="20231127 16:45:29.518"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.523" endtime="20231127 16:45:29.524"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.524" endtime="20231127 16:45:29.525"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.526" endtime="20231127 16:45:29.526"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.521" endtime="20231127 16:45:29.527"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.528" endtime="20231127 16:45:29.529"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.527" endtime="20231127 16:45:29.529"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.531" endtime="20231127 16:45:29.531"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.530" endtime="20231127 16:45:29.532"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.533" endtime="20231127 16:45:29.534"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.532" endtime="20231127 16:45:29.538"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.540" endtime="20231127 16:45:29.541"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.539" endtime="20231127 16:45:29.541"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:29.550" level="INFO">${new_text} = Voluptas nam accusantium non numquam atque.</msg>
<status status="PASS" starttime="20231127 16:45:29.549" endtime="20231127 16:45:29.550"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.542" endtime="20231127 16:45:29.551"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.491" endtime="20231127 16:45:29.551"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.556" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:29.557" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:29.555" endtime="20231127 16:45:29.557"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:29.561" level="INFO">${text} = Voluptas nam accusantium non numquam atque.</msg>
<status status="PASS" starttime="20231127 16:45:29.559" endtime="20231127 16:45:29.561"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.558" endtime="20231127 16:45:29.562"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.558" endtime="20231127 16:45:29.563"/>
</if>
<msg timestamp="20231127 16:45:29.563" level="INFO">${text} = Voluptas nam accusantium non numquam atque.</msg>
<status status="PASS" starttime="20231127 16:45:29.475" endtime="20231127 16:45:29.564"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:29.566" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:29.564" endtime="20231127 16:45:29.566"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:29.567" endtime="20231127 16:45:29.698"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:29.699" endtime="20231127 16:45:29.746"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:29.748" level="INFO">Fills the text 'Voluptas nam accusantium non numquam atque.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:29.747" endtime="20231127 16:45:29.819"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:29.855" level="INFO">Text: 'Voluptas nam accusantium non numquam atque.'</msg>
<msg timestamp="20231127 16:45:29.856" level="INFO">${condition} = Voluptas nam accusantium non numquam atque.</msg>
<status status="PASS" starttime="20231127 16:45:29.821" endtime="20231127 16:45:29.856"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.858" endtime="20231127 16:45:29.859"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.860" endtime="20231127 16:45:29.860"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.857" endtime="20231127 16:45:29.860"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:29.857" endtime="20231127 16:45:29.861"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:29.862" endtime="20231127 16:45:29.931"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.933" level="INFO">Length is 43</msg>
<msg timestamp="20231127 16:45:29.934" level="INFO">${cnt} = 43</msg>
<status status="PASS" starttime="20231127 16:45:29.932" endtime="20231127 16:45:29.934"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:29.941" level="INFO">${STATE["Tiêu đề SEO"]} = Voluptas nam accusantium non numquam atque.</msg>
<status status="PASS" starttime="20231127 16:45:29.939" endtime="20231127 16:45:29.941"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.936" endtime="20231127 16:45:29.942"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.935" endtime="20231127 16:45:29.942"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:29.943" endtime="20231127 16:45:29.951"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.473" endtime="20231127 16:45:29.952"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:29.959" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:29.957" endtime="20231127 16:45:29.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:29.961" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:29.960" endtime="20231127 16:45:29.961"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:29.963" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:29.962" endtime="20231127 16:45:29.963"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.965" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:29.965" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:29.964" endtime="20231127 16:45:29.966"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:29.968" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:29.967" endtime="20231127 16:45:29.969"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:29.974" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:29.974" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:29.973" endtime="20231127 16:45:29.974"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.976" endtime="20231127 16:45:29.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.977" endtime="20231127 16:45:29.978"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.975" endtime="20231127 16:45:29.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.979" endtime="20231127 16:45:29.979"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.980" endtime="20231127 16:45:29.980"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.981" endtime="20231127 16:45:29.981"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.978" endtime="20231127 16:45:29.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.983" endtime="20231127 16:45:29.984"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.985" endtime="20231127 16:45:29.986"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.982" endtime="20231127 16:45:29.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.989" endtime="20231127 16:45:29.990"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.990" endtime="20231127 16:45:29.991"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.988" endtime="20231127 16:45:29.991"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.993" endtime="20231127 16:45:29.994"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.992" endtime="20231127 16:45:29.994"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:29.996" endtime="20231127 16:45:29.997"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.995" endtime="20231127 16:45:29.997"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:29.999" endtime="20231127 16:45:30.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.001" endtime="20231127 16:45:30.001"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.003" endtime="20231127 16:45:30.005"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:29.998" endtime="20231127 16:45:30.006"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.009" endtime="20231127 16:45:30.012"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.007" endtime="20231127 16:45:30.013"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.017" endtime="20231127 16:45:30.018"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.015" endtime="20231127 16:45:30.019"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.021" endtime="20231127 16:45:30.022"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.020" endtime="20231127 16:45:30.023"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.024" endtime="20231127 16:45:30.025"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.023" endtime="20231127 16:45:30.026"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:30.029" level="INFO">${new_text} = Asperiores praesentium rerum totam culpa mollitia.</msg>
<status status="PASS" starttime="20231127 16:45:30.027" endtime="20231127 16:45:30.029"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.026" endtime="20231127 16:45:30.030"/>
</branch>
<status status="PASS" starttime="20231127 16:45:29.975" endtime="20231127 16:45:30.030"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:30.032" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:30.033" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:30.031" endtime="20231127 16:45:30.033"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:30.038" level="INFO">${text} = Asperiores praesentium rerum totam culpa mollitia.</msg>
<status status="PASS" starttime="20231127 16:45:30.036" endtime="20231127 16:45:30.038"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.034" endtime="20231127 16:45:30.039"/>
</branch>
<status status="PASS" starttime="20231127 16:45:30.034" endtime="20231127 16:45:30.040"/>
</if>
<msg timestamp="20231127 16:45:30.040" level="INFO">${text} = Asperiores praesentium rerum totam culpa mollitia.</msg>
<status status="PASS" starttime="20231127 16:45:29.955" endtime="20231127 16:45:30.041"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:30.043" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:30.041" endtime="20231127 16:45:30.044"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:30.045" endtime="20231127 16:45:30.149"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:30.149" endtime="20231127 16:45:30.186"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:30.188" level="INFO">Fills the text 'Asperiores praesentium rerum totam culpa mollitia.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:30.187" endtime="20231127 16:45:30.255"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:30.294" level="INFO">Text: 'Asperiores praesentium rerum totam culpa mollitia.'</msg>
<msg timestamp="20231127 16:45:30.295" level="INFO">${condition} = Asperiores praesentium rerum totam culpa mollitia.</msg>
<status status="PASS" starttime="20231127 16:45:30.256" endtime="20231127 16:45:30.295"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.297" endtime="20231127 16:45:30.298"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.299" endtime="20231127 16:45:30.299"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.296" endtime="20231127 16:45:30.300"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:30.296" endtime="20231127 16:45:30.300"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:30.302" endtime="20231127 16:45:30.363"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:30.365" level="INFO">Length is 50</msg>
<msg timestamp="20231127 16:45:30.365" level="INFO">${cnt} = 50</msg>
<status status="PASS" starttime="20231127 16:45:30.364" endtime="20231127 16:45:30.366"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:30.368" level="INFO">${STATE["Từ khóa SEO"]} = Asperiores praesentium rerum totam culpa mollitia.</msg>
<status status="PASS" starttime="20231127 16:45:30.367" endtime="20231127 16:45:30.368"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.366" endtime="20231127 16:45:30.369"/>
</branch>
<status status="PASS" starttime="20231127 16:45:30.366" endtime="20231127 16:45:30.370"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:30.370" endtime="20231127 16:45:30.378"/>
</kw>
<status status="PASS" starttime="20231127 16:45:29.953" endtime="20231127 16:45:30.379"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:30.383" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:30.382" endtime="20231127 16:45:30.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:30.385" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:30.384" endtime="20231127 16:45:30.386"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:30.388" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:30.387" endtime="20231127 16:45:30.389"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:30.391" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:30.392" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:30.389" endtime="20231127 16:45:30.392"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:30.394" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:30.393" endtime="20231127 16:45:30.394"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:30.397" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:30.397" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:30.396" endtime="20231127 16:45:30.398"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.399" endtime="20231127 16:45:30.400"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.401" endtime="20231127 16:45:30.401"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.398" endtime="20231127 16:45:30.403"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.406" endtime="20231127 16:45:30.406"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.407" endtime="20231127 16:45:30.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.409" endtime="20231127 16:45:30.410"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.404" endtime="20231127 16:45:30.410"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.413" endtime="20231127 16:45:30.414"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.414" endtime="20231127 16:45:30.415"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.411" endtime="20231127 16:45:30.416"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.417" endtime="20231127 16:45:30.419"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.421" endtime="20231127 16:45:30.422"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.416" endtime="20231127 16:45:30.422"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:30.426" level="INFO">${new_text} = Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.</msg>
<status status="PASS" starttime="20231127 16:45:30.425" endtime="20231127 16:45:30.427"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.423" endtime="20231127 16:45:30.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:30.429" endtime="20231127 16:45:30.429"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.428" endtime="20231127 16:45:30.429"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.431" endtime="20231127 16:45:30.431"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.432" endtime="20231127 16:45:30.432"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.433" endtime="20231127 16:45:30.434"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.430" endtime="20231127 16:45:30.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.441" endtime="20231127 16:45:30.442"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.438" endtime="20231127 16:45:30.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.444" endtime="20231127 16:45:30.445"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.444" endtime="20231127 16:45:30.445"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.447" endtime="20231127 16:45:30.447"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.446" endtime="20231127 16:45:30.448"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.449" endtime="20231127 16:45:30.450"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.448" endtime="20231127 16:45:30.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.452" endtime="20231127 16:45:30.453"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.451" endtime="20231127 16:45:30.454"/>
</branch>
<status status="PASS" starttime="20231127 16:45:30.398" endtime="20231127 16:45:30.455"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:30.456" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:30.457" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:30.455" endtime="20231127 16:45:30.457"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:30.461" level="INFO">${text} = Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.</msg>
<status status="PASS" starttime="20231127 16:45:30.460" endtime="20231127 16:45:30.461"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.459" endtime="20231127 16:45:30.462"/>
</branch>
<status status="PASS" starttime="20231127 16:45:30.458" endtime="20231127 16:45:30.462"/>
</if>
<msg timestamp="20231127 16:45:30.463" level="INFO">${text} = Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.</msg>
<status status="PASS" starttime="20231127 16:45:30.381" endtime="20231127 16:45:30.463"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231127 16:45:30.465" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231127 16:45:30.464" endtime="20231127 16:45:30.465"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:30.466" endtime="20231127 16:45:30.529"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:30.531" level="INFO">Fills the text 'Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:30.530" endtime="20231127 16:45:30.591"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:30.637" level="INFO">Text: 'Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.'</msg>
<msg timestamp="20231127 16:45:30.638" level="INFO">${condition} = Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.</msg>
<status status="PASS" starttime="20231127 16:45:30.593" endtime="20231127 16:45:30.639"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.642" endtime="20231127 16:45:30.642"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:30.643" endtime="20231127 16:45:30.644"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:30.640" endtime="20231127 16:45:30.644"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:30.640" endtime="20231127 16:45:30.645"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:30.646" endtime="20231127 16:45:30.713"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:30.715" level="INFO">Length is 101</msg>
<msg timestamp="20231127 16:45:30.716" level="INFO">${cnt} = 101</msg>
<status status="PASS" starttime="20231127 16:45:30.714" endtime="20231127 16:45:30.716"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:30.720" level="INFO">${STATE["Mô tả SEO"]} = Libero repellat deleniti quas tempora facere a. Ad vel rerum eos ratione. Dolores natus cum suscipit.</msg>
<status status="PASS" starttime="20231127 16:45:30.719" endtime="20231127 16:45:30.721"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.717" endtime="20231127 16:45:30.722"/>
</branch>
<status status="PASS" starttime="20231127 16:45:30.717" endtime="20231127 16:45:30.723"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:30.724" endtime="20231127 16:45:30.731"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.380" endtime="20231127 16:45:30.732"/>
</kw>
<kw name="Click &quot;Tiếng Việt&quot; tab button" library="common" sourcename="Click &quot;${text}&quot; tab button">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-tabs-tab-btn") and contains(text(), "${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:30.735" endtime="20231127 16:45:31.030"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:31.133" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:31.032" endtime="20231127 16:45:31.133"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.134" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:31.134" endtime="20231127 16:45:31.134"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:31.161" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:31.135" endtime="20231127 16:45:31.161"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:31.162" endtime="20231127 16:45:31.162"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.162" endtime="20231127 16:45:31.163"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.161" endtime="20231127 16:45:31.163"/>
</if>
<status status="PASS" starttime="20231127 16:45:31.031" endtime="20231127 16:45:31.163"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:31.163" endtime="20231127 16:45:31.171"/>
</kw>
<status status="PASS" starttime="20231127 16:45:30.733" endtime="20231127 16:45:31.172"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.176" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:31.175" endtime="20231127 16:45:31.176"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.178" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:31.177" endtime="20231127 16:45:31.178"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:31.179" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:31.178" endtime="20231127 16:45:31.179"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.180" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:31.180" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:31.179" endtime="20231127 16:45:31.180"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:31.181" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:31.180" endtime="20231127 16:45:31.182"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.183" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:31.183" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:31.182" endtime="20231127 16:45:31.183"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.185" endtime="20231127 16:45:31.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.186" endtime="20231127 16:45:31.187"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.184" endtime="20231127 16:45:31.187"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:31.192" level="INFO">${random} = Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.188" endtime="20231127 16:45:31.192"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231127 16:45:31.194" level="INFO">${words} = ['PO_45', 'Verify', 'the', 'changing', '"Custom', 'Class"', 'field']</msg>
<status status="PASS" starttime="20231127 16:45:31.193" endtime="20231127 16:45:31.195"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.198" level="INFO">${new_text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.196" endtime="20231127 16:45:31.199"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.187" endtime="20231127 16:45:31.199"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.201" endtime="20231127 16:45:31.201"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.203" endtime="20231127 16:45:31.204"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.200" endtime="20231127 16:45:31.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.213" endtime="20231127 16:45:31.214"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.214" endtime="20231127 16:45:31.215"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.212" endtime="20231127 16:45:31.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.217" endtime="20231127 16:45:31.217"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.216" endtime="20231127 16:45:31.218"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:31.221" endtime="20231127 16:45:31.221"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.220" endtime="20231127 16:45:31.222"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.223" endtime="20231127 16:45:31.224"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.225" endtime="20231127 16:45:31.225"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.226" endtime="20231127 16:45:31.227"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.222" endtime="20231127 16:45:31.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.229" endtime="20231127 16:45:31.229"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.228" endtime="20231127 16:45:31.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.241" endtime="20231127 16:45:31.242"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.230" endtime="20231127 16:45:31.242"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.254" endtime="20231127 16:45:31.255"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.251" endtime="20231127 16:45:31.256"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.257" endtime="20231127 16:45:31.257"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.256" endtime="20231127 16:45:31.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.259" endtime="20231127 16:45:31.260"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.258" endtime="20231127 16:45:31.260"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.184" endtime="20231127 16:45:31.261"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.263" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:31.263" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:31.262" endtime="20231127 16:45:31.264"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:31.267" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.266" endtime="20231127 16:45:31.267"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.265" endtime="20231127 16:45:31.269"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.264" endtime="20231127 16:45:31.270"/>
</if>
<msg timestamp="20231127 16:45:31.270" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.174" endtime="20231127 16:45:31.271"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:31.273" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:31.271" endtime="20231127 16:45:31.273"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:31.274" endtime="20231127 16:45:31.416"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:31.417" endtime="20231127 16:45:31.461"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:31.463" level="INFO">Fills the text 'PO_45 Magni inventore.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:31.462" endtime="20231127 16:45:31.530"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:31.579" level="INFO">Text: 'PO_45 Magni inventore.'</msg>
<msg timestamp="20231127 16:45:31.579" level="INFO">${condition} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.531" endtime="20231127 16:45:31.579"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.582" endtime="20231127 16:45:31.582"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.583" endtime="20231127 16:45:31.584"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.580" endtime="20231127 16:45:31.585"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:31.580" endtime="20231127 16:45:31.586"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:31.588" endtime="20231127 16:45:31.663"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.665" level="INFO">Length is 22</msg>
<msg timestamp="20231127 16:45:31.665" level="INFO">${cnt} = 22</msg>
<status status="PASS" starttime="20231127 16:45:31.664" endtime="20231127 16:45:31.666"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:31.670" level="INFO">${STATE["Tiêu đề"]} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.668" endtime="20231127 16:45:31.670"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.666" endtime="20231127 16:45:31.671"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.666" endtime="20231127 16:45:31.672"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:31.673" endtime="20231127 16:45:31.682"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.173" endtime="20231127 16:45:31.683"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:31.686" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231127 16:45:31.685" endtime="20231127 16:45:31.687"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.689" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:31.690" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231127 16:45:31.688" endtime="20231127 16:45:31.690"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.694" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.692" endtime="20231127 16:45:31.695"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.691" endtime="20231127 16:45:31.695"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.691" endtime="20231127 16:45:31.696"/>
</if>
<msg timestamp="20231127 16:45:31.696" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.683" endtime="20231127 16:45:31.697"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.698" level="INFO">${name} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:31.697" endtime="20231127 16:45:31.699"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tác giả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.704" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:31.703" endtime="20231127 16:45:31.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:31.706" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:31.705" endtime="20231127 16:45:31.706"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:31.708" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:31.707" endtime="20231127 16:45:31.708"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.710" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:31.710" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:31.709" endtime="20231127 16:45:31.710"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:31.712" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:31.710" endtime="20231127 16:45:31.712"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.715" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:31.715" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:31.714" endtime="20231127 16:45:31.716"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.717" endtime="20231127 16:45:31.718"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.720" endtime="20231127 16:45:31.720"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.716" endtime="20231127 16:45:31.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.722" endtime="20231127 16:45:31.723"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.724" endtime="20231127 16:45:31.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.725" endtime="20231127 16:45:31.726"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.721" endtime="20231127 16:45:31.726"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.727" endtime="20231127 16:45:31.727"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.727" endtime="20231127 16:45:31.727"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.726" endtime="20231127 16:45:31.728"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.728" endtime="20231127 16:45:31.728"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.729" endtime="20231127 16:45:31.729"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.728" endtime="20231127 16:45:31.729"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.730" endtime="20231127 16:45:31.730"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.729" endtime="20231127 16:45:31.730"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:31.731" endtime="20231127 16:45:31.731"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.731" endtime="20231127 16:45:31.731"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.732" endtime="20231127 16:45:31.732"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.733" endtime="20231127 16:45:31.733"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.733" endtime="20231127 16:45:31.733"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.732" endtime="20231127 16:45:31.734"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.734" endtime="20231127 16:45:31.736"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.734" endtime="20231127 16:45:31.737"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.738" endtime="20231127 16:45:31.739"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.738" endtime="20231127 16:45:31.739"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.741" endtime="20231127 16:45:31.741"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.740" endtime="20231127 16:45:31.741"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:31.742" endtime="20231127 16:45:31.742"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:31.741" endtime="20231127 16:45:31.742"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:31.743" level="INFO">${new_text} = Ut laboriosam vel sunt blanditiis.</msg>
<status status="PASS" starttime="20231127 16:45:31.743" endtime="20231127 16:45:31.744"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.743" endtime="20231127 16:45:31.744"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.716" endtime="20231127 16:45:31.744"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:31.745" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:31.745" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:31.744" endtime="20231127 16:45:31.745"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:31.746" level="INFO">${text} = Ut laboriosam vel sunt blanditiis.</msg>
<status status="PASS" starttime="20231127 16:45:31.746" endtime="20231127 16:45:31.746"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.745" endtime="20231127 16:45:31.747"/>
</branch>
<status status="PASS" starttime="20231127 16:45:31.745" endtime="20231127 16:45:31.747"/>
</if>
<msg timestamp="20231127 16:45:31.747" level="INFO">${text} = Ut laboriosam vel sunt blanditiis.</msg>
<status status="PASS" starttime="20231127 16:45:31.701" endtime="20231127 16:45:31.747"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:31.748" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tác giả"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:31.748" endtime="20231127 16:45:31.748"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:31.749" endtime="20231127 16:45:31.852"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:31.854" endtime="20231127 16:45:31.895"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:31.897" level="INFO">Fills the text 'Ut laboriosam vel sunt blanditiis.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:31.896" endtime="20231127 16:45:31.972"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:32.031" level="INFO">Text: 'Ut laboriosam vel sunt blanditiis.'</msg>
<msg timestamp="20231127 16:45:32.032" level="INFO">${condition} = Ut laboriosam vel sunt blanditiis.</msg>
<status status="PASS" starttime="20231127 16:45:31.973" endtime="20231127 16:45:32.032"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.034" endtime="20231127 16:45:32.036"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.037" endtime="20231127 16:45:32.038"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.033" endtime="20231127 16:45:32.039"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:32.033" endtime="20231127 16:45:32.040"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:32.040" endtime="20231127 16:45:32.114"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.116" level="INFO">Length is 34</msg>
<msg timestamp="20231127 16:45:32.117" level="INFO">${cnt} = 34</msg>
<status status="PASS" starttime="20231127 16:45:32.115" endtime="20231127 16:45:32.117"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:32.123" level="INFO">${STATE["Tác giả"]} = Ut laboriosam vel sunt blanditiis.</msg>
<status status="PASS" starttime="20231127 16:45:32.121" endtime="20231127 16:45:32.123"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.118" endtime="20231127 16:45:32.124"/>
</branch>
<status status="PASS" starttime="20231127 16:45:32.118" endtime="20231127 16:45:32.125"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:32.125" endtime="20231127 16:45:32.133"/>
</kw>
<status status="PASS" starttime="20231127 16:45:31.700" endtime="20231127 16:45:32.134"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in &quot;Mô tả ảnh cover&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:32.142" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:32.140" endtime="20231127 16:45:32.142"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:32.143" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:32.143" endtime="20231127 16:45:32.144"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:32.146" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:32.145" endtime="20231127 16:45:32.146"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.148" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:32.149" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:32.147" endtime="20231127 16:45:32.149"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:32.151" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:32.150" endtime="20231127 16:45:32.152"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.154" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:32.162" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:32.153" endtime="20231127 16:45:32.162"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.164" endtime="20231127 16:45:32.164"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.165" endtime="20231127 16:45:32.165"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.163" endtime="20231127 16:45:32.166"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.168" endtime="20231127 16:45:32.171"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.172" endtime="20231127 16:45:32.173"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.174" endtime="20231127 16:45:32.175"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.167" endtime="20231127 16:45:32.175"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.177" endtime="20231127 16:45:32.177"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.178" endtime="20231127 16:45:32.179"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.176" endtime="20231127 16:45:32.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.181" endtime="20231127 16:45:32.181"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.182" endtime="20231127 16:45:32.183"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.180" endtime="20231127 16:45:32.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:32.188" level="INFO">${new_text} = Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.</msg>
<status status="PASS" starttime="20231127 16:45:32.186" endtime="20231127 16:45:32.188"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.184" endtime="20231127 16:45:32.189"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:32.190" endtime="20231127 16:45:32.191"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.190" endtime="20231127 16:45:32.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.192" endtime="20231127 16:45:32.193"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.194" endtime="20231127 16:45:32.194"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.195" endtime="20231127 16:45:32.195"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.192" endtime="20231127 16:45:32.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.226" endtime="20231127 16:45:32.227"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.196" endtime="20231127 16:45:32.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.231" endtime="20231127 16:45:32.232"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.230" endtime="20231127 16:45:32.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.236" endtime="20231127 16:45:32.236"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.234" endtime="20231127 16:45:32.237"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.239" endtime="20231127 16:45:32.239"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.238" endtime="20231127 16:45:32.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.242" endtime="20231127 16:45:32.246"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.241" endtime="20231127 16:45:32.248"/>
</branch>
<status status="PASS" starttime="20231127 16:45:32.162" endtime="20231127 16:45:32.249"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.253" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:32.254" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:32.250" endtime="20231127 16:45:32.254"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:32.257" level="INFO">${text} = Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.</msg>
<status status="PASS" starttime="20231127 16:45:32.256" endtime="20231127 16:45:32.257"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.255" endtime="20231127 16:45:32.258"/>
</branch>
<status status="PASS" starttime="20231127 16:45:32.255" endtime="20231127 16:45:32.258"/>
</if>
<msg timestamp="20231127 16:45:32.258" level="INFO">${text} = Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.</msg>
<status status="PASS" starttime="20231127 16:45:32.139" endtime="20231127 16:45:32.259"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:32.260" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả ảnh cover"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:32.259" endtime="20231127 16:45:32.261"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:32.261" endtime="20231127 16:45:32.448"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:32.449" endtime="20231127 16:45:32.493"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:32.495" level="INFO">Fills the text 'Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:32.494" endtime="20231127 16:45:32.563"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:32.611" level="INFO">Text: 'Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.'</msg>
<msg timestamp="20231127 16:45:32.611" level="INFO">${condition} = Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.</msg>
<status status="PASS" starttime="20231127 16:45:32.565" endtime="20231127 16:45:32.612"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.615" endtime="20231127 16:45:32.615"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.616" endtime="20231127 16:45:32.616"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.613" endtime="20231127 16:45:32.616"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:32.612" endtime="20231127 16:45:32.617"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:32.618" endtime="20231127 16:45:32.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.696" level="INFO">Length is 120</msg>
<msg timestamp="20231127 16:45:32.697" level="INFO">${cnt} = 120</msg>
<status status="PASS" starttime="20231127 16:45:32.696" endtime="20231127 16:45:32.697"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:32.699" level="INFO">${STATE["Mô tả ảnh cover"]} = Voluptates ullam nihil aspernatur. Magnam quia adipisci veritatis. Sapiente natus quo deserunt blanditiis eos explicabo.</msg>
<status status="PASS" starttime="20231127 16:45:32.698" endtime="20231127 16:45:32.699"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.697" endtime="20231127 16:45:32.699"/>
</branch>
<status status="PASS" starttime="20231127 16:45:32.697" endtime="20231127 16:45:32.699"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:32.700" endtime="20231127 16:45:32.706"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.136" endtime="20231127 16:45:32.707"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Giới thiệu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:32.713" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:32.712" endtime="20231127 16:45:32.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:32.716" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:32.715" endtime="20231127 16:45:32.716"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:32.719" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:32.717" endtime="20231127 16:45:32.720"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.722" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:32.723" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:32.721" endtime="20231127 16:45:32.723"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:32.726" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:32.724" endtime="20231127 16:45:32.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.728" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:32.729" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:32.728" endtime="20231127 16:45:32.730"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.731" endtime="20231127 16:45:32.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.732" endtime="20231127 16:45:32.733"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.730" endtime="20231127 16:45:32.733"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.734" endtime="20231127 16:45:32.735"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.736" endtime="20231127 16:45:32.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.738" endtime="20231127 16:45:32.739"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.734" endtime="20231127 16:45:32.740"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.742" endtime="20231127 16:45:32.742"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.742" endtime="20231127 16:45:32.743"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.741" endtime="20231127 16:45:32.743"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.744" endtime="20231127 16:45:32.744"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.744" endtime="20231127 16:45:32.745"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.743" endtime="20231127 16:45:32.745"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:32.747" level="INFO">${new_text} = Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.</msg>
<status status="PASS" starttime="20231127 16:45:32.746" endtime="20231127 16:45:32.747"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.745" endtime="20231127 16:45:32.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:32.748" endtime="20231127 16:45:32.749"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.748" endtime="20231127 16:45:32.749"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.750" endtime="20231127 16:45:32.750"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.750" endtime="20231127 16:45:32.751"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.752" endtime="20231127 16:45:32.753"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.749" endtime="20231127 16:45:32.753"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.754" endtime="20231127 16:45:32.754"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.754" endtime="20231127 16:45:32.755"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.755" endtime="20231127 16:45:32.756"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.755" endtime="20231127 16:45:32.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.758" endtime="20231127 16:45:32.758"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.757" endtime="20231127 16:45:32.758"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.759" endtime="20231127 16:45:32.759"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.758" endtime="20231127 16:45:32.759"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.760" endtime="20231127 16:45:32.760"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.760" endtime="20231127 16:45:32.760"/>
</branch>
<status status="PASS" starttime="20231127 16:45:32.730" endtime="20231127 16:45:32.761"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:32.761" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:32.762" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:32.761" endtime="20231127 16:45:32.762"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:32.763" level="INFO">${text} = Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.</msg>
<status status="PASS" starttime="20231127 16:45:32.763" endtime="20231127 16:45:32.764"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.762" endtime="20231127 16:45:32.764"/>
</branch>
<status status="PASS" starttime="20231127 16:45:32.762" endtime="20231127 16:45:32.764"/>
</if>
<msg timestamp="20231127 16:45:32.764" level="INFO">${text} = Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.</msg>
<status status="PASS" starttime="20231127 16:45:32.710" endtime="20231127 16:45:32.764"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231127 16:45:32.765" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới thiệu"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231127 16:45:32.765" endtime="20231127 16:45:32.766"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:32.766" endtime="20231127 16:45:32.829"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:32.831" level="INFO">Fills the text 'Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:32.830" endtime="20231127 16:45:32.905"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:32.948" level="INFO">Text: 'Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.'</msg>
<msg timestamp="20231127 16:45:32.949" level="INFO">${condition} = Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.</msg>
<status status="PASS" starttime="20231127 16:45:32.905" endtime="20231127 16:45:32.949"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.952" endtime="20231127 16:45:32.954"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:32.955" endtime="20231127 16:45:32.956"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:32.950" endtime="20231127 16:45:32.956"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:32.950" endtime="20231127 16:45:32.957"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:32.958" endtime="20231127 16:45:33.031"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.033" level="INFO">Length is 120</msg>
<msg timestamp="20231127 16:45:33.034" level="INFO">${cnt} = 120</msg>
<status status="PASS" starttime="20231127 16:45:33.032" endtime="20231127 16:45:33.034"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:33.039" level="INFO">${STATE["Giới thiệu"]} = Sit commodi distinctio impedit. Vel temporibus dolore sunt. Natus sint dolorem minus voluptates amet. Possimus sit unde.</msg>
<status status="PASS" starttime="20231127 16:45:33.038" endtime="20231127 16:45:33.040"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.035" endtime="20231127 16:45:33.040"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.035" endtime="20231127 16:45:33.041"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:33.041" endtime="20231127 16:45:33.049"/>
</kw>
<status status="PASS" starttime="20231127 16:45:32.708" endtime="20231127 16:45:33.049"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in editor &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in editor &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:33.057" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:33.055" endtime="20231127 16:45:33.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:33.059" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:33.058" endtime="20231127 16:45:33.060"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:33.062" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:33.061" endtime="20231127 16:45:33.062"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.064" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:33.065" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:33.063" endtime="20231127 16:45:33.065"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:33.067" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:33.066" endtime="20231127 16:45:33.068"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.073" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:33.073" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:33.072" endtime="20231127 16:45:33.074"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.076" endtime="20231127 16:45:33.076"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.077" endtime="20231127 16:45:33.078"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.075" endtime="20231127 16:45:33.078"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.080" endtime="20231127 16:45:33.080"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.081" endtime="20231127 16:45:33.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.082" endtime="20231127 16:45:33.083"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.079" endtime="20231127 16:45:33.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.088" endtime="20231127 16:45:33.089"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.090" endtime="20231127 16:45:33.091"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.084" endtime="20231127 16:45:33.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.093" endtime="20231127 16:45:33.094"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.095" endtime="20231127 16:45:33.095"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.092" endtime="20231127 16:45:33.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:33.098" level="INFO">${new_text} = Nihil cum laudantium iure recusandae neque numquam. Labore omnis magni culpa corporis corporis numquam. Nostrum commodi soluta magni quam velit rem.</msg>
<status status="PASS" starttime="20231127 16:45:33.097" endtime="20231127 16:45:33.099"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.096" endtime="20231127 16:45:33.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:33.100" endtime="20231127 16:45:33.101"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.100" endtime="20231127 16:45:33.106"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.107" endtime="20231127 16:45:33.108"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.109" endtime="20231127 16:45:33.109"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.110" endtime="20231127 16:45:33.117"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.106" endtime="20231127 16:45:33.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.123" endtime="20231127 16:45:33.124"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.122" endtime="20231127 16:45:33.125"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.126" endtime="20231127 16:45:33.127"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.126" endtime="20231127 16:45:33.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.130" endtime="20231127 16:45:33.130"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.129" endtime="20231127 16:45:33.131"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.132" endtime="20231127 16:45:33.133"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.131" endtime="20231127 16:45:33.133"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.135" endtime="20231127 16:45:33.136"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.134" endtime="20231127 16:45:33.137"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.074" endtime="20231127 16:45:33.139"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.140" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:33.141" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:33.139" endtime="20231127 16:45:33.141"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:33.144" level="INFO">${text} = Nihil cum laudantium iure recusandae neque numquam. Labore omnis magni culpa corporis corporis numquam. Nostrum commodi soluta magni quam velit rem.</msg>
<status status="PASS" starttime="20231127 16:45:33.143" endtime="20231127 16:45:33.144"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.142" endtime="20231127 16:45:33.144"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.141" endtime="20231127 16:45:33.145"/>
</if>
<msg timestamp="20231127 16:45:33.145" level="INFO">${text} = Nihil cum laudantium iure recusandae neque numquam. Labore omnis magni culpa corporis corporis numquam. Nostrum commodi soluta magni quam velit rem.</msg>
<status status="PASS" starttime="20231127 16:45:33.052" endtime="20231127 16:45:33.145"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ce-paragraph")]</arg>
<msg timestamp="20231127 16:45:33.146" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ce-paragraph")]</msg>
<status status="PASS" starttime="20231127 16:45:33.146" endtime="20231127 16:45:33.147"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:33.147" endtime="20231127 16:45:33.204"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:33.206" level="INFO">Fills the text 'Nihil cum laudantium iure recusandae neque numquam. Labore omnis magni culpa corporis corporis numquam. Nostrum commodi soluta magni quam velit rem.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:33.205" endtime="20231127 16:45:33.248"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.050" endtime="20231127 16:45:33.249"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Tiêu đề SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:33.255" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:33.254" endtime="20231127 16:45:33.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:33.257" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:33.256" endtime="20231127 16:45:33.257"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:33.260" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:33.258" endtime="20231127 16:45:33.260"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.261" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:33.262" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:33.261" endtime="20231127 16:45:33.262"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:33.264" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:33.263" endtime="20231127 16:45:33.265"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.267" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:33.267" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:33.266" endtime="20231127 16:45:33.267"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.271" endtime="20231127 16:45:33.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.273" endtime="20231127 16:45:33.274"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.269" endtime="20231127 16:45:33.274"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.276" endtime="20231127 16:45:33.276"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.277" endtime="20231127 16:45:33.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.279" endtime="20231127 16:45:33.280"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.275" endtime="20231127 16:45:33.280"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.282" endtime="20231127 16:45:33.283"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.284" endtime="20231127 16:45:33.288"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.281" endtime="20231127 16:45:33.289"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.291" endtime="20231127 16:45:33.292"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.293" endtime="20231127 16:45:33.294"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.290" endtime="20231127 16:45:33.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.297" endtime="20231127 16:45:33.298"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.296" endtime="20231127 16:45:33.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:33.300" endtime="20231127 16:45:33.300"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.299" endtime="20231127 16:45:33.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.307" endtime="20231127 16:45:33.308"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.309" endtime="20231127 16:45:33.309"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.311" endtime="20231127 16:45:33.311"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.306" endtime="20231127 16:45:33.312"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.314" endtime="20231127 16:45:33.314"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.312" endtime="20231127 16:45:33.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.316" endtime="20231127 16:45:33.317"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.315" endtime="20231127 16:45:33.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.324" endtime="20231127 16:45:33.325"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.323" endtime="20231127 16:45:33.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.329" endtime="20231127 16:45:33.330"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.326" endtime="20231127 16:45:33.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:33.334" level="INFO">${new_text} = Fugit quae ipsa assumenda enim porro occaecati deleniti.</msg>
<status status="PASS" starttime="20231127 16:45:33.332" endtime="20231127 16:45:33.334"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.331" endtime="20231127 16:45:33.338"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.268" endtime="20231127 16:45:33.340"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.341" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:33.342" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:33.340" endtime="20231127 16:45:33.342"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:33.346" level="INFO">${text} = Fugit quae ipsa assumenda enim porro occaecati deleniti.</msg>
<status status="PASS" starttime="20231127 16:45:33.345" endtime="20231127 16:45:33.346"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.343" endtime="20231127 16:45:33.347"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.343" endtime="20231127 16:45:33.347"/>
</if>
<msg timestamp="20231127 16:45:33.348" level="INFO">${text} = Fugit quae ipsa assumenda enim porro occaecati deleniti.</msg>
<status status="PASS" starttime="20231127 16:45:33.251" endtime="20231127 16:45:33.348"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:33.351" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:33.349" endtime="20231127 16:45:33.356"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:33.356" endtime="20231127 16:45:33.466"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:33.467" endtime="20231127 16:45:33.513"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:33.515" level="INFO">Fills the text 'Fugit quae ipsa assumenda enim porro occaecati deleniti.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:33.514" endtime="20231127 16:45:33.580"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:33.618" level="INFO">Text: 'Fugit quae ipsa assumenda enim porro occaecati deleniti.'</msg>
<msg timestamp="20231127 16:45:33.619" level="INFO">${condition} = Fugit quae ipsa assumenda enim porro occaecati deleniti.</msg>
<status status="PASS" starttime="20231127 16:45:33.581" endtime="20231127 16:45:33.620"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.624" endtime="20231127 16:45:33.625"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.625" endtime="20231127 16:45:33.626"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.621" endtime="20231127 16:45:33.626"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:33.621" endtime="20231127 16:45:33.627"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:33.628" endtime="20231127 16:45:33.697"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.699" level="INFO">Length is 56</msg>
<msg timestamp="20231127 16:45:33.699" level="INFO">${cnt} = 56</msg>
<status status="PASS" starttime="20231127 16:45:33.698" endtime="20231127 16:45:33.700"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:33.705" level="INFO">${STATE["Tiêu đề SEO"]} = Fugit quae ipsa assumenda enim porro occaecati deleniti.</msg>
<status status="PASS" starttime="20231127 16:45:33.703" endtime="20231127 16:45:33.706"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.700" endtime="20231127 16:45:33.707"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.700" endtime="20231127 16:45:33.708"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:33.708" endtime="20231127 16:45:33.717"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.250" endtime="20231127 16:45:33.717"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Từ khóa SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:33.724" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:33.723" endtime="20231127 16:45:33.724"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:33.726" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:33.725" endtime="20231127 16:45:33.726"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:33.728" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:33.727" endtime="20231127 16:45:33.728"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.729" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:33.730" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:33.729" endtime="20231127 16:45:33.730"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:33.732" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:33.731" endtime="20231127 16:45:33.732"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.734" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:33.734" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:33.733" endtime="20231127 16:45:33.734"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.738" endtime="20231127 16:45:33.739"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.740" endtime="20231127 16:45:33.741"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.735" endtime="20231127 16:45:33.741"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.743" endtime="20231127 16:45:33.744"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.745" endtime="20231127 16:45:33.746"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.747" endtime="20231127 16:45:33.747"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.742" endtime="20231127 16:45:33.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.750" endtime="20231127 16:45:33.750"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.753" endtime="20231127 16:45:33.755"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.749" endtime="20231127 16:45:33.755"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.757" endtime="20231127 16:45:33.758"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.758" endtime="20231127 16:45:33.759"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.756" endtime="20231127 16:45:33.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.761" endtime="20231127 16:45:33.762"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.760" endtime="20231127 16:45:33.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:33.764" endtime="20231127 16:45:33.764"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.763" endtime="20231127 16:45:33.765"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.766" endtime="20231127 16:45:33.767"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.768" endtime="20231127 16:45:33.769"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.770" endtime="20231127 16:45:33.771"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.765" endtime="20231127 16:45:33.771"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.777" endtime="20231127 16:45:33.778"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.772" endtime="20231127 16:45:33.779"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.782" endtime="20231127 16:45:33.782"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.780" endtime="20231127 16:45:33.783"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.786" endtime="20231127 16:45:33.787"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.784" endtime="20231127 16:45:33.788"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:33.789" endtime="20231127 16:45:33.790"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:33.788" endtime="20231127 16:45:33.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231127 16:45:33.793" level="INFO">${new_text} = Minima et recusandae laboriosam error repudiandae tenetur.</msg>
<status status="PASS" starttime="20231127 16:45:33.792" endtime="20231127 16:45:33.793"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.791" endtime="20231127 16:45:33.794"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.735" endtime="20231127 16:45:33.794"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:33.796" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:33.796" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:33.795" endtime="20231127 16:45:33.797"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:33.800" level="INFO">${text} = Minima et recusandae laboriosam error repudiandae tenetur.</msg>
<status status="PASS" starttime="20231127 16:45:33.799" endtime="20231127 16:45:33.801"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.797" endtime="20231127 16:45:33.801"/>
</branch>
<status status="PASS" starttime="20231127 16:45:33.797" endtime="20231127 16:45:33.802"/>
</if>
<msg timestamp="20231127 16:45:33.803" level="INFO">${text} = Minima et recusandae laboriosam error repudiandae tenetur.</msg>
<status status="PASS" starttime="20231127 16:45:33.721" endtime="20231127 16:45:33.803"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:33.805" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Từ khóa SEO"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:33.804" endtime="20231127 16:45:33.806"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:33.807" endtime="20231127 16:45:33.903"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:33.905" endtime="20231127 16:45:33.945"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:33.948" level="INFO">Fills the text 'Minima et recusandae laboriosam error repudiandae tenetur.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:33.946" endtime="20231127 16:45:34.013"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:34.052" level="INFO">Text: 'Minima et recusandae laboriosam error repudiandae tenetur.'</msg>
<msg timestamp="20231127 16:45:34.053" level="INFO">${condition} = Minima et recusandae laboriosam error repudiandae tenetur.</msg>
<status status="PASS" starttime="20231127 16:45:34.014" endtime="20231127 16:45:34.054"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.056" endtime="20231127 16:45:34.057"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.058" endtime="20231127 16:45:34.059"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.054" endtime="20231127 16:45:34.059"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:34.054" endtime="20231127 16:45:34.060"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:34.061" endtime="20231127 16:45:34.130"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:34.132" level="INFO">Length is 58</msg>
<msg timestamp="20231127 16:45:34.132" level="INFO">${cnt} = 58</msg>
<status status="PASS" starttime="20231127 16:45:34.131" endtime="20231127 16:45:34.133"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:34.137" level="INFO">${STATE["Từ khóa SEO"]} = Minima et recusandae laboriosam error repudiandae tenetur.</msg>
<status status="PASS" starttime="20231127 16:45:34.135" endtime="20231127 16:45:34.137"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.133" endtime="20231127 16:45:34.138"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.133" endtime="20231127 16:45:34.138"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:34.139" endtime="20231127 16:45:34.147"/>
</kw>
<status status="PASS" starttime="20231127 16:45:33.719" endtime="20231127 16:45:34.148"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả SEO&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:34.154" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:34.153" endtime="20231127 16:45:34.154"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:34.156" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:34.155" endtime="20231127 16:45:34.156"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:34.159" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:34.157" endtime="20231127 16:45:34.159"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:34.161" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:34.161" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:34.160" endtime="20231127 16:45:34.162"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:34.164" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231127 16:45:34.163" endtime="20231127 16:45:34.164"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:34.166" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:34.166" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:34.165" endtime="20231127 16:45:34.167"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.171" endtime="20231127 16:45:34.171"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.172" endtime="20231127 16:45:34.173"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.167" endtime="20231127 16:45:34.174"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.176" endtime="20231127 16:45:34.177"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.177" endtime="20231127 16:45:34.178"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.179" endtime="20231127 16:45:34.179"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.174" endtime="20231127 16:45:34.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.182" endtime="20231127 16:45:34.182"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.183" endtime="20231127 16:45:34.184"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.180" endtime="20231127 16:45:34.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.188" endtime="20231127 16:45:34.188"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.189" endtime="20231127 16:45:34.190"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.186" endtime="20231127 16:45:34.191"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231127 16:45:34.194" level="INFO">${new_text} = Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.</msg>
<status status="PASS" starttime="20231127 16:45:34.193" endtime="20231127 16:45:34.194"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.192" endtime="20231127 16:45:34.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:34.196" endtime="20231127 16:45:34.196"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.195" endtime="20231127 16:45:34.196"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.197" endtime="20231127 16:45:34.197"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.198" endtime="20231127 16:45:34.198"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.199" endtime="20231127 16:45:34.199"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.196" endtime="20231127 16:45:34.199"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.200" endtime="20231127 16:45:34.200"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.199" endtime="20231127 16:45:34.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.202" endtime="20231127 16:45:34.203"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.201" endtime="20231127 16:45:34.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.204" endtime="20231127 16:45:34.204"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.203" endtime="20231127 16:45:34.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.206" endtime="20231127 16:45:34.206"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.205" endtime="20231127 16:45:34.207"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.208" endtime="20231127 16:45:34.209"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.207" endtime="20231127 16:45:34.209"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.167" endtime="20231127 16:45:34.210"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:34.211" level="INFO">Length is 8</msg>
<msg timestamp="20231127 16:45:34.212" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231127 16:45:34.210" endtime="20231127 16:45:34.212"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:34.215" level="INFO">${text} = Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.</msg>
<status status="PASS" starttime="20231127 16:45:34.214" endtime="20231127 16:45:34.216"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.213" endtime="20231127 16:45:34.216"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.213" endtime="20231127 16:45:34.217"/>
</if>
<msg timestamp="20231127 16:45:34.217" level="INFO">${text} = Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.</msg>
<status status="PASS" starttime="20231127 16:45:34.150" endtime="20231127 16:45:34.217"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231127 16:45:34.221" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả SEO"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231127 16:45:34.219" endtime="20231127 16:45:34.221"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:34.222" endtime="20231127 16:45:34.277"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:34.278" level="INFO">Fills the text 'Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:34.277" endtime="20231127 16:45:34.332"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:34.380" level="INFO">Text: 'Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.'</msg>
<msg timestamp="20231127 16:45:34.381" level="INFO">${condition} = Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.</msg>
<status status="PASS" starttime="20231127 16:45:34.333" endtime="20231127 16:45:34.381"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.383" endtime="20231127 16:45:34.383"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.385" endtime="20231127 16:45:34.386"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.381" endtime="20231127 16:45:34.386"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:34.381" endtime="20231127 16:45:34.387"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:34.388" endtime="20231127 16:45:34.480"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:34.482" level="INFO">Length is 119</msg>
<msg timestamp="20231127 16:45:34.483" level="INFO">${cnt} = 119</msg>
<status status="PASS" starttime="20231127 16:45:34.481" endtime="20231127 16:45:34.483"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:34.487" level="INFO">${STATE["Mô tả SEO"]} = Illo cum natus perferendis facere ullam. Consequuntur dolorem recusandae hic dolorem. Veniam alias eius. Est iure quae.</msg>
<status status="PASS" starttime="20231127 16:45:34.485" endtime="20231127 16:45:34.487"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.484" endtime="20231127 16:45:34.487"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.483" endtime="20231127 16:45:34.487"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:34.488" endtime="20231127 16:45:34.496"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.149" endtime="20231127 16:45:34.497"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:34.600" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:34.499" endtime="20231127 16:45:34.600"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:34.610" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:34.601" endtime="20231127 16:45:34.611"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:34.613" endtime="20231127 16:45:34.770"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:34.775" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:34.773" endtime="20231127 16:45:34.776"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:34.810" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:34.777" endtime="20231127 16:45:34.811"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.812" endtime="20231127 16:45:34.813"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.813" endtime="20231127 16:45:34.814"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:34.815" endtime="20231127 16:45:34.815"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.811" endtime="20231127 16:45:34.816"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.811" endtime="20231127 16:45:34.816"/>
</if>
<status status="PASS" starttime="20231127 16:45:34.772" endtime="20231127 16:45:34.816"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231127 16:45:34.847" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:34.848" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:34.879" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:34.880" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:34.893" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231127 16:45:34.817" endtime="20231127 16:45:34.893"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.611" endtime="20231127 16:45:34.894"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.895" endtime="20231127 16:45:34.895"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231127 16:45:34.896" endtime="20231127 16:45:34.896"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.897" endtime="20231127 16:45:34.898"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.894" endtime="20231127 16:45:34.899"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.611" endtime="20231127 16:45:34.899"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:34.900" endtime="20231127 16:45:34.914"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.498" endtime="20231127 16:45:34.915"/>
</kw>
<kw name="User look message &quot;Thêm mới bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:34.921" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:34.918" endtime="20231127 16:45:34.921"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:34.926" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:34.926" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:34.923" endtime="20231127 16:45:34.927"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:34.929" endtime="20231127 16:45:34.929"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:34.928" endtime="20231127 16:45:34.930"/>
</branch>
<status status="PASS" starttime="20231127 16:45:34.927" endtime="20231127 16:45:34.930"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:35.974" level="INFO">Text: 'Thêm mới bài viết thành công'</msg>
<status status="PASS" starttime="20231127 16:45:34.939" endtime="20231127 16:45:35.974"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.932" endtime="20231127 16:45:35.975"/>
</kw>
<status status="PASS" starttime="20231127 16:45:34.931" endtime="20231127 16:45:35.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:35.981" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231127 16:45:35.978" endtime="20231127 16:45:35.982"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231127 16:45:36.412" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231127 16:45:36.412" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231127 16:45:36.413" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231127 16:45:35.989" endtime="20231127 16:45:36.422"/>
</kw>
<status status="FAIL" starttime="20231127 16:45:35.984" endtime="20231127 16:45:36.423"/>
</kw>
<msg timestamp="20231127 16:45:36.424" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231127 16:45:35.983" endtime="20231127 16:45:36.424"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:36.426" endtime="20231127 16:45:36.427"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:36.425" endtime="20231127 16:45:36.427"/>
</branch>
<status status="PASS" starttime="20231127 16:45:36.425" endtime="20231127 16:45:36.428"/>
</if>
<status status="PASS" starttime="20231127 16:45:34.916" endtime="20231127 16:45:36.428"/>
</kw>
<status status="PASS" starttime="20231127 16:45:22.438" endtime="20231127 16:45:36.429"/>
</kw>
<kw name="When Select on the &quot;Cate1&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:36.543" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:36.442" endtime="20231127 16:45:36.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:36.544" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:36.543" endtime="20231127 16:45:36.544"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:36.552" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:36.544" endtime="20231127 16:45:36.553"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:36.555" endtime="20231127 16:45:36.556"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:36.554" endtime="20231127 16:45:36.557"/>
</branch>
<status status="PASS" starttime="20231127 16:45:36.554" endtime="20231127 16:45:36.557"/>
</if>
<status status="PASS" starttime="20231127 16:45:36.440" endtime="20231127 16:45:36.558"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:36.564" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:36.562" endtime="20231127 16:45:36.565"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:36.567" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:36.568" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:36.566" endtime="20231127 16:45:36.568"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:36.570" endtime="20231127 16:45:36.571"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:36.569" endtime="20231127 16:45:36.571"/>
</branch>
<status status="PASS" starttime="20231127 16:45:36.569" endtime="20231127 16:45:36.571"/>
</if>
<msg timestamp="20231127 16:45:36.572" level="INFO">${text} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:36.558" endtime="20231127 16:45:36.572"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231127 16:45:36.574" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231127 16:45:36.573" endtime="20231127 16:45:36.574"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:36.574" endtime="20231127 16:45:37.144"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:37.145" endtime="20231127 16:45:37.155"/>
</kw>
<status status="PASS" starttime="20231127 16:45:36.439" endtime="20231127 16:45:37.156"/>
</kw>
<kw name="When Click on the &quot;Sửa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:37.263" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:37.162" endtime="20231127 16:45:37.263"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:37.365" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:37.265" endtime="20231127 16:45:37.365"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:37.366" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:37.365" endtime="20231127 16:45:37.366"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:37.378" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:37.366" endtime="20231127 16:45:37.379"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:37.380" endtime="20231127 16:45:37.381"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:37.379" endtime="20231127 16:45:37.382"/>
</branch>
<status status="PASS" starttime="20231127 16:45:37.379" endtime="20231127 16:45:37.382"/>
</if>
<status status="PASS" starttime="20231127 16:45:37.263" endtime="20231127 16:45:37.382"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:37.387" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231127 16:45:37.386" endtime="20231127 16:45:37.388"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:37.391" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:37.391" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231127 16:45:37.389" endtime="20231127 16:45:37.392"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:37.397" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:37.394" endtime="20231127 16:45:37.397"/>
</kw>
<status status="PASS" starttime="20231127 16:45:37.393" endtime="20231127 16:45:37.397"/>
</branch>
<status status="PASS" starttime="20231127 16:45:37.392" endtime="20231127 16:45:37.398"/>
</if>
<msg timestamp="20231127 16:45:37.398" level="INFO">${name} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:37.383" endtime="20231127 16:45:37.398"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231127 16:45:37.399" endtime="20231127 16:45:37.399"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:37.400" endtime="20231127 16:45:37.400"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:37.404" endtime="20231127 16:45:37.405"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:37.403" endtime="20231127 16:45:37.406"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231127 16:45:37.409" endtime="20231127 16:45:37.410"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:37.411" endtime="20231127 16:45:37.411"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:37.408" endtime="20231127 16:45:37.412"/>
</branch>
<status status="NOT RUN" starttime="20231127 16:45:37.403" endtime="20231127 16:45:37.412"/>
</if>
<status status="NOT RUN" starttime="20231127 16:45:37.399" endtime="20231127 16:45:37.412"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231127 16:45:37.413" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_45 Magni inventore.")]/ancestor::tr//button[@title = "Sửa"]</msg>
<status status="PASS" starttime="20231127 16:45:37.413" endtime="20231127 16:45:37.414"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:37.414" endtime="20231127 16:45:37.783"/>
</kw>
<status status="PASS" starttime="20231127 16:45:37.412" endtime="20231127 16:45:37.785"/>
</branch>
<status status="PASS" starttime="20231127 16:45:37.398" endtime="20231127 16:45:37.786"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:37.791" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:37.790" endtime="20231127 16:45:37.792"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:37.925" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:37.793" endtime="20231127 16:45:37.926"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:37.930" endtime="20231127 16:45:37.930"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:37.931" endtime="20231127 16:45:37.932"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:37.932" endtime="20231127 16:45:37.933"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:37.927" endtime="20231127 16:45:37.934"/>
</branch>
<status status="PASS" starttime="20231127 16:45:37.927" endtime="20231127 16:45:37.936"/>
</if>
<status status="PASS" starttime="20231127 16:45:37.786" endtime="20231127 16:45:37.937"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:37.938" endtime="20231127 16:45:37.947"/>
</kw>
<status status="PASS" starttime="20231127 16:45:37.161" endtime="20231127 16:45:37.947"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Custom Class&quot; with &quot;text-blue-600&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:38.060" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231127 16:45:38.049" endtime="20231127 16:45:38.063"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:38.071" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231127 16:45:38.065" endtime="20231127 16:45:38.081"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:38.092" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:38.082" endtime="20231127 16:45:38.093"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:38.096" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:38.096" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:38.095" endtime="20231127 16:45:38.097"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:38.099" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:38.098" endtime="20231127 16:45:38.100"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:38.114" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:38.115" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:38.113" endtime="20231127 16:45:38.116"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.127" endtime="20231127 16:45:38.128"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.130" endtime="20231127 16:45:38.131"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.121" endtime="20231127 16:45:38.132"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.142" endtime="20231127 16:45:38.143"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.144" endtime="20231127 16:45:38.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.146" endtime="20231127 16:45:38.147"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.132" endtime="20231127 16:45:38.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.149" endtime="20231127 16:45:38.149"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.154" endtime="20231127 16:45:38.156"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.148" endtime="20231127 16:45:38.157"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.161" endtime="20231127 16:45:38.162"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.163" endtime="20231127 16:45:38.163"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.161" endtime="20231127 16:45:38.164"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.175" endtime="20231127 16:45:38.176"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.165" endtime="20231127 16:45:38.176"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231127 16:45:38.178" endtime="20231127 16:45:38.179"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.177" endtime="20231127 16:45:38.180"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.181" endtime="20231127 16:45:38.182"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.183" endtime="20231127 16:45:38.192"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.193" endtime="20231127 16:45:38.194"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.180" endtime="20231127 16:45:38.194"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.197" endtime="20231127 16:45:38.198"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.195" endtime="20231127 16:45:38.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.208" endtime="20231127 16:45:38.209"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.199" endtime="20231127 16:45:38.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.211" endtime="20231127 16:45:38.212"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.210" endtime="20231127 16:45:38.212"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.216" endtime="20231127 16:45:38.224"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.213" endtime="20231127 16:45:38.225"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.227" endtime="20231127 16:45:38.227"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.225" endtime="20231127 16:45:38.228"/>
</branch>
<status status="PASS" starttime="20231127 16:45:38.116" endtime="20231127 16:45:38.228"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:38.230" level="INFO">Length is 13</msg>
<msg timestamp="20231127 16:45:38.231" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231127 16:45:38.229" endtime="20231127 16:45:38.231"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231127 16:45:38.241" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:38.235" endtime="20231127 16:45:38.241"/>
</kw>
<status status="PASS" starttime="20231127 16:45:38.232" endtime="20231127 16:45:38.242"/>
</branch>
<status status="PASS" starttime="20231127 16:45:38.232" endtime="20231127 16:45:38.242"/>
</if>
<msg timestamp="20231127 16:45:38.243" level="INFO">${text} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:38.046" endtime="20231127 16:45:38.243"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231127 16:45:38.245" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231127 16:45:38.244" endtime="20231127 16:45:38.246"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:38.247" endtime="20231127 16:45:38.354"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:38.355" endtime="20231127 16:45:38.430"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231127 16:45:38.432" level="INFO">Fills the text 'text-blue-600' in the given field.</msg>
<status status="PASS" starttime="20231127 16:45:38.431" endtime="20231127 16:45:38.498"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:38.536" level="INFO">Text: 'text-blue-600'</msg>
<msg timestamp="20231127 16:45:38.537" level="INFO">${condition} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:38.499" endtime="20231127 16:45:38.538"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.540" endtime="20231127 16:45:38.541"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.542" endtime="20231127 16:45:38.542"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.538" endtime="20231127 16:45:38.543"/>
</iter>
<status status="NOT RUN" starttime="20231127 16:45:38.538" endtime="20231127 16:45:38.543"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231127 16:45:38.544" endtime="20231127 16:45:38.615"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:38.617" level="INFO">Length is 13</msg>
<msg timestamp="20231127 16:45:38.618" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231127 16:45:38.616" endtime="20231127 16:45:38.618"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231127 16:45:38.623" level="INFO">${STATE["Custom Class"]} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:38.621" endtime="20231127 16:45:38.623"/>
</kw>
<status status="PASS" starttime="20231127 16:45:38.620" endtime="20231127 16:45:38.624"/>
</branch>
<status status="PASS" starttime="20231127 16:45:38.619" endtime="20231127 16:45:38.625"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:38.625" endtime="20231127 16:45:38.634"/>
</kw>
<status status="PASS" starttime="20231127 16:45:38.045" endtime="20231127 16:45:38.635"/>
</kw>
<kw name="When Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:38.776" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:38.673" endtime="20231127 16:45:38.776"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:38.786" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:38.776" endtime="20231127 16:45:38.787"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:38.788" endtime="20231127 16:45:38.932"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:38.940" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:38.935" endtime="20231127 16:45:38.941"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:38.958" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:38.943" endtime="20231127 16:45:38.959"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.964" endtime="20231127 16:45:38.965"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:38.965" endtime="20231127 16:45:38.966"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:38.968" endtime="20231127 16:45:38.970"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:38.962" endtime="20231127 16:45:38.971"/>
</branch>
<status status="PASS" starttime="20231127 16:45:38.960" endtime="20231127 16:45:38.971"/>
</if>
<status status="PASS" starttime="20231127 16:45:38.932" endtime="20231127 16:45:38.972"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231127 16:45:39.273" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:39.273" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:39.672" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:39.673" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:39.705" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231127 16:45:38.972" endtime="20231127 16:45:39.709"/>
</kw>
<status status="PASS" starttime="20231127 16:45:38.787" endtime="20231127 16:45:39.711"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:39.713" endtime="20231127 16:45:39.714"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231127 16:45:39.714" endtime="20231127 16:45:39.715"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231127 16:45:39.716" endtime="20231127 16:45:39.720"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:39.712" endtime="20231127 16:45:39.721"/>
</branch>
<status status="PASS" starttime="20231127 16:45:38.787" endtime="20231127 16:45:39.722"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:39.723" endtime="20231127 16:45:39.741"/>
</kw>
<status status="PASS" starttime="20231127 16:45:38.672" endtime="20231127 16:45:39.742"/>
</kw>
<kw name="Then User look message &quot;Cập nhật bài viết thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:39.766" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231127 16:45:39.764" endtime="20231127 16:45:39.766"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:39.777" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:39.778" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231127 16:45:39.770" endtime="20231127 16:45:39.778"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:39.780" endtime="20231127 16:45:39.780"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:39.779" endtime="20231127 16:45:39.781"/>
</branch>
<status status="PASS" starttime="20231127 16:45:39.779" endtime="20231127 16:45:39.782"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:39.878" level="INFO">Text: 'Cập nhật bài viết thành công'</msg>
<status status="PASS" starttime="20231127 16:45:39.807" endtime="20231127 16:45:39.880"/>
</kw>
<status status="PASS" starttime="20231127 16:45:39.797" endtime="20231127 16:45:39.881"/>
</kw>
<status status="PASS" starttime="20231127 16:45:39.782" endtime="20231127 16:45:39.881"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:39.883" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231127 16:45:39.882" endtime="20231127 16:45:39.883"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231127 16:45:40.260" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231127 16:45:40.261" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231127 16:45:40.262" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231127 16:45:39.894" endtime="20231127 16:45:40.265"/>
</kw>
<status status="FAIL" starttime="20231127 16:45:39.890" endtime="20231127 16:45:40.266"/>
</kw>
<msg timestamp="20231127 16:45:40.268" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231127 16:45:39.888" endtime="20231127 16:45:40.268"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:40.272" endtime="20231127 16:45:40.273"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:40.271" endtime="20231127 16:45:40.273"/>
</branch>
<status status="PASS" starttime="20231127 16:45:40.271" endtime="20231127 16:45:40.274"/>
</if>
<status status="PASS" starttime="20231127 16:45:39.762" endtime="20231127 16:45:40.274"/>
</kw>
<kw name="When Click on the &quot;Sửa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:40.380" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:40.279" endtime="20231127 16:45:40.380"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:40.481" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:40.381" endtime="20231127 16:45:40.481"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:40.483" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:40.482" endtime="20231127 16:45:40.484"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:40.494" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:40.485" endtime="20231127 16:45:40.495"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:40.497" endtime="20231127 16:45:40.497"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:40.495" endtime="20231127 16:45:40.498"/>
</branch>
<status status="PASS" starttime="20231127 16:45:40.495" endtime="20231127 16:45:40.499"/>
</if>
<status status="PASS" starttime="20231127 16:45:40.380" endtime="20231127 16:45:40.499"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:40.504" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231127 16:45:40.502" endtime="20231127 16:45:40.504"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:40.506" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:40.506" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231127 16:45:40.505" endtime="20231127 16:45:40.506"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:40.511" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:40.508" endtime="20231127 16:45:40.511"/>
</kw>
<status status="PASS" starttime="20231127 16:45:40.507" endtime="20231127 16:45:40.512"/>
</branch>
<status status="PASS" starttime="20231127 16:45:40.507" endtime="20231127 16:45:40.512"/>
</if>
<msg timestamp="20231127 16:45:40.513" level="INFO">${name} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:40.501" endtime="20231127 16:45:40.513"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231127 16:45:40.515" endtime="20231127 16:45:40.516"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:40.518" endtime="20231127 16:45:40.519"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:40.520" endtime="20231127 16:45:40.521"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:40.519" endtime="20231127 16:45:40.521"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231127 16:45:40.522" endtime="20231127 16:45:40.523"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:40.524" endtime="20231127 16:45:40.524"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:40.522" endtime="20231127 16:45:40.524"/>
</branch>
<status status="NOT RUN" starttime="20231127 16:45:40.519" endtime="20231127 16:45:40.525"/>
</if>
<status status="NOT RUN" starttime="20231127 16:45:40.514" endtime="20231127 16:45:40.525"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231127 16:45:40.527" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_45 Magni inventore.")]/ancestor::tr//button[@title = "Sửa"]</msg>
<status status="PASS" starttime="20231127 16:45:40.526" endtime="20231127 16:45:40.528"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:40.528" endtime="20231127 16:45:41.124"/>
</kw>
<status status="PASS" starttime="20231127 16:45:40.525" endtime="20231127 16:45:41.125"/>
</branch>
<status status="PASS" starttime="20231127 16:45:40.514" endtime="20231127 16:45:41.125"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:41.129" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:41.127" endtime="20231127 16:45:41.130"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:41.227" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:41.130" endtime="20231127 16:45:41.228"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.229" endtime="20231127 16:45:41.229"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.229" endtime="20231127 16:45:41.230"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:41.230" endtime="20231127 16:45:41.231"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:41.228" endtime="20231127 16:45:41.231"/>
</branch>
<status status="PASS" starttime="20231127 16:45:41.228" endtime="20231127 16:45:41.232"/>
</if>
<status status="PASS" starttime="20231127 16:45:41.126" endtime="20231127 16:45:41.232"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:41.236" endtime="20231127 16:45:41.248"/>
</kw>
<status status="PASS" starttime="20231127 16:45:40.277" endtime="20231127 16:45:41.249"/>
</kw>
<kw name="Then Data's information in &quot;Custom Class&quot; should be equal &quot;text-blue-600&quot;" library="common" sourcename="Data's information in &quot;${name}&quot; should be equal &quot;${value}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:41.366" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:41.264" endtime="20231127 16:45:41.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:41.373" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:41.371" endtime="20231127 16:45:41.374"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:41.403" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:41.376" endtime="20231127 16:45:41.409"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:41.412" endtime="20231127 16:45:41.412"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:41.410" endtime="20231127 16:45:41.412"/>
</branch>
<status status="PASS" starttime="20231127 16:45:41.410" endtime="20231127 16:45:41.413"/>
</if>
<status status="PASS" starttime="20231127 16:45:41.263" endtime="20231127 16:45:41.413"/>
</kw>
<kw name="Check Text" library="common">
<var>${value}</var>
<arg>${value}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:41.416" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:41.414" endtime="20231127 16:45:41.416"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:41.424" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:41.424" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:41.423" endtime="20231127 16:45:41.424"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.426" endtime="20231127 16:45:41.427"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:41.425" endtime="20231127 16:45:41.427"/>
</branch>
<status status="PASS" starttime="20231127 16:45:41.425" endtime="20231127 16:45:41.428"/>
</if>
<msg timestamp="20231127 16:45:41.428" level="INFO">${value} = text-blue-600</msg>
<status status="PASS" starttime="20231127 16:45:41.413" endtime="20231127 16:45:41.428"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//label[text()="${name}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:41.443" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:41.428" endtime="20231127 16:45:41.444"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class,'ant-input')]</arg>
<msg timestamp="20231127 16:45:41.448" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Custom Class"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class,'ant-input')]</msg>
<status status="PASS" starttime="20231127 16:45:41.446" endtime="20231127 16:45:41.448"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:41.480" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231127 16:45:41.452" endtime="20231127 16:45:41.480"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>equal</arg>
<arg>${value}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231127 16:45:41.606" level="INFO">Text: 'text-blue-600'</msg>
<status status="PASS" starttime="20231127 16:45:41.483" endtime="20231127 16:45:41.607"/>
</kw>
<status status="PASS" starttime="20231127 16:45:41.481" endtime="20231127 16:45:41.607"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class,'ant-select-selection-item')]</arg>
<status status="NOT RUN" starttime="20231127 16:45:41.609" endtime="20231127 16:45:41.610"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt2}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.610" endtime="20231127 16:45:41.611"/>
</kw>
<if>
<branch type="IF" condition="${cnt2} &gt; 0">
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>equal</arg>
<arg>${value}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.613" endtime="20231127 16:45:41.613"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:41.612" endtime="20231127 16:45:41.614"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-radio-button-wrapper") and contains(@class,'ant-radio-button-wrapper-checked')]/span[contains(text(), "${value}")]</arg>
<status status="NOT RUN" starttime="20231127 16:45:41.616" endtime="20231127 16:45:41.620"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt3}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.621" endtime="20231127 16:45:41.623"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt3} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.624" endtime="20231127 16:45:41.625"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:41.614" endtime="20231127 16:45:41.626"/>
</branch>
<status status="NOT RUN" starttime="20231127 16:45:41.612" endtime="20231127 16:45:41.626"/>
</if>
<status status="NOT RUN" starttime="20231127 16:45:41.608" endtime="20231127 16:45:41.627"/>
</branch>
<status status="PASS" starttime="20231127 16:45:41.481" endtime="20231127 16:45:41.627"/>
</if>
<status status="PASS" starttime="20231127 16:45:41.445" endtime="20231127 16:45:41.628"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//th[contains(text(),"${name}")]//following-sibling::th[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.629" endtime="20231127 16:45:41.629"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>equal</arg>
<arg>${value}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:41.630" endtime="20231127 16:45:41.630"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:41.628" endtime="20231127 16:45:41.631"/>
</branch>
<status status="PASS" starttime="20231127 16:45:41.444" endtime="20231127 16:45:41.632"/>
</if>
<status status="PASS" starttime="20231127 16:45:41.261" endtime="20231127 16:45:41.632"/>
</kw>
<kw name="When Click &quot;Đóng lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:41.754" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:41.652" endtime="20231127 16:45:41.754"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:41.764" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231127 16:45:41.755" endtime="20231127 16:45:41.764"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:41.766" endtime="20231127 16:45:42.222"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:42.226" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:42.224" endtime="20231127 16:45:42.226"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:42.283" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:42.227" endtime="20231127 16:45:42.284"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.288" endtime="20231127 16:45:42.288"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.289" endtime="20231127 16:45:42.289"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231127 16:45:42.290" endtime="20231127 16:45:42.290"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:42.287" endtime="20231127 16:45:42.290"/>
</branch>
<status status="PASS" starttime="20231127 16:45:42.286" endtime="20231127 16:45:42.291"/>
</if>
<status status="PASS" starttime="20231127 16:45:42.223" endtime="20231127 16:45:42.291"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231127 16:45:42.329" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:42.330" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:42.366" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:42.367" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231127 16:45:42.380" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231127 16:45:42.291" endtime="20231127 16:45:42.381"/>
</kw>
<status status="PASS" starttime="20231127 16:45:41.765" endtime="20231127 16:45:42.382"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.385" endtime="20231127 16:45:42.389"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231127 16:45:42.392" endtime="20231127 16:45:42.394"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.397" endtime="20231127 16:45:42.399"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:42.382" endtime="20231127 16:45:42.405"/>
</branch>
<status status="PASS" starttime="20231127 16:45:41.765" endtime="20231127 16:45:42.406"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:42.407" endtime="20231127 16:45:42.418"/>
</kw>
<status status="PASS" starttime="20231127 16:45:41.649" endtime="20231127 16:45:42.420"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:42.532" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:42.429" endtime="20231127 16:45:42.532"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:42.633" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:42.532" endtime="20231127 16:45:42.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:42.637" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:42.636" endtime="20231127 16:45:42.637"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:42.645" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:42.637" endtime="20231127 16:45:42.646"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:42.647" endtime="20231127 16:45:42.648"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:42.646" endtime="20231127 16:45:42.648"/>
</branch>
<status status="PASS" starttime="20231127 16:45:42.646" endtime="20231127 16:45:42.649"/>
</if>
<status status="PASS" starttime="20231127 16:45:42.532" endtime="20231127 16:45:42.649"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:42.653" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231127 16:45:42.652" endtime="20231127 16:45:42.654"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:42.655" level="INFO">Length is 1</msg>
<msg timestamp="20231127 16:45:42.655" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231127 16:45:42.654" endtime="20231127 16:45:42.655"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:42.657" level="INFO">${text} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:42.656" endtime="20231127 16:45:42.657"/>
</kw>
<status status="PASS" starttime="20231127 16:45:42.655" endtime="20231127 16:45:42.657"/>
</branch>
<status status="PASS" starttime="20231127 16:45:42.655" endtime="20231127 16:45:42.657"/>
</if>
<msg timestamp="20231127 16:45:42.658" level="INFO">${name} = PO_45 Magni inventore.</msg>
<status status="PASS" starttime="20231127 16:45:42.651" endtime="20231127 16:45:42.658"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231127 16:45:42.658" endtime="20231127 16:45:42.659"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.659" endtime="20231127 16:45:42.659"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.660" endtime="20231127 16:45:42.660"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:42.660" endtime="20231127 16:45:42.660"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231127 16:45:42.661" endtime="20231127 16:45:42.661"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231127 16:45:42.661" endtime="20231127 16:45:42.661"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:42.660" endtime="20231127 16:45:42.662"/>
</branch>
<status status="NOT RUN" starttime="20231127 16:45:42.659" endtime="20231127 16:45:42.662"/>
</if>
<status status="NOT RUN" starttime="20231127 16:45:42.658" endtime="20231127 16:45:42.662"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231127 16:45:42.664" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"PO_45 Magni inventore.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231127 16:45:42.662" endtime="20231127 16:45:42.664"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:42.665" endtime="20231127 16:45:42.797"/>
</kw>
<status status="PASS" starttime="20231127 16:45:42.662" endtime="20231127 16:45:42.798"/>
</branch>
<status status="PASS" starttime="20231127 16:45:42.658" endtime="20231127 16:45:42.798"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:42.803" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:42.801" endtime="20231127 16:45:42.803"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:42.814" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231127 16:45:42.804" endtime="20231127 16:45:42.814"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:42.818" endtime="20231127 16:45:43.157"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:43.260" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:43.158" endtime="20231127 16:45:43.260"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:43.364" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:43.262" endtime="20231127 16:45:43.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:43.365" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:43.364" endtime="20231127 16:45:43.365"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:43.394" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231127 16:45:43.366" endtime="20231127 16:45:43.394"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231127 16:45:43.595" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-spin-spinning")] at state detached</msg>
<status status="PASS" starttime="20231127 16:45:43.399" endtime="20231127 16:45:43.596"/>
</kw>
<status status="PASS" starttime="20231127 16:45:43.396" endtime="20231127 16:45:43.596"/>
</kw>
<status status="PASS" starttime="20231127 16:45:43.395" endtime="20231127 16:45:43.596"/>
</branch>
<status status="PASS" starttime="20231127 16:45:43.395" endtime="20231127 16:45:43.597"/>
</if>
<status status="PASS" starttime="20231127 16:45:43.261" endtime="20231127 16:45:43.597"/>
</kw>
<status status="PASS" starttime="20231127 16:45:42.815" endtime="20231127 16:45:43.597"/>
</branch>
<status status="PASS" starttime="20231127 16:45:42.815" endtime="20231127 16:45:43.598"/>
</if>
<status status="PASS" starttime="20231127 16:45:42.799" endtime="20231127 16:45:43.598"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:43.599" endtime="20231127 16:45:43.613"/>
</kw>
<status status="PASS" starttime="20231127 16:45:42.428" endtime="20231127 16:45:43.613"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;Cate1&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:43.727" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:43.625" endtime="20231127 16:45:43.727"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:43.728" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:43.727" endtime="20231127 16:45:43.728"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:43.740" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:43.729" endtime="20231127 16:45:43.740"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:43.742" endtime="20231127 16:45:43.743"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:43.741" endtime="20231127 16:45:43.744"/>
</branch>
<status status="PASS" starttime="20231127 16:45:43.741" endtime="20231127 16:45:43.744"/>
</if>
<status status="PASS" starttime="20231127 16:45:43.619" endtime="20231127 16:45:43.745"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231127 16:45:43.748" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231127 16:45:43.747" endtime="20231127 16:45:43.748"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231127 16:45:43.754" level="INFO">Length is 0</msg>
<msg timestamp="20231127 16:45:43.755" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231127 16:45:43.749" endtime="20231127 16:45:43.755"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231127 16:45:43.757" endtime="20231127 16:45:43.758"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:43.756" endtime="20231127 16:45:43.758"/>
</branch>
<status status="PASS" starttime="20231127 16:45:43.756" endtime="20231127 16:45:43.758"/>
</if>
<msg timestamp="20231127 16:45:43.759" level="INFO">${name} = Cate1</msg>
<status status="PASS" starttime="20231127 16:45:43.745" endtime="20231127 16:45:43.759"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231127 16:45:43.760" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Cate1")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231127 16:45:43.759" endtime="20231127 16:45:43.760"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:43.760" endtime="20231127 16:45:45.363"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:45.364" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231127 16:45:45.364" endtime="20231127 16:45:45.364"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:45.378" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231127 16:45:45.365" endtime="20231127 16:45:45.379"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231127 16:45:45.380" endtime="20231127 16:45:45.642"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:45.745" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:45.644" endtime="20231127 16:45:45.745"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231127 16:45:45.848" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231127 16:45:45.746" endtime="20231127 16:45:45.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231127 16:45:45.849" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231127 16:45:45.848" endtime="20231127 16:45:45.849"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231127 16:45:45.874" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231127 16:45:45.850" endtime="20231127 16:45:45.876"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231127 16:45:45.878" endtime="20231127 16:45:45.879"/>
</kw>
<status status="NOT RUN" starttime="20231127 16:45:45.877" endtime="20231127 16:45:45.879"/>
</branch>
<status status="PASS" starttime="20231127 16:45:45.877" endtime="20231127 16:45:45.880"/>
</if>
<status status="PASS" starttime="20231127 16:45:45.746" endtime="20231127 16:45:45.880"/>
</kw>
<status status="PASS" starttime="20231127 16:45:45.379" endtime="20231127 16:45:45.881"/>
</branch>
<status status="PASS" starttime="20231127 16:45:45.379" endtime="20231127 16:45:45.882"/>
</if>
<status status="PASS" starttime="20231127 16:45:45.363" endtime="20231127 16:45:45.882"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231127 16:45:45.884" endtime="20231127 16:45:45.897"/>
</kw>
<status status="PASS" starttime="20231127 16:45:43.615" endtime="20231127 16:45:45.897"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231127 16:45:47.395" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231127 16:45:45.907" endtime="20231127 16:45:47.395"/>
</kw>
<status status="PASS" starttime="20231127 16:45:45.899" endtime="20231127 16:45:47.396"/>
</kw>
<tag>ChangeInfo</tag>
<status status="PASS" starttime="20231127 16:45:11.541" endtime="20231127 16:45:47.403"/>
</test>
<status status="PASS" starttime="20231127 16:45:09.152" endtime="20231127 16:45:47.489"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">ChangeInfo</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Post">Post</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

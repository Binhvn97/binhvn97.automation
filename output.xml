<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231129 10:57:10.005" rpa="false" schemaversion="4">
<suite id="s1" name="Customer Account" source="d:\TESTER\Automation\Auto_Web\testcases\customer_account.robot">
<test id="s1-t1" name="CA_18 Verify the deselect filter function when click on cross button" line="216">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231129 10:57:14.014" endtime="20231129 10:57:14.015"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231129 10:57:14.019" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\db7801e3-098b-42a6-8c34-705e6a6a2985"}</msg>
<msg timestamp="20231129 10:57:15.483" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\db7801e3-098b-42a6-8c34-705e6a6a2985"}</msg>
<status status="PASS" starttime="20231129 10:57:14.017" endtime="20231129 10:57:15.484"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231129 10:57:20.261" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231129 10:57:20.261" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231129 10:57:15.485" endtime="20231129 10:57:20.262"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 10:57:20.265" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231129 10:57:20.263" endtime="20231129 10:57:20.265"/>
</kw>
<status status="PASS" starttime="20231129 10:57:14.012" endtime="20231129 10:57:20.266"/>
</kw>
<kw name="Create a test account with &quot;Order Side&quot; type" sourcename="Create a test account with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Tài khoản khách hàng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Tài khoản khách hàng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:20.388" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:20.299" endtime="20231129 10:57:20.388"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231129 10:57:20.392" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231129 10:57:20.390" endtime="20231129 10:57:20.392"/>
</kw>
<status status="FAIL" starttime="20231129 10:57:20.297" endtime="20231129 10:57:20.393"/>
</kw>
<msg timestamp="20231129 10:57:20.393" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231129 10:57:20.295" endtime="20231129 10:57:20.394"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231129 10:57:20.395" endtime="20231129 10:57:20.396"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.394" endtime="20231129 10:57:20.396"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create account &quot;Tài khoản Người dùng&quot; with &quot;/customer-account&quot;" sourcename="Go to page create account &quot;${name}&quot; with &quot;${url}&quot;">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:20.514" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:20.408" endtime="20231129 10:57:20.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:20.516" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:20.515" endtime="20231129 10:57:20.516"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:20.531" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:20.517" endtime="20231129 10:57:20.531"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:20.533" endtime="20231129 10:57:20.534"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.532" endtime="20231129 10:57:20.534"/>
</branch>
<status status="PASS" starttime="20231129 10:57:20.532" endtime="20231129 10:57:20.535"/>
</if>
<status status="PASS" starttime="20231129 10:57:20.401" endtime="20231129 10:57:20.535"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:20.542" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:20.537" endtime="20231129 10:57:20.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:20.546" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:20.543" endtime="20231129 10:57:20.547"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:20.549" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:20.547" endtime="20231129 10:57:20.549"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:20.551" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:20.563" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:20.550" endtime="20231129 10:57:20.564"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:20.568" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:20.566" endtime="20231129 10:57:20.569"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:20.576" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:20.577" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:20.571" endtime="20231129 10:57:20.577"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.579" endtime="20231129 10:57:20.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.581" endtime="20231129 10:57:20.582"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.578" endtime="20231129 10:57:20.582"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.584" endtime="20231129 10:57:20.585"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.587" endtime="20231129 10:57:20.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.591" endtime="20231129 10:57:20.593"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.583" endtime="20231129 10:57:20.594"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.596" endtime="20231129 10:57:20.597"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.598" endtime="20231129 10:57:20.599"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.594" endtime="20231129 10:57:20.609"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.613" endtime="20231129 10:57:20.614"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.616" endtime="20231129 10:57:20.617"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.612" endtime="20231129 10:57:20.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.625" endtime="20231129 10:57:20.626"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.619" endtime="20231129 10:57:20.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:20.631" endtime="20231129 10:57:20.632"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.628" endtime="20231129 10:57:20.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.634" endtime="20231129 10:57:20.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.635" endtime="20231129 10:57:20.636"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.637" endtime="20231129 10:57:20.637"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.633" endtime="20231129 10:57:20.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.641" endtime="20231129 10:57:20.641"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.640" endtime="20231129 10:57:20.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.644" endtime="20231129 10:57:20.646"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.642" endtime="20231129 10:57:20.687"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.696" endtime="20231129 10:57:20.698"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.694" endtime="20231129 10:57:20.700"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.711" endtime="20231129 10:57:20.712"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.703" endtime="20231129 10:57:20.712"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:20.714" endtime="20231129 10:57:20.715"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:20.713" endtime="20231129 10:57:20.716"/>
</branch>
<status status="PASS" starttime="20231129 10:57:20.578" endtime="20231129 10:57:20.716"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:20.718" level="INFO">Length is 15</msg>
<msg timestamp="20231129 10:57:20.719" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231129 10:57:20.717" endtime="20231129 10:57:20.719"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:20.727" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 10:57:20.726" endtime="20231129 10:57:20.728"/>
</kw>
<status status="PASS" starttime="20231129 10:57:20.720" endtime="20231129 10:57:20.728"/>
</branch>
<status status="PASS" starttime="20231129 10:57:20.720" endtime="20231129 10:57:20.729"/>
</if>
<msg timestamp="20231129 10:57:20.730" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 10:57:20.536" endtime="20231129 10:57:20.730"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:20.733" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:20.731" endtime="20231129 10:57:20.734"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:20.734" endtime="20231129 10:57:20.947"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:20.948" endtime="20231129 10:57:21.011"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:21.013" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:21.012" endtime="20231129 10:57:21.095"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:21.174" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231129 10:57:21.176" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 10:57:21.096" endtime="20231129 10:57:21.176"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.180" endtime="20231129 10:57:21.181"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.181" endtime="20231129 10:57:21.182"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.178" endtime="20231129 10:57:21.182"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:21.178" endtime="20231129 10:57:21.183"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:21.184" endtime="20231129 10:57:21.269"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:21.272" level="INFO">Length is 15</msg>
<msg timestamp="20231129 10:57:21.274" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231129 10:57:21.270" endtime="20231129 10:57:21.274"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:21.279" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231129 10:57:21.277" endtime="20231129 10:57:21.279"/>
</kw>
<status status="PASS" starttime="20231129 10:57:21.275" endtime="20231129 10:57:21.280"/>
</branch>
<status status="PASS" starttime="20231129 10:57:21.275" endtime="20231129 10:57:21.280"/>
</if>
<status status="PASS" starttime="20231129 10:57:20.400" endtime="20231129 10:57:21.281"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:21.386" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:21.284" endtime="20231129 10:57:21.386"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:21.389" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:21.387" endtime="20231129 10:57:21.390"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:21.403" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:21.391" endtime="20231129 10:57:21.404"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:21.408" endtime="20231129 10:57:21.408"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.405" endtime="20231129 10:57:21.409"/>
</branch>
<status status="PASS" starttime="20231129 10:57:21.405" endtime="20231129 10:57:21.410"/>
</if>
<status status="PASS" starttime="20231129 10:57:21.283" endtime="20231129 10:57:21.414"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:21.418" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:21.417" endtime="20231129 10:57:21.418"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:21.420" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:21.419" endtime="20231129 10:57:21.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:21.427" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:21.426" endtime="20231129 10:57:21.428"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:21.430" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:21.430" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:21.429" endtime="20231129 10:57:21.431"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:21.433" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:21.432" endtime="20231129 10:57:21.434"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:21.436" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:21.436" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:21.435" endtime="20231129 10:57:21.437"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.442" endtime="20231129 10:57:21.443"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.444" endtime="20231129 10:57:21.445"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.438" endtime="20231129 10:57:21.446"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.447" endtime="20231129 10:57:21.448"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.449" endtime="20231129 10:57:21.450"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.451" endtime="20231129 10:57:21.452"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.446" endtime="20231129 10:57:21.453"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.461" endtime="20231129 10:57:21.462"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.463" endtime="20231129 10:57:21.464"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.455" endtime="20231129 10:57:21.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.466" endtime="20231129 10:57:21.467"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.468" endtime="20231129 10:57:21.469"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.465" endtime="20231129 10:57:21.470"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.473" endtime="20231129 10:57:21.476"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.470" endtime="20231129 10:57:21.477"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:21.479" endtime="20231129 10:57:21.479"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.477" endtime="20231129 10:57:21.480"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.482" endtime="20231129 10:57:21.482"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.483" endtime="20231129 10:57:21.484"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.485" endtime="20231129 10:57:21.486"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.480" endtime="20231129 10:57:21.486"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.488" endtime="20231129 10:57:21.491"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.487" endtime="20231129 10:57:21.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.496" endtime="20231129 10:57:21.497"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.494" endtime="20231129 10:57:21.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.501" endtime="20231129 10:57:21.501"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.499" endtime="20231129 10:57:21.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.505" endtime="20231129 10:57:21.509"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.503" endtime="20231129 10:57:21.510"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.511" endtime="20231129 10:57:21.512"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.510" endtime="20231129 10:57:21.513"/>
</branch>
<status status="PASS" starttime="20231129 10:57:21.437" endtime="20231129 10:57:21.513"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:21.515" level="INFO">Length is 6</msg>
<msg timestamp="20231129 10:57:21.515" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231129 10:57:21.514" endtime="20231129 10:57:21.516"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:21.519" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231129 10:57:21.518" endtime="20231129 10:57:21.520"/>
</kw>
<status status="PASS" starttime="20231129 10:57:21.517" endtime="20231129 10:57:21.520"/>
</branch>
<status status="PASS" starttime="20231129 10:57:21.516" endtime="20231129 10:57:21.521"/>
</if>
<msg timestamp="20231129 10:57:21.524" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231129 10:57:21.415" endtime="20231129 10:57:21.525"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:21.528" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:21.526" endtime="20231129 10:57:21.528"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:21.529" endtime="20231129 10:57:21.638"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:21.640" endtime="20231129 10:57:21.686"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:21.689" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:21.687" endtime="20231129 10:57:21.745"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:21.797" level="INFO">Text: '123123'</msg>
<msg timestamp="20231129 10:57:21.798" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231129 10:57:21.746" endtime="20231129 10:57:21.798"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.801" endtime="20231129 10:57:21.802"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:21.802" endtime="20231129 10:57:21.803"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:21.799" endtime="20231129 10:57:21.804"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:21.799" endtime="20231129 10:57:21.804"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:21.805" endtime="20231129 10:57:21.885"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:21.887" level="INFO">Length is 6</msg>
<msg timestamp="20231129 10:57:21.887" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231129 10:57:21.886" endtime="20231129 10:57:21.887"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:21.894" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231129 10:57:21.890" endtime="20231129 10:57:21.895"/>
</kw>
<status status="PASS" starttime="20231129 10:57:21.888" endtime="20231129 10:57:21.896"/>
</branch>
<status status="PASS" starttime="20231129 10:57:21.888" endtime="20231129 10:57:21.897"/>
</if>
<status status="PASS" starttime="20231129 10:57:21.282" endtime="20231129 10:57:21.897"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:21.999" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:21.899" endtime="20231129 10:57:21.999"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:22.015" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:22.000" endtime="20231129 10:57:22.016"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:22.017" endtime="20231129 10:57:22.162"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:22.167" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 10:57:22.165" endtime="20231129 10:57:22.168"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:22.183" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:22.169" endtime="20231129 10:57:22.183"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:22.185" endtime="20231129 10:57:22.186"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 10:57:22.187" endtime="20231129 10:57:22.187"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 10:57:22.193" endtime="20231129 10:57:22.194"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:22.184" endtime="20231129 10:57:22.195"/>
</branch>
<status status="PASS" starttime="20231129 10:57:22.184" endtime="20231129 10:57:22.196"/>
</if>
<status status="PASS" starttime="20231129 10:57:22.163" endtime="20231129 10:57:22.196"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 10:57:22.233" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:22.234" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:22.263" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:22.264" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:22.380" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 10:57:22.198" endtime="20231129 10:57:22.380"/>
</kw>
<status status="PASS" starttime="20231129 10:57:22.016" endtime="20231129 10:57:22.381"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:22.383" endtime="20231129 10:57:22.384"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 10:57:22.385" endtime="20231129 10:57:22.386"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 10:57:22.387" endtime="20231129 10:57:22.388"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:22.382" endtime="20231129 10:57:22.392"/>
</branch>
<status status="PASS" starttime="20231129 10:57:22.016" endtime="20231129 10:57:22.393"/>
</if>
<status status="PASS" starttime="20231129 10:57:21.898" endtime="20231129 10:57:22.393"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:22.397" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:22.396" endtime="20231129 10:57:22.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:22.401" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:22.401" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:22.400" endtime="20231129 10:57:22.402"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:22.406" endtime="20231129 10:57:22.408"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:22.403" endtime="20231129 10:57:22.409"/>
</branch>
<status status="PASS" starttime="20231129 10:57:22.403" endtime="20231129 10:57:22.410"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:22.895" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231129 10:57:22.426" endtime="20231129 10:57:22.896"/>
</kw>
<status status="PASS" starttime="20231129 10:57:22.413" endtime="20231129 10:57:22.897"/>
</kw>
<status status="PASS" starttime="20231129 10:57:22.411" endtime="20231129 10:57:22.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:22.899" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231129 10:57:22.898" endtime="20231129 10:57:22.899"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:23.414" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231129 10:57:23.414" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231129 10:57:23.415" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231129 10:57:22.906" endtime="20231129 10:57:23.428"/>
</kw>
<status status="FAIL" starttime="20231129 10:57:22.902" endtime="20231129 10:57:23.429"/>
</kw>
<msg timestamp="20231129 10:57:23.430" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231129 10:57:22.900" endtime="20231129 10:57:23.430"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:23.432" endtime="20231129 10:57:23.433"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:23.431" endtime="20231129 10:57:23.434"/>
</branch>
<status status="PASS" starttime="20231129 10:57:23.431" endtime="20231129 10:57:23.435"/>
</if>
<status status="PASS" starttime="20231129 10:57:22.394" endtime="20231129 10:57:23.435"/>
</kw>
<status status="PASS" starttime="20231129 10:57:20.399" endtime="20231129 10:57:23.436"/>
</kw>
<kw name="Click &quot;QUẢN LÝ TÀI KHOẢN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:23.464" level="INFO">Waited for Element with selector //li[contains(@class, "menu") and descendant::span[contains(text(), "QUẢN LÝ TÀI KHOẢN")]] at state attached</msg>
<status status="PASS" starttime="20231129 10:57:23.442" endtime="20231129 10:57:23.465"/>
</kw>
<status status="PASS" starttime="20231129 10:57:23.440" endtime="20231129 10:57:23.466"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:23.467" endtime="20231129 10:57:24.082"/>
</kw>
<status status="PASS" starttime="20231129 10:57:23.438" endtime="20231129 10:57:24.083"/>
</kw>
<kw name="Click &quot;${name}&quot; sub menu to &quot;${url}&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:24.105" level="INFO">Waited for Element with selector //a[contains(@class, "sub-menu") and descendant::span[contains(text(), "Tài khoản Người dùng")]] at state attached</msg>
<status status="PASS" starttime="20231129 10:57:24.089" endtime="20231129 10:57:24.106"/>
</kw>
<status status="PASS" starttime="20231129 10:57:24.086" endtime="20231129 10:57:24.107"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:24.107" endtime="20231129 10:57:25.236"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231129 10:57:25.248" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/customer-account</msg>
<status status="PASS" starttime="20231129 10:57:25.237" endtime="20231129 10:57:25.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 10:57:25.249" endtime="20231129 10:57:25.251"/>
</kw>
<status status="PASS" starttime="20231129 10:57:24.084" endtime="20231129 10:57:25.252"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:25.357" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:25.256" endtime="20231129 10:57:25.358"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:25.446" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:25.359" endtime="20231129 10:57:25.446"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:25.448" endtime="20231129 10:57:25.974"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:25.978" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 10:57:25.976" endtime="20231129 10:57:25.978"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:25.994" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:25.979" endtime="20231129 10:57:25.994"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:25.996" endtime="20231129 10:57:25.997"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 10:57:25.997" endtime="20231129 10:57:25.998"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 10:57:25.999" endtime="20231129 10:57:25.999"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:25.995" endtime="20231129 10:57:26.000"/>
</branch>
<status status="PASS" starttime="20231129 10:57:25.995" endtime="20231129 10:57:26.001"/>
</if>
<status status="PASS" starttime="20231129 10:57:25.975" endtime="20231129 10:57:26.001"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 10:57:26.047" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:26.047" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:26.082" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:26.083" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:26.095" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 10:57:26.002" endtime="20231129 10:57:26.096"/>
</kw>
<status status="PASS" starttime="20231129 10:57:25.447" endtime="20231129 10:57:26.096"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.098" endtime="20231129 10:57:26.099"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 10:57:26.099" endtime="20231129 10:57:26.100"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.101" endtime="20231129 10:57:26.101"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.097" endtime="20231129 10:57:26.102"/>
</branch>
<status status="PASS" starttime="20231129 10:57:25.447" endtime="20231129 10:57:26.103"/>
</if>
<status status="PASS" starttime="20231129 10:57:25.253" endtime="20231129 10:57:26.103"/>
</kw>
<status status="PASS" starttime="20231129 10:57:20.397" endtime="20231129 10:57:26.106"/>
</kw>
<status status="PASS" starttime="20231129 10:57:20.397" endtime="20231129 10:57:26.106"/>
</branch>
<status status="PASS" starttime="20231129 10:57:20.394" endtime="20231129 10:57:26.107"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Họ và tên&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:26.213" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:26.111" endtime="20231129 10:57:26.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:26.214" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:26.214" endtime="20231129 10:57:26.214"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:26.228" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:26.215" endtime="20231129 10:57:26.228"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:26.230" endtime="20231129 10:57:26.231"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.229" endtime="20231129 10:57:26.231"/>
</branch>
<status status="PASS" starttime="20231129 10:57:26.229" endtime="20231129 10:57:26.232"/>
</if>
<status status="PASS" starttime="20231129 10:57:26.109" endtime="20231129 10:57:26.232"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:26.236" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:26.235" endtime="20231129 10:57:26.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:26.240" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:26.237" endtime="20231129 10:57:26.240"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:26.244" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:26.242" endtime="20231129 10:57:26.244"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:26.246" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:26.247" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:26.245" endtime="20231129 10:57:26.247"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:26.249" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231129 10:57:26.248" endtime="20231129 10:57:26.249"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:26.250" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:26.250" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:26.249" endtime="20231129 10:57:26.251"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.252" endtime="20231129 10:57:26.253"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.253" endtime="20231129 10:57:26.253"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.251" endtime="20231129 10:57:26.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231129 10:57:26.260" level="INFO">${random} = Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.259" endtime="20231129 10:57:26.261"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231129 10:57:26.263" level="INFO">${words} = ['CA_18', 'Verify', 'the', 'deselect', 'filter', 'function', 'when', 'click', 'on', 'cross', 'button']</msg>
<status status="PASS" starttime="20231129 10:57:26.262" endtime="20231129 10:57:26.263"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:26.266" level="INFO">${new_text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.263" endtime="20231129 10:57:26.266"/>
</kw>
<status status="PASS" starttime="20231129 10:57:26.257" endtime="20231129 10:57:26.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.267" endtime="20231129 10:57:26.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.268" endtime="20231129 10:57:26.269"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.266" endtime="20231129 10:57:26.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.273" endtime="20231129 10:57:26.274"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.277" endtime="20231129 10:57:26.278"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.270" endtime="20231129 10:57:26.279"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.280" endtime="20231129 10:57:26.281"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.279" endtime="20231129 10:57:26.283"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:26.284" endtime="20231129 10:57:26.284"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.284" endtime="20231129 10:57:26.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.285" endtime="20231129 10:57:26.286"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.286" endtime="20231129 10:57:26.286"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.287" endtime="20231129 10:57:26.293"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.285" endtime="20231129 10:57:26.294"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.295" endtime="20231129 10:57:26.295"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.294" endtime="20231129 10:57:26.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.297" endtime="20231129 10:57:26.298"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.296" endtime="20231129 10:57:26.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.299" endtime="20231129 10:57:26.299"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.298" endtime="20231129 10:57:26.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.300" endtime="20231129 10:57:26.300"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.300" endtime="20231129 10:57:26.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.301" endtime="20231129 10:57:26.302"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.301" endtime="20231129 10:57:26.302"/>
</branch>
<status status="PASS" starttime="20231129 10:57:26.251" endtime="20231129 10:57:26.303"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:26.309" level="INFO">Length is 8</msg>
<msg timestamp="20231129 10:57:26.310" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231129 10:57:26.303" endtime="20231129 10:57:26.310"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:26.315" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.313" endtime="20231129 10:57:26.315"/>
</kw>
<status status="PASS" starttime="20231129 10:57:26.312" endtime="20231129 10:57:26.315"/>
</branch>
<status status="PASS" starttime="20231129 10:57:26.312" endtime="20231129 10:57:26.315"/>
</if>
<msg timestamp="20231129 10:57:26.316" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.233" endtime="20231129 10:57:26.316"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:26.317" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Họ và tên"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:26.316" endtime="20231129 10:57:26.317"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:26.318" endtime="20231129 10:57:26.517"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:26.518" endtime="20231129 10:57:26.579"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:26.581" level="INFO">Fills the text 'CA_18 Beatae.' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:26.580" endtime="20231129 10:57:26.657"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:26.716" level="INFO">Text: 'CA_18 Beatae.'</msg>
<msg timestamp="20231129 10:57:26.716" level="INFO">${condition} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.658" endtime="20231129 10:57:26.717"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.719" endtime="20231129 10:57:26.720"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:26.722" endtime="20231129 10:57:26.723"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:26.718" endtime="20231129 10:57:26.724"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:26.718" endtime="20231129 10:57:26.724"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:26.725" endtime="20231129 10:57:26.907"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:26.909" level="INFO">Length is 13</msg>
<msg timestamp="20231129 10:57:26.910" level="INFO">${cnt} = 13</msg>
<status status="PASS" starttime="20231129 10:57:26.908" endtime="20231129 10:57:26.910"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:26.913" level="INFO">${STATE["Họ và tên"]} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.912" endtime="20231129 10:57:26.914"/>
</kw>
<status status="PASS" starttime="20231129 10:57:26.911" endtime="20231129 10:57:26.914"/>
</branch>
<status status="PASS" starttime="20231129 10:57:26.911" endtime="20231129 10:57:26.915"/>
</if>
<status status="PASS" starttime="20231129 10:57:26.108" endtime="20231129 10:57:26.915"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Họ và tên@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:26.918" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231129 10:57:26.917" endtime="20231129 10:57:26.918"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:26.920" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:26.922" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 10:57:26.919" endtime="20231129 10:57:26.922"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:26.926" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.924" endtime="20231129 10:57:26.927"/>
</kw>
<status status="PASS" starttime="20231129 10:57:26.923" endtime="20231129 10:57:26.927"/>
</branch>
<status status="PASS" starttime="20231129 10:57:26.923" endtime="20231129 10:57:26.928"/>
</if>
<msg timestamp="20231129 10:57:26.928" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.916" endtime="20231129 10:57:26.929"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:26.931" level="INFO">${name} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:26.930" endtime="20231129 10:57:26.931"/>
</kw>
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:27.037" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:26.935" endtime="20231129 10:57:27.037"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:27.040" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:27.039" endtime="20231129 10:57:27.040"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:27.051" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:27.041" endtime="20231129 10:57:27.052"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:27.054" endtime="20231129 10:57:27.055"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.053" endtime="20231129 10:57:27.056"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.052" endtime="20231129 10:57:27.057"/>
</if>
<status status="PASS" starttime="20231129 10:57:26.934" endtime="20231129 10:57:27.057"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:27.061" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:27.060" endtime="20231129 10:57:27.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:27.063" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:27.062" endtime="20231129 10:57:27.064"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:27.065" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:27.065" endtime="20231129 10:57:27.066"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.067" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:27.067" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:27.066" endtime="20231129 10:57:27.067"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:27.069" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231129 10:57:27.068" endtime="20231129 10:57:27.070"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.071" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:27.072" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:27.070" endtime="20231129 10:57:27.073"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.074" endtime="20231129 10:57:27.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.076" endtime="20231129 10:57:27.077"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.073" endtime="20231129 10:57:27.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.079" endtime="20231129 10:57:27.079"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.079" endtime="20231129 10:57:27.080"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.080" endtime="20231129 10:57:27.081"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.078" endtime="20231129 10:57:27.081"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.082" endtime="20231129 10:57:27.082"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.082" endtime="20231129 10:57:27.082"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.081" endtime="20231129 10:57:27.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.083" endtime="20231129 10:57:27.084"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.084" endtime="20231129 10:57:27.085"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.083" endtime="20231129 10:57:27.085"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.086" endtime="20231129 10:57:27.086"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.085" endtime="20231129 10:57:27.086"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20231129 10:57:27.090" level="INFO">${new_text} = gbuch@example.net</msg>
<status status="PASS" starttime="20231129 10:57:27.088" endtime="20231129 10:57:27.090"/>
</kw>
<status status="PASS" starttime="20231129 10:57:27.087" endtime="20231129 10:57:27.091"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.092" endtime="20231129 10:57:27.093"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.094" endtime="20231129 10:57:27.095"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.095" endtime="20231129 10:57:27.096"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.092" endtime="20231129 10:57:27.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.097" endtime="20231129 10:57:27.097"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.096" endtime="20231129 10:57:27.097"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.098" endtime="20231129 10:57:27.098"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.098" endtime="20231129 10:57:27.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.099" endtime="20231129 10:57:27.100"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.099" endtime="20231129 10:57:27.100"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.101" endtime="20231129 10:57:27.101"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.100" endtime="20231129 10:57:27.101"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.102" endtime="20231129 10:57:27.102"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.101" endtime="20231129 10:57:27.102"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.073" endtime="20231129 10:57:27.103"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.106" level="INFO">Length is 8</msg>
<msg timestamp="20231129 10:57:27.107" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231129 10:57:27.104" endtime="20231129 10:57:27.107"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:27.110" level="INFO">${text} = gbuch@example.net</msg>
<status status="PASS" starttime="20231129 10:57:27.109" endtime="20231129 10:57:27.110"/>
</kw>
<status status="PASS" starttime="20231129 10:57:27.108" endtime="20231129 10:57:27.110"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.108" endtime="20231129 10:57:27.110"/>
</if>
<msg timestamp="20231129 10:57:27.111" level="INFO">${text} = gbuch@example.net</msg>
<status status="PASS" starttime="20231129 10:57:27.058" endtime="20231129 10:57:27.111"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:27.112" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:27.111" endtime="20231129 10:57:27.112"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:27.113" endtime="20231129 10:57:27.216"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:27.217" endtime="20231129 10:57:27.263"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:27.265" level="INFO">Fills the text 'gbuch@example.net' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:27.264" endtime="20231129 10:57:27.320"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:27.376" level="INFO">Text: 'gbuch@example.net'</msg>
<msg timestamp="20231129 10:57:27.377" level="INFO">${condition} = gbuch@example.net</msg>
<status status="PASS" starttime="20231129 10:57:27.322" endtime="20231129 10:57:27.377"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.381" endtime="20231129 10:57:27.381"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.382" endtime="20231129 10:57:27.383"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.379" endtime="20231129 10:57:27.383"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:27.378" endtime="20231129 10:57:27.384"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:27.385" endtime="20231129 10:57:27.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.469" level="INFO">Length is 17</msg>
<msg timestamp="20231129 10:57:27.470" level="INFO">${cnt} = 17</msg>
<status status="PASS" starttime="20231129 10:57:27.468" endtime="20231129 10:57:27.470"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:27.475" level="INFO">${STATE["Email"]} = gbuch@example.net</msg>
<status status="PASS" starttime="20231129 10:57:27.474" endtime="20231129 10:57:27.475"/>
</kw>
<status status="PASS" starttime="20231129 10:57:27.472" endtime="20231129 10:57:27.476"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.471" endtime="20231129 10:57:27.477"/>
</if>
<status status="PASS" starttime="20231129 10:57:26.932" endtime="20231129 10:57:27.477"/>
</kw>
<kw name="Enter &quot;phone&quot; in &quot;Số điện thoại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:27.581" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:27.480" endtime="20231129 10:57:27.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:27.583" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:27.582" endtime="20231129 10:57:27.583"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:27.599" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:27.584" endtime="20231129 10:57:27.599"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:27.601" endtime="20231129 10:57:27.601"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.600" endtime="20231129 10:57:27.602"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.600" endtime="20231129 10:57:27.602"/>
</if>
<status status="PASS" starttime="20231129 10:57:27.479" endtime="20231129 10:57:27.603"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:27.607" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:27.606" endtime="20231129 10:57:27.607"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:27.609" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:27.608" endtime="20231129 10:57:27.610"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:27.612" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:27.611" endtime="20231129 10:57:27.612"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.614" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:27.615" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:27.613" endtime="20231129 10:57:27.615"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:27.617" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231129 10:57:27.616" endtime="20231129 10:57:27.617"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.619" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:27.620" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:27.618" endtime="20231129 10:57:27.621"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.623" endtime="20231129 10:57:27.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.625" endtime="20231129 10:57:27.626"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.622" endtime="20231129 10:57:27.626"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.628" endtime="20231129 10:57:27.629"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.629" endtime="20231129 10:57:27.630"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.631" endtime="20231129 10:57:27.631"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.627" endtime="20231129 10:57:27.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.633" endtime="20231129 10:57:27.634"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.635" endtime="20231129 10:57:27.635"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.632" endtime="20231129 10:57:27.636"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.638" endtime="20231129 10:57:27.639"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.640" endtime="20231129 10:57:27.641"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.636" endtime="20231129 10:57:27.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.643" endtime="20231129 10:57:27.644"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.642" endtime="20231129 10:57:27.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:27.646" endtime="20231129 10:57:27.647"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.645" endtime="20231129 10:57:27.648"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231129 10:57:27.650" level="INFO">${new_text} = 8127248102</msg>
<status status="PASS" starttime="20231129 10:57:27.649" endtime="20231129 10:57:27.650"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231129 10:57:27.652" level="INFO">${new_text} = 8127248102</msg>
<status status="PASS" starttime="20231129 10:57:27.651" endtime="20231129 10:57:27.653"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231129 10:57:27.657" level="INFO">${new_text} = 08127248102</msg>
<status status="PASS" starttime="20231129 10:57:27.656" endtime="20231129 10:57:27.657"/>
</kw>
<status status="PASS" starttime="20231129 10:57:27.648" endtime="20231129 10:57:27.658"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.659" endtime="20231129 10:57:27.660"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.659" endtime="20231129 10:57:27.660"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.662" endtime="20231129 10:57:27.662"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.661" endtime="20231129 10:57:27.663"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.664" endtime="20231129 10:57:27.665"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.663" endtime="20231129 10:57:27.665"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.666" endtime="20231129 10:57:27.667"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.666" endtime="20231129 10:57:27.667"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.668" endtime="20231129 10:57:27.669"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.668" endtime="20231129 10:57:27.669"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.622" endtime="20231129 10:57:27.669"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:27.672" level="INFO">Length is 8</msg>
<msg timestamp="20231129 10:57:27.673" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231129 10:57:27.670" endtime="20231129 10:57:27.673"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:27.676" level="INFO">${text} = 08127248102</msg>
<status status="PASS" starttime="20231129 10:57:27.675" endtime="20231129 10:57:27.677"/>
</kw>
<status status="PASS" starttime="20231129 10:57:27.674" endtime="20231129 10:57:27.677"/>
</branch>
<status status="PASS" starttime="20231129 10:57:27.674" endtime="20231129 10:57:27.678"/>
</if>
<msg timestamp="20231129 10:57:27.678" level="INFO">${text} = 08127248102</msg>
<status status="PASS" starttime="20231129 10:57:27.603" endtime="20231129 10:57:27.679"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:27.680" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số điện thoại"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:27.679" endtime="20231129 10:57:27.684"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:27.685" endtime="20231129 10:57:27.815"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:27.816" endtime="20231129 10:57:27.853"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:27.857" level="INFO">Fills the text '08127248102' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:27.855" endtime="20231129 10:57:27.906"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:27.946" level="INFO">Text: '08127248102'</msg>
<msg timestamp="20231129 10:57:27.946" level="INFO">${condition} = 08127248102</msg>
<status status="PASS" starttime="20231129 10:57:27.907" endtime="20231129 10:57:27.946"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.948" endtime="20231129 10:57:27.949"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:27.950" endtime="20231129 10:57:27.950"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:27.947" endtime="20231129 10:57:27.951"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:27.947" endtime="20231129 10:57:27.951"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:27.952" endtime="20231129 10:57:28.039"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.042" level="INFO">Length is 11</msg>
<msg timestamp="20231129 10:57:28.042" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231129 10:57:28.040" endtime="20231129 10:57:28.043"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:28.046" level="INFO">${STATE["Số điện thoại"]} = 08127248102</msg>
<status status="PASS" starttime="20231129 10:57:28.045" endtime="20231129 10:57:28.047"/>
</kw>
<status status="PASS" starttime="20231129 10:57:28.044" endtime="20231129 10:57:28.048"/>
</branch>
<status status="PASS" starttime="20231129 10:57:28.043" endtime="20231129 10:57:28.049"/>
</if>
<status status="PASS" starttime="20231129 10:57:27.478" endtime="20231129 10:57:28.049"/>
</kw>
<kw name="Click select &quot;Giới tính&quot; with &quot;Nam&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:28.056" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:28.053" endtime="20231129 10:57:28.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:28.058" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:28.057" endtime="20231129 10:57:28.059"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:28.061" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:28.060" endtime="20231129 10:57:28.061"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.063" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:28.064" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:28.062" endtime="20231129 10:57:28.064"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:28.066" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:28.065" endtime="20231129 10:57:28.066"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.068" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:28.069" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:28.067" endtime="20231129 10:57:28.069"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.074" endtime="20231129 10:57:28.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.076" endtime="20231129 10:57:28.077"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.072" endtime="20231129 10:57:28.077"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.079" endtime="20231129 10:57:28.080"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.081" endtime="20231129 10:57:28.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.082" endtime="20231129 10:57:28.082"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.078" endtime="20231129 10:57:28.083"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.084" endtime="20231129 10:57:28.084"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.085" endtime="20231129 10:57:28.086"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.083" endtime="20231129 10:57:28.086"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.090" endtime="20231129 10:57:28.091"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.091" endtime="20231129 10:57:28.092"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.088" endtime="20231129 10:57:28.092"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.095" endtime="20231129 10:57:28.095"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.093" endtime="20231129 10:57:28.096"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:28.097" endtime="20231129 10:57:28.098"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.097" endtime="20231129 10:57:28.098"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.100" endtime="20231129 10:57:28.100"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.102" endtime="20231129 10:57:28.102"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.105" endtime="20231129 10:57:28.106"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.099" endtime="20231129 10:57:28.107"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.109" endtime="20231129 10:57:28.109"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.108" endtime="20231129 10:57:28.148"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.151" endtime="20231129 10:57:28.152"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.149" endtime="20231129 10:57:28.152"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.155" endtime="20231129 10:57:28.158"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.153" endtime="20231129 10:57:28.159"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.162" endtime="20231129 10:57:28.163"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.160" endtime="20231129 10:57:28.163"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.165" endtime="20231129 10:57:28.166"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.164" endtime="20231129 10:57:28.167"/>
</branch>
<status status="PASS" starttime="20231129 10:57:28.071" endtime="20231129 10:57:28.173"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.175" level="INFO">Length is 3</msg>
<msg timestamp="20231129 10:57:28.175" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231129 10:57:28.174" endtime="20231129 10:57:28.176"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:28.179" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231129 10:57:28.178" endtime="20231129 10:57:28.179"/>
</kw>
<status status="PASS" starttime="20231129 10:57:28.177" endtime="20231129 10:57:28.180"/>
</branch>
<status status="PASS" starttime="20231129 10:57:28.176" endtime="20231129 10:57:28.180"/>
</if>
<msg timestamp="20231129 10:57:28.181" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231129 10:57:28.051" endtime="20231129 10:57:28.181"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231129 10:57:28.183" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231129 10:57:28.182" endtime="20231129 10:57:28.183"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:28.259" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231129 10:57:28.189" endtime="20231129 10:57:28.260"/>
</kw>
<status status="PASS" starttime="20231129 10:57:28.184" endtime="20231129 10:57:28.261"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:28.262" endtime="20231129 10:57:28.495"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231129 10:57:28.497" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231129 10:57:28.496" endtime="20231129 10:57:28.498"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:28.500" level="INFO">Fills the text 'Nam' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:28.499" endtime="20231129 10:57:28.562"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:28.563" endtime="20231129 10:57:28.768"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.770" level="INFO">Length is 3</msg>
<msg timestamp="20231129 10:57:28.770" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231129 10:57:28.769" endtime="20231129 10:57:28.770"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:28.776" level="INFO">${STATE["Giới tính"]} = Nam</msg>
<status status="PASS" starttime="20231129 10:57:28.773" endtime="20231129 10:57:28.777"/>
</kw>
<status status="PASS" starttime="20231129 10:57:28.771" endtime="20231129 10:57:28.777"/>
</branch>
<status status="PASS" starttime="20231129 10:57:28.771" endtime="20231129 10:57:28.778"/>
</if>
<status status="PASS" starttime="20231129 10:57:28.050" endtime="20231129 10:57:28.778"/>
</kw>
<kw name="Click select &quot;Loại tài khoản&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:28.783" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:28.782" endtime="20231129 10:57:28.783"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:28.784" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:28.784" endtime="20231129 10:57:28.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:28.786" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:28.785" endtime="20231129 10:57:28.786"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.787" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:28.788" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:28.786" endtime="20231129 10:57:28.789"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:28.792" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:28.790" endtime="20231129 10:57:28.793"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.795" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:28.796" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:28.794" endtime="20231129 10:57:28.796"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.798" endtime="20231129 10:57:28.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.799" endtime="20231129 10:57:28.799"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.797" endtime="20231129 10:57:28.800"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.802" endtime="20231129 10:57:28.802"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.803" endtime="20231129 10:57:28.803"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.808" endtime="20231129 10:57:28.809"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.801" endtime="20231129 10:57:28.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.812" endtime="20231129 10:57:28.813"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.814" endtime="20231129 10:57:28.814"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.810" endtime="20231129 10:57:28.814"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.816" endtime="20231129 10:57:28.816"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.817" endtime="20231129 10:57:28.817"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.815" endtime="20231129 10:57:28.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.819" endtime="20231129 10:57:28.819"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.818" endtime="20231129 10:57:28.820"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:28.826" endtime="20231129 10:57:28.827"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.824" endtime="20231129 10:57:28.827"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.828" endtime="20231129 10:57:28.829"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.829" endtime="20231129 10:57:28.829"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.830" endtime="20231129 10:57:28.830"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.828" endtime="20231129 10:57:28.830"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.831" endtime="20231129 10:57:28.831"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.830" endtime="20231129 10:57:28.831"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.832" endtime="20231129 10:57:28.833"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.832" endtime="20231129 10:57:28.833"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.834" endtime="20231129 10:57:28.835"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.833" endtime="20231129 10:57:28.835"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.837" endtime="20231129 10:57:28.841"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.836" endtime="20231129 10:57:28.841"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:28.843" endtime="20231129 10:57:28.844"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:28.842" endtime="20231129 10:57:28.844"/>
</branch>
<status status="PASS" starttime="20231129 10:57:28.797" endtime="20231129 10:57:28.845"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:28.846" level="INFO">Length is 10</msg>
<msg timestamp="20231129 10:57:28.847" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231129 10:57:28.846" endtime="20231129 10:57:28.847"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:28.851" level="INFO">${text} = Order Side</msg>
<status status="PASS" starttime="20231129 10:57:28.849" endtime="20231129 10:57:28.852"/>
</kw>
<status status="PASS" starttime="20231129 10:57:28.848" endtime="20231129 10:57:28.852"/>
</branch>
<status status="PASS" starttime="20231129 10:57:28.848" endtime="20231129 10:57:28.853"/>
</if>
<msg timestamp="20231129 10:57:28.857" level="INFO">${text} = Order Side</msg>
<status status="PASS" starttime="20231129 10:57:28.781" endtime="20231129 10:57:28.858"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231129 10:57:28.862" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231129 10:57:28.860" endtime="20231129 10:57:28.863"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:28.890" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")] at state attached</msg>
<status status="PASS" starttime="20231129 10:57:28.864" endtime="20231129 10:57:28.891"/>
</kw>
<status status="PASS" starttime="20231129 10:57:28.863" endtime="20231129 10:57:28.892"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:28.893" endtime="20231129 10:57:29.067"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231129 10:57:29.070" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231129 10:57:29.068" endtime="20231129 10:57:29.070"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:29.074" level="INFO">Fills the text 'Order Side' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:29.073" endtime="20231129 10:57:29.196"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:29.197" endtime="20231129 10:57:29.448"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:29.452" level="INFO">Length is 10</msg>
<msg timestamp="20231129 10:57:29.453" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231129 10:57:29.451" endtime="20231129 10:57:29.453"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:29.461" level="INFO">${STATE["Loại tài khoản"]} = Order Side</msg>
<status status="PASS" starttime="20231129 10:57:29.457" endtime="20231129 10:57:29.462"/>
</kw>
<status status="PASS" starttime="20231129 10:57:29.455" endtime="20231129 10:57:29.464"/>
</branch>
<status status="PASS" starttime="20231129 10:57:29.455" endtime="20231129 10:57:29.464"/>
</if>
<status status="PASS" starttime="20231129 10:57:28.779" endtime="20231129 10:57:29.465"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:29.570" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:29.468" endtime="20231129 10:57:29.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:29.574" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:29.572" endtime="20231129 10:57:29.574"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:29.586" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:29.575" endtime="20231129 10:57:29.586"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:29.590" endtime="20231129 10:57:29.590"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.588" endtime="20231129 10:57:29.592"/>
</branch>
<status status="PASS" starttime="20231129 10:57:29.588" endtime="20231129 10:57:29.593"/>
</if>
<status status="PASS" starttime="20231129 10:57:29.467" endtime="20231129 10:57:29.594"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:29.598" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:29.596" endtime="20231129 10:57:29.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:29.600" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:29.599" endtime="20231129 10:57:29.600"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:29.602" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:29.601" endtime="20231129 10:57:29.602"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:29.605" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:29.607" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:29.603" endtime="20231129 10:57:29.607"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:29.610" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231129 10:57:29.608" endtime="20231129 10:57:29.611"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:29.613" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:29.614" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:29.611" endtime="20231129 10:57:29.614"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.616" endtime="20231129 10:57:29.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.617" endtime="20231129 10:57:29.617"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.615" endtime="20231129 10:57:29.618"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.619" endtime="20231129 10:57:29.619"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.619" endtime="20231129 10:57:29.620"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.620" endtime="20231129 10:57:29.620"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.618" endtime="20231129 10:57:29.624"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.627" endtime="20231129 10:57:29.627"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.628" endtime="20231129 10:57:29.629"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.625" endtime="20231129 10:57:29.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.631" endtime="20231129 10:57:29.632"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.633" endtime="20231129 10:57:29.633"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.630" endtime="20231129 10:57:29.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.635" endtime="20231129 10:57:29.635"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.634" endtime="20231129 10:57:29.636"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:29.640" endtime="20231129 10:57:29.642"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.636" endtime="20231129 10:57:29.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.645" endtime="20231129 10:57:29.645"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.646" endtime="20231129 10:57:29.647"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.647" endtime="20231129 10:57:29.647"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.644" endtime="20231129 10:57:29.648"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.649" endtime="20231129 10:57:29.649"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.648" endtime="20231129 10:57:29.649"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231129 10:57:29.651" level="INFO">${new_text} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:29.650" endtime="20231129 10:57:29.651"/>
</kw>
<status status="PASS" starttime="20231129 10:57:29.650" endtime="20231129 10:57:29.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.652" endtime="20231129 10:57:29.652"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.652" endtime="20231129 10:57:29.653"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.653" endtime="20231129 10:57:29.654"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.653" endtime="20231129 10:57:29.656"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.660" endtime="20231129 10:57:29.661"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.659" endtime="20231129 10:57:29.661"/>
</branch>
<status status="PASS" starttime="20231129 10:57:29.615" endtime="20231129 10:57:29.662"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:29.662" level="INFO">Length is 8</msg>
<msg timestamp="20231129 10:57:29.663" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231129 10:57:29.662" endtime="20231129 10:57:29.663"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:29.665" level="INFO">${text} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:29.664" endtime="20231129 10:57:29.665"/>
</kw>
<status status="PASS" starttime="20231129 10:57:29.663" endtime="20231129 10:57:29.666"/>
</branch>
<status status="PASS" starttime="20231129 10:57:29.663" endtime="20231129 10:57:29.666"/>
</if>
<msg timestamp="20231129 10:57:29.667" level="INFO">${text} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:29.595" endtime="20231129 10:57:29.667"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:29.668" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:29.667" endtime="20231129 10:57:29.668"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:29.669" endtime="20231129 10:57:29.788"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:29.790" endtime="20231129 10:57:29.842"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:29.844" level="INFO">Fills the text 'b_%2Pw$+1o' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:29.843" endtime="20231129 10:57:29.903"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:29.946" level="INFO">Text: 'b_%2Pw$+1o'</msg>
<msg timestamp="20231129 10:57:29.947" level="INFO">${condition} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:29.905" endtime="20231129 10:57:29.947"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.961" endtime="20231129 10:57:29.962"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:29.963" endtime="20231129 10:57:29.963"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:29.948" endtime="20231129 10:57:29.964"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:29.948" endtime="20231129 10:57:29.964"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:29.965" endtime="20231129 10:57:30.035"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:30.037" level="INFO">Length is 10</msg>
<msg timestamp="20231129 10:57:30.038" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231129 10:57:30.036" endtime="20231129 10:57:30.039"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:30.044" level="INFO">${STATE["Mật khẩu"]} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:30.042" endtime="20231129 10:57:30.044"/>
</kw>
<status status="PASS" starttime="20231129 10:57:30.041" endtime="20231129 10:57:30.045"/>
</branch>
<status status="PASS" starttime="20231129 10:57:30.040" endtime="20231129 10:57:30.045"/>
</if>
<status status="PASS" starttime="20231129 10:57:29.466" endtime="20231129 10:57:30.045"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Xác nhận mật khẩu&quot; with &quot;_@Mật khẩu@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:30.150" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:30.049" endtime="20231129 10:57:30.150"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:30.152" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:30.151" endtime="20231129 10:57:30.152"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:30.164" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:30.153" endtime="20231129 10:57:30.165"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:30.167" endtime="20231129 10:57:30.167"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.166" endtime="20231129 10:57:30.168"/>
</branch>
<status status="PASS" starttime="20231129 10:57:30.166" endtime="20231129 10:57:30.169"/>
</if>
<status status="PASS" starttime="20231129 10:57:30.048" endtime="20231129 10:57:30.169"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:30.173" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:30.172" endtime="20231129 10:57:30.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:30.176" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:30.175" endtime="20231129 10:57:30.176"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:30.178" level="INFO">${containsS} = ['Mật khẩu']</msg>
<status status="PASS" starttime="20231129 10:57:30.177" endtime="20231129 10:57:30.179"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:30.181" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:30.182" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 10:57:30.180" endtime="20231129 10:57:30.182"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:30.185" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:30.183" endtime="20231129 10:57:30.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:30.190" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:30.190" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:30.186" endtime="20231129 10:57:30.190"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:30.195" level="INFO">${new_text} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:30.192" endtime="20231129 10:57:30.195"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:30.199" level="INFO">${symbol} = _@Mật khẩu@_</msg>
<status status="PASS" starttime="20231129 10:57:30.196" endtime="20231129 10:57:30.199"/>
</kw>
<status status="PASS" starttime="20231129 10:57:30.191" endtime="20231129 10:57:30.200"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.201" endtime="20231129 10:57:30.202"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.203" endtime="20231129 10:57:30.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.205" endtime="20231129 10:57:30.206"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.201" endtime="20231129 10:57:30.206"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.208" endtime="20231129 10:57:30.208"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.209" endtime="20231129 10:57:30.209"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.207" endtime="20231129 10:57:30.230"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.232" endtime="20231129 10:57:30.232"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.233" endtime="20231129 10:57:30.234"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.231" endtime="20231129 10:57:30.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.235" endtime="20231129 10:57:30.236"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.235" endtime="20231129 10:57:30.236"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:30.238" endtime="20231129 10:57:30.239"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.237" endtime="20231129 10:57:30.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.241" endtime="20231129 10:57:30.242"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.243" endtime="20231129 10:57:30.244"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.245" endtime="20231129 10:57:30.246"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.240" endtime="20231129 10:57:30.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.248" endtime="20231129 10:57:30.248"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.247" endtime="20231129 10:57:30.249"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.250" endtime="20231129 10:57:30.251"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.250" endtime="20231129 10:57:30.252"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.253" endtime="20231129 10:57:30.254"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.252" endtime="20231129 10:57:30.255"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.257" endtime="20231129 10:57:30.258"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.256" endtime="20231129 10:57:30.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.260" endtime="20231129 10:57:30.260"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.259" endtime="20231129 10:57:30.261"/>
</branch>
<status status="PASS" starttime="20231129 10:57:30.191" endtime="20231129 10:57:30.261"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:30.263" level="INFO">Length is 12</msg>
<msg timestamp="20231129 10:57:30.263" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231129 10:57:30.262" endtime="20231129 10:57:30.263"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:30.306" level="INFO">${text} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:30.301" endtime="20231129 10:57:30.307"/>
</kw>
<status status="PASS" starttime="20231129 10:57:30.296" endtime="20231129 10:57:30.307"/>
</branch>
<status status="PASS" starttime="20231129 10:57:30.295" endtime="20231129 10:57:30.308"/>
</if>
<msg timestamp="20231129 10:57:30.309" level="INFO">${text} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:30.170" endtime="20231129 10:57:30.309"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231129 10:57:30.312" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Xác nhận mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231129 10:57:30.310" endtime="20231129 10:57:30.312"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:30.314" endtime="20231129 10:57:30.469"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:30.469" endtime="20231129 10:57:30.546"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231129 10:57:30.548" level="INFO">Fills the text 'b_%2Pw$+1o' in the given field.</msg>
<status status="PASS" starttime="20231129 10:57:30.547" endtime="20231129 10:57:30.662"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:30.719" level="INFO">Text: 'b_%2Pw$+1o'</msg>
<msg timestamp="20231129 10:57:30.719" level="INFO">${condition} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:30.663" endtime="20231129 10:57:30.720"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.724" endtime="20231129 10:57:30.725"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:30.726" endtime="20231129 10:57:30.727"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:30.721" endtime="20231129 10:57:30.727"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:30.721" endtime="20231129 10:57:30.728"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231129 10:57:30.729" endtime="20231129 10:57:30.895"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:30.897" level="INFO">Length is 10</msg>
<msg timestamp="20231129 10:57:30.898" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231129 10:57:30.896" endtime="20231129 10:57:30.898"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:30.902" level="INFO">${STATE["Xác nhận mật khẩu"]} = b_%2Pw$+1o</msg>
<status status="PASS" starttime="20231129 10:57:30.900" endtime="20231129 10:57:30.902"/>
</kw>
<status status="PASS" starttime="20231129 10:57:30.899" endtime="20231129 10:57:30.903"/>
</branch>
<status status="PASS" starttime="20231129 10:57:30.899" endtime="20231129 10:57:30.904"/>
</if>
<status status="PASS" starttime="20231129 10:57:30.046" endtime="20231129 10:57:30.904"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:31.009" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:30.907" endtime="20231129 10:57:31.009"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:31.020" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:31.010" endtime="20231129 10:57:31.020"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:31.023" endtime="20231129 10:57:31.137"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:31.145" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 10:57:31.143" endtime="20231129 10:57:31.145"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:31.157" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:31.146" endtime="20231129 10:57:31.158"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:31.161" endtime="20231129 10:57:31.162"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231129 10:57:31.163" endtime="20231129 10:57:31.164"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231129 10:57:31.164" endtime="20231129 10:57:31.165"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:31.159" endtime="20231129 10:57:31.166"/>
</branch>
<status status="PASS" starttime="20231129 10:57:31.158" endtime="20231129 10:57:31.166"/>
</if>
<status status="PASS" starttime="20231129 10:57:31.139" endtime="20231129 10:57:31.167"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231129 10:57:31.428" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:31.429" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:32.072" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:32.072" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231129 10:57:32.100" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231129 10:57:31.168" endtime="20231129 10:57:32.101"/>
</kw>
<status status="PASS" starttime="20231129 10:57:31.022" endtime="20231129 10:57:32.101"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.102" endtime="20231129 10:57:32.102"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231129 10:57:32.103" endtime="20231129 10:57:32.103"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.104" endtime="20231129 10:57:32.105"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.101" endtime="20231129 10:57:32.106"/>
</branch>
<status status="PASS" starttime="20231129 10:57:31.021" endtime="20231129 10:57:32.107"/>
</if>
<status status="PASS" starttime="20231129 10:57:30.905" endtime="20231129 10:57:32.108"/>
</kw>
<kw name="User look message &quot;Tạo tài khoản thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:32.118" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:32.116" endtime="20231129 10:57:32.118"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:32.120" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:32.120" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:32.119" endtime="20231129 10:57:32.121"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.126" endtime="20231129 10:57:32.128"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.122" endtime="20231129 10:57:32.129"/>
</branch>
<status status="PASS" starttime="20231129 10:57:32.122" endtime="20231129 10:57:32.129"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231129 10:57:32.199" level="INFO">Text: 'Tạo tài khoản thành công'</msg>
<status status="PASS" starttime="20231129 10:57:32.134" endtime="20231129 10:57:32.199"/>
</kw>
<status status="PASS" starttime="20231129 10:57:32.132" endtime="20231129 10:57:32.200"/>
</kw>
<status status="PASS" starttime="20231129 10:57:32.130" endtime="20231129 10:57:32.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:32.203" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231129 10:57:32.202" endtime="20231129 10:57:32.203"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:32.681" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231129 10:57:32.682" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231129 10:57:32.683" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231129 10:57:32.210" endtime="20231129 10:57:32.686"/>
</kw>
<status status="FAIL" starttime="20231129 10:57:32.207" endtime="20231129 10:57:32.688"/>
</kw>
<msg timestamp="20231129 10:57:32.688" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231129 10:57:32.205" endtime="20231129 10:57:32.689"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.691" endtime="20231129 10:57:32.692"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.690" endtime="20231129 10:57:32.693"/>
</branch>
<status status="PASS" starttime="20231129 10:57:32.690" endtime="20231129 10:57:32.694"/>
</if>
<status status="PASS" starttime="20231129 10:57:32.113" endtime="20231129 10:57:32.695"/>
</kw>
<status status="PASS" starttime="20231129 10:57:20.293" endtime="20231129 10:57:32.696"/>
</kw>
<kw name="When Click filter &quot;Loại tài khoản&quot; with &quot;Farmer Side&quot;" library="common" sourcename="Click filter &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:32.706" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231129 10:57:32.705" endtime="20231129 10:57:32.707"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:32.708" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231129 10:57:32.708" endtime="20231129 10:57:32.709"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:32.711" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231129 10:57:32.710" endtime="20231129 10:57:32.711"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:32.713" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:32.713" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231129 10:57:32.712" endtime="20231129 10:57:32.714"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:32.716" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231129 10:57:32.714" endtime="20231129 10:57:32.717"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:32.719" level="INFO">Length is 0</msg>
<msg timestamp="20231129 10:57:32.719" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231129 10:57:32.718" endtime="20231129 10:57:32.720"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.728" endtime="20231129 10:57:32.729"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.729" endtime="20231129 10:57:32.731"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.727" endtime="20231129 10:57:32.731"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.733" endtime="20231129 10:57:32.734"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.735" endtime="20231129 10:57:32.736"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.742" endtime="20231129 10:57:32.744"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.732" endtime="20231129 10:57:32.744"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.746" endtime="20231129 10:57:32.747"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.748" endtime="20231129 10:57:32.749"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.745" endtime="20231129 10:57:32.750"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.752" endtime="20231129 10:57:32.752"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.755" endtime="20231129 10:57:32.757"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.750" endtime="20231129 10:57:32.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.759" endtime="20231129 10:57:32.760"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.758" endtime="20231129 10:57:32.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231129 10:57:32.762" endtime="20231129 10:57:32.763"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.761" endtime="20231129 10:57:32.764"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.767" endtime="20231129 10:57:32.768"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.769" endtime="20231129 10:57:32.769"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.771" endtime="20231129 10:57:32.773"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.765" endtime="20231129 10:57:32.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.776" endtime="20231129 10:57:32.777"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.775" endtime="20231129 10:57:32.777"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.779" endtime="20231129 10:57:32.780"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.778" endtime="20231129 10:57:32.781"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.782" endtime="20231129 10:57:32.783"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.781" endtime="20231129 10:57:32.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.786" endtime="20231129 10:57:32.790"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.784" endtime="20231129 10:57:32.791"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231129 10:57:32.793" endtime="20231129 10:57:32.794"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:32.792" endtime="20231129 10:57:32.794"/>
</branch>
<status status="PASS" starttime="20231129 10:57:32.726" endtime="20231129 10:57:32.795"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:32.796" level="INFO">Length is 11</msg>
<msg timestamp="20231129 10:57:32.797" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231129 10:57:32.795" endtime="20231129 10:57:32.797"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231129 10:57:32.811" level="INFO">${text} = Farmer Side</msg>
<status status="PASS" starttime="20231129 10:57:32.809" endtime="20231129 10:57:32.811"/>
</kw>
<status status="PASS" starttime="20231129 10:57:32.798" endtime="20231129 10:57:32.811"/>
</branch>
<status status="PASS" starttime="20231129 10:57:32.798" endtime="20231129 10:57:32.812"/>
</if>
<msg timestamp="20231129 10:57:32.813" level="INFO">${text} = Farmer Side</msg>
<status status="PASS" starttime="20231129 10:57:32.701" endtime="20231129 10:57:32.813"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//following-sibling::nz-select[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231129 10:57:32.864" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//following-sibling::nz-select[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231129 10:57:32.814" endtime="20231129 10:57:32.865"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:32.865" endtime="20231129 10:57:33.249"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:33.353" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:33.251" endtime="20231129 10:57:33.354"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:33.357" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:33.356" endtime="20231129 10:57:33.358"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:33.373" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:33.359" endtime="20231129 10:57:33.374"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:33.376" endtime="20231129 10:57:33.377"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:33.375" endtime="20231129 10:57:33.377"/>
</branch>
<status status="PASS" starttime="20231129 10:57:33.375" endtime="20231129 10:57:33.378"/>
</if>
<status status="PASS" starttime="20231129 10:57:33.250" endtime="20231129 10:57:33.379"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:33.381" endtime="20231129 10:57:33.612"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:33.614" level="INFO">Length is 11</msg>
<msg timestamp="20231129 10:57:33.616" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231129 10:57:33.613" endtime="20231129 10:57:33.616"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 10:57:33.619" level="INFO">${STATE["Loại tài khoản"]} = Farmer Side</msg>
<status status="PASS" starttime="20231129 10:57:33.618" endtime="20231129 10:57:33.624"/>
</kw>
<status status="PASS" starttime="20231129 10:57:33.617" endtime="20231129 10:57:33.624"/>
</branch>
<status status="PASS" starttime="20231129 10:57:33.616" endtime="20231129 10:57:33.625"/>
</if>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:33.728" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:33.627" endtime="20231129 10:57:33.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:33.730" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:33.729" endtime="20231129 10:57:33.730"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:33.964" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:33.731" endtime="20231129 10:57:33.964"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:33.966" endtime="20231129 10:57:33.967"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:33.965" endtime="20231129 10:57:33.968"/>
</branch>
<status status="PASS" starttime="20231129 10:57:33.965" endtime="20231129 10:57:33.968"/>
</if>
<status status="PASS" starttime="20231129 10:57:33.626" endtime="20231129 10:57:33.969"/>
</kw>
<status status="PASS" starttime="20231129 10:57:32.700" endtime="20231129 10:57:33.969"/>
</kw>
<kw name="Then &quot;_@Họ và tên@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:34.061" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231129 10:57:34.059" endtime="20231129 10:57:34.061"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:34.063" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:34.064" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 10:57:34.062" endtime="20231129 10:57:34.064"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:34.068" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:34.066" endtime="20231129 10:57:34.068"/>
</kw>
<status status="PASS" starttime="20231129 10:57:34.065" endtime="20231129 10:57:34.069"/>
</branch>
<status status="PASS" starttime="20231129 10:57:34.065" endtime="20231129 10:57:34.069"/>
</if>
<msg timestamp="20231129 10:57:34.070" level="INFO">${name} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:34.053" endtime="20231129 10:57:34.075"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:34.081" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_18 Beatae.")]</msg>
<status status="PASS" starttime="20231129 10:57:34.080" endtime="20231129 10:57:34.081"/>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231129 10:57:34.162" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_18 Beatae.")] at state detached</msg>
<status status="PASS" starttime="20231129 10:57:34.085" endtime="20231129 10:57:34.163"/>
</kw>
<status status="PASS" starttime="20231129 10:57:34.082" endtime="20231129 10:57:34.164"/>
</kw>
<status status="PASS" starttime="20231129 10:57:34.050" endtime="20231129 10:57:34.165"/>
</kw>
<kw name="When Click on cross icon in select &quot;Loại tài khoản&quot;" library="common" sourcename="Click on cross icon in select &quot;${name}&quot;">
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//following-sibling::nz-select[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231129 10:57:34.178" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//following-sibling::nz-select[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231129 10:57:34.177" endtime="20231129 10:57:34.179"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:34.180" endtime="20231129 10:57:34.349"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//span[contains(@class, "anticon-close-circle")]/*[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:34.349" endtime="20231129 10:57:34.825"/>
</kw>
<status status="PASS" starttime="20231129 10:57:34.169" endtime="20231129 10:57:34.827"/>
</kw>
<kw name="Then &quot;_@Họ và tên@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:34.935" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:34.833" endtime="20231129 10:57:34.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:34.942" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:34.939" endtime="20231129 10:57:34.942"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:34.964" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:34.943" endtime="20231129 10:57:34.965"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:34.966" endtime="20231129 10:57:34.967"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:34.965" endtime="20231129 10:57:34.967"/>
</branch>
<status status="PASS" starttime="20231129 10:57:34.965" endtime="20231129 10:57:34.968"/>
</if>
<status status="PASS" starttime="20231129 10:57:34.832" endtime="20231129 10:57:34.968"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:34.974" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231129 10:57:34.973" endtime="20231129 10:57:34.975"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:34.976" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:34.977" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 10:57:34.975" endtime="20231129 10:57:34.978"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:34.982" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:34.979" endtime="20231129 10:57:34.982"/>
</kw>
<status status="PASS" starttime="20231129 10:57:34.978" endtime="20231129 10:57:34.983"/>
</branch>
<status status="PASS" starttime="20231129 10:57:34.978" endtime="20231129 10:57:34.983"/>
</if>
<msg timestamp="20231129 10:57:34.984" level="INFO">${name} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:34.969" endtime="20231129 10:57:34.984"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:35.012" level="INFO">${cntS} = 7</msg>
<status status="PASS" starttime="20231129 10:57:34.985" endtime="20231129 10:57:35.013"/>
</kw>
<while condition="${cntS} &lt; 1" limit="10">
<iter>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:35.016" endtime="20231129 10:57:35.017"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:35.014" endtime="20231129 10:57:35.017"/>
</iter>
<status status="NOT RUN" starttime="20231129 10:57:35.014" endtime="20231129 10:57:35.018"/>
</while>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:35.021" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_18 Beatae.")]</msg>
<status status="PASS" starttime="20231129 10:57:35.018" endtime="20231129 10:57:35.022"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:35.069" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231129 10:57:35.023" endtime="20231129 10:57:35.070"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 10:57:35.073" endtime="20231129 10:57:35.074"/>
</kw>
<status status="PASS" starttime="20231129 10:57:34.831" endtime="20231129 10:57:35.075"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Họ và tên@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:35.206" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:35.102" endtime="20231129 10:57:35.206"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:35.310" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:35.208" endtime="20231129 10:57:35.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:35.312" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:35.311" endtime="20231129 10:57:35.312"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:35.326" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:35.313" endtime="20231129 10:57:35.326"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:35.328" endtime="20231129 10:57:35.329"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:35.327" endtime="20231129 10:57:35.330"/>
</branch>
<status status="PASS" starttime="20231129 10:57:35.327" endtime="20231129 10:57:35.330"/>
</if>
<status status="PASS" starttime="20231129 10:57:35.207" endtime="20231129 10:57:35.330"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 10:57:35.333" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231129 10:57:35.332" endtime="20231129 10:57:35.334"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231129 10:57:35.335" level="INFO">Length is 1</msg>
<msg timestamp="20231129 10:57:35.336" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231129 10:57:35.334" endtime="20231129 10:57:35.336"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:35.344" level="INFO">${text} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:35.341" endtime="20231129 10:57:35.344"/>
</kw>
<status status="PASS" starttime="20231129 10:57:35.336" endtime="20231129 10:57:35.345"/>
</branch>
<status status="PASS" starttime="20231129 10:57:35.336" endtime="20231129 10:57:35.345"/>
</if>
<msg timestamp="20231129 10:57:35.346" level="INFO">${name} = CA_18 Beatae.</msg>
<status status="PASS" starttime="20231129 10:57:35.331" endtime="20231129 10:57:35.346"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231129 10:57:35.348" endtime="20231129 10:57:35.349"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:35.350" endtime="20231129 10:57:35.351"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:35.353" endtime="20231129 10:57:35.355"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:35.352" endtime="20231129 10:57:35.355"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231129 10:57:35.357" endtime="20231129 10:57:35.358"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231129 10:57:35.359" endtime="20231129 10:57:35.360"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:35.356" endtime="20231129 10:57:35.360"/>
</branch>
<status status="NOT RUN" starttime="20231129 10:57:35.352" endtime="20231129 10:57:35.361"/>
</if>
<status status="NOT RUN" starttime="20231129 10:57:35.347" endtime="20231129 10:57:35.361"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231129 10:57:35.364" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CA_18 Beatae.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231129 10:57:35.362" endtime="20231129 10:57:35.364"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:35.365" endtime="20231129 10:57:35.547"/>
</kw>
<status status="PASS" starttime="20231129 10:57:35.362" endtime="20231129 10:57:35.548"/>
</branch>
<status status="PASS" starttime="20231129 10:57:35.347" endtime="20231129 10:57:35.548"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:35.551" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231129 10:57:35.550" endtime="20231129 10:57:35.552"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:35.570" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231129 10:57:35.553" endtime="20231129 10:57:35.571"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231129 10:57:35.573" endtime="20231129 10:57:36.042"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:36.144" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:36.043" endtime="20231129 10:57:36.144"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 10:57:36.249" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231129 10:57:36.147" endtime="20231129 10:57:36.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 10:57:36.251" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231129 10:57:36.250" endtime="20231129 10:57:36.251"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231129 10:57:36.380" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231129 10:57:36.254" endtime="20231129 10:57:36.381"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231129 10:57:36.383" endtime="20231129 10:57:36.384"/>
</kw>
<status status="NOT RUN" starttime="20231129 10:57:36.381" endtime="20231129 10:57:36.384"/>
</branch>
<status status="PASS" starttime="20231129 10:57:36.381" endtime="20231129 10:57:36.385"/>
</if>
<status status="PASS" starttime="20231129 10:57:36.145" endtime="20231129 10:57:36.385"/>
</kw>
<status status="PASS" starttime="20231129 10:57:35.572" endtime="20231129 10:57:36.388"/>
</branch>
<status status="PASS" starttime="20231129 10:57:35.572" endtime="20231129 10:57:36.389"/>
</if>
<status status="PASS" starttime="20231129 10:57:35.549" endtime="20231129 10:57:36.390"/>
</kw>
<status status="PASS" starttime="20231129 10:57:35.101" endtime="20231129 10:57:36.394"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231129 10:57:37.283" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231129 10:57:36.400" endtime="20231129 10:57:37.284"/>
</kw>
<status status="PASS" starttime="20231129 10:57:36.398" endtime="20231129 10:57:37.285"/>
</kw>
<tag>Filter</tag>
<status status="PASS" starttime="20231129 10:57:14.001" endtime="20231129 10:57:37.289"/>
</test>
<status status="PASS" starttime="20231129 10:57:10.019" endtime="20231129 10:57:37.496"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Filter</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Customer Account">Customer Account</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

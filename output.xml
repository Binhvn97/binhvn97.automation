<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231101 23:35:18.240" rpa="false" schemaversion="4">
<suite id="s1" name="Data" source="d:\TESTER\Automation\Auto_Web\testcases\data.robot">
<test id="s1-t1" name="DA_10 Verify the search function when enter the name was not existed" line="118">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231101 23:35:20.564" endtime="20231101 23:35:20.565"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231101 23:35:20.566" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\2566909b-3f1e-48f6-ab62-7c1edbd99f50"}</msg>
<msg timestamp="20231101 23:35:21.684" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\2566909b-3f1e-48f6-ab62-7c1edbd99f50"}</msg>
<status status="PASS" starttime="20231101 23:35:20.565" endtime="20231101 23:35:21.684"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231101 23:35:25.229" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231101 23:35:25.230" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231101 23:35:21.685" endtime="20231101 23:35:25.231"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231101 23:35:25.233" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231101 23:35:25.232" endtime="20231101 23:35:25.234"/>
</kw>
<status status="PASS" starttime="20231101 23:35:20.562" endtime="20231101 23:35:25.234"/>
</kw>
<kw name="Create a category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:25.325" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:25.251" endtime="20231101 23:35:25.326"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231101 23:35:25.328" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231101 23:35:25.327" endtime="20231101 23:35:25.329"/>
</kw>
<status status="FAIL" starttime="20231101 23:35:25.249" endtime="20231101 23:35:25.330"/>
</kw>
<msg timestamp="20231101 23:35:25.331" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231101 23:35:25.248" endtime="20231101 23:35:25.332"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231101 23:35:25.334" endtime="20231101 23:35:25.335"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.333" endtime="20231101 23:35:25.336"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Quản lý dữ liệu&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:25.349" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:25.348" endtime="20231101 23:35:25.349"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:25.351" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:25.350" endtime="20231101 23:35:25.351"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:25.353" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:25.352" endtime="20231101 23:35:25.354"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:25.356" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:25.357" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:25.355" endtime="20231101 23:35:25.357"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:25.362" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:25.358" endtime="20231101 23:35:25.362"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:25.365" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:25.365" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:25.363" endtime="20231101 23:35:25.366"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.368" endtime="20231101 23:35:25.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.369" endtime="20231101 23:35:25.375"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.367" endtime="20231101 23:35:25.376"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.378" endtime="20231101 23:35:25.379"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.379" endtime="20231101 23:35:25.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.381" endtime="20231101 23:35:25.381"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.377" endtime="20231101 23:35:25.382"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.384" endtime="20231101 23:35:25.384"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.385" endtime="20231101 23:35:25.390"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.383" endtime="20231101 23:35:25.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.395" endtime="20231101 23:35:25.395"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.396" endtime="20231101 23:35:25.397"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.393" endtime="20231101 23:35:25.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.399" endtime="20231101 23:35:25.400"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.398" endtime="20231101 23:35:25.400"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:25.402" endtime="20231101 23:35:25.402"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.401" endtime="20231101 23:35:25.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.445" endtime="20231101 23:35:25.447"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.453" endtime="20231101 23:35:25.460"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.468" endtime="20231101 23:35:25.475"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.409" endtime="20231101 23:35:25.476"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.480" endtime="20231101 23:35:25.485"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.477" endtime="20231101 23:35:25.492"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.495" endtime="20231101 23:35:25.496"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.494" endtime="20231101 23:35:25.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.510" endtime="20231101 23:35:25.511"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.499" endtime="20231101 23:35:25.512"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.514" endtime="20231101 23:35:25.514"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.512" endtime="20231101 23:35:25.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:25.517" endtime="20231101 23:35:25.518"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:25.516" endtime="20231101 23:35:25.519"/>
</branch>
<status status="PASS" starttime="20231101 23:35:25.366" endtime="20231101 23:35:25.523"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:25.525" level="INFO">Length is 15</msg>
<msg timestamp="20231101 23:35:25.525" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231101 23:35:25.524" endtime="20231101 23:35:25.526"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:25.528" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 23:35:25.527" endtime="20231101 23:35:25.529"/>
</kw>
<status status="PASS" starttime="20231101 23:35:25.526" endtime="20231101 23:35:25.530"/>
</branch>
<status status="PASS" starttime="20231101 23:35:25.526" endtime="20231101 23:35:25.531"/>
</if>
<msg timestamp="20231101 23:35:25.532" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 23:35:25.346" endtime="20231101 23:35:25.532"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:25.539" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:25.534" endtime="20231101 23:35:25.540"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:25.542" endtime="20231101 23:35:25.944"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:25.945" endtime="20231101 23:35:26.040"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:26.041" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:26.040" endtime="20231101 23:35:26.094"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:26.150" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231101 23:35:26.150" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 23:35:26.095" endtime="20231101 23:35:26.150"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.151" endtime="20231101 23:35:26.152"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.152" endtime="20231101 23:35:26.155"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.151" endtime="20231101 23:35:26.156"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:26.151" endtime="20231101 23:35:26.157"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:26.158" level="INFO">Length is 15</msg>
<msg timestamp="20231101 23:35:26.159" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231101 23:35:26.158" endtime="20231101 23:35:26.159"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:26.161" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231101 23:35:26.160" endtime="20231101 23:35:26.161"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.159" endtime="20231101 23:35:26.161"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.159" endtime="20231101 23:35:26.161"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:26.162" endtime="20231101 23:35:26.178"/>
</kw>
<status status="PASS" starttime="20231101 23:35:25.344" endtime="20231101 23:35:26.179"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:26.183" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:26.182" endtime="20231101 23:35:26.184"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:26.185" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:26.184" endtime="20231101 23:35:26.188"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:26.191" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:26.190" endtime="20231101 23:35:26.191"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:26.192" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:26.193" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:26.192" endtime="20231101 23:35:26.193"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:26.195" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:26.194" endtime="20231101 23:35:26.195"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:26.196" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:26.197" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:26.196" endtime="20231101 23:35:26.197"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.198" endtime="20231101 23:35:26.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.200" endtime="20231101 23:35:26.201"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.198" endtime="20231101 23:35:26.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.207" endtime="20231101 23:35:26.208"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.208" endtime="20231101 23:35:26.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.209" endtime="20231101 23:35:26.210"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.202" endtime="20231101 23:35:26.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.211" endtime="20231101 23:35:26.212"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.213" endtime="20231101 23:35:26.213"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.210" endtime="20231101 23:35:26.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.215" endtime="20231101 23:35:26.215"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.216" endtime="20231101 23:35:26.217"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.214" endtime="20231101 23:35:26.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.218" endtime="20231101 23:35:26.218"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.217" endtime="20231101 23:35:26.219"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:26.223" endtime="20231101 23:35:26.224"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.222" endtime="20231101 23:35:26.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.225" endtime="20231101 23:35:26.225"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.226" endtime="20231101 23:35:26.226"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.226" endtime="20231101 23:35:26.226"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.224" endtime="20231101 23:35:26.227"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.227" endtime="20231101 23:35:26.228"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.227" endtime="20231101 23:35:26.228"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.228" endtime="20231101 23:35:26.229"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.228" endtime="20231101 23:35:26.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.230" endtime="20231101 23:35:26.231"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.229" endtime="20231101 23:35:26.231"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.232" endtime="20231101 23:35:26.232"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.231" endtime="20231101 23:35:26.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.233" endtime="20231101 23:35:26.233"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.232" endtime="20231101 23:35:26.233"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.197" endtime="20231101 23:35:26.234"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:26.234" level="INFO">Length is 6</msg>
<msg timestamp="20231101 23:35:26.235" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231101 23:35:26.234" endtime="20231101 23:35:26.235"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:26.240" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231101 23:35:26.239" endtime="20231101 23:35:26.240"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.235" endtime="20231101 23:35:26.240"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.235" endtime="20231101 23:35:26.241"/>
</if>
<msg timestamp="20231101 23:35:26.241" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231101 23:35:26.181" endtime="20231101 23:35:26.241"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:26.242" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:26.241" endtime="20231101 23:35:26.242"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:26.243" endtime="20231101 23:35:26.356"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:26.357" endtime="20231101 23:35:26.401"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:26.406" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:26.402" endtime="20231101 23:35:26.457"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:26.507" level="INFO">Text: '123123'</msg>
<msg timestamp="20231101 23:35:26.508" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231101 23:35:26.458" endtime="20231101 23:35:26.508"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.510" endtime="20231101 23:35:26.510"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.511" endtime="20231101 23:35:26.511"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.509" endtime="20231101 23:35:26.511"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:26.509" endtime="20231101 23:35:26.511"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:26.512" level="INFO">Length is 6</msg>
<msg timestamp="20231101 23:35:26.512" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231101 23:35:26.512" endtime="20231101 23:35:26.512"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:26.515" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231101 23:35:26.514" endtime="20231101 23:35:26.516"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.513" endtime="20231101 23:35:26.516"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.513" endtime="20231101 23:35:26.517"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:26.517" endtime="20231101 23:35:26.529"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.180" endtime="20231101 23:35:26.530"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:26.634" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:26.532" endtime="20231101 23:35:26.634"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:26.667" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:26.635" endtime="20231101 23:35:26.667"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:26.669" endtime="20231101 23:35:26.785"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:26.791" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:26.790" endtime="20231101 23:35:26.791"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:26.800" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:26.792" endtime="20231101 23:35:26.801"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.804" endtime="20231101 23:35:26.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.806" endtime="20231101 23:35:26.806"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 23:35:26.807" endtime="20231101 23:35:26.808"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.801" endtime="20231101 23:35:26.808"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.801" endtime="20231101 23:35:26.809"/>
</if>
<status status="PASS" starttime="20231101 23:35:26.788" endtime="20231101 23:35:26.809"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 23:35:26.848" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:26.849" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:26.877" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:26.877" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:26.943" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 23:35:26.810" endtime="20231101 23:35:26.943"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.668" endtime="20231101 23:35:26.944"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.945" endtime="20231101 23:35:26.945"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 23:35:26.946" endtime="20231101 23:35:26.946"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.947" endtime="20231101 23:35:26.948"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.944" endtime="20231101 23:35:26.948"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.668" endtime="20231101 23:35:26.948"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:26.949" endtime="20231101 23:35:26.960"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.531" endtime="20231101 23:35:26.961"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:26.965" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:26.964" endtime="20231101 23:35:26.965"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:26.967" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:26.968" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:26.966" endtime="20231101 23:35:26.968"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:26.973" endtime="20231101 23:35:26.974"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:26.969" endtime="20231101 23:35:26.974"/>
</branch>
<status status="PASS" starttime="20231101 23:35:26.969" endtime="20231101 23:35:26.975"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:27.314" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 23:35:26.981" endtime="20231101 23:35:27.314"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.978" endtime="20231101 23:35:27.314"/>
</kw>
<status status="PASS" starttime="20231101 23:35:26.976" endtime="20231101 23:35:27.314"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:27.315" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 23:35:27.315" endtime="20231101 23:35:27.315"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 23:35:27.644" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 23:35:27.644" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 23:35:27.645" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 23:35:27.317" endtime="20231101 23:35:27.654"/>
</kw>
<status status="FAIL" starttime="20231101 23:35:27.316" endtime="20231101 23:35:27.656"/>
</kw>
<msg timestamp="20231101 23:35:27.657" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 23:35:27.316" endtime="20231101 23:35:27.657"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:27.659" endtime="20231101 23:35:27.660"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:27.658" endtime="20231101 23:35:27.660"/>
</branch>
<status status="PASS" starttime="20231101 23:35:27.658" endtime="20231101 23:35:27.661"/>
</if>
<status status="PASS" starttime="20231101 23:35:26.962" endtime="20231101 23:35:27.661"/>
</kw>
<status status="PASS" starttime="20231101 23:35:25.343" endtime="20231101 23:35:27.662"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:27.664" endtime="20231101 23:35:28.661"/>
</kw>
<status status="PASS" starttime="20231101 23:35:27.663" endtime="20231101 23:35:28.661"/>
</kw>
<kw name="Click &quot;Quản lý dữ liệu&quot; sub menu to &quot;/data&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:28.764" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:28.662" endtime="20231101 23:35:28.764"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:28.764" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:28.764" endtime="20231101 23:35:28.764"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:28.774" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:28.764" endtime="20231101 23:35:28.774"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:28.776" endtime="20231101 23:35:28.777"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:28.775" endtime="20231101 23:35:28.777"/>
</branch>
<status status="PASS" starttime="20231101 23:35:28.775" endtime="20231101 23:35:28.778"/>
</if>
<status status="PASS" starttime="20231101 23:35:28.662" endtime="20231101 23:35:28.778"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:28.779" endtime="20231101 23:35:29.706"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231101 23:35:29.712" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/vn/data</msg>
<status status="PASS" starttime="20231101 23:35:29.707" endtime="20231101 23:35:29.713"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231101 23:35:29.714" endtime="20231101 23:35:29.715"/>
</kw>
<status status="PASS" starttime="20231101 23:35:28.662" endtime="20231101 23:35:29.715"/>
</kw>
<status status="PASS" starttime="20231101 23:35:25.341" endtime="20231101 23:35:29.716"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:29.822" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:29.718" endtime="20231101 23:35:29.823"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:29.841" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:29.824" endtime="20231101 23:35:29.842"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:29.844" endtime="20231101 23:35:30.073"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.076" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:30.075" endtime="20231101 23:35:30.076"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:30.085" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:30.077" endtime="20231101 23:35:30.086"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.090" endtime="20231101 23:35:30.091"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.092" endtime="20231101 23:35:30.093"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 23:35:30.093" endtime="20231101 23:35:30.094"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.088" endtime="20231101 23:35:30.094"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.088" endtime="20231101 23:35:30.095"/>
</if>
<status status="PASS" starttime="20231101 23:35:30.074" endtime="20231101 23:35:30.095"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 23:35:30.116" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:30.116" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:30.145" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:30.145" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:30.156" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 23:35:30.096" endtime="20231101 23:35:30.157"/>
</kw>
<status status="PASS" starttime="20231101 23:35:29.843" endtime="20231101 23:35:30.157"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.159" endtime="20231101 23:35:30.160"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 23:35:30.161" endtime="20231101 23:35:30.161"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.162" endtime="20231101 23:35:30.163"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.158" endtime="20231101 23:35:30.163"/>
</branch>
<status status="PASS" starttime="20231101 23:35:29.842" endtime="20231101 23:35:30.163"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:30.164" endtime="20231101 23:35:30.358"/>
</kw>
<status status="PASS" starttime="20231101 23:35:29.717" endtime="20231101 23:35:30.359"/>
</kw>
<status status="PASS" starttime="20231101 23:35:25.339" endtime="20231101 23:35:30.359"/>
</branch>
<status status="PASS" starttime="20231101 23:35:25.333" endtime="20231101 23:35:30.360"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên loại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.363" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:30.362" endtime="20231101 23:35:30.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.364" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:30.364" endtime="20231101 23:35:30.364"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:30.366" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:30.365" endtime="20231101 23:35:30.366"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.368" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:30.370" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:30.367" endtime="20231101 23:35:30.371"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:30.374" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:30.372" endtime="20231101 23:35:30.374"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.376" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:30.376" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:30.375" endtime="20231101 23:35:30.376"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.378" endtime="20231101 23:35:30.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.379" endtime="20231101 23:35:30.379"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.377" endtime="20231101 23:35:30.380"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 23:35:30.381" level="INFO">${random} = Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.380" endtime="20231101 23:35:30.381"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 23:35:30.382" level="INFO">${words} = ['DA_10', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231101 23:35:30.381" endtime="20231101 23:35:30.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.387" level="INFO">${new_text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.383" endtime="20231101 23:35:30.389"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.380" endtime="20231101 23:35:30.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.390" endtime="20231101 23:35:30.391"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.391" endtime="20231101 23:35:30.391"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.390" endtime="20231101 23:35:30.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.393" endtime="20231101 23:35:30.393"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.394" endtime="20231101 23:35:30.395"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.392" endtime="20231101 23:35:30.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.396" endtime="20231101 23:35:30.396"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.395" endtime="20231101 23:35:30.397"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:30.398" endtime="20231101 23:35:30.399"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.397" endtime="20231101 23:35:30.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.400" endtime="20231101 23:35:30.401"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.404" endtime="20231101 23:35:30.405"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.406" endtime="20231101 23:35:30.406"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.400" endtime="20231101 23:35:30.407"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.408" endtime="20231101 23:35:30.408"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.407" endtime="20231101 23:35:30.409"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.410" endtime="20231101 23:35:30.411"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.409" endtime="20231101 23:35:30.411"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.413" endtime="20231101 23:35:30.414"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.412" endtime="20231101 23:35:30.414"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.416" endtime="20231101 23:35:30.416"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.415" endtime="20231101 23:35:30.417"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.418" endtime="20231101 23:35:30.422"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.417" endtime="20231101 23:35:30.423"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.377" endtime="20231101 23:35:30.424"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.425" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:30.426" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:30.424" endtime="20231101 23:35:30.426"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:30.429" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.428" endtime="20231101 23:35:30.429"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.427" endtime="20231101 23:35:30.430"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.426" endtime="20231101 23:35:30.430"/>
</if>
<msg timestamp="20231101 23:35:30.431" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.362" endtime="20231101 23:35:30.431"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:30.434" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên loại"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:30.432" endtime="20231101 23:35:30.434"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:30.438" endtime="20231101 23:35:30.628"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:30.629" endtime="20231101 23:35:30.688"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:30.690" level="INFO">Fills the text 'DA_10 Voluptatum quisquam.' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:30.689" endtime="20231101 23:35:30.749"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:30.785" level="INFO">Text: 'DA_10 Voluptatum quisquam.'</msg>
<msg timestamp="20231101 23:35:30.786" level="INFO">${condition} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.750" endtime="20231101 23:35:30.787"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.789" endtime="20231101 23:35:30.790"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.791" endtime="20231101 23:35:30.791"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.787" endtime="20231101 23:35:30.792"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:30.787" endtime="20231101 23:35:30.793"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.794" level="INFO">Length is 26</msg>
<msg timestamp="20231101 23:35:30.795" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231101 23:35:30.794" endtime="20231101 23:35:30.795"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:30.798" level="INFO">${STATE["Tên loại"]} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.797" endtime="20231101 23:35:30.799"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.796" endtime="20231101 23:35:30.799"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.796" endtime="20231101 23:35:30.800"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:30.800" endtime="20231101 23:35:30.808"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.361" endtime="20231101 23:35:30.809"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên loại@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:30.812" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 23:35:30.810" endtime="20231101 23:35:30.812"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.814" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:30.814" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 23:35:30.813" endtime="20231101 23:35:30.815"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.818" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.816" endtime="20231101 23:35:30.819"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.815" endtime="20231101 23:35:30.820"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.815" endtime="20231101 23:35:30.821"/>
</if>
<msg timestamp="20231101 23:35:30.822" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.809" endtime="20231101 23:35:30.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.825" level="INFO">${name} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:30.824" endtime="20231101 23:35:30.826"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.829" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:30.829" endtime="20231101 23:35:30.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:30.831" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:30.831" endtime="20231101 23:35:30.832"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:30.833" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:30.832" endtime="20231101 23:35:30.834"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.837" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:30.837" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:30.834" endtime="20231101 23:35:30.838"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:30.840" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:30.839" endtime="20231101 23:35:30.841"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.843" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:30.844" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:30.842" endtime="20231101 23:35:30.844"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.846" endtime="20231101 23:35:30.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.848" endtime="20231101 23:35:30.849"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.845" endtime="20231101 23:35:30.849"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.851" endtime="20231101 23:35:30.851"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.854" endtime="20231101 23:35:30.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.855" endtime="20231101 23:35:30.856"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.850" endtime="20231101 23:35:30.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 23:35:30.860" level="INFO">${new_text} = 4581</msg>
<status status="PASS" starttime="20231101 23:35:30.860" endtime="20231101 23:35:30.861"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 23:35:30.863" level="INFO">${new_text} = 4581</msg>
<status status="PASS" starttime="20231101 23:35:30.862" endtime="20231101 23:35:30.863"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.858" endtime="20231101 23:35:30.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.864" endtime="20231101 23:35:30.864"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.865" endtime="20231101 23:35:30.866"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.863" endtime="20231101 23:35:30.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.867" endtime="20231101 23:35:30.868"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.867" endtime="20231101 23:35:30.870"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:30.871" endtime="20231101 23:35:30.872"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.871" endtime="20231101 23:35:30.873"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.874" endtime="20231101 23:35:30.875"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.876" endtime="20231101 23:35:30.876"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.877" endtime="20231101 23:35:30.878"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.874" endtime="20231101 23:35:30.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.880" endtime="20231101 23:35:30.880"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.879" endtime="20231101 23:35:30.881"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.882" endtime="20231101 23:35:30.883"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.882" endtime="20231101 23:35:30.884"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.885" endtime="20231101 23:35:30.887"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.884" endtime="20231101 23:35:30.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.890" endtime="20231101 23:35:30.890"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.888" endtime="20231101 23:35:30.891"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:30.892" endtime="20231101 23:35:30.893"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:30.892" endtime="20231101 23:35:30.893"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.845" endtime="20231101 23:35:30.893"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:30.895" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:30.895" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:30.894" endtime="20231101 23:35:30.896"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:30.898" level="INFO">${text} = 4581</msg>
<status status="PASS" starttime="20231101 23:35:30.897" endtime="20231101 23:35:30.899"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.896" endtime="20231101 23:35:30.900"/>
</branch>
<status status="PASS" starttime="20231101 23:35:30.896" endtime="20231101 23:35:30.900"/>
</if>
<msg timestamp="20231101 23:35:30.901" level="INFO">${text} = 4581</msg>
<status status="PASS" starttime="20231101 23:35:30.827" endtime="20231101 23:35:30.901"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:30.905" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:30.901" endtime="20231101 23:35:30.905"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:30.906" endtime="20231101 23:35:30.999"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:31.000" endtime="20231101 23:35:31.034"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:31.037" level="INFO">Fills the text '4581' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:31.035" endtime="20231101 23:35:31.079"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:31.115" level="INFO">Text: '4581'</msg>
<msg timestamp="20231101 23:35:31.115" level="INFO">${condition} = 4581</msg>
<status status="PASS" starttime="20231101 23:35:31.080" endtime="20231101 23:35:31.116"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:31.118" endtime="20231101 23:35:31.119"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:31.120" endtime="20231101 23:35:31.121"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:31.116" endtime="20231101 23:35:31.121"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:31.116" endtime="20231101 23:35:31.122"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:31.124" level="INFO">Length is 4</msg>
<msg timestamp="20231101 23:35:31.124" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231101 23:35:31.123" endtime="20231101 23:35:31.125"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:31.128" level="INFO">${STATE["Mã"]} = 4581</msg>
<status status="PASS" starttime="20231101 23:35:31.127" endtime="20231101 23:35:31.128"/>
</kw>
<status status="PASS" starttime="20231101 23:35:31.126" endtime="20231101 23:35:31.129"/>
</branch>
<status status="PASS" starttime="20231101 23:35:31.125" endtime="20231101 23:35:31.129"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:31.130" endtime="20231101 23:35:31.139"/>
</kw>
<status status="PASS" starttime="20231101 23:35:30.826" endtime="20231101 23:35:31.139"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:31.243" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:31.141" endtime="20231101 23:35:31.243"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:31.263" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:31.244" endtime="20231101 23:35:31.263"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:31.265" endtime="20231101 23:35:31.415"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:31.418" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:31.417" endtime="20231101 23:35:31.418"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:31.622" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:31.421" endtime="20231101 23:35:31.623"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:31.625" endtime="20231101 23:35:31.626"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 23:35:31.627" endtime="20231101 23:35:31.628"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 23:35:31.629" endtime="20231101 23:35:31.629"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:31.624" endtime="20231101 23:35:31.630"/>
</branch>
<status status="PASS" starttime="20231101 23:35:31.623" endtime="20231101 23:35:31.631"/>
</if>
<status status="PASS" starttime="20231101 23:35:31.416" endtime="20231101 23:35:31.631"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 23:35:32.395" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:32.395" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:32.432" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:32.432" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:32.449" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 23:35:31.632" endtime="20231101 23:35:32.450"/>
</kw>
<status status="PASS" starttime="20231101 23:35:31.264" endtime="20231101 23:35:32.450"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:32.451" endtime="20231101 23:35:32.451"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 23:35:32.451" endtime="20231101 23:35:32.452"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 23:35:32.456" endtime="20231101 23:35:32.457"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:32.450" endtime="20231101 23:35:32.457"/>
</branch>
<status status="PASS" starttime="20231101 23:35:31.264" endtime="20231101 23:35:32.458"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:32.458" endtime="20231101 23:35:32.466"/>
</kw>
<status status="PASS" starttime="20231101 23:35:31.140" endtime="20231101 23:35:32.467"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:32.473" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:32.471" endtime="20231101 23:35:32.473"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:32.475" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:32.475" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:32.474" endtime="20231101 23:35:32.476"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:32.477" endtime="20231101 23:35:32.478"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:32.476" endtime="20231101 23:35:32.479"/>
</branch>
<status status="PASS" starttime="20231101 23:35:32.476" endtime="20231101 23:35:32.479"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:32.534" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 23:35:32.484" endtime="20231101 23:35:32.534"/>
</kw>
<status status="PASS" starttime="20231101 23:35:32.481" endtime="20231101 23:35:32.537"/>
</kw>
<status status="PASS" starttime="20231101 23:35:32.480" endtime="20231101 23:35:32.538"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:32.539" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 23:35:32.538" endtime="20231101 23:35:32.540"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 23:35:32.912" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 23:35:32.913" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 23:35:32.914" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 23:35:32.543" endtime="20231101 23:35:32.916"/>
</kw>
<status status="FAIL" starttime="20231101 23:35:32.541" endtime="20231101 23:35:32.917"/>
</kw>
<msg timestamp="20231101 23:35:32.918" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 23:35:32.540" endtime="20231101 23:35:32.918"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:32.922" endtime="20231101 23:35:32.923"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:32.920" endtime="20231101 23:35:32.924"/>
</branch>
<status status="PASS" starttime="20231101 23:35:32.919" endtime="20231101 23:35:32.924"/>
</if>
<status status="PASS" starttime="20231101 23:35:32.468" endtime="20231101 23:35:32.924"/>
</kw>
<status status="PASS" starttime="20231101 23:35:25.247" endtime="20231101 23:35:32.925"/>
</kw>
<kw name="Create a test data with &quot;_@Tên loại@_&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:33.006" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:32.933" endtime="20231101 23:35:33.006"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 23:35:33.007" endtime="20231101 23:35:33.008"/>
</kw>
<status status="PASS" starttime="20231101 23:35:32.932" endtime="20231101 23:35:33.009"/>
</kw>
<msg timestamp="20231101 23:35:33.010" level="INFO">${condition} = True</msg>
<status status="PASS" starttime="20231101 23:35:32.931" endtime="20231101 23:35:33.010"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Thêm mới dữ liệu&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:33.114" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:33.012" endtime="20231101 23:35:33.114"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:33.131" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:33.114" endtime="20231101 23:35:33.132"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:33.133" endtime="20231101 23:35:33.509"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:33.511" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:33.510" endtime="20231101 23:35:33.511"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:33.551" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:33.512" endtime="20231101 23:35:33.552"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.555" endtime="20231101 23:35:33.556"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.556" endtime="20231101 23:35:33.557"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 23:35:33.557" endtime="20231101 23:35:33.558"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.554" endtime="20231101 23:35:33.558"/>
</branch>
<status status="PASS" starttime="20231101 23:35:33.553" endtime="20231101 23:35:33.559"/>
</if>
<status status="PASS" starttime="20231101 23:35:33.509" endtime="20231101 23:35:33.559"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 23:35:33.601" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:33.601" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:33.615" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:33.615" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:33.623" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 23:35:33.560" endtime="20231101 23:35:33.623"/>
</kw>
<status status="PASS" starttime="20231101 23:35:33.133" endtime="20231101 23:35:33.624"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.625" endtime="20231101 23:35:33.626"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 23:35:33.626" endtime="20231101 23:35:33.627"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.627" endtime="20231101 23:35:33.628"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.625" endtime="20231101 23:35:33.628"/>
</branch>
<status status="PASS" starttime="20231101 23:35:33.132" endtime="20231101 23:35:33.629"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:33.629" endtime="20231101 23:35:33.638"/>
</kw>
<status status="PASS" starttime="20231101 23:35:33.011" endtime="20231101 23:35:33.638"/>
</kw>
<status status="PASS" starttime="20231101 23:35:33.010" endtime="20231101 23:35:33.639"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create data &quot;Quản lý dữ liệu&quot; with &quot;/data&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20231101 23:35:33.640" endtime="20231101 23:35:33.640"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.639" endtime="20231101 23:35:33.641"/>
</branch>
<status status="PASS" starttime="20231101 23:35:33.010" endtime="20231101 23:35:33.641"/>
</if>
<kw name="Click select &quot;Chuyên mục&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:33.645" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:33.644" endtime="20231101 23:35:33.645"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:33.646" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:33.646" endtime="20231101 23:35:33.647"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:33.648" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 23:35:33.648" endtime="20231101 23:35:33.649"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:33.650" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:33.650" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 23:35:33.649" endtime="20231101 23:35:33.651"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:33.654" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:33.651" endtime="20231101 23:35:33.654"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:33.656" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:33.657" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:33.655" endtime="20231101 23:35:33.657"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:33.661" level="INFO">${new_text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:33.659" endtime="20231101 23:35:33.662"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:33.665" level="INFO">${symbol} = _@Tên loại@_</msg>
<status status="PASS" starttime="20231101 23:35:33.662" endtime="20231101 23:35:33.665"/>
</kw>
<status status="PASS" starttime="20231101 23:35:33.658" endtime="20231101 23:35:33.666"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.667" endtime="20231101 23:35:33.667"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.668" endtime="20231101 23:35:33.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.670" endtime="20231101 23:35:33.671"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.666" endtime="20231101 23:35:33.671"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.672" endtime="20231101 23:35:33.673"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.673" endtime="20231101 23:35:33.674"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.672" endtime="20231101 23:35:33.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.675" endtime="20231101 23:35:33.675"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.675" endtime="20231101 23:35:33.675"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.674" endtime="20231101 23:35:33.676"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.676" endtime="20231101 23:35:33.676"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.676" endtime="20231101 23:35:33.676"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:33.677" endtime="20231101 23:35:33.678"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.677" endtime="20231101 23:35:33.679"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.680" endtime="20231101 23:35:33.680"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.681" endtime="20231101 23:35:33.681"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.681" endtime="20231101 23:35:33.682"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.679" endtime="20231101 23:35:33.682"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.683" endtime="20231101 23:35:33.683"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.683" endtime="20231101 23:35:33.684"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.685" endtime="20231101 23:35:33.687"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.684" endtime="20231101 23:35:33.688"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.689" endtime="20231101 23:35:33.689"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.688" endtime="20231101 23:35:33.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.690" endtime="20231101 23:35:33.691"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.690" endtime="20231101 23:35:33.691"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:33.692" endtime="20231101 23:35:33.692"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:33.691" endtime="20231101 23:35:33.692"/>
</branch>
<status status="PASS" starttime="20231101 23:35:33.658" endtime="20231101 23:35:33.693"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:33.694" level="INFO">Length is 12</msg>
<msg timestamp="20231101 23:35:33.695" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231101 23:35:33.693" endtime="20231101 23:35:33.695"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:33.697" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:33.697" endtime="20231101 23:35:33.698"/>
</kw>
<status status="PASS" starttime="20231101 23:35:33.696" endtime="20231101 23:35:33.698"/>
</branch>
<status status="PASS" starttime="20231101 23:35:33.696" endtime="20231101 23:35:33.698"/>
</if>
<msg timestamp="20231101 23:35:33.699" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:33.643" endtime="20231101 23:35:33.699"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231101 23:35:33.700" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231101 23:35:33.699" endtime="20231101 23:35:33.701"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:33.701" endtime="20231101 23:35:34.222"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231101 23:35:34.224" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231101 23:35:34.223" endtime="20231101 23:35:34.225"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:34.226" level="INFO">Fills the text 'DA_10 Voluptatum quisquam.' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:34.225" endtime="20231101 23:35:34.288"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:34.289" endtime="20231101 23:35:34.513"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.514" level="INFO">Length is 26</msg>
<msg timestamp="20231101 23:35:34.514" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231101 23:35:34.514" endtime="20231101 23:35:34.514"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:34.516" level="INFO">${STATE["Chuyên mục"]} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:34.515" endtime="20231101 23:35:34.516"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.515" endtime="20231101 23:35:34.516"/>
</branch>
<status status="PASS" starttime="20231101 23:35:34.515" endtime="20231101 23:35:34.516"/>
</if>
<status status="PASS" starttime="20231101 23:35:33.642" endtime="20231101 23:35:34.516"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:34.523" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:34.521" endtime="20231101 23:35:34.523"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:34.525" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:34.524" endtime="20231101 23:35:34.525"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:34.527" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:34.526" endtime="20231101 23:35:34.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.529" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:34.529" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:34.528" endtime="20231101 23:35:34.529"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:34.530" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:34.530" endtime="20231101 23:35:34.530"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.531" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:34.531" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:34.531" endtime="20231101 23:35:34.531"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.532" endtime="20231101 23:35:34.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.533" endtime="20231101 23:35:34.533"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.532" endtime="20231101 23:35:34.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.534" endtime="20231101 23:35:34.534"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.534" endtime="20231101 23:35:34.535"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.535" endtime="20231101 23:35:34.537"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.533" endtime="20231101 23:35:34.538"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231101 23:35:34.541" level="INFO">${new_text} = 3351</msg>
<status status="PASS" starttime="20231101 23:35:34.540" endtime="20231101 23:35:34.541"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231101 23:35:34.543" level="INFO">${new_text} = 3351</msg>
<status status="PASS" starttime="20231101 23:35:34.542" endtime="20231101 23:35:34.544"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.538" endtime="20231101 23:35:34.544"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.545" endtime="20231101 23:35:34.546"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.546" endtime="20231101 23:35:34.547"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.545" endtime="20231101 23:35:34.547"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.548" endtime="20231101 23:35:34.548"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.547" endtime="20231101 23:35:34.548"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:34.549" endtime="20231101 23:35:34.549"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.548" endtime="20231101 23:35:34.549"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.550" endtime="20231101 23:35:34.550"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.551" endtime="20231101 23:35:34.551"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.551" endtime="20231101 23:35:34.551"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.549" endtime="20231101 23:35:34.552"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.555" endtime="20231101 23:35:34.556"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.555" endtime="20231101 23:35:34.557"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.559" endtime="20231101 23:35:34.560"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.558" endtime="20231101 23:35:34.560"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.561" endtime="20231101 23:35:34.562"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.561" endtime="20231101 23:35:34.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.563" endtime="20231101 23:35:34.563"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.562" endtime="20231101 23:35:34.564"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.564" endtime="20231101 23:35:34.565"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.564" endtime="20231101 23:35:34.565"/>
</branch>
<status status="PASS" starttime="20231101 23:35:34.532" endtime="20231101 23:35:34.565"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.566" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:34.567" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:34.566" endtime="20231101 23:35:34.567"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:34.572" level="INFO">${text} = 3351</msg>
<status status="PASS" starttime="20231101 23:35:34.568" endtime="20231101 23:35:34.573"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.567" endtime="20231101 23:35:34.574"/>
</branch>
<status status="PASS" starttime="20231101 23:35:34.567" endtime="20231101 23:35:34.574"/>
</if>
<msg timestamp="20231101 23:35:34.575" level="INFO">${text} = 3351</msg>
<status status="PASS" starttime="20231101 23:35:34.518" endtime="20231101 23:35:34.575"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:34.577" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:34.576" endtime="20231101 23:35:34.577"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:34.578" endtime="20231101 23:35:34.683"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:34.684" endtime="20231101 23:35:34.737"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:34.739" level="INFO">Fills the text '3351' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:34.738" endtime="20231101 23:35:34.782"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:34.813" level="INFO">Text: '3351'</msg>
<msg timestamp="20231101 23:35:34.813" level="INFO">${condition} = 3351</msg>
<status status="PASS" starttime="20231101 23:35:34.783" endtime="20231101 23:35:34.814"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.815" endtime="20231101 23:35:34.816"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.816" endtime="20231101 23:35:34.817"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.814" endtime="20231101 23:35:34.817"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:34.814" endtime="20231101 23:35:34.818"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.820" level="INFO">Length is 4</msg>
<msg timestamp="20231101 23:35:34.821" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231101 23:35:34.819" endtime="20231101 23:35:34.821"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:34.824" level="INFO">${STATE["Thứ tự"]} = 3351</msg>
<status status="PASS" starttime="20231101 23:35:34.823" endtime="20231101 23:35:34.825"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.822" endtime="20231101 23:35:34.825"/>
</branch>
<status status="PASS" starttime="20231101 23:35:34.821" endtime="20231101 23:35:34.826"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:34.827" endtime="20231101 23:35:34.835"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.517" endtime="20231101 23:35:34.836"/>
</kw>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:34.841" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:34.840" endtime="20231101 23:35:34.842"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:34.843" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:34.842" endtime="20231101 23:35:34.843"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:34.845" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:34.844" endtime="20231101 23:35:34.846"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.847" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:34.848" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:34.846" endtime="20231101 23:35:34.848"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:34.849" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:34.849" endtime="20231101 23:35:34.850"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.851" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:34.853" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:34.850" endtime="20231101 23:35:34.853"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.856" endtime="20231101 23:35:34.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.857" endtime="20231101 23:35:34.858"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.854" endtime="20231101 23:35:34.859"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 23:35:34.862" level="INFO">${random} = Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:34.860" endtime="20231101 23:35:34.862"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231101 23:35:34.864" level="INFO">${words} = ['DA_10', 'Verify', 'the', 'search', 'function', 'when', 'enter', 'the', 'name', 'was', 'not', 'existed']</msg>
<status status="PASS" starttime="20231101 23:35:34.863" endtime="20231101 23:35:34.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:34.867" level="INFO">${new_text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:34.865" endtime="20231101 23:35:34.867"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.859" endtime="20231101 23:35:34.867"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.872" endtime="20231101 23:35:34.873"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.874" endtime="20231101 23:35:34.874"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.868" endtime="20231101 23:35:34.875"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.876" endtime="20231101 23:35:34.877"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.878" endtime="20231101 23:35:34.878"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.875" endtime="20231101 23:35:34.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.880" endtime="20231101 23:35:34.881"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.879" endtime="20231101 23:35:34.881"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:34.883" endtime="20231101 23:35:34.884"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.882" endtime="20231101 23:35:34.885"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.889" endtime="20231101 23:35:34.891"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.892" endtime="20231101 23:35:34.893"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.893" endtime="20231101 23:35:34.894"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.888" endtime="20231101 23:35:34.894"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.895" endtime="20231101 23:35:34.895"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.894" endtime="20231101 23:35:34.895"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.896" endtime="20231101 23:35:34.896"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.895" endtime="20231101 23:35:34.896"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.897" endtime="20231101 23:35:34.910"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.896" endtime="20231101 23:35:34.910"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.911" endtime="20231101 23:35:34.912"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.911" endtime="20231101 23:35:34.913"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:34.914" endtime="20231101 23:35:34.914"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:34.913" endtime="20231101 23:35:34.914"/>
</branch>
<status status="PASS" starttime="20231101 23:35:34.854" endtime="20231101 23:35:34.915"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:34.917" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:34.917" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:34.916" endtime="20231101 23:35:34.917"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:34.923" level="INFO">${text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:34.922" endtime="20231101 23:35:34.923"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.918" endtime="20231101 23:35:34.924"/>
</branch>
<status status="PASS" starttime="20231101 23:35:34.918" endtime="20231101 23:35:34.925"/>
</if>
<msg timestamp="20231101 23:35:34.925" level="INFO">${text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:34.839" endtime="20231101 23:35:34.926"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:34.927" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:34.926" endtime="20231101 23:35:34.928"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:34.928" endtime="20231101 23:35:35.045"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:35.046" endtime="20231101 23:35:35.084"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:35.087" level="INFO">Fills the text 'DA_10 Hic minus explicabo provident.' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:35.085" endtime="20231101 23:35:35.157"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:35.197" level="INFO">Text: 'DA_10 Hic minus explicabo provident.'</msg>
<msg timestamp="20231101 23:35:35.198" level="INFO">${condition} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:35.158" endtime="20231101 23:35:35.198"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.200" endtime="20231101 23:35:35.201"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.203" endtime="20231101 23:35:35.204"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.199" endtime="20231101 23:35:35.205"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:35.199" endtime="20231101 23:35:35.205"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.207" level="INFO">Length is 36</msg>
<msg timestamp="20231101 23:35:35.207" level="INFO">${cnt} = 36</msg>
<status status="PASS" starttime="20231101 23:35:35.206" endtime="20231101 23:35:35.208"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:35.211" level="INFO">${STATE["Tiêu đề"]} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:35.209" endtime="20231101 23:35:35.211"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.208" endtime="20231101 23:35:35.212"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.208" endtime="20231101 23:35:35.212"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:35.213" endtime="20231101 23:35:35.223"/>
</kw>
<status status="PASS" starttime="20231101 23:35:34.837" endtime="20231101 23:35:35.223"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:35.227" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 23:35:35.226" endtime="20231101 23:35:35.228"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.230" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:35.231" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 23:35:35.229" endtime="20231101 23:35:35.231"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:35.237" level="INFO">${text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:35.234" endtime="20231101 23:35:35.238"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.232" endtime="20231101 23:35:35.238"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.232" endtime="20231101 23:35:35.239"/>
</if>
<msg timestamp="20231101 23:35:35.240" level="INFO">${text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:35.224" endtime="20231101 23:35:35.241"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:35.244" level="INFO">${name} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:35.242" endtime="20231101 23:35:35.244"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:35.249" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:35.248" endtime="20231101 23:35:35.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:35.251" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:35.250" endtime="20231101 23:35:35.251"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:35.254" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:35.253" endtime="20231101 23:35:35.255"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.256" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:35.257" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:35.255" endtime="20231101 23:35:35.257"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:35.260" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:35.258" endtime="20231101 23:35:35.260"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.262" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:35.262" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:35.261" endtime="20231101 23:35:35.262"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.264" endtime="20231101 23:35:35.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.266" endtime="20231101 23:35:35.266"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.263" endtime="20231101 23:35:35.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.270" endtime="20231101 23:35:35.271"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.272" endtime="20231101 23:35:35.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.273" endtime="20231101 23:35:35.274"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.268" endtime="20231101 23:35:35.278"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.280" endtime="20231101 23:35:35.280"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.281" endtime="20231101 23:35:35.282"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.279" endtime="20231101 23:35:35.282"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.284" endtime="20231101 23:35:35.285"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.287" endtime="20231101 23:35:35.288"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.283" endtime="20231101 23:35:35.288"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 23:35:35.291" level="INFO">${new_text} = Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:35.290" endtime="20231101 23:35:35.291"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.288" endtime="20231101 23:35:35.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:35.294" endtime="20231101 23:35:35.295"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.293" endtime="20231101 23:35:35.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.297" endtime="20231101 23:35:35.298"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.298" endtime="20231101 23:35:35.299"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.300" endtime="20231101 23:35:35.301"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.296" endtime="20231101 23:35:35.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.304" endtime="20231101 23:35:35.305"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.302" endtime="20231101 23:35:35.305"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.307" endtime="20231101 23:35:35.308"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.306" endtime="20231101 23:35:35.308"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.310" endtime="20231101 23:35:35.310"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.309" endtime="20231101 23:35:35.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.312" endtime="20231101 23:35:35.313"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.312" endtime="20231101 23:35:35.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.316" endtime="20231101 23:35:35.317"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.314" endtime="20231101 23:35:35.318"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.263" endtime="20231101 23:35:35.318"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.322" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:35.322" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:35.321" endtime="20231101 23:35:35.322"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:35.326" level="INFO">${text} = Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:35.325" endtime="20231101 23:35:35.327"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.323" endtime="20231101 23:35:35.327"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.323" endtime="20231101 23:35:35.328"/>
</if>
<msg timestamp="20231101 23:35:35.328" level="INFO">${text} = Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:35.246" endtime="20231101 23:35:35.329"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 23:35:35.332" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 23:35:35.330" endtime="20231101 23:35:35.333"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:35.334" endtime="20231101 23:35:35.382"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:35.384" level="INFO">Fills the text 'Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:35.383" endtime="20231101 23:35:35.432"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:35.472" level="INFO">Text: 'Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.'</msg>
<msg timestamp="20231101 23:35:35.473" level="INFO">${condition} = Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:35.433" endtime="20231101 23:35:35.473"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.476" endtime="20231101 23:35:35.476"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.478" endtime="20231101 23:35:35.478"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.474" endtime="20231101 23:35:35.478"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:35.474" endtime="20231101 23:35:35.479"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.481" level="INFO">Length is 161</msg>
<msg timestamp="20231101 23:35:35.481" level="INFO">${cnt} = 161</msg>
<status status="PASS" starttime="20231101 23:35:35.480" endtime="20231101 23:35:35.481"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:35.485" level="INFO">${STATE["Mô tả"]} = Nesciunt ut molestiae perferendis. Voluptate velit iste explicabo et molestias illo vero. Hic accusantium sed necessitatibus consectetur accusamus fuga quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:35.483" endtime="20231101 23:35:35.485"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.482" endtime="20231101 23:35:35.486"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.482" endtime="20231101 23:35:35.487"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:35.488" endtime="20231101 23:35:35.496"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.245" endtime="20231101 23:35:35.497"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:35.500" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:35.499" endtime="20231101 23:35:35.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:35.503" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:35.501" endtime="20231101 23:35:35.504"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:35.506" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:35.505" endtime="20231101 23:35:35.506"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.508" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:35.509" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:35.507" endtime="20231101 23:35:35.509"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:35.512" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:35.510" endtime="20231101 23:35:35.512"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.514" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:35.515" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:35.513" endtime="20231101 23:35:35.515"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.517" endtime="20231101 23:35:35.518"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.521" endtime="20231101 23:35:35.522"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.516" endtime="20231101 23:35:35.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.524" endtime="20231101 23:35:35.525"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.526" endtime="20231101 23:35:35.527"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.528" endtime="20231101 23:35:35.528"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.523" endtime="20231101 23:35:35.529"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.530" endtime="20231101 23:35:35.531"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.532" endtime="20231101 23:35:35.532"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.529" endtime="20231101 23:35:35.533"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.535" endtime="20231101 23:35:35.536"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.537" endtime="20231101 23:35:35.538"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.533" endtime="20231101 23:35:35.539"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231101 23:35:35.542" level="INFO">${new_text} = Deserunt soluta sint quisquam. Labore architecto laudantium at atque.</msg>
<status status="PASS" starttime="20231101 23:35:35.540" endtime="20231101 23:35:35.542"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.539" endtime="20231101 23:35:35.544"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:35.545" endtime="20231101 23:35:35.546"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.544" endtime="20231101 23:35:35.546"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.548" endtime="20231101 23:35:35.548"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.549" endtime="20231101 23:35:35.550"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.550" endtime="20231101 23:35:35.551"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.547" endtime="20231101 23:35:35.554"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.555" endtime="20231101 23:35:35.556"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.554" endtime="20231101 23:35:35.556"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.558" endtime="20231101 23:35:35.559"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.557" endtime="20231101 23:35:35.559"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.561" endtime="20231101 23:35:35.561"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.560" endtime="20231101 23:35:35.562"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.563" endtime="20231101 23:35:35.564"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.563" endtime="20231101 23:35:35.565"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.566" endtime="20231101 23:35:35.567"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.565" endtime="20231101 23:35:35.567"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.516" endtime="20231101 23:35:35.568"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.570" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:35.571" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:35.568" endtime="20231101 23:35:35.571"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:35.574" level="INFO">${text} = Deserunt soluta sint quisquam. Labore architecto laudantium at atque.</msg>
<status status="PASS" starttime="20231101 23:35:35.573" endtime="20231101 23:35:35.574"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.572" endtime="20231101 23:35:35.575"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.572" endtime="20231101 23:35:35.576"/>
</if>
<msg timestamp="20231101 23:35:35.577" level="INFO">${text} = Deserunt soluta sint quisquam. Labore architecto laudantium at atque.</msg>
<status status="PASS" starttime="20231101 23:35:35.498" endtime="20231101 23:35:35.577"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231101 23:35:35.579" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231101 23:35:35.578" endtime="20231101 23:35:35.580"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:35.580" endtime="20231101 23:35:35.638"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:35.640" level="INFO">Fills the text 'Deserunt soluta sint quisquam. Labore architecto laudantium at atque.' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:35.639" endtime="20231101 23:35:35.688"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:35.775" level="INFO">Text: 'Deserunt soluta sint quisquam. Labore architecto laudantium at atque.'</msg>
<msg timestamp="20231101 23:35:35.775" level="INFO">${condition} = Deserunt soluta sint quisquam. Labore architecto laudantium at atque.</msg>
<status status="PASS" starttime="20231101 23:35:35.689" endtime="20231101 23:35:35.775"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.778" endtime="20231101 23:35:35.778"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:35.779" endtime="20231101 23:35:35.779"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:35.776" endtime="20231101 23:35:35.780"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:35.776" endtime="20231101 23:35:35.780"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:35.781" level="INFO">Length is 69</msg>
<msg timestamp="20231101 23:35:35.782" level="INFO">${cnt} = 69</msg>
<status status="PASS" starttime="20231101 23:35:35.781" endtime="20231101 23:35:35.782"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:35.785" level="INFO">${STATE["Nội dung"]} = Deserunt soluta sint quisquam. Labore architecto laudantium at atque.</msg>
<status status="PASS" starttime="20231101 23:35:35.784" endtime="20231101 23:35:35.787"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.783" endtime="20231101 23:35:35.788"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.783" endtime="20231101 23:35:35.789"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:35.789" endtime="20231101 23:35:35.798"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.497" endtime="20231101 23:35:35.799"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:35.905" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:35.801" endtime="20231101 23:35:35.906"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:35.933" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:35.907" endtime="20231101 23:35:35.933"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:35.935" endtime="20231101 23:35:36.574"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:36.577" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:36.576" endtime="20231101 23:35:36.577"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:36.907" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:36.578" endtime="20231101 23:35:36.907"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:36.909" endtime="20231101 23:35:36.910"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231101 23:35:36.911" endtime="20231101 23:35:36.911"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231101 23:35:36.912" endtime="20231101 23:35:36.912"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:36.908" endtime="20231101 23:35:36.913"/>
</branch>
<status status="PASS" starttime="20231101 23:35:36.908" endtime="20231101 23:35:36.914"/>
</if>
<status status="PASS" starttime="20231101 23:35:36.575" endtime="20231101 23:35:36.914"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231101 23:35:37.344" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:37.344" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:37.376" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:37.376" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231101 23:35:37.384" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231101 23:35:36.915" endtime="20231101 23:35:37.389"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.934" endtime="20231101 23:35:37.389"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.390" endtime="20231101 23:35:37.391"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231101 23:35:37.391" endtime="20231101 23:35:37.391"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.392" endtime="20231101 23:35:37.393"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.389" endtime="20231101 23:35:37.394"/>
</branch>
<status status="PASS" starttime="20231101 23:35:35.934" endtime="20231101 23:35:37.394"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:37.395" endtime="20231101 23:35:37.405"/>
</kw>
<status status="PASS" starttime="20231101 23:35:35.800" endtime="20231101 23:35:37.406"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:37.409" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:37.408" endtime="20231101 23:35:37.410"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:37.412" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:37.412" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:37.411" endtime="20231101 23:35:37.412"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.414" endtime="20231101 23:35:37.415"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.413" endtime="20231101 23:35:37.415"/>
</branch>
<status status="PASS" starttime="20231101 23:35:37.413" endtime="20231101 23:35:37.416"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:37.471" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231101 23:35:37.424" endtime="20231101 23:35:37.471"/>
</kw>
<status status="PASS" starttime="20231101 23:35:37.420" endtime="20231101 23:35:37.472"/>
</kw>
<status status="PASS" starttime="20231101 23:35:37.416" endtime="20231101 23:35:37.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:37.474" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231101 23:35:37.473" endtime="20231101 23:35:37.475"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231101 23:35:37.863" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231101 23:35:37.864" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231101 23:35:37.864" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231101 23:35:37.478" endtime="20231101 23:35:37.867"/>
</kw>
<status status="FAIL" starttime="20231101 23:35:37.476" endtime="20231101 23:35:37.870"/>
</kw>
<msg timestamp="20231101 23:35:37.872" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231101 23:35:37.475" endtime="20231101 23:35:37.872"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.874" endtime="20231101 23:35:37.875"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.873" endtime="20231101 23:35:37.875"/>
</branch>
<status status="PASS" starttime="20231101 23:35:37.873" endtime="20231101 23:35:37.876"/>
</if>
<status status="PASS" starttime="20231101 23:35:37.407" endtime="20231101 23:35:37.876"/>
</kw>
<status status="PASS" starttime="20231101 23:35:32.929" endtime="20231101 23:35:37.877"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:37.886" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:37.884" endtime="20231101 23:35:37.887"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:37.889" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:37.888" endtime="20231101 23:35:37.889"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:37.891" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:37.890" endtime="20231101 23:35:37.892"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:37.894" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:37.894" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:37.893" endtime="20231101 23:35:37.895"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:37.897" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231101 23:35:37.896" endtime="20231101 23:35:37.897"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:37.899" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:37.899" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:37.898" endtime="20231101 23:35:37.899"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.902" endtime="20231101 23:35:37.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.903" endtime="20231101 23:35:37.904"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.900" endtime="20231101 23:35:37.904"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.906" endtime="20231101 23:35:37.906"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.907" endtime="20231101 23:35:37.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.907" endtime="20231101 23:35:37.908"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.905" endtime="20231101 23:35:37.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.911" endtime="20231101 23:35:37.911"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.912" endtime="20231101 23:35:37.912"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.909" endtime="20231101 23:35:37.912"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.913" endtime="20231101 23:35:37.913"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.914" endtime="20231101 23:35:37.914"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.912" endtime="20231101 23:35:37.915"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.916" endtime="20231101 23:35:37.917"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.915" endtime="20231101 23:35:37.918"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:37.921" endtime="20231101 23:35:37.922"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.920" endtime="20231101 23:35:37.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.924" endtime="20231101 23:35:37.924"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.925" endtime="20231101 23:35:37.926"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.926" endtime="20231101 23:35:37.927"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.923" endtime="20231101 23:35:37.927"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.928" endtime="20231101 23:35:37.929"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.928" endtime="20231101 23:35:37.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.932" endtime="20231101 23:35:37.932"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.931" endtime="20231101 23:35:37.933"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.935" endtime="20231101 23:35:37.938"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.933" endtime="20231101 23:35:37.938"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:37.940" endtime="20231101 23:35:37.941"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:37.939" endtime="20231101 23:35:37.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231101 23:35:37.943" level="INFO">${new_text} = Voluptate neque laboriosam.</msg>
<status status="PASS" starttime="20231101 23:35:37.942" endtime="20231101 23:35:37.943"/>
</kw>
<status status="PASS" starttime="20231101 23:35:37.941" endtime="20231101 23:35:37.944"/>
</branch>
<status status="PASS" starttime="20231101 23:35:37.900" endtime="20231101 23:35:37.944"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:37.945" level="INFO">Length is 8</msg>
<msg timestamp="20231101 23:35:37.945" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231101 23:35:37.944" endtime="20231101 23:35:37.946"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231101 23:35:37.948" level="INFO">${text} = Voluptate neque laboriosam.</msg>
<status status="PASS" starttime="20231101 23:35:37.947" endtime="20231101 23:35:37.948"/>
</kw>
<status status="PASS" starttime="20231101 23:35:37.946" endtime="20231101 23:35:37.949"/>
</branch>
<status status="PASS" starttime="20231101 23:35:37.946" endtime="20231101 23:35:37.949"/>
</if>
<msg timestamp="20231101 23:35:37.949" level="INFO">${text} = Voluptate neque laboriosam.</msg>
<status status="PASS" starttime="20231101 23:35:37.882" endtime="20231101 23:35:37.950"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:37.954" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:37.950" endtime="20231101 23:35:37.954"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:37.955" endtime="20231101 23:35:38.252"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:38.253" endtime="20231101 23:35:38.317"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:38.320" level="INFO">Fills the text 'Voluptate neque laboriosam.' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:38.318" endtime="20231101 23:35:38.354"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:38.383" level="INFO">Text: 'Voluptate neque laboriosam.'</msg>
<msg timestamp="20231101 23:35:38.383" level="INFO">${condition} = Voluptate neque laboriosam.</msg>
<status status="PASS" starttime="20231101 23:35:38.355" endtime="20231101 23:35:38.383"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.387" endtime="20231101 23:35:38.388"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.388" endtime="20231101 23:35:38.389"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.384" endtime="20231101 23:35:38.390"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:38.384" endtime="20231101 23:35:38.390"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:38.392" level="INFO">Length is 27</msg>
<msg timestamp="20231101 23:35:38.392" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231101 23:35:38.391" endtime="20231101 23:35:38.393"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231101 23:35:38.394" level="INFO">${STATE["Tìm kiếm"]} = Voluptate neque laboriosam.</msg>
<status status="PASS" starttime="20231101 23:35:38.394" endtime="20231101 23:35:38.395"/>
</kw>
<status status="PASS" starttime="20231101 23:35:38.393" endtime="20231101 23:35:38.395"/>
</branch>
<status status="PASS" starttime="20231101 23:35:38.393" endtime="20231101 23:35:38.395"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:38.395" endtime="20231101 23:35:38.403"/>
</kw>
<status status="PASS" starttime="20231101 23:35:37.881" endtime="20231101 23:35:38.404"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:38.411" endtime="20231101 23:35:38.482"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:38.586" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:38.484" endtime="20231101 23:35:38.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:38.589" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:38.588" endtime="20231101 23:35:38.589"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:38.598" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:38.590" endtime="20231101 23:35:38.599"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:38.600" endtime="20231101 23:35:38.601"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.599" endtime="20231101 23:35:38.602"/>
</branch>
<status status="PASS" starttime="20231101 23:35:38.599" endtime="20231101 23:35:38.603"/>
</if>
<status status="PASS" starttime="20231101 23:35:38.483" endtime="20231101 23:35:38.603"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:38.604" endtime="20231101 23:35:38.612"/>
</kw>
<status status="PASS" starttime="20231101 23:35:38.410" endtime="20231101 23:35:38.613"/>
</kw>
<kw name="Then Table line should show empty" library="common">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:38.723" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:38.621" endtime="20231101 23:35:38.723"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:38.725" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:38.724" endtime="20231101 23:35:38.725"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:38.777" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:38.726" endtime="20231101 23:35:38.778"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:38.779" endtime="20231101 23:35:38.780"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.779" endtime="20231101 23:35:38.780"/>
</branch>
<status status="PASS" starttime="20231101 23:35:38.778" endtime="20231101 23:35:38.781"/>
</if>
<status status="PASS" starttime="20231101 23:35:38.620" endtime="20231101 23:35:38.781"/>
</kw>
<kw name="Get Property" library="Browser">
<arg>//p[contains(@class, 'ant-empty-description')]</arg>
<arg>innerText</arg>
<arg>equal</arg>
<arg>No Data</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:38.815" level="INFO">Property: 'No Data'</msg>
<status status="PASS" starttime="20231101 23:35:38.782" endtime="20231101 23:35:38.815"/>
</kw>
<status status="PASS" starttime="20231101 23:35:38.618" endtime="20231101 23:35:38.816"/>
</kw>
<kw name="When Enter &quot;test name&quot; in &quot;Tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:38.826" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231101 23:35:38.826" endtime="20231101 23:35:38.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:38.828" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231101 23:35:38.827" endtime="20231101 23:35:38.828"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:38.830" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231101 23:35:38.829" endtime="20231101 23:35:38.831"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:38.832" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:38.833" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231101 23:35:38.832" endtime="20231101 23:35:38.833"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:38.835" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231101 23:35:38.834" endtime="20231101 23:35:38.837"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:38.838" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:38.839" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:38.837" endtime="20231101 23:35:38.839"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.841" endtime="20231101 23:35:38.841"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.841" endtime="20231101 23:35:38.842"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.840" endtime="20231101 23:35:38.842"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.843" endtime="20231101 23:35:38.843"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.843" endtime="20231101 23:35:38.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.844" endtime="20231101 23:35:38.844"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.842" endtime="20231101 23:35:38.844"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.845" endtime="20231101 23:35:38.846"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.846" endtime="20231101 23:35:38.847"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.844" endtime="20231101 23:35:38.847"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.849" endtime="20231101 23:35:38.849"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.850" endtime="20231101 23:35:38.850"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.848" endtime="20231101 23:35:38.850"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.852" endtime="20231101 23:35:38.854"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.851" endtime="20231101 23:35:38.854"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231101 23:35:38.856" endtime="20231101 23:35:38.856"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.855" endtime="20231101 23:35:38.856"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.857" endtime="20231101 23:35:38.858"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.858" endtime="20231101 23:35:38.858"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.859" endtime="20231101 23:35:38.859"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.857" endtime="20231101 23:35:38.859"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.860" endtime="20231101 23:35:38.860"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.859" endtime="20231101 23:35:38.860"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.862" endtime="20231101 23:35:38.862"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.861" endtime="20231101 23:35:38.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.864" endtime="20231101 23:35:38.864"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.863" endtime="20231101 23:35:38.865"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.866" endtime="20231101 23:35:38.866"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.865" endtime="20231101 23:35:38.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.868" endtime="20231101 23:35:38.869"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.867" endtime="20231101 23:35:38.870"/>
</branch>
<status status="PASS" starttime="20231101 23:35:38.839" endtime="20231101 23:35:38.871"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:38.873" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:38.873" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:38.872" endtime="20231101 23:35:38.873"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:38.874" endtime="20231101 23:35:38.875"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:38.874" endtime="20231101 23:35:38.875"/>
</branch>
<status status="PASS" starttime="20231101 23:35:38.874" endtime="20231101 23:35:38.875"/>
</if>
<msg timestamp="20231101 23:35:38.875" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231101 23:35:38.824" endtime="20231101 23:35:38.875"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231101 23:35:38.878" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231101 23:35:38.876" endtime="20231101 23:35:38.878"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:38.879" endtime="20231101 23:35:38.937"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:38.938" endtime="20231101 23:35:39.037"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231101 23:35:39.039" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231101 23:35:39.038" endtime="20231101 23:35:39.126"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231101 23:35:39.154" level="INFO">Text: ''</msg>
<msg timestamp="20231101 23:35:39.155" level="INFO">${condition} = </msg>
<status status="PASS" starttime="20231101 23:35:39.127" endtime="20231101 23:35:39.155"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:39.157" endtime="20231101 23:35:39.158"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:39.158" endtime="20231101 23:35:39.159"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:39.156" endtime="20231101 23:35:39.160"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:39.156" endtime="20231101 23:35:39.160"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:39.162" level="INFO">Length is 0</msg>
<msg timestamp="20231101 23:35:39.162" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231101 23:35:39.161" endtime="20231101 23:35:39.163"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231101 23:35:39.164" endtime="20231101 23:35:39.165"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:39.163" endtime="20231101 23:35:39.165"/>
</branch>
<status status="PASS" starttime="20231101 23:35:39.163" endtime="20231101 23:35:39.166"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:39.166" endtime="20231101 23:35:39.175"/>
</kw>
<status status="PASS" starttime="20231101 23:35:38.822" endtime="20231101 23:35:39.176"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:39.208" endtime="20231101 23:35:39.283"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:39.388" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:39.286" endtime="20231101 23:35:39.388"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:39.391" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:39.389" endtime="20231101 23:35:39.391"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:39.584" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:39.392" endtime="20231101 23:35:39.587"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:39.589" endtime="20231101 23:35:39.590"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:39.588" endtime="20231101 23:35:39.590"/>
</branch>
<status status="PASS" starttime="20231101 23:35:39.588" endtime="20231101 23:35:39.590"/>
</if>
<status status="PASS" starttime="20231101 23:35:39.284" endtime="20231101 23:35:39.591"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:39.591" endtime="20231101 23:35:39.598"/>
</kw>
<status status="PASS" starttime="20231101 23:35:39.207" endtime="20231101 23:35:39.598"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:39.715" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:39.614" endtime="20231101 23:35:39.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:39.716" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:39.715" endtime="20231101 23:35:39.716"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:39.728" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:39.717" endtime="20231101 23:35:39.728"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:39.730" endtime="20231101 23:35:39.730"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:39.729" endtime="20231101 23:35:39.731"/>
</branch>
<status status="PASS" starttime="20231101 23:35:39.729" endtime="20231101 23:35:39.731"/>
</if>
<status status="PASS" starttime="20231101 23:35:39.613" endtime="20231101 23:35:39.732"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:39.736" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 23:35:39.734" endtime="20231101 23:35:39.736"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:39.738" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:39.738" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 23:35:39.737" endtime="20231101 23:35:39.738"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:39.741" level="INFO">${text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:39.740" endtime="20231101 23:35:39.741"/>
</kw>
<status status="PASS" starttime="20231101 23:35:39.739" endtime="20231101 23:35:39.741"/>
</branch>
<status status="PASS" starttime="20231101 23:35:39.739" endtime="20231101 23:35:39.742"/>
</if>
<msg timestamp="20231101 23:35:39.742" level="INFO">${name} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:39.732" endtime="20231101 23:35:39.742"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:39.749" level="INFO">${cntS} = 8</msg>
<status status="PASS" starttime="20231101 23:35:39.743" endtime="20231101 23:35:39.750"/>
</kw>
<while condition="${cntS} &lt; 1" limit="10">
<iter>
<kw name="Get Element Count" library="Browser">
<var>${cntS}</var>
<arg>//tbody/tr[contains(@class,'ant-table-row')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:39.753" endtime="20231101 23:35:39.753"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:39.750" endtime="20231101 23:35:39.754"/>
</iter>
<status status="NOT RUN" starttime="20231101 23:35:39.750" endtime="20231101 23:35:39.754"/>
</while>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:39.756" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"DA_10 Hic minus explicabo provident.")]</msg>
<status status="PASS" starttime="20231101 23:35:39.755" endtime="20231101 23:35:39.756"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:39.764" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231101 23:35:39.757" endtime="20231101 23:35:39.765"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231101 23:35:39.766" endtime="20231101 23:35:39.767"/>
</kw>
<status status="PASS" starttime="20231101 23:35:39.612" endtime="20231101 23:35:39.768"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:40.009" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:39.907" endtime="20231101 23:35:40.009"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:40.111" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:40.010" endtime="20231101 23:35:40.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:40.112" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:40.111" endtime="20231101 23:35:40.112"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:40.121" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:40.113" endtime="20231101 23:35:40.121"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:40.123" endtime="20231101 23:35:40.124"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:40.122" endtime="20231101 23:35:40.124"/>
</branch>
<status status="PASS" starttime="20231101 23:35:40.122" endtime="20231101 23:35:40.125"/>
</if>
<status status="PASS" starttime="20231101 23:35:40.009" endtime="20231101 23:35:40.125"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:40.129" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231101 23:35:40.127" endtime="20231101 23:35:40.129"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:40.131" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:40.131" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 23:35:40.130" endtime="20231101 23:35:40.131"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:40.136" level="INFO">${text} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:40.133" endtime="20231101 23:35:40.137"/>
</kw>
<status status="PASS" starttime="20231101 23:35:40.132" endtime="20231101 23:35:40.137"/>
</branch>
<status status="PASS" starttime="20231101 23:35:40.132" endtime="20231101 23:35:40.137"/>
</if>
<msg timestamp="20231101 23:35:40.138" level="INFO">${name} = DA_10 Hic minus explicabo provident.</msg>
<status status="PASS" starttime="20231101 23:35:40.126" endtime="20231101 23:35:40.138"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231101 23:35:40.140" endtime="20231101 23:35:40.141"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:40.141" endtime="20231101 23:35:40.142"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:40.143" endtime="20231101 23:35:40.143"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:40.142" endtime="20231101 23:35:40.143"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231101 23:35:40.144" endtime="20231101 23:35:40.144"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231101 23:35:40.144" endtime="20231101 23:35:40.144"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:40.143" endtime="20231101 23:35:40.145"/>
</branch>
<status status="NOT RUN" starttime="20231101 23:35:40.142" endtime="20231101 23:35:40.145"/>
</if>
<status status="NOT RUN" starttime="20231101 23:35:40.139" endtime="20231101 23:35:40.145"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 23:35:40.146" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"DA_10 Hic minus explicabo provident.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 23:35:40.145" endtime="20231101 23:35:40.146"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:40.147" endtime="20231101 23:35:40.280"/>
</kw>
<status status="PASS" starttime="20231101 23:35:40.145" endtime="20231101 23:35:40.281"/>
</branch>
<status status="PASS" starttime="20231101 23:35:40.139" endtime="20231101 23:35:40.281"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:40.283" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:40.283" endtime="20231101 23:35:40.284"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:40.299" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 23:35:40.285" endtime="20231101 23:35:40.299"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:40.301" endtime="20231101 23:35:40.650"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:40.755" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:40.650" endtime="20231101 23:35:40.756"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:40.860" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:40.759" endtime="20231101 23:35:40.860"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:40.861" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:40.861" endtime="20231101 23:35:40.862"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:40.979" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:40.862" endtime="20231101 23:35:40.979"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:40.981" endtime="20231101 23:35:40.982"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:40.980" endtime="20231101 23:35:40.982"/>
</branch>
<status status="PASS" starttime="20231101 23:35:40.980" endtime="20231101 23:35:40.983"/>
</if>
<status status="PASS" starttime="20231101 23:35:40.757" endtime="20231101 23:35:40.987"/>
</kw>
<status status="PASS" starttime="20231101 23:35:40.300" endtime="20231101 23:35:40.987"/>
</branch>
<status status="PASS" starttime="20231101 23:35:40.299" endtime="20231101 23:35:40.988"/>
</if>
<status status="PASS" starttime="20231101 23:35:40.282" endtime="20231101 23:35:40.989"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:40.990" endtime="20231101 23:35:40.997"/>
</kw>
<status status="PASS" starttime="20231101 23:35:39.905" endtime="20231101 23:35:40.997"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tên loại@_&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:41.109" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:41.007" endtime="20231101 23:35:41.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:41.110" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:41.110" endtime="20231101 23:35:41.111"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:41.124" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:41.111" endtime="20231101 23:35:41.125"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:41.126" endtime="20231101 23:35:41.127"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:41.125" endtime="20231101 23:35:41.128"/>
</branch>
<status status="PASS" starttime="20231101 23:35:41.125" endtime="20231101 23:35:41.128"/>
</if>
<status status="PASS" starttime="20231101 23:35:41.005" endtime="20231101 23:35:41.128"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231101 23:35:41.132" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231101 23:35:41.130" endtime="20231101 23:35:41.132"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231101 23:35:41.138" level="INFO">Length is 1</msg>
<msg timestamp="20231101 23:35:41.138" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231101 23:35:41.133" endtime="20231101 23:35:41.139"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:41.143" level="INFO">${text} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:41.140" endtime="20231101 23:35:41.143"/>
</kw>
<status status="PASS" starttime="20231101 23:35:41.139" endtime="20231101 23:35:41.144"/>
</branch>
<status status="PASS" starttime="20231101 23:35:41.139" endtime="20231101 23:35:41.144"/>
</if>
<msg timestamp="20231101 23:35:41.145" level="INFO">${name} = DA_10 Voluptatum quisquam.</msg>
<status status="PASS" starttime="20231101 23:35:41.129" endtime="20231101 23:35:41.145"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231101 23:35:41.147" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "DA_10 Voluptatum quisquam.")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231101 23:35:41.146" endtime="20231101 23:35:41.148"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:41.148" endtime="20231101 23:35:42.765"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:42.767" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231101 23:35:42.766" endtime="20231101 23:35:42.768"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:42.783" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231101 23:35:42.771" endtime="20231101 23:35:42.783"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231101 23:35:42.786" endtime="20231101 23:35:43.046"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:43.149" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:43.047" endtime="20231101 23:35:43.149"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231101 23:35:43.255" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231101 23:35:43.151" endtime="20231101 23:35:43.255"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231101 23:35:43.257" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231101 23:35:43.256" endtime="20231101 23:35:43.257"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231101 23:35:43.316" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231101 23:35:43.258" endtime="20231101 23:35:43.316"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231101 23:35:43.324" endtime="20231101 23:35:43.325"/>
</kw>
<status status="NOT RUN" starttime="20231101 23:35:43.317" endtime="20231101 23:35:43.325"/>
</branch>
<status status="PASS" starttime="20231101 23:35:43.316" endtime="20231101 23:35:43.326"/>
</if>
<status status="PASS" starttime="20231101 23:35:43.150" endtime="20231101 23:35:43.326"/>
</kw>
<status status="PASS" starttime="20231101 23:35:42.784" endtime="20231101 23:35:43.327"/>
</branch>
<status status="PASS" starttime="20231101 23:35:42.783" endtime="20231101 23:35:43.327"/>
</if>
<status status="PASS" starttime="20231101 23:35:42.766" endtime="20231101 23:35:43.328"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231101 23:35:43.329" endtime="20231101 23:35:43.340"/>
</kw>
<status status="PASS" starttime="20231101 23:35:41.003" endtime="20231101 23:35:43.341"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231101 23:35:44.353" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231101 23:35:43.346" endtime="20231101 23:35:44.354"/>
</kw>
<status status="PASS" starttime="20231101 23:35:43.345" endtime="20231101 23:35:44.354"/>
</kw>
<tag>Search</tag>
<status status="PASS" starttime="20231101 23:35:20.556" endtime="20231101 23:35:44.356"/>
</test>
<status status="PASS" starttime="20231101 23:35:18.252" endtime="20231101 23:35:44.366"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Data">Data</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

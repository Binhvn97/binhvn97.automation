<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231122 14:56:58.582" rpa="false" schemaversion="4">
<suite id="s1" name="Code Type" source="d:\TESTER\Automation\Auto_Web\testcases\code_type.robot">
<test id="s1-t1" name="CO_32_04 Verify the delete data function in &quot;Số răng&quot; category" line="1369">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231122 14:57:01.305" endtime="20231122 14:57:01.306"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231122 14:57:01.307" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\71364a1f-d404-47b5-a9d0-bc471b8c7363"}</msg>
<msg timestamp="20231122 14:57:02.804" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\71364a1f-d404-47b5-a9d0-bc471b8c7363"}</msg>
<status status="PASS" starttime="20231122 14:57:01.306" endtime="20231122 14:57:02.805"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231122 14:57:06.876" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231122 14:57:06.876" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231122 14:57:02.807" endtime="20231122 14:57:06.877"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231122 14:57:06.879" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231122 14:57:06.878" endtime="20231122 14:57:06.880"/>
</kw>
<status status="PASS" starttime="20231122 14:57:01.303" endtime="20231122 14:57:06.881"/>
</kw>
<kw name="Create a test data of &quot;Số răng&quot; category" sourcename="Create a test data of &quot;${category}&quot; category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Danh mục" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Danh mục&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:07.087" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:06.962" endtime="20231122 14:57:07.088"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231122 14:57:07.093" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231122 14:57:07.092" endtime="20231122 14:57:07.094"/>
</kw>
<status status="FAIL" starttime="20231122 14:57:06.960" endtime="20231122 14:57:07.094"/>
</kw>
<msg timestamp="20231122 14:57:07.096" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231122 14:57:06.953" endtime="20231122 14:57:07.096"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Select on the &quot;${category}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231122 14:57:07.098" endtime="20231122 14:57:07.098"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231122 14:57:07.099" endtime="20231122 14:57:07.102"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.097" endtime="20231122 14:57:07.102"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Danh mục&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:07.114" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231122 14:57:07.113" endtime="20231122 14:57:07.114"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:07.116" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231122 14:57:07.115" endtime="20231122 14:57:07.116"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:07.118" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:07.117" endtime="20231122 14:57:07.119"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:07.121" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:07.122" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:07.120" endtime="20231122 14:57:07.123"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:07.132" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231122 14:57:07.129" endtime="20231122 14:57:07.132"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:07.135" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:07.151" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:07.134" endtime="20231122 14:57:07.152"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.162" endtime="20231122 14:57:07.165"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.168" endtime="20231122 14:57:07.169"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.153" endtime="20231122 14:57:07.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.171" endtime="20231122 14:57:07.171"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.177" endtime="20231122 14:57:07.179"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.180" endtime="20231122 14:57:07.180"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.170" endtime="20231122 14:57:07.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.182" endtime="20231122 14:57:07.182"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.183" endtime="20231122 14:57:07.183"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.181" endtime="20231122 14:57:07.183"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.184" endtime="20231122 14:57:07.185"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.185" endtime="20231122 14:57:07.186"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.184" endtime="20231122 14:57:07.186"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.188" endtime="20231122 14:57:07.189"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.187" endtime="20231122 14:57:07.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231122 14:57:07.194" endtime="20231122 14:57:07.195"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.193" endtime="20231122 14:57:07.195"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.197" endtime="20231122 14:57:07.198"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.199" endtime="20231122 14:57:07.200"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.201" endtime="20231122 14:57:07.202"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.196" endtime="20231122 14:57:07.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.246" endtime="20231122 14:57:07.314"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.209" endtime="20231122 14:57:07.315"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.317" endtime="20231122 14:57:07.318"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.316" endtime="20231122 14:57:07.318"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.320" endtime="20231122 14:57:07.321"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.319" endtime="20231122 14:57:07.321"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.328" endtime="20231122 14:57:07.329"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.322" endtime="20231122 14:57:07.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:07.332" endtime="20231122 14:57:07.332"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:07.330" endtime="20231122 14:57:07.333"/>
</branch>
<status status="PASS" starttime="20231122 14:57:07.153" endtime="20231122 14:57:07.348"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:07.349" level="INFO">Length is 15</msg>
<msg timestamp="20231122 14:57:07.350" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231122 14:57:07.348" endtime="20231122 14:57:07.350"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231122 14:57:07.353" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231122 14:57:07.352" endtime="20231122 14:57:07.354"/>
</kw>
<status status="PASS" starttime="20231122 14:57:07.351" endtime="20231122 14:57:07.355"/>
</branch>
<status status="PASS" starttime="20231122 14:57:07.351" endtime="20231122 14:57:07.361"/>
</if>
<msg timestamp="20231122 14:57:07.361" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231122 14:57:07.111" endtime="20231122 14:57:07.362"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231122 14:57:07.368" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231122 14:57:07.363" endtime="20231122 14:57:07.369"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:07.370" endtime="20231122 14:57:07.610"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:07.611" endtime="20231122 14:57:07.868"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231122 14:57:07.873" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231122 14:57:07.869" endtime="20231122 14:57:08.165"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:08.285" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231122 14:57:08.286" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231122 14:57:08.166" endtime="20231122 14:57:08.286"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.292" endtime="20231122 14:57:08.293"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.294" endtime="20231122 14:57:08.294"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.287" endtime="20231122 14:57:08.294"/>
</iter>
<status status="NOT RUN" starttime="20231122 14:57:08.287" endtime="20231122 14:57:08.295"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231122 14:57:08.295" endtime="20231122 14:57:08.371"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:08.376" level="INFO">Length is 15</msg>
<msg timestamp="20231122 14:57:08.377" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231122 14:57:08.375" endtime="20231122 14:57:08.378"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231122 14:57:08.383" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231122 14:57:08.380" endtime="20231122 14:57:08.384"/>
</kw>
<status status="PASS" starttime="20231122 14:57:08.378" endtime="20231122 14:57:08.386"/>
</branch>
<status status="PASS" starttime="20231122 14:57:08.378" endtime="20231122 14:57:08.388"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:08.391" endtime="20231122 14:57:08.405"/>
</kw>
<status status="PASS" starttime="20231122 14:57:07.109" endtime="20231122 14:57:08.408"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:08.413" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231122 14:57:08.412" endtime="20231122 14:57:08.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:08.415" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231122 14:57:08.415" endtime="20231122 14:57:08.416"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:08.418" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:08.417" endtime="20231122 14:57:08.418"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:08.420" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:08.421" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:08.419" endtime="20231122 14:57:08.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:08.427" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231122 14:57:08.426" endtime="20231122 14:57:08.428"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:08.430" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:08.431" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:08.429" endtime="20231122 14:57:08.431"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.432" endtime="20231122 14:57:08.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.434" endtime="20231122 14:57:08.434"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.432" endtime="20231122 14:57:08.435"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.436" endtime="20231122 14:57:08.437"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.437" endtime="20231122 14:57:08.437"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.438" endtime="20231122 14:57:08.442"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.435" endtime="20231122 14:57:08.443"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.444" endtime="20231122 14:57:08.445"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.446" endtime="20231122 14:57:08.446"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.443" endtime="20231122 14:57:08.447"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.448" endtime="20231122 14:57:08.449"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.449" endtime="20231122 14:57:08.450"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.447" endtime="20231122 14:57:08.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.452" endtime="20231122 14:57:08.452"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.451" endtime="20231122 14:57:08.453"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231122 14:57:08.457" endtime="20231122 14:57:08.459"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.454" endtime="20231122 14:57:08.460"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.461" endtime="20231122 14:57:08.462"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.462" endtime="20231122 14:57:08.463"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.463" endtime="20231122 14:57:08.463"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.460" endtime="20231122 14:57:08.464"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.465" endtime="20231122 14:57:08.465"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.464" endtime="20231122 14:57:08.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.466" endtime="20231122 14:57:08.466"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.465" endtime="20231122 14:57:08.467"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.468" endtime="20231122 14:57:08.468"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.467" endtime="20231122 14:57:08.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.469" endtime="20231122 14:57:08.469"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.468" endtime="20231122 14:57:08.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.470" endtime="20231122 14:57:08.471"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.469" endtime="20231122 14:57:08.471"/>
</branch>
<status status="PASS" starttime="20231122 14:57:08.432" endtime="20231122 14:57:08.475"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:08.477" level="INFO">Length is 6</msg>
<msg timestamp="20231122 14:57:08.477" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231122 14:57:08.476" endtime="20231122 14:57:08.477"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231122 14:57:08.480" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231122 14:57:08.479" endtime="20231122 14:57:08.480"/>
</kw>
<status status="PASS" starttime="20231122 14:57:08.478" endtime="20231122 14:57:08.481"/>
</branch>
<status status="PASS" starttime="20231122 14:57:08.478" endtime="20231122 14:57:08.481"/>
</if>
<msg timestamp="20231122 14:57:08.481" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231122 14:57:08.411" endtime="20231122 14:57:08.481"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231122 14:57:08.482" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231122 14:57:08.482" endtime="20231122 14:57:08.482"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:08.483" endtime="20231122 14:57:08.601"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:08.602" endtime="20231122 14:57:08.649"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231122 14:57:08.651" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231122 14:57:08.650" endtime="20231122 14:57:08.751"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:08.852" level="INFO">Text: '123123'</msg>
<msg timestamp="20231122 14:57:08.853" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231122 14:57:08.752" endtime="20231122 14:57:08.853"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.860" endtime="20231122 14:57:08.861"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:08.862" endtime="20231122 14:57:08.863"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:08.854" endtime="20231122 14:57:08.864"/>
</iter>
<status status="NOT RUN" starttime="20231122 14:57:08.854" endtime="20231122 14:57:08.864"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231122 14:57:08.865" endtime="20231122 14:57:09.052"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:09.053" level="INFO">Length is 6</msg>
<msg timestamp="20231122 14:57:09.053" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231122 14:57:09.052" endtime="20231122 14:57:09.053"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231122 14:57:09.058" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231122 14:57:09.054" endtime="20231122 14:57:09.058"/>
</kw>
<status status="PASS" starttime="20231122 14:57:09.054" endtime="20231122 14:57:09.059"/>
</branch>
<status status="PASS" starttime="20231122 14:57:09.054" endtime="20231122 14:57:09.059"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:09.060" endtime="20231122 14:57:09.068"/>
</kw>
<status status="PASS" starttime="20231122 14:57:08.410" endtime="20231122 14:57:09.068"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:09.174" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:09.070" endtime="20231122 14:57:09.175"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:09.185" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:09.175" endtime="20231122 14:57:09.186"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:09.187" endtime="20231122 14:57:09.285"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:09.286" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231122 14:57:09.286" endtime="20231122 14:57:09.287"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:09.354" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:09.287" endtime="20231122 14:57:09.357"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:09.362" endtime="20231122 14:57:09.362"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231122 14:57:09.363" endtime="20231122 14:57:09.363"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231122 14:57:09.364" endtime="20231122 14:57:09.365"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:09.360" endtime="20231122 14:57:09.365"/>
</branch>
<status status="PASS" starttime="20231122 14:57:09.360" endtime="20231122 14:57:09.366"/>
</if>
<status status="PASS" starttime="20231122 14:57:09.285" endtime="20231122 14:57:09.366"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231122 14:57:09.462" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:09.463" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:09.829" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:09.829" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:09.885" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231122 14:57:09.367" endtime="20231122 14:57:09.886"/>
</kw>
<status status="PASS" starttime="20231122 14:57:09.186" endtime="20231122 14:57:09.886"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:09.888" endtime="20231122 14:57:09.892"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231122 14:57:09.893" endtime="20231122 14:57:09.893"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231122 14:57:09.894" endtime="20231122 14:57:09.895"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:09.887" endtime="20231122 14:57:09.896"/>
</branch>
<status status="PASS" starttime="20231122 14:57:09.186" endtime="20231122 14:57:09.896"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:09.897" endtime="20231122 14:57:09.910"/>
</kw>
<status status="PASS" starttime="20231122 14:57:09.069" endtime="20231122 14:57:09.911"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:09.915" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231122 14:57:09.914" endtime="20231122 14:57:09.915"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:09.917" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:09.918" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:09.916" endtime="20231122 14:57:09.918"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:09.920" endtime="20231122 14:57:09.921"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:09.919" endtime="20231122 14:57:09.926"/>
</branch>
<status status="PASS" starttime="20231122 14:57:09.919" endtime="20231122 14:57:09.926"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:10.199" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231122 14:57:09.950" endtime="20231122 14:57:10.200"/>
</kw>
<status status="PASS" starttime="20231122 14:57:09.932" endtime="20231122 14:57:10.201"/>
</kw>
<status status="PASS" starttime="20231122 14:57:09.929" endtime="20231122 14:57:10.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:10.204" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231122 14:57:10.203" endtime="20231122 14:57:10.205"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231122 14:57:10.646" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231122 14:57:10.647" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231122 14:57:10.648" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231122 14:57:10.211" endtime="20231122 14:57:10.663"/>
</kw>
<status status="FAIL" starttime="20231122 14:57:10.208" endtime="20231122 14:57:10.664"/>
</kw>
<msg timestamp="20231122 14:57:10.665" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231122 14:57:10.206" endtime="20231122 14:57:10.665"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:10.668" endtime="20231122 14:57:10.668"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:10.666" endtime="20231122 14:57:10.669"/>
</branch>
<status status="PASS" starttime="20231122 14:57:10.666" endtime="20231122 14:57:10.669"/>
</if>
<status status="PASS" starttime="20231122 14:57:09.912" endtime="20231122 14:57:10.670"/>
</kw>
<status status="PASS" starttime="20231122 14:57:07.107" endtime="20231122 14:57:10.670"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:10.675" endtime="20231122 14:57:11.682"/>
</kw>
<status status="PASS" starttime="20231122 14:57:10.671" endtime="20231122 14:57:11.683"/>
</kw>
<kw name="Click &quot;Danh mục&quot; sub menu to &quot;/code-types&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:11.785" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:11.684" endtime="20231122 14:57:11.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:11.786" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231122 14:57:11.785" endtime="20231122 14:57:11.786"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:11.801" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:11.787" endtime="20231122 14:57:11.801"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231122 14:57:11.803" endtime="20231122 14:57:11.804"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:11.802" endtime="20231122 14:57:11.805"/>
</branch>
<status status="PASS" starttime="20231122 14:57:11.802" endtime="20231122 14:57:11.806"/>
</if>
<status status="PASS" starttime="20231122 14:57:11.684" endtime="20231122 14:57:11.807"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:11.808" endtime="20231122 14:57:12.246"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231122 14:57:12.292" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/code-types?filter=%7B%22type%22:%22MEDICAL_PROCEDURE_GROUP%22%7D</msg>
<status status="PASS" starttime="20231122 14:57:12.259" endtime="20231122 14:57:12.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 14:57:12.294" endtime="20231122 14:57:12.295"/>
</kw>
<status status="PASS" starttime="20231122 14:57:11.683" endtime="20231122 14:57:12.296"/>
</kw>
<status status="PASS" starttime="20231122 14:57:07.104" endtime="20231122 14:57:12.298"/>
</kw>
<kw name="Select on the &quot;${category}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:12.432" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:12.330" endtime="20231122 14:57:12.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:12.443" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231122 14:57:12.434" endtime="20231122 14:57:12.443"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:12.618" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:12.444" endtime="20231122 14:57:12.619"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231122 14:57:12.625" endtime="20231122 14:57:12.626"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:12.620" endtime="20231122 14:57:12.627"/>
</branch>
<status status="PASS" starttime="20231122 14:57:12.620" endtime="20231122 14:57:12.627"/>
</if>
<status status="PASS" starttime="20231122 14:57:12.303" endtime="20231122 14:57:12.628"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:12.632" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:12.631" endtime="20231122 14:57:12.633"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:12.635" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:12.636" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:12.634" endtime="20231122 14:57:12.636"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:12.641" endtime="20231122 14:57:12.642"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:12.637" endtime="20231122 14:57:12.642"/>
</branch>
<status status="PASS" starttime="20231122 14:57:12.637" endtime="20231122 14:57:12.644"/>
</if>
<msg timestamp="20231122 14:57:12.644" level="INFO">${text} = Số răng</msg>
<status status="PASS" starttime="20231122 14:57:12.629" endtime="20231122 14:57:12.645"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231122 14:57:12.649" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Số răng")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231122 14:57:12.646" endtime="20231122 14:57:12.649"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:12.650" endtime="20231122 14:57:13.394"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:13.395" endtime="20231122 14:57:14.167"/>
</kw>
<status status="PASS" starttime="20231122 14:57:12.300" endtime="20231122 14:57:14.168"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:14.274" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:14.171" endtime="20231122 14:57:14.274"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:14.284" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:14.274" endtime="20231122 14:57:14.284"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:14.285" endtime="20231122 14:57:14.741"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:14.846" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231122 14:57:14.784" endtime="20231122 14:57:14.846"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:14.911" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:14.847" endtime="20231122 14:57:14.911"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:14.914" endtime="20231122 14:57:14.914"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231122 14:57:14.915" endtime="20231122 14:57:14.915"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231122 14:57:14.916" endtime="20231122 14:57:14.916"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:14.912" endtime="20231122 14:57:14.917"/>
</branch>
<status status="PASS" starttime="20231122 14:57:14.912" endtime="20231122 14:57:14.917"/>
</if>
<status status="PASS" starttime="20231122 14:57:14.781" endtime="20231122 14:57:14.918"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231122 14:57:14.981" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:14.982" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:15.019" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:15.020" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:15.035" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231122 14:57:14.919" endtime="20231122 14:57:15.035"/>
</kw>
<status status="PASS" starttime="20231122 14:57:14.284" endtime="20231122 14:57:15.036"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.038" endtime="20231122 14:57:15.040"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231122 14:57:15.041" endtime="20231122 14:57:15.043"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.044" endtime="20231122 14:57:15.044"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.037" endtime="20231122 14:57:15.045"/>
</branch>
<status status="PASS" starttime="20231122 14:57:14.284" endtime="20231122 14:57:15.045"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:15.046" endtime="20231122 14:57:15.054"/>
</kw>
<status status="PASS" starttime="20231122 14:57:14.169" endtime="20231122 14:57:15.056"/>
</kw>
<status status="PASS" starttime="20231122 14:57:07.103" endtime="20231122 14:57:15.057"/>
</branch>
<status status="PASS" starttime="20231122 14:57:07.096" endtime="20231122 14:57:15.059"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:15.065" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231122 14:57:15.064" endtime="20231122 14:57:15.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:15.067" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231122 14:57:15.066" endtime="20231122 14:57:15.067"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:15.069" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:15.068" endtime="20231122 14:57:15.070"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.074" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:15.075" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:15.070" endtime="20231122 14:57:15.076"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:15.079" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231122 14:57:15.077" endtime="20231122 14:57:15.079"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.081" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:15.082" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:15.080" endtime="20231122 14:57:15.082"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.084" endtime="20231122 14:57:15.085"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.085" endtime="20231122 14:57:15.086"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.083" endtime="20231122 14:57:15.086"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231122 14:57:15.092" level="INFO">${random} = Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:15.087" endtime="20231122 14:57:15.093"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231122 14:57:15.095" level="INFO">${words} = ['CO_32_04', 'Verify', 'the', 'delete', 'data', 'function', 'in', '"Số', 'răng"', 'category']</msg>
<status status="PASS" starttime="20231122 14:57:15.094" endtime="20231122 14:57:15.095"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:15.099" level="INFO">${new_text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:15.096" endtime="20231122 14:57:15.099"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.087" endtime="20231122 14:57:15.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.101" endtime="20231122 14:57:15.101"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.102" endtime="20231122 14:57:15.103"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.100" endtime="20231122 14:57:15.103"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.104" endtime="20231122 14:57:15.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.104" endtime="20231122 14:57:15.108"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.103" endtime="20231122 14:57:15.108"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.110" endtime="20231122 14:57:15.111"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.109" endtime="20231122 14:57:15.111"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231122 14:57:15.113" endtime="20231122 14:57:15.114"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.112" endtime="20231122 14:57:15.115"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.116" endtime="20231122 14:57:15.117"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.117" endtime="20231122 14:57:15.118"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.118" endtime="20231122 14:57:15.119"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.116" endtime="20231122 14:57:15.119"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.120" endtime="20231122 14:57:15.120"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.120" endtime="20231122 14:57:15.120"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.125" endtime="20231122 14:57:15.126"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.121" endtime="20231122 14:57:15.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.129" endtime="20231122 14:57:15.129"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.128" endtime="20231122 14:57:15.130"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.131" endtime="20231122 14:57:15.132"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.130" endtime="20231122 14:57:15.132"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.133" endtime="20231122 14:57:15.134"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.133" endtime="20231122 14:57:15.134"/>
</branch>
<status status="PASS" starttime="20231122 14:57:15.083" endtime="20231122 14:57:15.134"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.135" level="INFO">Length is 8</msg>
<msg timestamp="20231122 14:57:15.135" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231122 14:57:15.134" endtime="20231122 14:57:15.135"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231122 14:57:15.138" level="INFO">${text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:15.136" endtime="20231122 14:57:15.140"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.136" endtime="20231122 14:57:15.141"/>
</branch>
<status status="PASS" starttime="20231122 14:57:15.136" endtime="20231122 14:57:15.142"/>
</if>
<msg timestamp="20231122 14:57:15.142" level="INFO">${text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:15.062" endtime="20231122 14:57:15.142"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231122 14:57:15.144" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231122 14:57:15.143" endtime="20231122 14:57:15.145"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:15.145" endtime="20231122 14:57:15.284"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:15.285" endtime="20231122 14:57:15.358"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231122 14:57:15.361" level="INFO">Fills the text 'CO_32_04 Beatae praesentium est.' in the given field.</msg>
<status status="PASS" starttime="20231122 14:57:15.360" endtime="20231122 14:57:15.635"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:15.691" level="INFO">Text: 'CO_32_04 Beatae praesentium est.'</msg>
<msg timestamp="20231122 14:57:15.692" level="INFO">${condition} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:15.636" endtime="20231122 14:57:15.692"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.695" endtime="20231122 14:57:15.696"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.697" endtime="20231122 14:57:15.698"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.693" endtime="20231122 14:57:15.698"/>
</iter>
<status status="NOT RUN" starttime="20231122 14:57:15.693" endtime="20231122 14:57:15.699"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231122 14:57:15.700" endtime="20231122 14:57:15.809"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.811" level="INFO">Length is 32</msg>
<msg timestamp="20231122 14:57:15.811" level="INFO">${cnt} = 32</msg>
<status status="PASS" starttime="20231122 14:57:15.810" endtime="20231122 14:57:15.811"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231122 14:57:15.814" level="INFO">${STATE["Tiêu đề"]} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:15.813" endtime="20231122 14:57:15.815"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.812" endtime="20231122 14:57:15.816"/>
</branch>
<status status="PASS" starttime="20231122 14:57:15.812" endtime="20231122 14:57:15.818"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:15.819" endtime="20231122 14:57:15.831"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.061" endtime="20231122 14:57:15.832"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:15.836" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231122 14:57:15.835" endtime="20231122 14:57:15.837"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:15.840" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231122 14:57:15.838" endtime="20231122 14:57:15.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:15.842" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:15.841" endtime="20231122 14:57:15.842"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.844" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:15.845" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:15.843" endtime="20231122 14:57:15.845"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:15.848" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231122 14:57:15.846" endtime="20231122 14:57:15.848"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.850" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:15.851" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:15.849" endtime="20231122 14:57:15.851"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.853" endtime="20231122 14:57:15.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.856" endtime="20231122 14:57:15.857"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.852" endtime="20231122 14:57:15.857"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.859" endtime="20231122 14:57:15.860"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.860" endtime="20231122 14:57:15.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.862" endtime="20231122 14:57:15.862"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.858" endtime="20231122 14:57:15.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231122 14:57:15.866" level="INFO">${new_text} = 2330</msg>
<status status="PASS" starttime="20231122 14:57:15.865" endtime="20231122 14:57:15.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231122 14:57:15.868" level="INFO">${new_text} = 2330</msg>
<status status="PASS" starttime="20231122 14:57:15.867" endtime="20231122 14:57:15.868"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.864" endtime="20231122 14:57:15.869"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.870" endtime="20231122 14:57:15.872"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.873" endtime="20231122 14:57:15.873"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.870" endtime="20231122 14:57:15.874"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.875" endtime="20231122 14:57:15.876"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.874" endtime="20231122 14:57:15.876"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231122 14:57:15.877" endtime="20231122 14:57:15.878"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.877" endtime="20231122 14:57:15.878"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.879" endtime="20231122 14:57:15.880"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.881" endtime="20231122 14:57:15.882"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.883" endtime="20231122 14:57:15.883"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.879" endtime="20231122 14:57:15.884"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.898" endtime="20231122 14:57:15.899"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.884" endtime="20231122 14:57:15.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.900" endtime="20231122 14:57:15.901"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.900" endtime="20231122 14:57:15.901"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.902" endtime="20231122 14:57:15.903"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.902" endtime="20231122 14:57:15.903"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.905" endtime="20231122 14:57:15.906"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.904" endtime="20231122 14:57:15.907"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:15.908" endtime="20231122 14:57:15.909"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:15.907" endtime="20231122 14:57:15.910"/>
</branch>
<status status="PASS" starttime="20231122 14:57:15.852" endtime="20231122 14:57:15.910"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:15.912" level="INFO">Length is 8</msg>
<msg timestamp="20231122 14:57:15.912" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231122 14:57:15.911" endtime="20231122 14:57:15.912"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231122 14:57:15.915" level="INFO">${text} = 2330</msg>
<status status="PASS" starttime="20231122 14:57:15.914" endtime="20231122 14:57:15.915"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.913" endtime="20231122 14:57:15.916"/>
</branch>
<status status="PASS" starttime="20231122 14:57:15.913" endtime="20231122 14:57:15.916"/>
</if>
<msg timestamp="20231122 14:57:15.917" level="INFO">${text} = 2330</msg>
<status status="PASS" starttime="20231122 14:57:15.834" endtime="20231122 14:57:15.917"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231122 14:57:15.920" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231122 14:57:15.917" endtime="20231122 14:57:15.921"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:15.923" endtime="20231122 14:57:16.044"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:16.045" endtime="20231122 14:57:16.088"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231122 14:57:16.092" level="INFO">Fills the text '2330' in the given field.</msg>
<status status="PASS" starttime="20231122 14:57:16.090" endtime="20231122 14:57:16.157"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:16.201" level="INFO">Text: '2330'</msg>
<msg timestamp="20231122 14:57:16.202" level="INFO">${condition} = 2330</msg>
<status status="PASS" starttime="20231122 14:57:16.158" endtime="20231122 14:57:16.203"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.206" endtime="20231122 14:57:16.207"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.208" endtime="20231122 14:57:16.209"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.203" endtime="20231122 14:57:16.210"/>
</iter>
<status status="NOT RUN" starttime="20231122 14:57:16.203" endtime="20231122 14:57:16.211"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231122 14:57:16.211" endtime="20231122 14:57:16.432"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:16.434" level="INFO">Length is 4</msg>
<msg timestamp="20231122 14:57:16.435" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231122 14:57:16.433" endtime="20231122 14:57:16.435"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231122 14:57:16.441" level="INFO">${STATE["Thứ tự"]} = 2330</msg>
<status status="PASS" starttime="20231122 14:57:16.437" endtime="20231122 14:57:16.442"/>
</kw>
<status status="PASS" starttime="20231122 14:57:16.436" endtime="20231122 14:57:16.442"/>
</branch>
<status status="PASS" starttime="20231122 14:57:16.436" endtime="20231122 14:57:16.443"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:16.444" endtime="20231122 14:57:16.452"/>
</kw>
<status status="PASS" starttime="20231122 14:57:15.833" endtime="20231122 14:57:16.453"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:16.459" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231122 14:57:16.458" endtime="20231122 14:57:16.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:16.461" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231122 14:57:16.460" endtime="20231122 14:57:16.461"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:16.462" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:16.462" endtime="20231122 14:57:16.463"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:16.464" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:16.465" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:16.463" endtime="20231122 14:57:16.465"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:16.467" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231122 14:57:16.466" endtime="20231122 14:57:16.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:16.469" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:16.470" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:16.468" endtime="20231122 14:57:16.470"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.474" endtime="20231122 14:57:16.475"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.476" endtime="20231122 14:57:16.476"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.473" endtime="20231122 14:57:16.477"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.478" endtime="20231122 14:57:16.478"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.479" endtime="20231122 14:57:16.480"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.480" endtime="20231122 14:57:16.481"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.477" endtime="20231122 14:57:16.481"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.482" endtime="20231122 14:57:16.483"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.484" endtime="20231122 14:57:16.484"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.481" endtime="20231122 14:57:16.485"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.486" endtime="20231122 14:57:16.486"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.490" endtime="20231122 14:57:16.490"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.485" endtime="20231122 14:57:16.491"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.492" endtime="20231122 14:57:16.493"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.491" endtime="20231122 14:57:16.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231122 14:57:16.494" endtime="20231122 14:57:16.495"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.493" endtime="20231122 14:57:16.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.496" endtime="20231122 14:57:16.497"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.498" endtime="20231122 14:57:16.498"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.499" endtime="20231122 14:57:16.500"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.496" endtime="20231122 14:57:16.500"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.502" endtime="20231122 14:57:16.503"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.501" endtime="20231122 14:57:16.504"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.508" endtime="20231122 14:57:16.508"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.507" endtime="20231122 14:57:16.509"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.512" endtime="20231122 14:57:16.512"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.510" endtime="20231122 14:57:16.513"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:16.514" endtime="20231122 14:57:16.515"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:16.513" endtime="20231122 14:57:16.515"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231122 14:57:16.518" level="INFO">${new_text} = Commodi quibusdam ab porro nulla.</msg>
<status status="PASS" starttime="20231122 14:57:16.517" endtime="20231122 14:57:16.518"/>
</kw>
<status status="PASS" starttime="20231122 14:57:16.516" endtime="20231122 14:57:16.519"/>
</branch>
<status status="PASS" starttime="20231122 14:57:16.471" endtime="20231122 14:57:16.520"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:16.524" level="INFO">Length is 8</msg>
<msg timestamp="20231122 14:57:16.525" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231122 14:57:16.523" endtime="20231122 14:57:16.525"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231122 14:57:16.528" level="INFO">${text} = Commodi quibusdam ab porro nulla.</msg>
<status status="PASS" starttime="20231122 14:57:16.527" endtime="20231122 14:57:16.528"/>
</kw>
<status status="PASS" starttime="20231122 14:57:16.526" endtime="20231122 14:57:16.529"/>
</branch>
<status status="PASS" starttime="20231122 14:57:16.526" endtime="20231122 14:57:16.529"/>
</if>
<msg timestamp="20231122 14:57:16.529" level="INFO">${text} = Commodi quibusdam ab porro nulla.</msg>
<status status="PASS" starttime="20231122 14:57:16.457" endtime="20231122 14:57:16.530"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231122 14:57:16.532" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231122 14:57:16.530" endtime="20231122 14:57:16.532"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:16.533" endtime="20231122 14:57:16.799"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:16.800" endtime="20231122 14:57:16.897"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231122 14:57:16.900" level="INFO">Fills the text 'Commodi quibusdam ab porro nulla.' in the given field.</msg>
<status status="PASS" starttime="20231122 14:57:16.898" endtime="20231122 14:57:17.040"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:17.091" level="INFO">Text: 'Commodi quibusdam ab porro nulla.'</msg>
<msg timestamp="20231122 14:57:17.092" level="INFO">${condition} = Commodi quibusdam ab porro nulla.</msg>
<status status="PASS" starttime="20231122 14:57:17.041" endtime="20231122 14:57:17.092"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.096" endtime="20231122 14:57:17.096"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.098" endtime="20231122 14:57:17.098"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.093" endtime="20231122 14:57:17.099"/>
</iter>
<status status="NOT RUN" starttime="20231122 14:57:17.093" endtime="20231122 14:57:17.100"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231122 14:57:17.101" endtime="20231122 14:57:17.149"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:17.150" level="INFO">Length is 33</msg>
<msg timestamp="20231122 14:57:17.151" level="INFO">${cnt} = 33</msg>
<status status="PASS" starttime="20231122 14:57:17.150" endtime="20231122 14:57:17.151"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231122 14:57:17.154" level="INFO">${STATE["Mã"]} = Commodi quibusdam ab porro nulla.</msg>
<status status="PASS" starttime="20231122 14:57:17.153" endtime="20231122 14:57:17.155"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.152" endtime="20231122 14:57:17.156"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.152" endtime="20231122 14:57:17.156"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:17.157" endtime="20231122 14:57:17.164"/>
</kw>
<status status="PASS" starttime="20231122 14:57:16.454" endtime="20231122 14:57:17.165"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:17.168" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231122 14:57:17.167" endtime="20231122 14:57:17.168"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:17.170" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:17.171" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231122 14:57:17.169" endtime="20231122 14:57:17.172"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:17.177" level="INFO">${text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:17.174" endtime="20231122 14:57:17.177"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.173" endtime="20231122 14:57:17.177"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.172" endtime="20231122 14:57:17.178"/>
</if>
<msg timestamp="20231122 14:57:17.179" level="INFO">${text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:17.166" endtime="20231122 14:57:17.180"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:17.182" level="INFO">${name} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:17.181" endtime="20231122 14:57:17.182"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:17.187" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231122 14:57:17.186" endtime="20231122 14:57:17.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:17.190" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231122 14:57:17.189" endtime="20231122 14:57:17.191"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:17.193" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231122 14:57:17.192" endtime="20231122 14:57:17.193"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:17.195" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:17.196" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231122 14:57:17.194" endtime="20231122 14:57:17.196"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:17.198" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231122 14:57:17.197" endtime="20231122 14:57:17.199"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:17.201" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:17.201" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:17.200" endtime="20231122 14:57:17.202"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.203" endtime="20231122 14:57:17.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.208" endtime="20231122 14:57:17.208"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.202" endtime="20231122 14:57:17.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.212" endtime="20231122 14:57:17.212"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.213" endtime="20231122 14:57:17.214"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.215" endtime="20231122 14:57:17.216"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.210" endtime="20231122 14:57:17.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.218" endtime="20231122 14:57:17.218"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.220" endtime="20231122 14:57:17.223"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.217" endtime="20231122 14:57:17.224"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.226" endtime="20231122 14:57:17.227"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.227" endtime="20231122 14:57:17.228"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.225" endtime="20231122 14:57:17.229"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231122 14:57:17.231" level="INFO">${new_text} = Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.</msg>
<status status="PASS" starttime="20231122 14:57:17.230" endtime="20231122 14:57:17.231"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.229" endtime="20231122 14:57:17.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231122 14:57:17.233" endtime="20231122 14:57:17.234"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.232" endtime="20231122 14:57:17.234"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.238" endtime="20231122 14:57:17.240"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.241" endtime="20231122 14:57:17.241"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.242" endtime="20231122 14:57:17.243"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.236" endtime="20231122 14:57:17.244"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.245" endtime="20231122 14:57:17.246"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.244" endtime="20231122 14:57:17.246"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.249" endtime="20231122 14:57:17.249"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.247" endtime="20231122 14:57:17.251"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.252" endtime="20231122 14:57:17.253"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.251" endtime="20231122 14:57:17.254"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.257" endtime="20231122 14:57:17.257"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.256" endtime="20231122 14:57:17.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.261" endtime="20231122 14:57:17.262"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.259" endtime="20231122 14:57:17.263"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.202" endtime="20231122 14:57:17.264"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:17.285" level="INFO">Length is 8</msg>
<msg timestamp="20231122 14:57:17.286" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231122 14:57:17.283" endtime="20231122 14:57:17.287"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231122 14:57:17.292" level="INFO">${text} = Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.</msg>
<status status="PASS" starttime="20231122 14:57:17.290" endtime="20231122 14:57:17.292"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.289" endtime="20231122 14:57:17.293"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.289" endtime="20231122 14:57:17.294"/>
</if>
<msg timestamp="20231122 14:57:17.294" level="INFO">${text} = Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.</msg>
<status status="PASS" starttime="20231122 14:57:17.184" endtime="20231122 14:57:17.295"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231122 14:57:17.298" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231122 14:57:17.296" endtime="20231122 14:57:17.298"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:17.299" endtime="20231122 14:57:17.380"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231122 14:57:17.382" level="INFO">Fills the text 'Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.' in the given field.</msg>
<status status="PASS" starttime="20231122 14:57:17.381" endtime="20231122 14:57:17.433"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:17.490" level="INFO">Text: 'Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.'</msg>
<msg timestamp="20231122 14:57:17.491" level="INFO">${condition} = Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.</msg>
<status status="PASS" starttime="20231122 14:57:17.434" endtime="20231122 14:57:17.491"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.494" endtime="20231122 14:57:17.495"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.496" endtime="20231122 14:57:17.497"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.492" endtime="20231122 14:57:17.498"/>
</iter>
<status status="NOT RUN" starttime="20231122 14:57:17.491" endtime="20231122 14:57:17.498"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231122 14:57:17.499" endtime="20231122 14:57:17.601"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:17.603" level="INFO">Length is 97</msg>
<msg timestamp="20231122 14:57:17.604" level="INFO">${cnt} = 97</msg>
<status status="PASS" starttime="20231122 14:57:17.602" endtime="20231122 14:57:17.605"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231122 14:57:17.609" level="INFO">${STATE["Mô tả"]} = Placeat sunt molestias quaerat. Ratione incidunt exercitationem repudiandae molestias libero vel.</msg>
<status status="PASS" starttime="20231122 14:57:17.607" endtime="20231122 14:57:17.609"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.606" endtime="20231122 14:57:17.610"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.606" endtime="20231122 14:57:17.610"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:17.611" endtime="20231122 14:57:17.623"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.183" endtime="20231122 14:57:17.624"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:17.728" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:17.627" endtime="20231122 14:57:17.728"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:17.742" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231122 14:57:17.730" endtime="20231122 14:57:17.742"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:17.744" endtime="20231122 14:57:17.922"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:17.927" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231122 14:57:17.926" endtime="20231122 14:57:17.928"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:17.950" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:17.928" endtime="20231122 14:57:17.951"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.953" endtime="20231122 14:57:17.953"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231122 14:57:17.955" endtime="20231122 14:57:17.958"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231122 14:57:17.959" endtime="20231122 14:57:17.960"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:17.952" endtime="20231122 14:57:17.961"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.951" endtime="20231122 14:57:17.962"/>
</if>
<status status="PASS" starttime="20231122 14:57:17.924" endtime="20231122 14:57:17.963"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231122 14:57:18.802" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:18.803" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:19.113" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:19.113" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231122 14:57:19.141" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231122 14:57:17.964" endtime="20231122 14:57:19.143"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.743" endtime="20231122 14:57:19.144"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:19.145" endtime="20231122 14:57:19.146"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231122 14:57:19.147" endtime="20231122 14:57:19.147"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231122 14:57:19.147" endtime="20231122 14:57:19.148"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:19.145" endtime="20231122 14:57:19.148"/>
</branch>
<status status="PASS" starttime="20231122 14:57:17.743" endtime="20231122 14:57:19.149"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:19.149" endtime="20231122 14:57:19.161"/>
</kw>
<status status="PASS" starttime="20231122 14:57:17.625" endtime="20231122 14:57:19.162"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:19.164" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231122 14:57:19.164" endtime="20231122 14:57:19.164"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:19.165" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:19.165" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:19.165" endtime="20231122 14:57:19.166"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:19.168" endtime="20231122 14:57:19.168"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:19.167" endtime="20231122 14:57:19.169"/>
</branch>
<status status="PASS" starttime="20231122 14:57:19.166" endtime="20231122 14:57:19.170"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:19.231" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231122 14:57:19.179" endtime="20231122 14:57:19.231"/>
</kw>
<status status="PASS" starttime="20231122 14:57:19.175" endtime="20231122 14:57:19.232"/>
</kw>
<status status="PASS" starttime="20231122 14:57:19.170" endtime="20231122 14:57:19.233"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:19.235" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231122 14:57:19.233" endtime="20231122 14:57:19.235"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231122 14:57:19.735" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231122 14:57:19.741" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231122 14:57:19.741" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231122 14:57:19.243" endtime="20231122 14:57:19.745"/>
</kw>
<status status="FAIL" starttime="20231122 14:57:19.238" endtime="20231122 14:57:19.745"/>
</kw>
<msg timestamp="20231122 14:57:19.746" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231122 14:57:19.236" endtime="20231122 14:57:19.747"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:19.749" endtime="20231122 14:57:19.749"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:19.747" endtime="20231122 14:57:19.750"/>
</branch>
<status status="PASS" starttime="20231122 14:57:19.747" endtime="20231122 14:57:19.751"/>
</if>
<status status="PASS" starttime="20231122 14:57:19.163" endtime="20231122 14:57:19.751"/>
</kw>
<status status="PASS" starttime="20231122 14:57:06.951" endtime="20231122 14:57:19.752"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:19.864" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:19.763" endtime="20231122 14:57:19.864"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:19.966" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:19.865" endtime="20231122 14:57:19.966"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:19.967" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231122 14:57:19.967" endtime="20231122 14:57:19.967"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:19.981" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:19.968" endtime="20231122 14:57:19.981"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231122 14:57:19.983" endtime="20231122 14:57:19.984"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:19.982" endtime="20231122 14:57:19.984"/>
</branch>
<status status="PASS" starttime="20231122 14:57:19.982" endtime="20231122 14:57:19.985"/>
</if>
<status status="PASS" starttime="20231122 14:57:19.865" endtime="20231122 14:57:19.985"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:19.993" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231122 14:57:19.991" endtime="20231122 14:57:19.993"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:19.995" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:19.995" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231122 14:57:19.994" endtime="20231122 14:57:19.995"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:20.000" level="INFO">${text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:19.997" endtime="20231122 14:57:20.000"/>
</kw>
<status status="PASS" starttime="20231122 14:57:19.996" endtime="20231122 14:57:20.001"/>
</branch>
<status status="PASS" starttime="20231122 14:57:19.996" endtime="20231122 14:57:20.002"/>
</if>
<msg timestamp="20231122 14:57:20.003" level="INFO">${name} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:19.986" endtime="20231122 14:57:20.003"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231122 14:57:20.008" endtime="20231122 14:57:20.009"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:20.010" endtime="20231122 14:57:20.010"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:20.012" endtime="20231122 14:57:20.012"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:20.011" endtime="20231122 14:57:20.012"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231122 14:57:20.014" endtime="20231122 14:57:20.014"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:20.015" endtime="20231122 14:57:20.015"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:20.013" endtime="20231122 14:57:20.016"/>
</branch>
<status status="NOT RUN" starttime="20231122 14:57:20.011" endtime="20231122 14:57:20.016"/>
</if>
<status status="NOT RUN" starttime="20231122 14:57:20.007" endtime="20231122 14:57:20.017"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231122 14:57:20.020" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CO_32_04 Beatae praesentium est.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231122 14:57:20.018" endtime="20231122 14:57:20.023"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:20.024" endtime="20231122 14:57:20.330"/>
</kw>
<status status="PASS" starttime="20231122 14:57:20.018" endtime="20231122 14:57:20.331"/>
</branch>
<status status="PASS" starttime="20231122 14:57:20.007" endtime="20231122 14:57:20.332"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:20.335" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231122 14:57:20.333" endtime="20231122 14:57:20.335"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:20.363" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231122 14:57:20.336" endtime="20231122 14:57:20.364"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231122 14:57:20.366" endtime="20231122 14:57:20.688"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:20.794" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:20.691" endtime="20231122 14:57:20.794"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:20.898" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:20.796" endtime="20231122 14:57:20.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:20.900" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231122 14:57:20.899" endtime="20231122 14:57:20.901"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:20.927" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:20.901" endtime="20231122 14:57:20.929"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231122 14:57:20.931" endtime="20231122 14:57:20.932"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:20.930" endtime="20231122 14:57:20.932"/>
</branch>
<status status="PASS" starttime="20231122 14:57:20.930" endtime="20231122 14:57:20.933"/>
</if>
<status status="PASS" starttime="20231122 14:57:20.795" endtime="20231122 14:57:20.934"/>
</kw>
<status status="PASS" starttime="20231122 14:57:20.365" endtime="20231122 14:57:20.934"/>
</branch>
<status status="PASS" starttime="20231122 14:57:20.364" endtime="20231122 14:57:20.935"/>
</if>
<status status="PASS" starttime="20231122 14:57:20.332" endtime="20231122 14:57:20.935"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231122 14:57:20.936" endtime="20231122 14:57:20.950"/>
</kw>
<status status="PASS" starttime="20231122 14:57:19.761" endtime="20231122 14:57:20.951"/>
</kw>
<kw name="Then User look message &quot;Đã xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:20.961" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231122 14:57:20.957" endtime="20231122 14:57:20.961"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:20.963" level="INFO">Length is 0</msg>
<msg timestamp="20231122 14:57:20.964" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:20.962" endtime="20231122 14:57:20.965"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:20.968" endtime="20231122 14:57:20.968"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:20.966" endtime="20231122 14:57:20.969"/>
</branch>
<status status="PASS" starttime="20231122 14:57:20.966" endtime="20231122 14:57:20.970"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231122 14:57:21.113" level="INFO">Text: 'Đã xóa thành công'</msg>
<status status="PASS" starttime="20231122 14:57:20.982" endtime="20231122 14:57:21.113"/>
</kw>
<status status="PASS" starttime="20231122 14:57:20.977" endtime="20231122 14:57:21.115"/>
</kw>
<status status="PASS" starttime="20231122 14:57:20.973" endtime="20231122 14:57:21.116"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:21.117" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231122 14:57:21.116" endtime="20231122 14:57:21.118"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231122 14:57:21.557" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231122 14:57:21.557" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231122 14:57:21.558" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231122 14:57:21.129" endtime="20231122 14:57:21.561"/>
</kw>
<status status="FAIL" starttime="20231122 14:57:21.119" endtime="20231122 14:57:21.562"/>
</kw>
<msg timestamp="20231122 14:57:21.563" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231122 14:57:21.118" endtime="20231122 14:57:21.564"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231122 14:57:21.566" endtime="20231122 14:57:21.567"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:21.565" endtime="20231122 14:57:21.568"/>
</branch>
<status status="PASS" starttime="20231122 14:57:21.565" endtime="20231122 14:57:21.568"/>
</if>
<status status="PASS" starttime="20231122 14:57:20.953" endtime="20231122 14:57:21.569"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231122 14:57:21.699" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231122 14:57:21.596" endtime="20231122 14:57:21.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:21.701" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231122 14:57:21.700" endtime="20231122 14:57:21.702"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:21.720" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231122 14:57:21.708" endtime="20231122 14:57:21.725"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231122 14:57:21.727" endtime="20231122 14:57:21.728"/>
</kw>
<status status="NOT RUN" starttime="20231122 14:57:21.726" endtime="20231122 14:57:21.729"/>
</branch>
<status status="PASS" starttime="20231122 14:57:21.726" endtime="20231122 14:57:21.729"/>
</if>
<status status="PASS" starttime="20231122 14:57:21.595" endtime="20231122 14:57:21.730"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231122 14:57:21.734" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231122 14:57:21.732" endtime="20231122 14:57:21.734"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231122 14:57:21.735" level="INFO">Length is 1</msg>
<msg timestamp="20231122 14:57:21.736" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231122 14:57:21.735" endtime="20231122 14:57:21.736"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:21.747" level="INFO">${text} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:21.745" endtime="20231122 14:57:21.748"/>
</kw>
<status status="PASS" starttime="20231122 14:57:21.744" endtime="20231122 14:57:21.748"/>
</branch>
<status status="PASS" starttime="20231122 14:57:21.736" endtime="20231122 14:57:21.749"/>
</if>
<msg timestamp="20231122 14:57:21.749" level="INFO">${name} = CO_32_04 Beatae praesentium est.</msg>
<status status="PASS" starttime="20231122 14:57:21.731" endtime="20231122 14:57:21.750"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231122 14:57:21.752" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CO_32_04 Beatae praesentium est.")]</msg>
<status status="PASS" starttime="20231122 14:57:21.751" endtime="20231122 14:57:21.752"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231122 14:57:21.769" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231122 14:57:21.752" endtime="20231122 14:57:21.769"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &lt; 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231122 14:57:21.770" endtime="20231122 14:57:21.773"/>
</kw>
<status status="PASS" starttime="20231122 14:57:21.594" endtime="20231122 14:57:21.773"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231122 14:57:22.578" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231122 14:57:21.793" endtime="20231122 14:57:22.579"/>
</kw>
<status status="PASS" starttime="20231122 14:57:21.791" endtime="20231122 14:57:22.579"/>
</kw>
<tag>Delete</tag>
<tag>Smoketest</tag>
<status status="PASS" starttime="20231122 14:57:01.295" endtime="20231122 14:57:22.582"/>
</test>
<status status="PASS" starttime="20231122 14:56:58.590" endtime="20231122 14:57:22.646"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Delete</stat>
<stat pass="1" fail="0" skip="0">Smoketest</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Code Type">Code Type</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

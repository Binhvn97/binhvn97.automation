<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231102 11:06:05.444" rpa="false" schemaversion="4">
<suite id="s1" name="Categories Data" source="d:\TESTER\Automation\Auto_Web\testcases\categories_data.robot">
<test id="s1-t1" name="CA_DA_21 Check to delete category that still having data inside" line="227">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231102 11:06:07.977" endtime="20231102 11:06:07.978"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231102 11:06:07.980" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\fbfd9235-8f93-466d-ae20-88342e535573"}</msg>
<msg timestamp="20231102 11:06:09.183" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\fbfd9235-8f93-466d-ae20-88342e535573"}</msg>
<status status="PASS" starttime="20231102 11:06:07.979" endtime="20231102 11:06:09.184"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231102 11:06:11.875" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231102 11:06:11.875" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231102 11:06:09.185" endtime="20231102 11:06:11.876"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231102 11:06:11.879" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231102 11:06:11.877" endtime="20231102 11:06:11.880"/>
</kw>
<status status="PASS" starttime="20231102 11:06:07.977" endtime="20231102 11:06:11.881"/>
</kw>
<kw name="Create a test category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Quản lý dữ liệu" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Quản lý dữ liệu&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:11.984" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:11.903" endtime="20231102 11:06:11.985"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231102 11:06:11.987" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231102 11:06:11.986" endtime="20231102 11:06:11.987"/>
</kw>
<status status="FAIL" starttime="20231102 11:06:11.901" endtime="20231102 11:06:11.991"/>
</kw>
<msg timestamp="20231102 11:06:11.992" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231102 11:06:11.900" endtime="20231102 11:06:11.992"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231102 11:06:11.994" endtime="20231102 11:06:11.995"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:11.993" endtime="20231102 11:06:11.995"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Quản lý dữ liệu&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:12.010" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:12.008" endtime="20231102 11:06:12.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:12.013" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:12.011" endtime="20231102 11:06:12.013"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:12.015" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:12.014" endtime="20231102 11:06:12.016"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:12.018" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:12.018" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:12.017" endtime="20231102 11:06:12.019"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:12.021" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231102 11:06:12.019" endtime="20231102 11:06:12.021"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:12.059" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:12.059" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:12.027" endtime="20231102 11:06:12.059"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.061" endtime="20231102 11:06:12.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.062" endtime="20231102 11:06:12.064"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.060" endtime="20231102 11:06:12.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.069" endtime="20231102 11:06:12.070"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.070" endtime="20231102 11:06:12.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.074" endtime="20231102 11:06:12.074"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.068" endtime="20231102 11:06:12.075"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.077" endtime="20231102 11:06:12.082"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.084" endtime="20231102 11:06:12.085"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.076" endtime="20231102 11:06:12.088"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.091" endtime="20231102 11:06:12.092"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.093" endtime="20231102 11:06:12.094"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.090" endtime="20231102 11:06:12.095"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.097" endtime="20231102 11:06:12.098"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.096" endtime="20231102 11:06:12.099"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:12.101" endtime="20231102 11:06:12.101"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.099" endtime="20231102 11:06:12.102"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.104" endtime="20231102 11:06:12.104"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.107" endtime="20231102 11:06:12.112"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.113" endtime="20231102 11:06:12.113"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.102" endtime="20231102 11:06:12.114"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.116" endtime="20231102 11:06:12.117"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.115" endtime="20231102 11:06:12.117"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.119" endtime="20231102 11:06:12.120"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.118" endtime="20231102 11:06:12.121"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.124" endtime="20231102 11:06:12.125"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.123" endtime="20231102 11:06:12.125"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.127" endtime="20231102 11:06:12.128"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.126" endtime="20231102 11:06:12.128"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.130" endtime="20231102 11:06:12.131"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.129" endtime="20231102 11:06:12.132"/>
</branch>
<status status="PASS" starttime="20231102 11:06:12.060" endtime="20231102 11:06:12.133"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:12.137" level="INFO">Length is 15</msg>
<msg timestamp="20231102 11:06:12.137" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231102 11:06:12.135" endtime="20231102 11:06:12.138"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:12.145" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231102 11:06:12.143" endtime="20231102 11:06:12.146"/>
</kw>
<status status="PASS" starttime="20231102 11:06:12.142" endtime="20231102 11:06:12.146"/>
</branch>
<status status="PASS" starttime="20231102 11:06:12.142" endtime="20231102 11:06:12.147"/>
</if>
<msg timestamp="20231102 11:06:12.148" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231102 11:06:12.003" endtime="20231102 11:06:12.148"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231102 11:06:12.164" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231102 11:06:12.149" endtime="20231102 11:06:12.164"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:12.168" endtime="20231102 11:06:12.552"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:12.553" endtime="20231102 11:06:12.653"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:12.657" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:12.654" endtime="20231102 11:06:12.717"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:12.777" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231102 11:06:12.777" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231102 11:06:12.717" endtime="20231102 11:06:12.777"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.779" endtime="20231102 11:06:12.779"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:12.780" endtime="20231102 11:06:12.780"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:12.778" endtime="20231102 11:06:12.780"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:12.778" endtime="20231102 11:06:12.781"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:12.781" level="INFO">Length is 15</msg>
<msg timestamp="20231102 11:06:12.782" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231102 11:06:12.781" endtime="20231102 11:06:13.145"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:13.147" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231102 11:06:13.147" endtime="20231102 11:06:13.147"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.146" endtime="20231102 11:06:13.148"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.146" endtime="20231102 11:06:13.148"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:13.148" endtime="20231102 11:06:13.163"/>
</kw>
<status status="PASS" starttime="20231102 11:06:12.002" endtime="20231102 11:06:13.164"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:13.169" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:13.168" endtime="20231102 11:06:13.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:13.171" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:13.170" endtime="20231102 11:06:13.171"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:13.176" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:13.174" endtime="20231102 11:06:13.177"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:13.178" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:13.179" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:13.177" endtime="20231102 11:06:13.179"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:13.182" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231102 11:06:13.180" endtime="20231102 11:06:13.182"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:13.184" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:13.184" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:13.183" endtime="20231102 11:06:13.185"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.187" endtime="20231102 11:06:13.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.191" endtime="20231102 11:06:13.192"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.185" endtime="20231102 11:06:13.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.194" endtime="20231102 11:06:13.195"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.196" endtime="20231102 11:06:13.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.197" endtime="20231102 11:06:13.198"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.193" endtime="20231102 11:06:13.198"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.199" endtime="20231102 11:06:13.200"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.200" endtime="20231102 11:06:13.201"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.198" endtime="20231102 11:06:13.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.202" endtime="20231102 11:06:13.202"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.202" endtime="20231102 11:06:13.203"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.201" endtime="20231102 11:06:13.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.204" endtime="20231102 11:06:13.204"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.203" endtime="20231102 11:06:13.204"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:13.208" endtime="20231102 11:06:13.209"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.204" endtime="20231102 11:06:13.209"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.211" endtime="20231102 11:06:13.211"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.211" endtime="20231102 11:06:13.212"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.212" endtime="20231102 11:06:13.212"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.210" endtime="20231102 11:06:13.212"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.213" endtime="20231102 11:06:13.213"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.213" endtime="20231102 11:06:13.214"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.214" endtime="20231102 11:06:13.214"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.214" endtime="20231102 11:06:13.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.215" endtime="20231102 11:06:13.216"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.215" endtime="20231102 11:06:13.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.216" endtime="20231102 11:06:13.217"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.216" endtime="20231102 11:06:13.217"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.217" endtime="20231102 11:06:13.218"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.217" endtime="20231102 11:06:13.218"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.185" endtime="20231102 11:06:13.218"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:13.219" level="INFO">Length is 6</msg>
<msg timestamp="20231102 11:06:13.219" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231102 11:06:13.218" endtime="20231102 11:06:13.219"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:13.220" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231102 11:06:13.220" endtime="20231102 11:06:13.220"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.219" endtime="20231102 11:06:13.220"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.219" endtime="20231102 11:06:13.221"/>
</if>
<msg timestamp="20231102 11:06:13.221" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231102 11:06:13.166" endtime="20231102 11:06:13.221"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231102 11:06:13.227" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231102 11:06:13.225" endtime="20231102 11:06:13.227"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:13.228" endtime="20231102 11:06:13.337"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:13.340" endtime="20231102 11:06:13.384"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:13.386" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:13.384" endtime="20231102 11:06:13.443"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:13.485" level="INFO">Text: '123123'</msg>
<msg timestamp="20231102 11:06:13.486" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231102 11:06:13.444" endtime="20231102 11:06:13.486"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.488" endtime="20231102 11:06:13.490"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.492" endtime="20231102 11:06:13.493"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.487" endtime="20231102 11:06:13.493"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:13.486" endtime="20231102 11:06:13.493"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:13.494" level="INFO">Length is 6</msg>
<msg timestamp="20231102 11:06:13.495" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231102 11:06:13.494" endtime="20231102 11:06:13.495"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:13.497" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231102 11:06:13.496" endtime="20231102 11:06:13.497"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.496" endtime="20231102 11:06:13.497"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.496" endtime="20231102 11:06:13.498"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:13.498" endtime="20231102 11:06:13.509"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.165" endtime="20231102 11:06:13.509"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:13.613" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:13.511" endtime="20231102 11:06:13.613"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:13.628" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:13.614" endtime="20231102 11:06:13.628"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:13.630" endtime="20231102 11:06:13.759"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:13.762" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:13.761" endtime="20231102 11:06:13.762"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:13.774" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:13.763" endtime="20231102 11:06:13.774"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.776" endtime="20231102 11:06:13.777"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.778" endtime="20231102 11:06:13.779"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231102 11:06:13.780" endtime="20231102 11:06:13.783"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.775" endtime="20231102 11:06:13.784"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.775" endtime="20231102 11:06:13.784"/>
</if>
<status status="PASS" starttime="20231102 11:06:13.760" endtime="20231102 11:06:13.785"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231102 11:06:13.819" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:13.819" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:13.843" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:13.844" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:13.854" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231102 11:06:13.786" endtime="20231102 11:06:13.854"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.629" endtime="20231102 11:06:13.858"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.860" endtime="20231102 11:06:13.861"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231102 11:06:13.861" endtime="20231102 11:06:13.862"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.862" endtime="20231102 11:06:13.863"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.859" endtime="20231102 11:06:13.864"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.629" endtime="20231102 11:06:13.864"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:13.865" endtime="20231102 11:06:13.876"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.510" endtime="20231102 11:06:13.876"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:13.879" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231102 11:06:13.878" endtime="20231102 11:06:13.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:13.881" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:13.881" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:13.880" endtime="20231102 11:06:13.882"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:13.883" endtime="20231102 11:06:13.884"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:13.882" endtime="20231102 11:06:13.884"/>
</branch>
<status status="PASS" starttime="20231102 11:06:13.882" endtime="20231102 11:06:13.884"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:14.160" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231102 11:06:13.892" endtime="20231102 11:06:14.160"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.886" endtime="20231102 11:06:14.161"/>
</kw>
<status status="PASS" starttime="20231102 11:06:13.885" endtime="20231102 11:06:14.161"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:14.163" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231102 11:06:14.162" endtime="20231102 11:06:14.163"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231102 11:06:14.666" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231102 11:06:14.666" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231102 11:06:14.667" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231102 11:06:14.166" endtime="20231102 11:06:14.711"/>
</kw>
<status status="FAIL" starttime="20231102 11:06:14.164" endtime="20231102 11:06:14.711"/>
</kw>
<msg timestamp="20231102 11:06:14.712" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231102 11:06:14.164" endtime="20231102 11:06:14.712"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:14.713" endtime="20231102 11:06:14.713"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:14.712" endtime="20231102 11:06:14.713"/>
</branch>
<status status="PASS" starttime="20231102 11:06:14.712" endtime="20231102 11:06:14.713"/>
</if>
<status status="PASS" starttime="20231102 11:06:13.877" endtime="20231102 11:06:14.714"/>
</kw>
<status status="PASS" starttime="20231102 11:06:12.000" endtime="20231102 11:06:14.714"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:14.715" endtime="20231102 11:06:15.696"/>
</kw>
<status status="PASS" starttime="20231102 11:06:14.714" endtime="20231102 11:06:15.697"/>
</kw>
<kw name="Click &quot;Quản lý dữ liệu&quot; sub menu to &quot;/data&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:15.799" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:15.698" endtime="20231102 11:06:15.799"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:15.801" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:15.800" endtime="20231102 11:06:15.801"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:15.817" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:15.802" endtime="20231102 11:06:15.817"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:15.819" endtime="20231102 11:06:15.819"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:15.818" endtime="20231102 11:06:15.819"/>
</branch>
<status status="PASS" starttime="20231102 11:06:15.818" endtime="20231102 11:06:15.820"/>
</if>
<status status="PASS" starttime="20231102 11:06:15.698" endtime="20231102 11:06:15.820"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:15.822" endtime="20231102 11:06:16.185"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231102 11:06:16.192" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/vn/data</msg>
<status status="PASS" starttime="20231102 11:06:16.186" endtime="20231102 11:06:16.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231102 11:06:16.193" endtime="20231102 11:06:16.194"/>
</kw>
<status status="PASS" starttime="20231102 11:06:15.697" endtime="20231102 11:06:16.194"/>
</kw>
<status status="PASS" starttime="20231102 11:06:11.999" endtime="20231102 11:06:16.195"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:16.298" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:16.197" endtime="20231102 11:06:16.298"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:16.683" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:16.299" endtime="20231102 11:06:16.684"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:16.686" endtime="20231102 11:06:16.960"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:16.962" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:16.962" endtime="20231102 11:06:16.962"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:16.970" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:16.962" endtime="20231102 11:06:16.971"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:16.975" endtime="20231102 11:06:16.976"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231102 11:06:16.977" endtime="20231102 11:06:16.977"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231102 11:06:16.978" endtime="20231102 11:06:16.978"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:16.972" endtime="20231102 11:06:16.978"/>
</branch>
<status status="PASS" starttime="20231102 11:06:16.972" endtime="20231102 11:06:16.979"/>
</if>
<status status="PASS" starttime="20231102 11:06:16.961" endtime="20231102 11:06:16.979"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231102 11:06:16.996" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:16.996" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:17.013" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:17.014" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:17.023" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231102 11:06:16.979" endtime="20231102 11:06:17.024"/>
</kw>
<status status="PASS" starttime="20231102 11:06:16.685" endtime="20231102 11:06:17.024"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.025" endtime="20231102 11:06:17.026"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231102 11:06:17.027" endtime="20231102 11:06:17.027"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.027" endtime="20231102 11:06:17.028"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.025" endtime="20231102 11:06:17.028"/>
</branch>
<status status="PASS" starttime="20231102 11:06:16.684" endtime="20231102 11:06:17.028"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:17.028" endtime="20231102 11:06:17.117"/>
</kw>
<status status="PASS" starttime="20231102 11:06:16.196" endtime="20231102 11:06:17.117"/>
</kw>
<status status="PASS" starttime="20231102 11:06:11.998" endtime="20231102 11:06:17.117"/>
</branch>
<status status="PASS" starttime="20231102 11:06:11.993" endtime="20231102 11:06:17.118"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tên loại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.120" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:17.119" endtime="20231102 11:06:17.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.121" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:17.120" endtime="20231102 11:06:17.121"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:17.124" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:17.121" endtime="20231102 11:06:17.124"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.126" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:17.126" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:17.126" endtime="20231102 11:06:17.126"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:17.127" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231102 11:06:17.127" endtime="20231102 11:06:17.127"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.128" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:17.128" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:17.128" endtime="20231102 11:06:17.128"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.129" endtime="20231102 11:06:17.129"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.130" endtime="20231102 11:06:17.130"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.129" endtime="20231102 11:06:17.130"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231102 11:06:17.131" level="INFO">${random} = Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.131" endtime="20231102 11:06:17.131"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231102 11:06:17.132" level="INFO">${words} = ['CA_DA_21', 'Check', 'to', 'delete', 'category', 'that', 'still', 'having', 'data', 'inside']</msg>
<status status="PASS" starttime="20231102 11:06:17.132" endtime="20231102 11:06:17.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.134" level="INFO">${new_text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.133" endtime="20231102 11:06:17.134"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.130" endtime="20231102 11:06:17.134"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.135" endtime="20231102 11:06:17.135"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.135" endtime="20231102 11:06:17.136"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.134" endtime="20231102 11:06:17.136"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.136" endtime="20231102 11:06:17.136"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.137" endtime="20231102 11:06:17.137"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.136" endtime="20231102 11:06:17.137"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.138" endtime="20231102 11:06:17.139"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.137" endtime="20231102 11:06:17.140"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:17.142" endtime="20231102 11:06:17.142"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.141" endtime="20231102 11:06:17.142"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.143" endtime="20231102 11:06:17.143"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.143" endtime="20231102 11:06:17.144"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.144" endtime="20231102 11:06:17.144"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.143" endtime="20231102 11:06:17.144"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.145" endtime="20231102 11:06:17.146"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.145" endtime="20231102 11:06:17.146"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.147" endtime="20231102 11:06:17.147"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.146" endtime="20231102 11:06:17.147"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.148" endtime="20231102 11:06:17.148"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.147" endtime="20231102 11:06:17.148"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.149" endtime="20231102 11:06:17.149"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.148" endtime="20231102 11:06:17.149"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.150" endtime="20231102 11:06:17.151"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.150" endtime="20231102 11:06:17.151"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.128" endtime="20231102 11:06:17.151"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.152" level="INFO">Length is 8</msg>
<msg timestamp="20231102 11:06:17.152" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231102 11:06:17.151" endtime="20231102 11:06:17.152"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:17.153" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.153" endtime="20231102 11:06:17.153"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.152" endtime="20231102 11:06:17.154"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.152" endtime="20231102 11:06:17.154"/>
</if>
<msg timestamp="20231102 11:06:17.154" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.119" endtime="20231102 11:06:17.154"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231102 11:06:17.159" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tên loại"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231102 11:06:17.157" endtime="20231102 11:06:17.159"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:17.160" endtime="20231102 11:06:17.486"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:17.487" endtime="20231102 11:06:17.515"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:17.516" level="INFO">Fills the text 'CA_DA_21 Eaque consequatur.' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:17.515" endtime="20231102 11:06:17.550"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:17.579" level="INFO">Text: 'CA_DA_21 Eaque consequatur.'</msg>
<msg timestamp="20231102 11:06:17.579" level="INFO">${condition} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.551" endtime="20231102 11:06:17.580"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.581" endtime="20231102 11:06:17.581"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.581" endtime="20231102 11:06:17.582"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.580" endtime="20231102 11:06:17.582"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:17.580" endtime="20231102 11:06:17.582"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.583" level="INFO">Length is 27</msg>
<msg timestamp="20231102 11:06:17.583" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231102 11:06:17.582" endtime="20231102 11:06:17.583"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:17.585" level="INFO">${STATE["Tên loại"]} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.584" endtime="20231102 11:06:17.585"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.583" endtime="20231102 11:06:17.585"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.583" endtime="20231102 11:06:17.586"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:17.586" endtime="20231102 11:06:17.595"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.118" endtime="20231102 11:06:17.596"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.601" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:17.600" endtime="20231102 11:06:17.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.603" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:17.602" endtime="20231102 11:06:17.603"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:17.606" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:17.604" endtime="20231102 11:06:17.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.608" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:17.609" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:17.607" endtime="20231102 11:06:17.609"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:17.612" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231102 11:06:17.610" endtime="20231102 11:06:17.612"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.614" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:17.614" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:17.613" endtime="20231102 11:06:17.614"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.616" endtime="20231102 11:06:17.617"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.618" endtime="20231102 11:06:17.618"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.615" endtime="20231102 11:06:17.619"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.620" endtime="20231102 11:06:17.621"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.622" endtime="20231102 11:06:17.623"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.624" endtime="20231102 11:06:17.624"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.619" endtime="20231102 11:06:17.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231102 11:06:17.628" level="INFO">${new_text} = 9506</msg>
<status status="PASS" starttime="20231102 11:06:17.627" endtime="20231102 11:06:17.628"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231102 11:06:17.631" level="INFO">${new_text} = 9506</msg>
<status status="PASS" starttime="20231102 11:06:17.630" endtime="20231102 11:06:17.631"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.626" endtime="20231102 11:06:17.632"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.632" endtime="20231102 11:06:17.632"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.633" endtime="20231102 11:06:17.633"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.632" endtime="20231102 11:06:17.633"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.634" endtime="20231102 11:06:17.634"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.633" endtime="20231102 11:06:17.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:17.635" endtime="20231102 11:06:17.635"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.634" endtime="20231102 11:06:17.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.636" endtime="20231102 11:06:17.636"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.636" endtime="20231102 11:06:17.637"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.637" endtime="20231102 11:06:17.637"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.635" endtime="20231102 11:06:17.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.638" endtime="20231102 11:06:17.639"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.638" endtime="20231102 11:06:17.640"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.641" endtime="20231102 11:06:17.642"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.640" endtime="20231102 11:06:17.643"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.644" endtime="20231102 11:06:17.644"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.643" endtime="20231102 11:06:17.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.646" endtime="20231102 11:06:17.646"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.645" endtime="20231102 11:06:17.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.647" endtime="20231102 11:06:17.648"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.647" endtime="20231102 11:06:17.648"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.615" endtime="20231102 11:06:17.648"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.649" level="INFO">Length is 8</msg>
<msg timestamp="20231102 11:06:17.650" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231102 11:06:17.649" endtime="20231102 11:06:17.650"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:17.652" level="INFO">${text} = 9506</msg>
<status status="PASS" starttime="20231102 11:06:17.651" endtime="20231102 11:06:17.652"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.651" endtime="20231102 11:06:17.652"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.650" endtime="20231102 11:06:17.652"/>
</if>
<msg timestamp="20231102 11:06:17.652" level="INFO">${text} = 9506</msg>
<status status="PASS" starttime="20231102 11:06:17.598" endtime="20231102 11:06:17.653"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231102 11:06:17.653" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231102 11:06:17.653" endtime="20231102 11:06:17.654"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:17.654" endtime="20231102 11:06:17.750"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:17.751" endtime="20231102 11:06:17.792"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:17.794" level="INFO">Fills the text '9506' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:17.793" endtime="20231102 11:06:17.843"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:17.898" level="INFO">Text: '9506'</msg>
<msg timestamp="20231102 11:06:17.899" level="INFO">${condition} = 9506</msg>
<status status="PASS" starttime="20231102 11:06:17.844" endtime="20231102 11:06:17.899"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.901" endtime="20231102 11:06:17.901"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:17.902" endtime="20231102 11:06:17.903"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:17.899" endtime="20231102 11:06:17.903"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:17.899" endtime="20231102 11:06:17.904"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.907" level="INFO">Length is 4</msg>
<msg timestamp="20231102 11:06:17.907" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231102 11:06:17.904" endtime="20231102 11:06:17.908"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:17.911" level="INFO">${STATE["Mã"]} = 9506</msg>
<status status="PASS" starttime="20231102 11:06:17.910" endtime="20231102 11:06:17.911"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.909" endtime="20231102 11:06:17.912"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.908" endtime="20231102 11:06:17.912"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:17.913" endtime="20231102 11:06:17.922"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.597" endtime="20231102 11:06:17.923"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tên loại@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:17.926" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231102 11:06:17.925" endtime="20231102 11:06:17.927"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:17.928" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:17.929" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231102 11:06:17.927" endtime="20231102 11:06:17.929"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.933" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.931" endtime="20231102 11:06:17.934"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.930" endtime="20231102 11:06:17.934"/>
</branch>
<status status="PASS" starttime="20231102 11:06:17.930" endtime="20231102 11:06:17.935"/>
</if>
<msg timestamp="20231102 11:06:17.935" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.924" endtime="20231102 11:06:17.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:17.940" level="INFO">${name} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:17.937" endtime="20231102 11:06:17.940"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:18.043" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:17.942" endtime="20231102 11:06:18.043"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:18.052" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:18.044" endtime="20231102 11:06:18.052"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:18.054" endtime="20231102 11:06:18.166"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:18.168" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:18.167" endtime="20231102 11:06:18.168"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:18.187" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:18.169" endtime="20231102 11:06:18.187"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:18.191" endtime="20231102 11:06:18.192"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231102 11:06:18.193" endtime="20231102 11:06:18.194"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231102 11:06:18.195" endtime="20231102 11:06:18.195"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:18.189" endtime="20231102 11:06:18.196"/>
</branch>
<status status="PASS" starttime="20231102 11:06:18.189" endtime="20231102 11:06:18.196"/>
</if>
<status status="PASS" starttime="20231102 11:06:18.166" endtime="20231102 11:06:18.197"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231102 11:06:18.627" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:18.627" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:19.003" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:19.003" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:19.017" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231102 11:06:18.198" endtime="20231102 11:06:19.018"/>
</kw>
<status status="PASS" starttime="20231102 11:06:18.053" endtime="20231102 11:06:19.019"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:19.022" endtime="20231102 11:06:19.023"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231102 11:06:19.023" endtime="20231102 11:06:19.024"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231102 11:06:19.026" endtime="20231102 11:06:19.027"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:19.020" endtime="20231102 11:06:19.029"/>
</branch>
<status status="PASS" starttime="20231102 11:06:18.053" endtime="20231102 11:06:19.030"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:19.031" endtime="20231102 11:06:19.043"/>
</kw>
<status status="PASS" starttime="20231102 11:06:17.941" endtime="20231102 11:06:19.043"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:19.045" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231102 11:06:19.044" endtime="20231102 11:06:19.046"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:19.047" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:19.048" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:19.047" endtime="20231102 11:06:19.048"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:19.050" endtime="20231102 11:06:19.050"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:19.049" endtime="20231102 11:06:19.051"/>
</branch>
<status status="PASS" starttime="20231102 11:06:19.049" endtime="20231102 11:06:19.051"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:19.118" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231102 11:06:19.059" endtime="20231102 11:06:19.118"/>
</kw>
<status status="PASS" starttime="20231102 11:06:19.053" endtime="20231102 11:06:19.119"/>
</kw>
<status status="PASS" starttime="20231102 11:06:19.052" endtime="20231102 11:06:19.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:19.123" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231102 11:06:19.122" endtime="20231102 11:06:19.124"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231102 11:06:19.466" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231102 11:06:19.467" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231102 11:06:19.468" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231102 11:06:19.128" endtime="20231102 11:06:19.470"/>
</kw>
<status status="FAIL" starttime="20231102 11:06:19.126" endtime="20231102 11:06:19.472"/>
</kw>
<msg timestamp="20231102 11:06:19.474" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231102 11:06:19.125" endtime="20231102 11:06:19.474"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:19.476" endtime="20231102 11:06:19.477"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:19.475" endtime="20231102 11:06:19.477"/>
</branch>
<status status="PASS" starttime="20231102 11:06:19.475" endtime="20231102 11:06:19.478"/>
</if>
<status status="PASS" starttime="20231102 11:06:19.044" endtime="20231102 11:06:19.478"/>
</kw>
<status status="PASS" starttime="20231102 11:06:11.899" endtime="20231102 11:06:19.479"/>
</kw>
<kw name="When Click &quot;Thêm mới dữ liệu&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:19.584" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:19.482" endtime="20231102 11:06:19.584"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:19.633" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:19.585" endtime="20231102 11:06:19.633"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:19.635" endtime="20231102 11:06:20.146"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:20.149" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:20.148" endtime="20231102 11:06:20.150"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:20.177" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:20.150" endtime="20231102 11:06:20.177"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.178" endtime="20231102 11:06:20.179"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.179" endtime="20231102 11:06:20.179"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231102 11:06:20.180" endtime="20231102 11:06:20.180"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.178" endtime="20231102 11:06:20.180"/>
</branch>
<status status="PASS" starttime="20231102 11:06:20.178" endtime="20231102 11:06:20.181"/>
</if>
<status status="PASS" starttime="20231102 11:06:20.147" endtime="20231102 11:06:20.181"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231102 11:06:20.221" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:20.222" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:20.235" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:20.236" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:20.243" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231102 11:06:20.181" endtime="20231102 11:06:20.244"/>
</kw>
<status status="PASS" starttime="20231102 11:06:19.634" endtime="20231102 11:06:20.245"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.246" endtime="20231102 11:06:20.247"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231102 11:06:20.248" endtime="20231102 11:06:20.248"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.249" endtime="20231102 11:06:20.250"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.245" endtime="20231102 11:06:20.251"/>
</branch>
<status status="PASS" starttime="20231102 11:06:19.634" endtime="20231102 11:06:20.251"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:20.251" endtime="20231102 11:06:20.258"/>
</kw>
<status status="PASS" starttime="20231102 11:06:19.481" endtime="20231102 11:06:20.259"/>
</kw>
<kw name="When Click select &quot;Chuyên mục&quot; with &quot;_@Tên loại@_&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:20.268" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:20.267" endtime="20231102 11:06:20.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:20.270" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:20.269" endtime="20231102 11:06:20.271"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:20.274" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231102 11:06:20.272" endtime="20231102 11:06:20.274"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:20.276" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:20.277" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231102 11:06:20.275" endtime="20231102 11:06:20.277"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:20.279" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231102 11:06:20.278" endtime="20231102 11:06:20.279"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:20.280" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:20.280" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:20.279" endtime="20231102 11:06:20.280"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:20.283" level="INFO">${new_text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:20.282" endtime="20231102 11:06:20.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:20.285" level="INFO">${symbol} = _@Tên loại@_</msg>
<status status="PASS" starttime="20231102 11:06:20.284" endtime="20231102 11:06:20.285"/>
</kw>
<status status="PASS" starttime="20231102 11:06:20.281" endtime="20231102 11:06:20.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.286" endtime="20231102 11:06:20.286"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.286" endtime="20231102 11:06:20.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.287" endtime="20231102 11:06:20.287"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.285" endtime="20231102 11:06:20.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.290" endtime="20231102 11:06:20.290"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.292" endtime="20231102 11:06:20.293"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.289" endtime="20231102 11:06:20.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.294" endtime="20231102 11:06:20.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.295" endtime="20231102 11:06:20.296"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.294" endtime="20231102 11:06:20.296"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.299" endtime="20231102 11:06:20.299"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.297" endtime="20231102 11:06:20.299"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:20.300" endtime="20231102 11:06:20.300"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.300" endtime="20231102 11:06:20.300"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.301" endtime="20231102 11:06:20.301"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.301" endtime="20231102 11:06:20.302"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.302" endtime="20231102 11:06:20.302"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.301" endtime="20231102 11:06:20.302"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.303" endtime="20231102 11:06:20.303"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.303" endtime="20231102 11:06:20.303"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.304" endtime="20231102 11:06:20.305"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.304" endtime="20231102 11:06:20.307"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.309" endtime="20231102 11:06:20.310"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.308" endtime="20231102 11:06:20.311"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.312" endtime="20231102 11:06:20.312"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.311" endtime="20231102 11:06:20.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:20.313" endtime="20231102 11:06:20.313"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:20.313" endtime="20231102 11:06:20.314"/>
</branch>
<status status="PASS" starttime="20231102 11:06:20.281" endtime="20231102 11:06:20.314"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:20.314" level="INFO">Length is 12</msg>
<msg timestamp="20231102 11:06:20.315" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231102 11:06:20.314" endtime="20231102 11:06:20.315"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:20.316" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:20.316" endtime="20231102 11:06:20.316"/>
</kw>
<status status="PASS" starttime="20231102 11:06:20.315" endtime="20231102 11:06:20.316"/>
</branch>
<status status="PASS" starttime="20231102 11:06:20.315" endtime="20231102 11:06:20.317"/>
</if>
<msg timestamp="20231102 11:06:20.317" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:20.265" endtime="20231102 11:06:20.317"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231102 11:06:20.318" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231102 11:06:20.317" endtime="20231102 11:06:20.318"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:20.318" endtime="20231102 11:06:20.863"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231102 11:06:20.865" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Chuyên mục"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231102 11:06:20.863" endtime="20231102 11:06:20.865"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:20.866" level="INFO">Fills the text 'CA_DA_21 Eaque consequatur.' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:20.866" endtime="20231102 11:06:20.918"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:20.919" endtime="20231102 11:06:21.135"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.136" level="INFO">Length is 27</msg>
<msg timestamp="20231102 11:06:21.137" level="INFO">${cnt} = 27</msg>
<status status="PASS" starttime="20231102 11:06:21.136" endtime="20231102 11:06:21.137"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:21.141" level="INFO">${STATE["Chuyên mục"]} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:21.139" endtime="20231102 11:06:21.141"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.137" endtime="20231102 11:06:21.142"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.137" endtime="20231102 11:06:21.143"/>
</if>
<status status="PASS" starttime="20231102 11:06:20.264" endtime="20231102 11:06:21.144"/>
</kw>
<kw name="When Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.151" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:21.150" endtime="20231102 11:06:21.151"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.153" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:21.152" endtime="20231102 11:06:21.153"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:21.155" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:21.153" endtime="20231102 11:06:21.156"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.159" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:21.160" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:21.157" endtime="20231102 11:06:21.161"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:21.163" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231102 11:06:21.162" endtime="20231102 11:06:21.163"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.165" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:21.165" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:21.164" endtime="20231102 11:06:21.165"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.167" endtime="20231102 11:06:21.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.167" endtime="20231102 11:06:21.167"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.166" endtime="20231102 11:06:21.168"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.168" endtime="20231102 11:06:21.169"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.169" endtime="20231102 11:06:21.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.169" endtime="20231102 11:06:21.170"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.168" endtime="20231102 11:06:21.170"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231102 11:06:21.173" level="INFO">${new_text} = 4706</msg>
<status status="PASS" starttime="20231102 11:06:21.170" endtime="20231102 11:06:21.174"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231102 11:06:21.178" level="INFO">${new_text} = 4706</msg>
<status status="PASS" starttime="20231102 11:06:21.175" endtime="20231102 11:06:21.179"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.170" endtime="20231102 11:06:21.179"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.180" endtime="20231102 11:06:21.181"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.182" endtime="20231102 11:06:21.182"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.180" endtime="20231102 11:06:21.182"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.184" endtime="20231102 11:06:21.184"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.183" endtime="20231102 11:06:21.185"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:21.186" endtime="20231102 11:06:21.186"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.185" endtime="20231102 11:06:21.187"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.197" endtime="20231102 11:06:21.197"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.198" endtime="20231102 11:06:21.199"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.200" endtime="20231102 11:06:21.201"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.189" endtime="20231102 11:06:21.201"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.203" endtime="20231102 11:06:21.203"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.202" endtime="20231102 11:06:21.205"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.209" endtime="20231102 11:06:21.210"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.208" endtime="20231102 11:06:21.210"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.212" endtime="20231102 11:06:21.213"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.211" endtime="20231102 11:06:21.213"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.215" endtime="20231102 11:06:21.215"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.214" endtime="20231102 11:06:21.216"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.217" endtime="20231102 11:06:21.218"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.217" endtime="20231102 11:06:21.219"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.166" endtime="20231102 11:06:21.220"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.225" level="INFO">Length is 8</msg>
<msg timestamp="20231102 11:06:21.226" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231102 11:06:21.221" endtime="20231102 11:06:21.226"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:21.229" level="INFO">${text} = 4706</msg>
<status status="PASS" starttime="20231102 11:06:21.228" endtime="20231102 11:06:21.230"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.227" endtime="20231102 11:06:21.231"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.227" endtime="20231102 11:06:21.231"/>
</if>
<msg timestamp="20231102 11:06:21.232" level="INFO">${text} = 4706</msg>
<status status="PASS" starttime="20231102 11:06:21.148" endtime="20231102 11:06:21.232"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231102 11:06:21.234" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231102 11:06:21.233" endtime="20231102 11:06:21.235"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:21.236" endtime="20231102 11:06:21.358"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:21.359" endtime="20231102 11:06:21.408"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:21.410" level="INFO">Fills the text '4706' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:21.409" endtime="20231102 11:06:21.482"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:21.512" level="INFO">Text: '4706'</msg>
<msg timestamp="20231102 11:06:21.513" level="INFO">${condition} = 4706</msg>
<status status="PASS" starttime="20231102 11:06:21.483" endtime="20231102 11:06:21.513"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.515" endtime="20231102 11:06:21.517"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.518" endtime="20231102 11:06:21.518"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.513" endtime="20231102 11:06:21.519"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:21.513" endtime="20231102 11:06:21.520"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.524" level="INFO">Length is 4</msg>
<msg timestamp="20231102 11:06:21.524" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231102 11:06:21.521" endtime="20231102 11:06:21.524"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:21.527" level="INFO">${STATE["Thứ tự"]} = 4706</msg>
<status status="PASS" starttime="20231102 11:06:21.526" endtime="20231102 11:06:21.528"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.525" endtime="20231102 11:06:21.528"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.525" endtime="20231102 11:06:21.529"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:21.530" endtime="20231102 11:06:21.540"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.147" endtime="20231102 11:06:21.540"/>
</kw>
<kw name="When Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.592" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:21.591" endtime="20231102 11:06:21.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.594" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:21.593" endtime="20231102 11:06:21.594"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:21.596" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:21.595" endtime="20231102 11:06:21.596"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.598" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:21.599" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:21.597" endtime="20231102 11:06:21.599"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:21.601" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231102 11:06:21.600" endtime="20231102 11:06:21.601"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.603" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:21.603" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:21.602" endtime="20231102 11:06:21.603"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.607" endtime="20231102 11:06:21.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.609" endtime="20231102 11:06:21.609"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.606" endtime="20231102 11:06:21.610"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231102 11:06:21.613" level="INFO">${random} = Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:21.612" endtime="20231102 11:06:21.613"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231102 11:06:21.615" level="INFO">${words} = ['CA_DA_21', 'Check', 'to', 'delete', 'category', 'that', 'still', 'having', 'data', 'inside']</msg>
<status status="PASS" starttime="20231102 11:06:21.614" endtime="20231102 11:06:21.615"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.619" level="INFO">${new_text} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:21.616" endtime="20231102 11:06:21.619"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.611" endtime="20231102 11:06:21.619"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.620" endtime="20231102 11:06:21.623"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.624" endtime="20231102 11:06:21.625"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.620" endtime="20231102 11:06:21.625"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.626" endtime="20231102 11:06:21.626"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.626" endtime="20231102 11:06:21.627"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.625" endtime="20231102 11:06:21.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.627" endtime="20231102 11:06:21.628"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.627" endtime="20231102 11:06:21.628"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:21.629" endtime="20231102 11:06:21.629"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.628" endtime="20231102 11:06:21.630"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.631" endtime="20231102 11:06:21.632"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.633" endtime="20231102 11:06:21.633"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.634" endtime="20231102 11:06:21.634"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.631" endtime="20231102 11:06:21.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.636" endtime="20231102 11:06:21.636"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.635" endtime="20231102 11:06:21.637"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.641" endtime="20231102 11:06:21.641"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.637" endtime="20231102 11:06:21.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.643" endtime="20231102 11:06:21.644"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.642" endtime="20231102 11:06:21.644"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.646" endtime="20231102 11:06:21.647"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.645" endtime="20231102 11:06:21.647"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.648" endtime="20231102 11:06:21.649"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.648" endtime="20231102 11:06:21.649"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.604" endtime="20231102 11:06:21.650"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.651" level="INFO">Length is 8</msg>
<msg timestamp="20231102 11:06:21.651" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231102 11:06:21.650" endtime="20231102 11:06:21.652"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:21.656" level="INFO">${text} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:21.653" endtime="20231102 11:06:21.657"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.652" endtime="20231102 11:06:21.657"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.652" endtime="20231102 11:06:21.658"/>
</if>
<msg timestamp="20231102 11:06:21.658" level="INFO">${text} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:21.590" endtime="20231102 11:06:21.658"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231102 11:06:21.660" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231102 11:06:21.659" endtime="20231102 11:06:21.660"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:21.660" endtime="20231102 11:06:21.756"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:21.757" endtime="20231102 11:06:21.798"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:21.800" level="INFO">Fills the text 'CA_DA_21 Ipsa tempora.' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:21.798" endtime="20231102 11:06:21.852"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:21.887" level="INFO">Text: 'CA_DA_21 Ipsa tempora.'</msg>
<msg timestamp="20231102 11:06:21.889" level="INFO">${condition} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:21.853" endtime="20231102 11:06:21.890"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.892" endtime="20231102 11:06:21.893"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.893" endtime="20231102 11:06:21.894"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.890" endtime="20231102 11:06:21.894"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:21.890" endtime="20231102 11:06:21.895"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.896" level="INFO">Length is 22</msg>
<msg timestamp="20231102 11:06:21.897" level="INFO">${cnt} = 22</msg>
<status status="PASS" starttime="20231102 11:06:21.896" endtime="20231102 11:06:21.897"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:21.900" level="INFO">${STATE["Tiêu đề"]} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:21.899" endtime="20231102 11:06:21.901"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.898" endtime="20231102 11:06:21.901"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.898" endtime="20231102 11:06:21.902"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:21.902" endtime="20231102 11:06:21.912"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.586" endtime="20231102 11:06:21.912"/>
</kw>
<kw name="When Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.949" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:21.949" endtime="20231102 11:06:21.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:21.951" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:21.950" endtime="20231102 11:06:21.951"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:21.953" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:21.952" endtime="20231102 11:06:21.953"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.956" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:21.956" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:21.954" endtime="20231102 11:06:21.956"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:21.959" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231102 11:06:21.958" endtime="20231102 11:06:21.959"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:21.961" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:21.961" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:21.960" endtime="20231102 11:06:21.962"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.963" endtime="20231102 11:06:21.964"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.964" endtime="20231102 11:06:21.965"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.962" endtime="20231102 11:06:21.965"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.967" endtime="20231102 11:06:21.967"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.968" endtime="20231102 11:06:21.969"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.969" endtime="20231102 11:06:21.970"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.966" endtime="20231102 11:06:21.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.975" endtime="20231102 11:06:21.976"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.976" endtime="20231102 11:06:21.977"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.973" endtime="20231102 11:06:21.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.979" endtime="20231102 11:06:21.980"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.981" endtime="20231102 11:06:21.982"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.978" endtime="20231102 11:06:21.982"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231102 11:06:21.987" level="INFO">${new_text} = Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.</msg>
<status status="PASS" starttime="20231102 11:06:21.985" endtime="20231102 11:06:21.989"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.983" endtime="20231102 11:06:21.990"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:21.997" endtime="20231102 11:06:21.997"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.996" endtime="20231102 11:06:21.998"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:21.999" endtime="20231102 11:06:22.000"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.001" endtime="20231102 11:06:22.002"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.002" endtime="20231102 11:06:22.015"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:21.999" endtime="20231102 11:06:22.015"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.017" endtime="20231102 11:06:22.017"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.016" endtime="20231102 11:06:22.018"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.019" endtime="20231102 11:06:22.020"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.018" endtime="20231102 11:06:22.020"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.023" endtime="20231102 11:06:22.024"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.021" endtime="20231102 11:06:22.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.026" endtime="20231102 11:06:22.027"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.025" endtime="20231102 11:06:22.027"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.028" endtime="20231102 11:06:22.029"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.028" endtime="20231102 11:06:22.029"/>
</branch>
<status status="PASS" starttime="20231102 11:06:21.962" endtime="20231102 11:06:22.029"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:22.031" level="INFO">Length is 8</msg>
<msg timestamp="20231102 11:06:22.031" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231102 11:06:22.030" endtime="20231102 11:06:22.031"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:22.035" level="INFO">${text} = Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.</msg>
<status status="PASS" starttime="20231102 11:06:22.033" endtime="20231102 11:06:22.036"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.032" endtime="20231102 11:06:22.036"/>
</branch>
<status status="PASS" starttime="20231102 11:06:22.032" endtime="20231102 11:06:22.037"/>
</if>
<msg timestamp="20231102 11:06:22.037" level="INFO">${text} = Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.</msg>
<status status="PASS" starttime="20231102 11:06:21.947" endtime="20231102 11:06:22.039"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231102 11:06:22.044" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231102 11:06:22.042" endtime="20231102 11:06:22.044"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:22.045" endtime="20231102 11:06:22.121"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:22.123" level="INFO">Fills the text 'Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:22.122" endtime="20231102 11:06:22.183"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:22.225" level="INFO">Text: 'Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.'</msg>
<msg timestamp="20231102 11:06:22.226" level="INFO">${condition} = Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.</msg>
<status status="PASS" starttime="20231102 11:06:22.184" endtime="20231102 11:06:22.226"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.229" endtime="20231102 11:06:22.230"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.231" endtime="20231102 11:06:22.231"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.227" endtime="20231102 11:06:22.232"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:22.227" endtime="20231102 11:06:22.232"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:22.234" level="INFO">Length is 162</msg>
<msg timestamp="20231102 11:06:22.234" level="INFO">${cnt} = 162</msg>
<status status="PASS" starttime="20231102 11:06:22.233" endtime="20231102 11:06:22.234"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:22.237" level="INFO">${STATE["Mô tả"]} = Natus explicabo odio animi neque itaque. Accusamus error animi veritatis nisi occaecati ipsam consequatur. Repellendus eaque cupiditate consectetur rem assumenda.</msg>
<status status="PASS" starttime="20231102 11:06:22.236" endtime="20231102 11:06:22.238"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.235" endtime="20231102 11:06:22.239"/>
</branch>
<status status="PASS" starttime="20231102 11:06:22.235" endtime="20231102 11:06:22.240"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:22.240" endtime="20231102 11:06:22.248"/>
</kw>
<status status="PASS" starttime="20231102 11:06:21.946" endtime="20231102 11:06:22.248"/>
</kw>
<kw name="When Enter &quot;paragraph&quot; in textarea &quot;Nội dung&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:22.267" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231102 11:06:22.266" endtime="20231102 11:06:22.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:22.269" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231102 11:06:22.268" endtime="20231102 11:06:22.270"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:22.272" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231102 11:06:22.271" endtime="20231102 11:06:22.273"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:22.274" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:22.275" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231102 11:06:22.273" endtime="20231102 11:06:22.275"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:22.278" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231102 11:06:22.276" endtime="20231102 11:06:22.278"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:22.280" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:22.281" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:22.279" endtime="20231102 11:06:22.281"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.283" endtime="20231102 11:06:22.284"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.284" endtime="20231102 11:06:22.285"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.282" endtime="20231102 11:06:22.286"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.287" endtime="20231102 11:06:22.289"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.290" endtime="20231102 11:06:22.290"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.291" endtime="20231102 11:06:22.292"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.286" endtime="20231102 11:06:22.293"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.295" endtime="20231102 11:06:22.295"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.297" endtime="20231102 11:06:22.297"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.293" endtime="20231102 11:06:22.298"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.300" endtime="20231102 11:06:22.302"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.303" endtime="20231102 11:06:22.303"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.299" endtime="20231102 11:06:22.304"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231102 11:06:22.308" level="INFO">${new_text} = Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.</msg>
<status status="PASS" starttime="20231102 11:06:22.307" endtime="20231102 11:06:22.309"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.306" endtime="20231102 11:06:22.309"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231102 11:06:22.311" endtime="20231102 11:06:22.312"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.310" endtime="20231102 11:06:22.313"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.316" endtime="20231102 11:06:22.317"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.318" endtime="20231102 11:06:22.319"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.319" endtime="20231102 11:06:22.320"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.314" endtime="20231102 11:06:22.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.323" endtime="20231102 11:06:22.323"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.320" endtime="20231102 11:06:22.324"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.325" endtime="20231102 11:06:22.326"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.325" endtime="20231102 11:06:22.327"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.329" endtime="20231102 11:06:22.330"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.328" endtime="20231102 11:06:22.330"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.331" endtime="20231102 11:06:22.332"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.331" endtime="20231102 11:06:22.332"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.334" endtime="20231102 11:06:22.335"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.333" endtime="20231102 11:06:22.335"/>
</branch>
<status status="PASS" starttime="20231102 11:06:22.282" endtime="20231102 11:06:22.336"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:22.337" level="INFO">Length is 8</msg>
<msg timestamp="20231102 11:06:22.338" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231102 11:06:22.336" endtime="20231102 11:06:22.339"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231102 11:06:22.343" level="INFO">${text} = Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.</msg>
<status status="PASS" starttime="20231102 11:06:22.341" endtime="20231102 11:06:22.343"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.340" endtime="20231102 11:06:22.344"/>
</branch>
<status status="PASS" starttime="20231102 11:06:22.340" endtime="20231102 11:06:22.345"/>
</if>
<msg timestamp="20231102 11:06:22.346" level="INFO">${text} = Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.</msg>
<status status="PASS" starttime="20231102 11:06:22.264" endtime="20231102 11:06:22.346"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231102 11:06:22.348" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Nội dung"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231102 11:06:22.347" endtime="20231102 11:06:22.348"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:22.349" endtime="20231102 11:06:22.407"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231102 11:06:22.409" level="INFO">Fills the text 'Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.' in the given field.</msg>
<status status="PASS" starttime="20231102 11:06:22.408" endtime="20231102 11:06:22.456"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:22.499" level="INFO">Text: 'Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.'</msg>
<msg timestamp="20231102 11:06:22.500" level="INFO">${condition} = Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.</msg>
<status status="PASS" starttime="20231102 11:06:22.458" endtime="20231102 11:06:22.500"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.503" endtime="20231102 11:06:22.503"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:22.505" endtime="20231102 11:06:22.506"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:22.501" endtime="20231102 11:06:22.506"/>
</iter>
<status status="NOT RUN" starttime="20231102 11:06:22.501" endtime="20231102 11:06:22.508"/>
</while>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:22.510" level="INFO">Length is 73</msg>
<msg timestamp="20231102 11:06:22.510" level="INFO">${cnt} = 73</msg>
<status status="PASS" starttime="20231102 11:06:22.509" endtime="20231102 11:06:22.510"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231102 11:06:22.514" level="INFO">${STATE["Nội dung"]} = Dicta nesciunt rem. Iure deleniti odit. Error perspiciatis omnis officia.</msg>
<status status="PASS" starttime="20231102 11:06:22.513" endtime="20231102 11:06:22.514"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.511" endtime="20231102 11:06:22.514"/>
</branch>
<status status="PASS" starttime="20231102 11:06:22.511" endtime="20231102 11:06:22.515"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:22.515" endtime="20231102 11:06:22.525"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.263" endtime="20231102 11:06:22.525"/>
</kw>
<kw name="When Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:22.635" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:22.533" endtime="20231102 11:06:22.635"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:22.649" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231102 11:06:22.636" endtime="20231102 11:06:22.650"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:22.651" endtime="20231102 11:06:22.999"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:23.002" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:23.001" endtime="20231102 11:06:23.002"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:23.231" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:23.003" endtime="20231102 11:06:23.231"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:23.233" endtime="20231102 11:06:23.233"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231102 11:06:23.234" endtime="20231102 11:06:23.234"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231102 11:06:23.235" endtime="20231102 11:06:23.235"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:23.232" endtime="20231102 11:06:23.236"/>
</branch>
<status status="PASS" starttime="20231102 11:06:23.232" endtime="20231102 11:06:23.236"/>
</if>
<status status="PASS" starttime="20231102 11:06:22.999" endtime="20231102 11:06:23.237"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231102 11:06:23.636" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:23.636" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:23.694" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:23.694" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231102 11:06:23.712" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231102 11:06:23.239" endtime="20231102 11:06:23.713"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.650" endtime="20231102 11:06:23.713"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:23.715" endtime="20231102 11:06:23.715"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231102 11:06:23.715" endtime="20231102 11:06:23.715"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231102 11:06:23.716" endtime="20231102 11:06:23.716"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:23.714" endtime="20231102 11:06:23.717"/>
</branch>
<status status="PASS" starttime="20231102 11:06:22.650" endtime="20231102 11:06:23.717"/>
</if>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:23.717" endtime="20231102 11:06:23.727"/>
</kw>
<status status="PASS" starttime="20231102 11:06:22.532" endtime="20231102 11:06:23.728"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tên loại@_&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:23.834" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:23.734" endtime="20231102 11:06:23.834"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:23.835" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:23.834" endtime="20231102 11:06:23.835"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:23.863" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:23.835" endtime="20231102 11:06:23.863"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:23.864" endtime="20231102 11:06:23.864"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:23.863" endtime="20231102 11:06:23.864"/>
</branch>
<status status="PASS" starttime="20231102 11:06:23.863" endtime="20231102 11:06:23.865"/>
</if>
<status status="PASS" starttime="20231102 11:06:23.732" endtime="20231102 11:06:23.865"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:23.867" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231102 11:06:23.866" endtime="20231102 11:06:23.867"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:23.868" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:23.868" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231102 11:06:23.867" endtime="20231102 11:06:23.868"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:23.874" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:23.869" endtime="20231102 11:06:23.875"/>
</kw>
<status status="PASS" starttime="20231102 11:06:23.868" endtime="20231102 11:06:23.875"/>
</branch>
<status status="PASS" starttime="20231102 11:06:23.868" endtime="20231102 11:06:23.876"/>
</if>
<msg timestamp="20231102 11:06:23.876" level="INFO">${name} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:23.865" endtime="20231102 11:06:23.877"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231102 11:06:23.879" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "CA_DA_21 Eaque consequatur.")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231102 11:06:23.878" endtime="20231102 11:06:23.880"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:23.880" endtime="20231102 11:06:24.934"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:24.937" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:24.936" endtime="20231102 11:06:24.938"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:24.950" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231102 11:06:24.939" endtime="20231102 11:06:24.950"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:24.952" endtime="20231102 11:06:25.208"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:25.312" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:25.209" endtime="20231102 11:06:25.312"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:25.415" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:25.313" endtime="20231102 11:06:25.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:25.416" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:25.415" endtime="20231102 11:06:25.416"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:25.434" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:25.417" endtime="20231102 11:06:25.435"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:25.436" endtime="20231102 11:06:25.440"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:25.435" endtime="20231102 11:06:25.442"/>
</branch>
<status status="PASS" starttime="20231102 11:06:25.435" endtime="20231102 11:06:25.444"/>
</if>
<status status="PASS" starttime="20231102 11:06:25.312" endtime="20231102 11:06:25.445"/>
</kw>
<status status="PASS" starttime="20231102 11:06:24.951" endtime="20231102 11:06:25.445"/>
</branch>
<status status="PASS" starttime="20231102 11:06:24.951" endtime="20231102 11:06:25.446"/>
</if>
<status status="PASS" starttime="20231102 11:06:24.935" endtime="20231102 11:06:25.446"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:25.447" endtime="20231102 11:06:25.459"/>
</kw>
<status status="PASS" starttime="20231102 11:06:23.731" endtime="20231102 11:06:25.460"/>
</kw>
<kw name="Then User look message &quot;Danh mục có dữ liệu không thể xóa&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:25.500" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231102 11:06:25.499" endtime="20231102 11:06:25.500"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:25.502" level="INFO">Length is 0</msg>
<msg timestamp="20231102 11:06:25.502" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231102 11:06:25.501" endtime="20231102 11:06:25.502"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:25.507" endtime="20231102 11:06:25.509"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:25.503" endtime="20231102 11:06:25.510"/>
</branch>
<status status="PASS" starttime="20231102 11:06:25.503" endtime="20231102 11:06:25.510"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231102 11:06:25.595" level="INFO">Text: 'Danh mục có dữ liệu không thể xóa'</msg>
<status status="PASS" starttime="20231102 11:06:25.516" endtime="20231102 11:06:25.596"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.512" endtime="20231102 11:06:25.597"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.510" endtime="20231102 11:06:25.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:25.598" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231102 11:06:25.598" endtime="20231102 11:06:25.599"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231102 11:06:25.617" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "swal2-confirm")] at state visible</msg>
<status status="PASS" starttime="20231102 11:06:25.603" endtime="20231102 11:06:25.618"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.600" endtime="20231102 11:06:25.619"/>
</kw>
<msg timestamp="20231102 11:06:25.619" level="INFO">${passed} = True</msg>
<status status="PASS" starttime="20231102 11:06:25.599" endtime="20231102 11:06:25.620"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:25.623" endtime="20231102 11:06:25.736"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.620" endtime="20231102 11:06:25.736"/>
</branch>
<status status="PASS" starttime="20231102 11:06:25.620" endtime="20231102 11:06:25.736"/>
</if>
<status status="PASS" starttime="20231102 11:06:25.498" endtime="20231102 11:06:25.736"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:25.849" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:25.748" endtime="20231102 11:06:25.849"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:25.950" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:25.850" endtime="20231102 11:06:25.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:25.951" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:25.950" endtime="20231102 11:06:25.951"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:25.964" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:25.951" endtime="20231102 11:06:25.964"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:25.966" endtime="20231102 11:06:25.967"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:25.965" endtime="20231102 11:06:25.967"/>
</branch>
<status status="PASS" starttime="20231102 11:06:25.965" endtime="20231102 11:06:25.968"/>
</if>
<status status="PASS" starttime="20231102 11:06:25.849" endtime="20231102 11:06:25.968"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:25.970" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231102 11:06:25.969" endtime="20231102 11:06:25.972"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:25.974" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:25.975" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231102 11:06:25.973" endtime="20231102 11:06:25.975"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:25.978" level="INFO">${text} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:25.977" endtime="20231102 11:06:25.978"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.976" endtime="20231102 11:06:25.979"/>
</branch>
<status status="PASS" starttime="20231102 11:06:25.976" endtime="20231102 11:06:25.979"/>
</if>
<msg timestamp="20231102 11:06:25.979" level="INFO">${name} = CA_DA_21 Ipsa tempora.</msg>
<status status="PASS" starttime="20231102 11:06:25.968" endtime="20231102 11:06:25.979"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231102 11:06:25.980" endtime="20231102 11:06:25.980"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:25.981" endtime="20231102 11:06:25.981"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:25.981" endtime="20231102 11:06:25.982"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:25.981" endtime="20231102 11:06:25.982"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231102 11:06:25.982" endtime="20231102 11:06:25.983"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231102 11:06:25.983" endtime="20231102 11:06:25.983"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:25.982" endtime="20231102 11:06:25.983"/>
</branch>
<status status="NOT RUN" starttime="20231102 11:06:25.981" endtime="20231102 11:06:25.984"/>
</if>
<status status="NOT RUN" starttime="20231102 11:06:25.980" endtime="20231102 11:06:25.984"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231102 11:06:25.985" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CA_DA_21 Ipsa tempora.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231102 11:06:25.984" endtime="20231102 11:06:25.985"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:25.985" endtime="20231102 11:06:26.097"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.984" endtime="20231102 11:06:26.098"/>
</branch>
<status status="PASS" starttime="20231102 11:06:25.980" endtime="20231102 11:06:26.099"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:26.102" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:26.102" endtime="20231102 11:06:26.103"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:26.120" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231102 11:06:26.103" endtime="20231102 11:06:26.122"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:26.124" endtime="20231102 11:06:26.390"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:26.492" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:26.390" endtime="20231102 11:06:26.492"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:26.594" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:26.494" endtime="20231102 11:06:26.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:26.596" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:26.595" endtime="20231102 11:06:26.596"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:26.696" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:26.597" endtime="20231102 11:06:26.697"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:26.699" endtime="20231102 11:06:26.699"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:26.698" endtime="20231102 11:06:26.700"/>
</branch>
<status status="PASS" starttime="20231102 11:06:26.698" endtime="20231102 11:06:26.701"/>
</if>
<status status="PASS" starttime="20231102 11:06:26.493" endtime="20231102 11:06:26.701"/>
</kw>
<status status="PASS" starttime="20231102 11:06:26.123" endtime="20231102 11:06:26.702"/>
</branch>
<status status="PASS" starttime="20231102 11:06:26.123" endtime="20231102 11:06:26.702"/>
</if>
<status status="PASS" starttime="20231102 11:06:26.099" endtime="20231102 11:06:26.702"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:26.707" endtime="20231102 11:06:26.716"/>
</kw>
<status status="PASS" starttime="20231102 11:06:25.747" endtime="20231102 11:06:26.717"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tên loại@_&quot; item line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; item line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:26.827" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:26.725" endtime="20231102 11:06:26.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:26.829" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:26.828" endtime="20231102 11:06:26.829"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:26.846" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:26.830" endtime="20231102 11:06:26.847"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:26.849" endtime="20231102 11:06:26.849"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:26.848" endtime="20231102 11:06:26.850"/>
</branch>
<status status="PASS" starttime="20231102 11:06:26.848" endtime="20231102 11:06:26.851"/>
</if>
<status status="PASS" starttime="20231102 11:06:26.722" endtime="20231102 11:06:26.851"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231102 11:06:26.857" level="INFO">${containsS} = ['Tên loại']</msg>
<status status="PASS" starttime="20231102 11:06:26.853" endtime="20231102 11:06:26.857"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231102 11:06:26.859" level="INFO">Length is 1</msg>
<msg timestamp="20231102 11:06:26.859" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231102 11:06:26.858" endtime="20231102 11:06:26.860"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:26.864" level="INFO">${text} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:26.861" endtime="20231102 11:06:26.864"/>
</kw>
<status status="PASS" starttime="20231102 11:06:26.860" endtime="20231102 11:06:26.865"/>
</branch>
<status status="PASS" starttime="20231102 11:06:26.860" endtime="20231102 11:06:26.866"/>
</if>
<msg timestamp="20231102 11:06:26.866" level="INFO">${name} = CA_DA_21 Eaque consequatur.</msg>
<status status="PASS" starttime="20231102 11:06:26.852" endtime="20231102 11:06:26.866"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231102 11:06:26.869" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "CA_DA_21 Eaque consequatur.")]/ancestor::*[contains(@class, "item")]//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231102 11:06:26.867" endtime="20231102 11:06:26.869"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:26.870" endtime="20231102 11:06:28.491"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:28.496" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231102 11:06:28.496" endtime="20231102 11:06:28.496"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:28.505" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231102 11:06:28.496" endtime="20231102 11:06:28.507"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231102 11:06:28.510" endtime="20231102 11:06:28.765"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:28.871" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:28.766" endtime="20231102 11:06:28.873"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231102 11:06:28.977" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231102 11:06:28.876" endtime="20231102 11:06:28.977"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231102 11:06:28.978" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231102 11:06:28.977" endtime="20231102 11:06:28.978"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231102 11:06:28.991" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231102 11:06:28.978" endtime="20231102 11:06:28.992"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231102 11:06:28.993" endtime="20231102 11:06:28.994"/>
</kw>
<status status="NOT RUN" starttime="20231102 11:06:28.992" endtime="20231102 11:06:28.995"/>
</branch>
<status status="PASS" starttime="20231102 11:06:28.992" endtime="20231102 11:06:28.995"/>
</if>
<status status="PASS" starttime="20231102 11:06:28.874" endtime="20231102 11:06:28.996"/>
</kw>
<status status="PASS" starttime="20231102 11:06:28.507" endtime="20231102 11:06:28.996"/>
</branch>
<status status="PASS" starttime="20231102 11:06:28.507" endtime="20231102 11:06:28.997"/>
</if>
<status status="PASS" starttime="20231102 11:06:28.493" endtime="20231102 11:06:28.997"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231102 11:06:28.998" endtime="20231102 11:06:29.010"/>
</kw>
<status status="PASS" starttime="20231102 11:06:26.719" endtime="20231102 11:06:29.010"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231102 11:06:29.782" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231102 11:06:29.014" endtime="20231102 11:06:29.782"/>
</kw>
<status status="PASS" starttime="20231102 11:06:29.013" endtime="20231102 11:06:29.783"/>
</kw>
<tag>Delete</tag>
<status status="PASS" starttime="20231102 11:06:07.968" endtime="20231102 11:06:29.784"/>
</test>
<status status="PASS" starttime="20231102 11:06:05.453" endtime="20231102 11:06:29.795"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Delete</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Categories Data">Categories Data</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231030 16:47:12.109" rpa="false" schemaversion="4">
<suite id="s1" name="Customer Account" source="d:\Intern test\Automation\Auto_Web\testcases\customer_account.robot">
<test id="s1-t1" name="CA_11 Check the update of account list after cancel the search action" line="142">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231030 16:47:14.808" endtime="20231030 16:47:14.831"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231030 16:47:14.833" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Intern test\\Automation\\browser\\traces\\4a398ebd-89be-473d-9d04-16befc572727"}</msg>
<msg timestamp="20231030 16:47:17.034" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Intern test\\Automation\\browser\\traces\\4a398ebd-89be-473d-9d04-16befc572727"}</msg>
<status status="PASS" starttime="20231030 16:47:14.832" endtime="20231030 16:47:17.035"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231030 16:47:21.123" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231030 16:47:21.124" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231030 16:47:17.035" endtime="20231030 16:47:21.125"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231030 16:47:21.128" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231030 16:47:21.126" endtime="20231030 16:47:21.128"/>
</kw>
<status status="PASS" starttime="20231030 16:47:14.808" endtime="20231030 16:47:21.129"/>
</kw>
<kw name="Create a test account with &quot;Farmer Side&quot; type" sourcename="Create a test account with &quot;${type}&quot; type">
<var>${AccountName}</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Tài khoản khách hàng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Tài khoản khách hàng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:21.260" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:21.174" endtime="20231030 16:47:21.260"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231030 16:47:21.262" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231030 16:47:21.261" endtime="20231030 16:47:21.263"/>
</kw>
<status status="FAIL" starttime="20231030 16:47:21.162" endtime="20231030 16:47:21.264"/>
</kw>
<msg timestamp="20231030 16:47:21.265" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231030 16:47:21.158" endtime="20231030 16:47:21.265"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231030 16:47:21.272" endtime="20231030 16:47:21.272"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.266" endtime="20231030 16:47:21.273"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create account &quot;Tài khoản Người dùng&quot; with &quot;/customer-account&quot;" sourcename="Go to page create account &quot;${name}&quot; with &quot;${url}&quot;">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:21.281" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:21.280" endtime="20231030 16:47:21.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:21.287" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:21.283" endtime="20231030 16:47:21.288"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:21.291" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:21.289" endtime="20231030 16:47:21.292"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.294" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:21.294" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:21.292" endtime="20231030 16:47:21.295"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:21.297" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:21.296" endtime="20231030 16:47:21.297"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.299" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:21.301" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:21.298" endtime="20231030 16:47:21.303"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.306" endtime="20231030 16:47:21.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.308" endtime="20231030 16:47:21.309"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.305" endtime="20231030 16:47:21.309"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.311" endtime="20231030 16:47:21.311"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.311" endtime="20231030 16:47:21.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.311" endtime="20231030 16:47:21.320"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.311" endtime="20231030 16:47:21.320"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.323" endtime="20231030 16:47:21.323"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.323" endtime="20231030 16:47:21.323"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.320" endtime="20231030 16:47:21.323"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.329" endtime="20231030 16:47:21.329"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.331" endtime="20231030 16:47:21.331"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.323" endtime="20231030 16:47:21.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.331" endtime="20231030 16:47:21.331"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.331" endtime="20231030 16:47:21.331"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:21.331" endtime="20231030 16:47:21.339"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.331" endtime="20231030 16:47:21.361"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.361" endtime="20231030 16:47:21.361"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.381" endtime="20231030 16:47:21.381"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.388" endtime="20231030 16:47:21.389"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.361" endtime="20231030 16:47:21.389"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.391" endtime="20231030 16:47:21.392"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.390" endtime="20231030 16:47:21.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.392" endtime="20231030 16:47:21.392"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.392" endtime="20231030 16:47:21.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.392" endtime="20231030 16:47:21.392"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.392" endtime="20231030 16:47:21.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.404" endtime="20231030 16:47:21.405"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.399" endtime="20231030 16:47:21.406"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.411" endtime="20231030 16:47:21.412"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.406" endtime="20231030 16:47:21.412"/>
</branch>
<status status="PASS" starttime="20231030 16:47:21.304" endtime="20231030 16:47:21.412"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.412" level="INFO">Length is 15</msg>
<msg timestamp="20231030 16:47:21.412" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231030 16:47:21.412" endtime="20231030 16:47:21.412"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:21.423" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231030 16:47:21.422" endtime="20231030 16:47:21.423"/>
</kw>
<status status="PASS" starttime="20231030 16:47:21.412" endtime="20231030 16:47:21.424"/>
</branch>
<status status="PASS" starttime="20231030 16:47:21.412" endtime="20231030 16:47:21.426"/>
</if>
<msg timestamp="20231030 16:47:21.427" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231030 16:47:21.278" endtime="20231030 16:47:21.427"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:21.430" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:21.427" endtime="20231030 16:47:21.430"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:21.430" endtime="20231030 16:47:21.689"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:21.690" endtime="20231030 16:47:21.811"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:21.820" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:21.811" endtime="20231030 16:47:21.892"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.892" level="INFO">Length is 15</msg>
<msg timestamp="20231030 16:47:21.892" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231030 16:47:21.892" endtime="20231030 16:47:21.892"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:21.901" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231030 16:47:21.892" endtime="20231030 16:47:21.901"/>
</kw>
<status status="PASS" starttime="20231030 16:47:21.892" endtime="20231030 16:47:21.901"/>
</branch>
<status status="PASS" starttime="20231030 16:47:21.892" endtime="20231030 16:47:21.901"/>
</if>
<status status="PASS" starttime="20231030 16:47:21.277" endtime="20231030 16:47:21.901"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:21.901" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:21.901" endtime="20231030 16:47:21.901"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:21.910" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:21.910" endtime="20231030 16:47:21.910"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:21.912" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:21.912" endtime="20231030 16:47:21.912"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.914" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:21.914" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:21.914" endtime="20231030 16:47:21.914"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:21.920" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:21.914" endtime="20231030 16:47:21.920"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.922" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:21.922" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:21.921" endtime="20231030 16:47:21.922"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.922" endtime="20231030 16:47:21.922"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.922" endtime="20231030 16:47:21.922"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.922" endtime="20231030 16:47:21.922"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.930" endtime="20231030 16:47:21.930"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.932" endtime="20231030 16:47:21.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.932" endtime="20231030 16:47:21.932"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.930" endtime="20231030 16:47:21.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.940" endtime="20231030 16:47:21.940"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.940" endtime="20231030 16:47:21.942"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.932" endtime="20231030 16:47:21.942"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.945" endtime="20231030 16:47:21.945"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.945" endtime="20231030 16:47:21.945"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.942" endtime="20231030 16:47:21.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.945" endtime="20231030 16:47:21.954"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.945" endtime="20231030 16:47:21.955"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:21.955" endtime="20231030 16:47:21.955"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.955" endtime="20231030 16:47:21.955"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.955" endtime="20231030 16:47:21.955"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.960" endtime="20231030 16:47:21.960"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.960" endtime="20231030 16:47:21.962"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.955" endtime="20231030 16:47:21.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.962" endtime="20231030 16:47:21.962"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.962" endtime="20231030 16:47:21.962"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.970" endtime="20231030 16:47:21.970"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.969" endtime="20231030 16:47:21.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.973" endtime="20231030 16:47:21.973"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.971" endtime="20231030 16:47:21.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.973" endtime="20231030 16:47:21.973"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.973" endtime="20231030 16:47:21.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:21.981" endtime="20231030 16:47:21.981"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:21.973" endtime="20231030 16:47:21.981"/>
</branch>
<status status="PASS" starttime="20231030 16:47:21.922" endtime="20231030 16:47:21.983"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:21.983" level="INFO">Length is 6</msg>
<msg timestamp="20231030 16:47:21.983" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231030 16:47:21.983" endtime="20231030 16:47:21.983"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:21.993" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231030 16:47:21.991" endtime="20231030 16:47:21.993"/>
</kw>
<status status="PASS" starttime="20231030 16:47:21.983" endtime="20231030 16:47:21.993"/>
</branch>
<status status="PASS" starttime="20231030 16:47:21.983" endtime="20231030 16:47:21.993"/>
</if>
<msg timestamp="20231030 16:47:21.993" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231030 16:47:21.901" endtime="20231030 16:47:21.993"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:21.993" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:21.993" endtime="20231030 16:47:21.993"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:22.002" endtime="20231030 16:47:22.153"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:22.154" endtime="20231030 16:47:22.206"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:22.206" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:22.206" endtime="20231030 16:47:22.271"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:22.273" level="INFO">Length is 6</msg>
<msg timestamp="20231030 16:47:22.274" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231030 16:47:22.272" endtime="20231030 16:47:22.274"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:22.277" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231030 16:47:22.276" endtime="20231030 16:47:22.277"/>
</kw>
<status status="PASS" starttime="20231030 16:47:22.275" endtime="20231030 16:47:22.278"/>
</branch>
<status status="PASS" starttime="20231030 16:47:22.274" endtime="20231030 16:47:22.278"/>
</if>
<status status="PASS" starttime="20231030 16:47:21.901" endtime="20231030 16:47:22.279"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:22.382" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:22.281" endtime="20231030 16:47:22.382"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:22.396" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:22.385" endtime="20231030 16:47:22.396"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:22.398" endtime="20231030 16:47:22.551"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:22.551" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:22.551" endtime="20231030 16:47:22.551"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:22.574" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:22.559" endtime="20231030 16:47:22.574"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:22.576" endtime="20231030 16:47:22.577"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231030 16:47:22.579" endtime="20231030 16:47:22.580"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231030 16:47:22.581" endtime="20231030 16:47:22.582"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:22.575" endtime="20231030 16:47:22.583"/>
</branch>
<status status="PASS" starttime="20231030 16:47:22.574" endtime="20231030 16:47:22.583"/>
</if>
<status status="PASS" starttime="20231030 16:47:22.551" endtime="20231030 16:47:22.588"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231030 16:47:22.622" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:22.622" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:23.086" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:23.086" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:23.168" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231030 16:47:22.588" endtime="20231030 16:47:23.169"/>
</kw>
<status status="PASS" starttime="20231030 16:47:22.397" endtime="20231030 16:47:23.169"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:23.171" endtime="20231030 16:47:23.171"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231030 16:47:23.172" endtime="20231030 16:47:23.172"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231030 16:47:23.173" endtime="20231030 16:47:23.173"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:23.170" endtime="20231030 16:47:23.174"/>
</branch>
<status status="PASS" starttime="20231030 16:47:22.397" endtime="20231030 16:47:23.174"/>
</if>
<status status="PASS" starttime="20231030 16:47:22.279" endtime="20231030 16:47:23.174"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:23.176" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:23.176" endtime="20231030 16:47:23.176"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:23.178" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:23.179" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:23.177" endtime="20231030 16:47:23.179"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:23.181" endtime="20231030 16:47:23.181"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:23.180" endtime="20231030 16:47:23.182"/>
</branch>
<status status="PASS" starttime="20231030 16:47:23.180" endtime="20231030 16:47:23.182"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231030 16:47:23.320" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231030 16:47:23.189" endtime="20231030 16:47:23.321"/>
</kw>
<status status="PASS" starttime="20231030 16:47:23.182" endtime="20231030 16:47:23.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:23.323" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231030 16:47:23.322" endtime="20231030 16:47:23.324"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 16:47:23.673" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231030 16:47:23.673" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231030 16:47:23.674" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231030 16:47:23.326" endtime="20231030 16:47:23.694"/>
</kw>
<status status="FAIL" starttime="20231030 16:47:23.325" endtime="20231030 16:47:23.695"/>
</kw>
<msg timestamp="20231030 16:47:23.696" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231030 16:47:23.324" endtime="20231030 16:47:23.696"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:23.697" endtime="20231030 16:47:23.698"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:23.696" endtime="20231030 16:47:23.698"/>
</branch>
<status status="PASS" starttime="20231030 16:47:23.696" endtime="20231030 16:47:23.699"/>
</if>
<status status="PASS" starttime="20231030 16:47:23.175" endtime="20231030 16:47:23.700"/>
</kw>
<status status="PASS" starttime="20231030 16:47:21.276" endtime="20231030 16:47:23.700"/>
</kw>
<kw name="Click &quot;QUẢN LÝ TÀI KHOẢN&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:23.703" endtime="20231030 16:47:24.724"/>
</kw>
<status status="PASS" starttime="20231030 16:47:23.701" endtime="20231030 16:47:24.724"/>
</kw>
<kw name="Click &quot;${name}&quot; sub menu to &quot;${url}&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:24.827" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:24.726" endtime="20231030 16:47:24.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:24.828" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:24.827" endtime="20231030 16:47:24.828"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:24.836" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:24.828" endtime="20231030 16:47:24.837"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:24.839" endtime="20231030 16:47:24.839"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:24.837" endtime="20231030 16:47:24.840"/>
</branch>
<status status="PASS" starttime="20231030 16:47:24.837" endtime="20231030 16:47:24.841"/>
</if>
<status status="PASS" starttime="20231030 16:47:24.726" endtime="20231030 16:47:24.841"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:24.842" endtime="20231030 16:47:25.183"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231030 16:47:25.183" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/vn/customer-account</msg>
<status status="PASS" starttime="20231030 16:47:25.183" endtime="20231030 16:47:25.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231030 16:47:25.199" endtime="20231030 16:47:25.199"/>
</kw>
<status status="PASS" starttime="20231030 16:47:24.725" endtime="20231030 16:47:25.199"/>
</kw>
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:25.303" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:25.199" endtime="20231030 16:47:25.304"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:25.709" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:25.305" endtime="20231030 16:47:25.710"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:25.712" endtime="20231030 16:47:26.057"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.060" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:26.059" endtime="20231030 16:47:26.061"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:26.079" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:26.061" endtime="20231030 16:47:26.079"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.080" endtime="20231030 16:47:26.080"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.081" endtime="20231030 16:47:26.081"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231030 16:47:26.081" endtime="20231030 16:47:26.082"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.080" endtime="20231030 16:47:26.083"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.080" endtime="20231030 16:47:26.083"/>
</if>
<status status="PASS" starttime="20231030 16:47:26.058" endtime="20231030 16:47:26.084"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231030 16:47:26.103" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:26.103" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:26.123" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:26.123" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:26.133" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231030 16:47:26.084" endtime="20231030 16:47:26.134"/>
</kw>
<status status="PASS" starttime="20231030 16:47:25.710" endtime="20231030 16:47:26.135"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.137" endtime="20231030 16:47:26.138"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231030 16:47:26.138" endtime="20231030 16:47:26.139"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.140" endtime="20231030 16:47:26.141"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.136" endtime="20231030 16:47:26.141"/>
</branch>
<status status="PASS" starttime="20231030 16:47:25.710" endtime="20231030 16:47:26.142"/>
</if>
<status status="PASS" starttime="20231030 16:47:25.199" endtime="20231030 16:47:26.142"/>
</kw>
<status status="PASS" starttime="20231030 16:47:21.274" endtime="20231030 16:47:26.143"/>
</kw>
<status status="PASS" starttime="20231030 16:47:21.274" endtime="20231030 16:47:26.143"/>
</branch>
<status status="PASS" starttime="20231030 16:47:21.266" endtime="20231030 16:47:26.144"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Họ và tên&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.148" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:26.147" endtime="20231030 16:47:26.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.153" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:26.151" endtime="20231030 16:47:26.154"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:26.155" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:26.154" endtime="20231030 16:47:26.156"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.157" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:26.157" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:26.156" endtime="20231030 16:47:26.157"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:26.159" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:26.158" endtime="20231030 16:47:26.159"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.161" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:26.161" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:26.160" endtime="20231030 16:47:26.162"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.163" endtime="20231030 16:47:26.164"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.164" endtime="20231030 16:47:26.165"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.162" endtime="20231030 16:47:26.165"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231030 16:47:26.172" level="INFO">${random} = Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.171" endtime="20231030 16:47:26.173"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231030 16:47:26.175" level="INFO">${words} = ['CA_11', 'Check', 'the', 'update', 'of', 'account', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231030 16:47:26.174" endtime="20231030 16:47:26.175"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.180" level="INFO">${new_text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.176" endtime="20231030 16:47:26.180"/>
</kw>
<status status="PASS" starttime="20231030 16:47:26.169" endtime="20231030 16:47:26.181"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.188" endtime="20231030 16:47:26.189"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.190" endtime="20231030 16:47:26.191"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.188" endtime="20231030 16:47:26.192"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.193" endtime="20231030 16:47:26.194"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.195" endtime="20231030 16:47:26.196"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.192" endtime="20231030 16:47:26.197"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.198" endtime="20231030 16:47:26.203"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.197" endtime="20231030 16:47:26.203"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:26.207" endtime="20231030 16:47:26.207"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.205" endtime="20231030 16:47:26.208"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.210" endtime="20231030 16:47:26.211"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.212" endtime="20231030 16:47:26.212"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.213" endtime="20231030 16:47:26.214"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.209" endtime="20231030 16:47:26.215"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.218" endtime="20231030 16:47:26.219"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.216" endtime="20231030 16:47:26.220"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.222" endtime="20231030 16:47:26.222"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.220" endtime="20231030 16:47:26.223"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.225" endtime="20231030 16:47:26.225"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.224" endtime="20231030 16:47:26.226"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.228" endtime="20231030 16:47:26.239"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.227" endtime="20231030 16:47:26.240"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.241" endtime="20231030 16:47:26.242"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.241" endtime="20231030 16:47:26.243"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.162" endtime="20231030 16:47:26.245"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.247" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:26.247" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:26.246" endtime="20231030 16:47:26.248"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:26.257" level="INFO">${text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.256" endtime="20231030 16:47:26.258"/>
</kw>
<status status="PASS" starttime="20231030 16:47:26.255" endtime="20231030 16:47:26.258"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.248" endtime="20231030 16:47:26.259"/>
</if>
<msg timestamp="20231030 16:47:26.259" level="INFO">${text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.146" endtime="20231030 16:47:26.260"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:26.262" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Họ và tên"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:26.260" endtime="20231030 16:47:26.263"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:26.264" endtime="20231030 16:47:26.589"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:26.589" endtime="20231030 16:47:26.622"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:26.622" level="INFO">Fills the text 'CA_11 Vero consectetur soluta amet.' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:26.622" endtime="20231030 16:47:26.668"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.668" level="INFO">Length is 35</msg>
<msg timestamp="20231030 16:47:26.668" level="INFO">${cnt} = 35</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:26.668" level="INFO">${STATE["Họ và tên"]} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</kw>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</if>
<status status="PASS" starttime="20231030 16:47:26.144" endtime="20231030 16:47:26.668"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Họ và tên@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:26.668" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.668" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:26.668" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.668" level="INFO">${text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</kw>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</if>
<msg timestamp="20231030 16:47:26.668" level="INFO">${text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.684" level="INFO">${name} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:26.668" endtime="20231030 16:47:26.685"/>
</kw>
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.685" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:26.685" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.685"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:26.685" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.685"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.685" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:26.685" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.685"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:26.685" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.685"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.696" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:26.696" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.696"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.696" endtime="20231030 16:47:26.696"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.701" endtime="20231030 16:47:26.701"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.696" endtime="20231030 16:47:26.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20231030 16:47:26.702" level="INFO">${new_text} = lakshit10@example.com</msg>
<status status="PASS" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<status status="PASS" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.702"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.702" endtime="20231030 16:47:26.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.720" endtime="20231030 16:47:26.720"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.719" endtime="20231030 16:47:26.721"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.722" endtime="20231030 16:47:26.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.696" endtime="20231030 16:47:26.723"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.723" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:26.723" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.723"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:26.729" level="INFO">${text} = lakshit10@example.com</msg>
<status status="PASS" starttime="20231030 16:47:26.729" endtime="20231030 16:47:26.729"/>
</kw>
<status status="PASS" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.729"/>
</branch>
<status status="PASS" starttime="20231030 16:47:26.723" endtime="20231030 16:47:26.729"/>
</if>
<msg timestamp="20231030 16:47:26.729" level="INFO">${text} = lakshit10@example.com</msg>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:26.729"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:26.729" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:26.729" endtime="20231030 16:47:26.729"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:26.732" endtime="20231030 16:47:26.857"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:26.857" endtime="20231030 16:47:26.929"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:26.929" level="INFO">Fills the text 'lakshit10@example.com' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:26.929" endtime="20231030 16:47:26.989"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:26.997" level="INFO">Length is 21</msg>
<msg timestamp="20231030 16:47:26.997" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20231030 16:47:26.989" endtime="20231030 16:47:26.997"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:27.002" level="INFO">${STATE["Email"]} = lakshit10@example.com</msg>
<status status="PASS" starttime="20231030 16:47:27.002" endtime="20231030 16:47:27.002"/>
</kw>
<status status="PASS" starttime="20231030 16:47:27.000" endtime="20231030 16:47:27.002"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.000" endtime="20231030 16:47:27.006"/>
</if>
<status status="PASS" starttime="20231030 16:47:26.685" endtime="20231030 16:47:27.006"/>
</kw>
<kw name="Enter &quot;phone&quot; in &quot;Số điện thoại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:27.012" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:27.011" endtime="20231030 16:47:27.012"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:27.014" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:27.013" endtime="20231030 16:47:27.015"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:27.018" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:27.015" endtime="20231030 16:47:27.018"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.020" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:27.022" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:27.019" endtime="20231030 16:47:27.022"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:27.023" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:27.023" endtime="20231030 16:47:27.023"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.023" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:27.023" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:27.023" endtime="20231030 16:47:27.023"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.027" endtime="20231030 16:47:27.027"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.029" endtime="20231030 16:47:27.029"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.027" endtime="20231030 16:47:27.029"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.029" endtime="20231030 16:47:27.029"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.029" endtime="20231030 16:47:27.034"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.035" endtime="20231030 16:47:27.035"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.029" endtime="20231030 16:47:27.035"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.038" endtime="20231030 16:47:27.040"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.040"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.038" endtime="20231030 16:47:27.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.040"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.040"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.040"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.040"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:27.048" endtime="20231030 16:47:27.050"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.040" endtime="20231030 16:47:27.051"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231030 16:47:27.051" level="INFO">${new_text} = 7773412768</msg>
<status status="PASS" starttime="20231030 16:47:27.051" endtime="20231030 16:47:27.051"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231030 16:47:27.058" level="INFO">${new_text} = 7773412768</msg>
<status status="PASS" starttime="20231030 16:47:27.051" endtime="20231030 16:47:27.058"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231030 16:47:27.060" level="INFO">${new_text} = 07773412768</msg>
<status status="PASS" starttime="20231030 16:47:27.060" endtime="20231030 16:47:27.060"/>
</kw>
<status status="PASS" starttime="20231030 16:47:27.051" endtime="20231030 16:47:27.060"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.060" endtime="20231030 16:47:27.060"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.060" endtime="20231030 16:47:27.060"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.070" endtime="20231030 16:47:27.070"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.070" endtime="20231030 16:47:27.070"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.070" endtime="20231030 16:47:27.070"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.070" endtime="20231030 16:47:27.070"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.070" endtime="20231030 16:47:27.081"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.070" endtime="20231030 16:47:27.081"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.113" endtime="20231030 16:47:27.119"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.081" endtime="20231030 16:47:27.122"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.023" endtime="20231030 16:47:27.124"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.127" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:27.128" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:27.125" endtime="20231030 16:47:27.128"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:27.132" level="INFO">${text} = 07773412768</msg>
<status status="PASS" starttime="20231030 16:47:27.130" endtime="20231030 16:47:27.132"/>
</kw>
<status status="PASS" starttime="20231030 16:47:27.129" endtime="20231030 16:47:27.134"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.129" endtime="20231030 16:47:27.134"/>
</if>
<msg timestamp="20231030 16:47:27.135" level="INFO">${text} = 07773412768</msg>
<status status="PASS" starttime="20231030 16:47:27.009" endtime="20231030 16:47:27.135"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:27.137" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số điện thoại"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:27.136" endtime="20231030 16:47:27.137"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:27.138" endtime="20231030 16:47:27.252"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:27.253" endtime="20231030 16:47:27.284"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:27.284" level="INFO">Fills the text '07773412768' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:27.284" endtime="20231030 16:47:27.336"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.337" level="INFO">Length is 11</msg>
<msg timestamp="20231030 16:47:27.338" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231030 16:47:27.336" endtime="20231030 16:47:27.338"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:27.341" level="INFO">${STATE["Số điện thoại"]} = 07773412768</msg>
<status status="PASS" starttime="20231030 16:47:27.339" endtime="20231030 16:47:27.341"/>
</kw>
<status status="PASS" starttime="20231030 16:47:27.338" endtime="20231030 16:47:27.341"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.338" endtime="20231030 16:47:27.342"/>
</if>
<status status="PASS" starttime="20231030 16:47:27.008" endtime="20231030 16:47:27.342"/>
</kw>
<kw name="Click select &quot;Giới tính&quot; with &quot;Nam&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:27.346" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:27.345" endtime="20231030 16:47:27.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:27.348" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:27.347" endtime="20231030 16:47:27.348"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:27.351" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:27.350" endtime="20231030 16:47:27.351"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.353" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:27.353" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:27.352" endtime="20231030 16:47:27.354"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:27.356" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:27.355" endtime="20231030 16:47:27.356"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.358" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:27.358" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:27.357" endtime="20231030 16:47:27.359"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.361" endtime="20231030 16:47:27.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.362" endtime="20231030 16:47:27.362"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.360" endtime="20231030 16:47:27.363"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.365" endtime="20231030 16:47:27.365"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.367" endtime="20231030 16:47:27.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.369" endtime="20231030 16:47:27.369"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.363" endtime="20231030 16:47:27.370"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.372" endtime="20231030 16:47:27.372"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.373" endtime="20231030 16:47:27.374"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.371" endtime="20231030 16:47:27.374"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.376" endtime="20231030 16:47:27.377"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.377" endtime="20231030 16:47:27.378"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.375" endtime="20231030 16:47:27.378"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.380" endtime="20231030 16:47:27.380"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.379" endtime="20231030 16:47:27.381"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:27.383" endtime="20231030 16:47:27.384"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.381" endtime="20231030 16:47:27.384"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.385" endtime="20231030 16:47:27.386"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.387" endtime="20231030 16:47:27.387"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.388" endtime="20231030 16:47:27.389"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.384" endtime="20231030 16:47:27.390"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.391" endtime="20231030 16:47:27.392"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.390" endtime="20231030 16:47:27.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.394" endtime="20231030 16:47:27.395"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.393" endtime="20231030 16:47:27.395"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.397" endtime="20231030 16:47:27.397"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.396" endtime="20231030 16:47:27.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.399" endtime="20231030 16:47:27.399"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.399" endtime="20231030 16:47:27.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.406" endtime="20231030 16:47:27.406"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.404" endtime="20231030 16:47:27.406"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.359" endtime="20231030 16:47:27.406"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.414" level="INFO">Length is 3</msg>
<msg timestamp="20231030 16:47:27.416" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231030 16:47:27.406" endtime="20231030 16:47:27.416"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:27.416" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231030 16:47:27.416" endtime="20231030 16:47:27.416"/>
</kw>
<status status="PASS" starttime="20231030 16:47:27.416" endtime="20231030 16:47:27.416"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.416" endtime="20231030 16:47:27.416"/>
</if>
<msg timestamp="20231030 16:47:27.416" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231030 16:47:27.344" endtime="20231030 16:47:27.416"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231030 16:47:27.425" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231030 16:47:27.416" endtime="20231030 16:47:27.425"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:27.425" endtime="20231030 16:47:27.649"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231030 16:47:27.652" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231030 16:47:27.650" endtime="20231030 16:47:27.652"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:27.654" level="INFO">Fills the text 'Nam' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:27.653" endtime="20231030 16:47:27.769"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:27.769" endtime="20231030 16:47:27.960"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.960" level="INFO">Length is 3</msg>
<msg timestamp="20231030 16:47:27.960" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231030 16:47:27.960" endtime="20231030 16:47:27.960"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:27.960" level="INFO">${STATE["Giới tính"]} = Nam</msg>
<status status="PASS" starttime="20231030 16:47:27.960" endtime="20231030 16:47:27.960"/>
</kw>
<status status="PASS" starttime="20231030 16:47:27.960" endtime="20231030 16:47:27.960"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.960" endtime="20231030 16:47:27.960"/>
</if>
<status status="PASS" starttime="20231030 16:47:27.343" endtime="20231030 16:47:27.960"/>
</kw>
<kw name="Click select &quot;Loại tài khoản&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:27.973" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:27.972" endtime="20231030 16:47:27.973"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:27.975" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:27.974" endtime="20231030 16:47:27.975"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:27.976" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.976"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.976" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:27.976" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.976"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:27.976" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.976"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:27.976" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:27.976" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.976"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.976"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.976" endtime="20231030 16:47:27.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.984" endtime="20231030 16:47:27.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:27.986"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:27.999" endtime="20231030 16:47:28.008"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.009" endtime="20231030 16:47:28.010"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:27.986" endtime="20231030 16:47:28.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.010" endtime="20231030 16:47:28.010"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.010" endtime="20231030 16:47:28.010"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.010" endtime="20231030 16:47:28.018"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.010" endtime="20231030 16:47:28.018"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.018" endtime="20231030 16:47:28.018"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.018" endtime="20231030 16:47:28.025"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.027" endtime="20231030 16:47:28.027"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.026" endtime="20231030 16:47:28.028"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.030" endtime="20231030 16:47:28.030"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.029" endtime="20231030 16:47:28.031"/>
</branch>
<status status="PASS" starttime="20231030 16:47:27.976" endtime="20231030 16:47:28.032"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.035" level="INFO">Length is 11</msg>
<msg timestamp="20231030 16:47:28.035" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231030 16:47:28.032" endtime="20231030 16:47:28.035"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:28.042" level="INFO">${text} = Farmer Side</msg>
<status status="PASS" starttime="20231030 16:47:28.042" endtime="20231030 16:47:28.042"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.040" endtime="20231030 16:47:28.042"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.040" endtime="20231030 16:47:28.042"/>
</if>
<msg timestamp="20231030 16:47:28.042" level="INFO">${text} = Farmer Side</msg>
<status status="PASS" starttime="20231030 16:47:27.966" endtime="20231030 16:47:28.042"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231030 16:47:28.042" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231030 16:47:28.042" endtime="20231030 16:47:28.042"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:28.042" endtime="20231030 16:47:28.220"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231030 16:47:28.220" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231030 16:47:28.220" endtime="20231030 16:47:28.220"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:28.220" level="INFO">Fills the text 'Farmer Side' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:28.220" endtime="20231030 16:47:28.353"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:28.353" endtime="20231030 16:47:28.482"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.487" level="INFO">Length is 11</msg>
<msg timestamp="20231030 16:47:28.487" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231030 16:47:28.485" endtime="20231030 16:47:28.487"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:28.487" level="INFO">${STATE["Loại tài khoản"]} = Farmer Side</msg>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.487"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.487"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.487"/>
</if>
<status status="PASS" starttime="20231030 16:47:27.960" endtime="20231030 16:47:28.487"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:28.487" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.487"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:28.487" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.487"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:28.487" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.487"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.502" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:28.502" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:28.501" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:28.502" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.502" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:28.502" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.502"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.517"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.519" endtime="20231030 16:47:28.519"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.518" endtime="20231030 16:47:28.519"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.519" endtime="20231030 16:47:28.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.522" endtime="20231030 16:47:28.522"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231030 16:47:28.539" level="INFO">${new_text} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.535" endtime="20231030 16:47:28.539"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.535" endtime="20231030 16:47:28.539"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.540" endtime="20231030 16:47:28.540"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.539" endtime="20231030 16:47:28.540"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.541" endtime="20231030 16:47:28.541"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.541" endtime="20231030 16:47:28.542"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.542" endtime="20231030 16:47:28.543"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.542" endtime="20231030 16:47:28.543"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.502" endtime="20231030 16:47:28.543"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.544" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:28.544" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:28.543" endtime="20231030 16:47:28.544"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:28.546" level="INFO">${text} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.545" endtime="20231030 16:47:28.546"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.545" endtime="20231030 16:47:28.546"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.545" endtime="20231030 16:47:28.547"/>
</if>
<msg timestamp="20231030 16:47:28.547" level="INFO">${text} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.547"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:28.548" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:28.547" endtime="20231030 16:47:28.548"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:28.551" endtime="20231030 16:47:28.663"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:28.663" endtime="20231030 16:47:28.701"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:28.701" level="INFO">Fills the text '#r)9BKn7BM' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:28.701" endtime="20231030 16:47:28.770"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.770" level="INFO">Length is 10</msg>
<msg timestamp="20231030 16:47:28.770" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231030 16:47:28.770" endtime="20231030 16:47:28.770"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:28.770" level="INFO">${STATE["Mật khẩu"]} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.770" endtime="20231030 16:47:28.770"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.770" endtime="20231030 16:47:28.770"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.770" endtime="20231030 16:47:28.770"/>
</if>
<status status="PASS" starttime="20231030 16:47:28.487" endtime="20231030 16:47:28.770"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Xác nhận mật khẩu&quot; with &quot;_@Mật khẩu@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:28.785" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:28.785" endtime="20231030 16:47:28.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:28.785" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:28.785" endtime="20231030 16:47:28.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:28.785" level="INFO">${containsS} = ['Mật khẩu']</msg>
<status status="PASS" starttime="20231030 16:47:28.785" endtime="20231030 16:47:28.785"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.785" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:28.785" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:28.785" endtime="20231030 16:47:28.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:28.785" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:28.785" endtime="20231030 16:47:28.785"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.800" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:28.801" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:28.785" endtime="20231030 16:47:28.801"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:28.807" level="INFO">${new_text} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.804" endtime="20231030 16:47:28.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:28.810" level="INFO">${symbol} = _@Mật khẩu@_</msg>
<status status="PASS" starttime="20231030 16:47:28.807" endtime="20231030 16:47:28.810"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.803" endtime="20231030 16:47:28.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.810"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.810"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.810"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.810"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.818"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.810" endtime="20231030 16:47:28.818"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.818" endtime="20231030 16:47:28.818"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.822" endtime="20231030 16:47:28.822"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.818" endtime="20231030 16:47:28.822"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.822" endtime="20231030 16:47:28.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.825" endtime="20231030 16:47:28.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.838" endtime="20231030 16:47:28.838"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.833" endtime="20231030 16:47:28.838"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.838" endtime="20231030 16:47:28.838"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.838" endtime="20231030 16:47:28.843"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.843" endtime="20231030 16:47:28.845"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.843" endtime="20231030 16:47:28.845"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.855" endtime="20231030 16:47:28.855"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.855" endtime="20231030 16:47:28.855"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:28.863" endtime="20231030 16:47:28.863"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:28.855" endtime="20231030 16:47:28.863"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.802" endtime="20231030 16:47:28.863"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:28.867" level="INFO">Length is 12</msg>
<msg timestamp="20231030 16:47:28.868" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231030 16:47:28.863" endtime="20231030 16:47:28.868"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:28.873" level="INFO">${text} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.868" endtime="20231030 16:47:28.873"/>
</kw>
<status status="PASS" starttime="20231030 16:47:28.868" endtime="20231030 16:47:28.875"/>
</branch>
<status status="PASS" starttime="20231030 16:47:28.868" endtime="20231030 16:47:28.875"/>
</if>
<msg timestamp="20231030 16:47:28.875" level="INFO">${text} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:28.770" endtime="20231030 16:47:28.875"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:28.875" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Xác nhận mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:28.875" endtime="20231030 16:47:28.875"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:28.875" endtime="20231030 16:47:28.980"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:28.981" endtime="20231030 16:47:29.017"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:29.019" level="INFO">Fills the text '#r)9BKn7BM' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:29.018" endtime="20231030 16:47:29.072"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:29.074" level="INFO">Length is 10</msg>
<msg timestamp="20231030 16:47:29.074" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231030 16:47:29.073" endtime="20231030 16:47:29.075"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:29.078" level="INFO">${STATE["Xác nhận mật khẩu"]} = #r)9BKn7BM</msg>
<status status="PASS" starttime="20231030 16:47:29.076" endtime="20231030 16:47:29.078"/>
</kw>
<status status="PASS" starttime="20231030 16:47:29.075" endtime="20231030 16:47:29.078"/>
</branch>
<status status="PASS" starttime="20231030 16:47:29.075" endtime="20231030 16:47:29.079"/>
</if>
<status status="PASS" starttime="20231030 16:47:28.770" endtime="20231030 16:47:29.079"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:29.185" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:29.081" endtime="20231030 16:47:29.186"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:29.194" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:29.186" endtime="20231030 16:47:29.194"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:29.196" endtime="20231030 16:47:29.328"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:29.336" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:29.336" endtime="20231030 16:47:29.336"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:29.336" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:29.336" endtime="20231030 16:47:29.336"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:29.351" endtime="20231030 16:47:29.352"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231030 16:47:29.353" endtime="20231030 16:47:29.353"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231030 16:47:29.353" endtime="20231030 16:47:29.353"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:29.336" endtime="20231030 16:47:29.353"/>
</branch>
<status status="PASS" starttime="20231030 16:47:29.336" endtime="20231030 16:47:29.353"/>
</if>
<status status="PASS" starttime="20231030 16:47:29.335" endtime="20231030 16:47:29.353"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231030 16:47:29.378" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:29.378" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:29.402" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:29.402" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:29.625" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231030 16:47:29.353" endtime="20231030 16:47:29.626"/>
</kw>
<status status="PASS" starttime="20231030 16:47:29.195" endtime="20231030 16:47:29.627"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:29.629" endtime="20231030 16:47:29.629"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231030 16:47:29.630" endtime="20231030 16:47:29.631"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231030 16:47:29.631" endtime="20231030 16:47:29.631"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:29.628" endtime="20231030 16:47:29.635"/>
</branch>
<status status="PASS" starttime="20231030 16:47:29.195" endtime="20231030 16:47:29.635"/>
</if>
<status status="PASS" starttime="20231030 16:47:29.080" endtime="20231030 16:47:29.636"/>
</kw>
<kw name="User look message &quot;Tạo tài khoản thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:29.640" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:29.638" endtime="20231030 16:47:29.640"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:29.641" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:29.641" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:29.641" endtime="20231030 16:47:29.641"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:29.641" endtime="20231030 16:47:29.641"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:29.641" endtime="20231030 16:47:29.641"/>
</branch>
<status status="PASS" starttime="20231030 16:47:29.641" endtime="20231030 16:47:29.641"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231030 16:47:30.378" level="INFO">Text: 'Tạo tài khoản thành công'</msg>
<status status="PASS" starttime="20231030 16:47:29.654" endtime="20231030 16:47:30.379"/>
</kw>
<status status="PASS" starttime="20231030 16:47:29.641" endtime="20231030 16:47:30.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:30.384" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231030 16:47:30.381" endtime="20231030 16:47:30.387"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 16:47:30.825" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231030 16:47:30.825" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231030 16:47:30.833" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231030 16:47:30.391" endtime="20231030 16:47:30.838"/>
</kw>
<status status="FAIL" starttime="20231030 16:47:30.389" endtime="20231030 16:47:30.839"/>
</kw>
<msg timestamp="20231030 16:47:30.839" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231030 16:47:30.387" endtime="20231030 16:47:30.840"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:30.842" endtime="20231030 16:47:30.843"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:30.841" endtime="20231030 16:47:30.843"/>
</branch>
<status status="PASS" starttime="20231030 16:47:30.840" endtime="20231030 16:47:30.844"/>
</if>
<status status="PASS" starttime="20231030 16:47:29.637" endtime="20231030 16:47:30.844"/>
</kw>
<msg timestamp="20231030 16:47:30.845" level="INFO">${AccountName} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:21.157" endtime="20231030 16:47:30.846"/>
</kw>
<kw name="Create a test account with &quot;Order Side&quot; type" sourcename="Create a test account with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Tài khoản khách hàng" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Tài khoản khách hàng&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:30.937" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:30.855" endtime="20231030 16:47:30.937"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231030 16:47:30.938" endtime="20231030 16:47:30.939"/>
</kw>
<status status="PASS" starttime="20231030 16:47:30.854" endtime="20231030 16:47:30.939"/>
</kw>
<msg timestamp="20231030 16:47:30.939" level="INFO">${condition} = True</msg>
<status status="PASS" starttime="20231030 16:47:30.853" endtime="20231030 16:47:30.939"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Click &quot;Tạo mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:31.039" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:30.939" endtime="20231030 16:47:31.039"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:31.051" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:31.039" endtime="20231030 16:47:31.052"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:31.054" endtime="20231030 16:47:31.330"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.334" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:31.332" endtime="20231030 16:47:31.336"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:31.348" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:31.336" endtime="20231030 16:47:31.349"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.352" endtime="20231030 16:47:31.352"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.352" endtime="20231030 16:47:31.353"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231030 16:47:31.353" endtime="20231030 16:47:31.353"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.351" endtime="20231030 16:47:31.354"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.350" endtime="20231030 16:47:31.354"/>
</if>
<status status="PASS" starttime="20231030 16:47:31.331" endtime="20231030 16:47:31.354"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231030 16:47:31.370" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:31.371" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:31.386" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:31.387" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:31.394" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231030 16:47:31.354" endtime="20231030 16:47:31.395"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.053" endtime="20231030 16:47:31.396"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.397" endtime="20231030 16:47:31.398"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231030 16:47:31.400" endtime="20231030 16:47:31.400"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.401" endtime="20231030 16:47:31.402"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.396" endtime="20231030 16:47:31.403"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.053" endtime="20231030 16:47:31.404"/>
</if>
<status status="PASS" starttime="20231030 16:47:30.939" endtime="20231030 16:47:31.405"/>
</kw>
<status status="PASS" starttime="20231030 16:47:30.939" endtime="20231030 16:47:31.406"/>
</branch>
<branch type="ELSE">
<kw name="Go to page create account &quot;Tài khoản Người dùng&quot; with &quot;/customer-account&quot;" sourcename="Go to page create account &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20231030 16:47:31.407" endtime="20231030 16:47:31.407"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.407" endtime="20231030 16:47:31.408"/>
</branch>
<status status="PASS" starttime="20231030 16:47:30.939" endtime="20231030 16:47:31.408"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Họ và tên&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.410" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:31.409" endtime="20231030 16:47:31.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.411" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:31.410" endtime="20231030 16:47:31.411"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:31.412" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:31.411" endtime="20231030 16:47:31.412"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.412" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:31.413" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:31.412" endtime="20231030 16:47:31.413"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:31.413" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:31.413" endtime="20231030 16:47:31.414"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.415" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:31.417" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:31.414" endtime="20231030 16:47:31.419"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.423" endtime="20231030 16:47:31.423"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.423" endtime="20231030 16:47:31.423"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.421" endtime="20231030 16:47:31.423"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231030 16:47:31.423" level="INFO">${random} = Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.423" endtime="20231030 16:47:31.423"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231030 16:47:31.427" level="INFO">${words} = ['CA_11', 'Check', 'the', 'update', 'of', 'account', 'list', 'after', 'cancel', 'the', 'search', 'action']</msg>
<status status="PASS" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.427" level="INFO">${new_text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.427"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.423" endtime="20231030 16:47:31.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.427"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.427"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.434"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.435" endtime="20231030 16:47:31.436"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.427" endtime="20231030 16:47:31.436"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.437" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.436" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.451"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.438" endtime="20231030 16:47:31.451"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.421" endtime="20231030 16:47:31.451"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.451" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:31.451" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.451"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:31.451" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.451"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.451"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.451"/>
</if>
<msg timestamp="20231030 16:47:31.451" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.409" endtime="20231030 16:47:31.451"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:31.451" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Họ và tên"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.451"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:31.451" endtime="20231030 16:47:31.854"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:31.855" endtime="20231030 16:47:31.891"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:31.891" level="INFO">Fills the text 'CA_11 Repellat voluptatem.' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:31.891" endtime="20231030 16:47:31.936"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.937" level="INFO">Length is 26</msg>
<msg timestamp="20231030 16:47:31.938" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20231030 16:47:31.936" endtime="20231030 16:47:31.938"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:31.941" level="INFO">${STATE["Họ và tên"]} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.941" endtime="20231030 16:47:31.941"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.939" endtime="20231030 16:47:31.941"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.939" endtime="20231030 16:47:31.941"/>
</if>
<status status="PASS" starttime="20231030 16:47:31.408" endtime="20231030 16:47:31.941"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Họ và tên@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:31.941" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231030 16:47:31.941" endtime="20231030 16:47:31.941"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.947" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:31.947" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:31.941" endtime="20231030 16:47:31.947"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.951" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.947" endtime="20231030 16:47:31.952"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.947" endtime="20231030 16:47:31.952"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.947" endtime="20231030 16:47:31.952"/>
</if>
<msg timestamp="20231030 16:47:31.953" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.941" endtime="20231030 16:47:31.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">${name} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:31.954" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.954" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:31.954" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.954"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.969" endtime="20231030 16:47:31.971"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.968" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<msg timestamp="20231030 16:47:31.971" level="INFO">${new_text} = akarshram@example.com</msg>
<status status="PASS" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.971" endtime="20231030 16:47:31.971"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.986" endtime="20231030 16:47:31.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.985" endtime="20231030 16:47:31.987"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.988" endtime="20231030 16:47:31.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:31.989"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:31.989" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:31.989" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:31.989" level="INFO">${text} = akarshram@example.com</msg>
<status status="PASS" starttime="20231030 16:47:31.989" endtime="20231030 16:47:31.989"/>
</kw>
<status status="PASS" starttime="20231030 16:47:31.989" endtime="20231030 16:47:32.000"/>
</branch>
<status status="PASS" starttime="20231030 16:47:31.989" endtime="20231030 16:47:32.001"/>
</if>
<msg timestamp="20231030 16:47:32.001" level="INFO">${text} = akarshram@example.com</msg>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:32.002"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:32.004" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:32.003" endtime="20231030 16:47:32.004"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:32.004" endtime="20231030 16:47:32.106"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:32.106" endtime="20231030 16:47:32.151"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:32.151" level="INFO">Fills the text 'akarshram@example.com' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:32.151" endtime="20231030 16:47:32.219"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.234" level="INFO">Length is 21</msg>
<msg timestamp="20231030 16:47:32.235" level="INFO">${cnt} = 21</msg>
<status status="PASS" starttime="20231030 16:47:32.233" endtime="20231030 16:47:32.235"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:32.235" level="INFO">${STATE["Email"]} = akarshram@example.com</msg>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.235"/>
</kw>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.235"/>
</branch>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.235"/>
</if>
<status status="PASS" starttime="20231030 16:47:31.954" endtime="20231030 16:47:32.235"/>
</kw>
<kw name="Enter &quot;phone&quot; in &quot;Số điện thoại&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:32.235" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.235"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:32.249" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.250"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:32.252" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:32.251" endtime="20231030 16:47:32.253"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.254" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:32.255" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:32.253" endtime="20231030 16:47:32.255"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:32.257" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:32.256" endtime="20231030 16:47:32.258"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.258" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:32.258" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:32.258" endtime="20231030 16:47:32.258"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.258" endtime="20231030 16:47:32.258"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.258" endtime="20231030 16:47:32.258"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.258" endtime="20231030 16:47:32.258"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.266" endtime="20231030 16:47:32.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.267"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.283" endtime="20231030 16:47:32.284"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.267" endtime="20231030 16:47:32.285"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:32.286" endtime="20231030 16:47:32.287"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.285" endtime="20231030 16:47:32.287"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231030 16:47:32.290" level="INFO">${new_text} = 2038800138</msg>
<status status="PASS" starttime="20231030 16:47:32.289" endtime="20231030 16:47:32.290"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231030 16:47:32.292" level="INFO">${new_text} = 2038800138</msg>
<status status="PASS" starttime="20231030 16:47:32.291" endtime="20231030 16:47:32.293"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231030 16:47:32.295" level="INFO">${new_text} = 02038800138</msg>
<status status="PASS" starttime="20231030 16:47:32.293" endtime="20231030 16:47:32.295"/>
</kw>
<status status="PASS" starttime="20231030 16:47:32.288" endtime="20231030 16:47:32.295"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.295" endtime="20231030 16:47:32.300"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.295" endtime="20231030 16:47:32.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</branch>
<status status="PASS" starttime="20231030 16:47:32.258" endtime="20231030 16:47:32.301"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.301" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:32.301" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:32.301" level="INFO">${text} = 02038800138</msg>
<status status="PASS" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<status status="PASS" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</branch>
<status status="PASS" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</if>
<msg timestamp="20231030 16:47:32.301" level="INFO">${text} = 02038800138</msg>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.301"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:32.301" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Số điện thoại"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.301"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:32.301" endtime="20231030 16:47:32.489"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:32.489" endtime="20231030 16:47:32.544"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:32.546" level="INFO">Fills the text '02038800138' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:32.545" endtime="20231030 16:47:32.601"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.603" level="INFO">Length is 11</msg>
<msg timestamp="20231030 16:47:32.603" level="INFO">${cnt} = 11</msg>
<status status="PASS" starttime="20231030 16:47:32.602" endtime="20231030 16:47:32.604"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:32.605" level="INFO">${STATE["Số điện thoại"]} = 02038800138</msg>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:32.605"/>
</kw>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:32.605"/>
</branch>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:32.605"/>
</if>
<status status="PASS" starttime="20231030 16:47:32.235" endtime="20231030 16:47:32.605"/>
</kw>
<kw name="Click select &quot;Giới tính&quot; with &quot;Nam&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:32.605" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:32.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:32.605" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:32.617"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:32.619" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:32.618" endtime="20231030 16:47:32.619"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.622" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:32.622" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:32.620" endtime="20231030 16:47:32.622"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:32.622" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.622"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.622" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:32.622" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.622"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.622"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.622"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.634" endtime="20231030 16:47:32.635"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.635" endtime="20231030 16:47:32.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.639"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.639"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.639"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.639"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.639"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.639"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.639"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.639" endtime="20231030 16:47:32.650"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.652" endtime="20231030 16:47:32.653"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.651" endtime="20231030 16:47:32.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:32.654" endtime="20231030 16:47:32.654"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.654" endtime="20231030 16:47:32.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.654" endtime="20231030 16:47:32.654"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.654" endtime="20231030 16:47:32.654"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.654" endtime="20231030 16:47:32.654"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.654" endtime="20231030 16:47:32.654"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.669" endtime="20231030 16:47:32.669"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.667" endtime="20231030 16:47:32.670"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.672" endtime="20231030 16:47:32.672"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.671" endtime="20231030 16:47:32.672"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.672" endtime="20231030 16:47:32.674"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.672" endtime="20231030 16:47:32.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</branch>
<status status="PASS" starttime="20231030 16:47:32.622" endtime="20231030 16:47:32.674"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:32.674" level="INFO">Length is 3</msg>
<msg timestamp="20231030 16:47:32.674" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:32.674" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</kw>
<status status="PASS" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</branch>
<status status="PASS" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</if>
<msg timestamp="20231030 16:47:32.674" level="INFO">${text} = Nam</msg>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:32.674"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231030 16:47:32.674" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.674"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:32.674" endtime="20231030 16:47:32.838"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231030 16:47:32.838" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Giới tính"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231030 16:47:32.838" endtime="20231030 16:47:32.838"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:32.838" level="INFO">Fills the text 'Nam' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:32.838" endtime="20231030 16:47:32.939"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:32.940" endtime="20231030 16:47:33.111"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.112" level="INFO">Length is 3</msg>
<msg timestamp="20231030 16:47:33.112" level="INFO">${cnt} = 3</msg>
<status status="PASS" starttime="20231030 16:47:33.112" endtime="20231030 16:47:33.113"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:33.114" level="INFO">${STATE["Giới tính"]} = Nam</msg>
<status status="PASS" starttime="20231030 16:47:33.113" endtime="20231030 16:47:33.114"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.113" endtime="20231030 16:47:33.114"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.113" endtime="20231030 16:47:33.115"/>
</if>
<status status="PASS" starttime="20231030 16:47:32.605" endtime="20231030 16:47:33.115"/>
</kw>
<kw name="Click select &quot;Loại tài khoản&quot; with &quot;${type}&quot;" library="common" sourcename="Click select &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>Text</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.119" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:33.119" endtime="20231030 16:47:33.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.119" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:33.119" endtime="20231030 16:47:33.119"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:33.119" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:33.119" endtime="20231030 16:47:33.119"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.126" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:33.126" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:33.126" endtime="20231030 16:47:33.126"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:33.126" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:33.126" endtime="20231030 16:47:33.126"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.126" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:33.126" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:33.126" endtime="20231030 16:47:33.126"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.126" endtime="20231030 16:47:33.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.134" endtime="20231030 16:47:33.135"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.126" endtime="20231030 16:47:33.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.135"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.135" endtime="20231030 16:47:33.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.126" endtime="20231030 16:47:33.151"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.151" level="INFO">Length is 10</msg>
<msg timestamp="20231030 16:47:33.151" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:33.151" level="INFO">${text} = Order Side</msg>
<status status="PASS" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.151" endtime="20231030 16:47:33.151"/>
</if>
<msg timestamp="20231030 16:47:33.168" level="INFO">${text} = Order Side</msg>
<status status="PASS" starttime="20231030 16:47:33.119" endtime="20231030 16:47:33.168"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-show-arrow")]</arg>
<msg timestamp="20231030 16:47:33.174" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-show-arrow")]</msg>
<status status="PASS" starttime="20231030 16:47:33.172" endtime="20231030 16:47:33.174"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:33.175" endtime="20231030 16:47:33.339"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-select-selection-search-input")]</arg>
<msg timestamp="20231030 16:47:33.339" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Loại tài khoản"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-select-selection-search-input")]</msg>
<status status="PASS" starttime="20231030 16:47:33.339" endtime="20231030 16:47:33.339"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:33.339" level="INFO">Fills the text 'Order Side' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:33.339" endtime="20231030 16:47:33.419"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "ant-select-item-option") and @title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:33.420" endtime="20231030 16:47:33.606"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.606" level="INFO">Length is 10</msg>
<msg timestamp="20231030 16:47:33.606" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.606"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:33.606" level="INFO">${STATE["Loại tài khoản"]} = Order Side</msg>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.606"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.606"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.606"/>
</if>
<status status="PASS" starttime="20231030 16:47:33.118" endtime="20231030 16:47:33.606"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.606" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.617" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:33.616" endtime="20231030 16:47:33.618"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:33.619" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:33.619" endtime="20231030 16:47:33.619"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.619" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:33.619" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:33.619" endtime="20231030 16:47:33.619"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:33.619" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231030 16:47:33.619" endtime="20231030 16:47:33.619"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.619" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:33.619" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:33.619" endtime="20231030 16:47:33.619"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.627"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.627"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.627"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.627"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.633"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.634"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.635"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<msg timestamp="20231030 16:47:33.651" level="INFO">${new_text} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.651"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.635" endtime="20231030 16:47:33.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.627" endtime="20231030 16:47:33.651"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.651" level="INFO">Length is 8</msg>
<msg timestamp="20231030 16:47:33.651" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:33.651" level="INFO">${text} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</if>
<msg timestamp="20231030 16:47:33.651" level="INFO">${text} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.651"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:33.651" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.651"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:33.651" endtime="20231030 16:47:33.770"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:33.784" endtime="20231030 16:47:33.829"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:33.830" level="INFO">Fills the text '7NQk!Lda$e' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:33.830" endtime="20231030 16:47:33.888"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.890" level="INFO">Length is 10</msg>
<msg timestamp="20231030 16:47:33.890" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231030 16:47:33.888" endtime="20231030 16:47:33.890"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:33.890" level="INFO">${STATE["Mật khẩu"]} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.890" endtime="20231030 16:47:33.890"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.890" endtime="20231030 16:47:33.890"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.890" endtime="20231030 16:47:33.890"/>
</if>
<status status="PASS" starttime="20231030 16:47:33.606" endtime="20231030 16:47:33.890"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Xác nhận mật khẩu&quot; with &quot;_@Mật khẩu@_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.902" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:33.902" endtime="20231030 16:47:33.902"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.902" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:33.902" endtime="20231030 16:47:33.902"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:33.902" level="INFO">${containsS} = ['Mật khẩu']</msg>
<status status="PASS" starttime="20231030 16:47:33.902" endtime="20231030 16:47:33.902"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.909" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:33.909" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:33.902" endtime="20231030 16:47:33.909"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:33.911" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:33.909" endtime="20231030 16:47:33.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.911" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:33.911" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:33.911" endtime="20231030 16:47:33.911"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.921" level="INFO">${new_text} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.917" endtime="20231030 16:47:33.921"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:33.921" level="INFO">${symbol} = _@Mật khẩu@_</msg>
<status status="PASS" starttime="20231030 16:47:33.921" endtime="20231030 16:47:33.921"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.911" endtime="20231030 16:47:33.921"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.921" endtime="20231030 16:47:33.921"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.929" endtime="20231030 16:47:33.929"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.929" endtime="20231030 16:47:33.931"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.921" endtime="20231030 16:47:33.931"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.934" endtime="20231030 16:47:33.934"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.934" endtime="20231030 16:47:33.934"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.934" endtime="20231030 16:47:33.939"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.939" endtime="20231030 16:47:33.939"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.941" endtime="20231030 16:47:33.941"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.939" endtime="20231030 16:47:33.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.941" endtime="20231030 16:47:33.941"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.941" endtime="20231030 16:47:33.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:33.941" endtime="20231030 16:47:33.941"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.941" endtime="20231030 16:47:33.941"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.951" endtime="20231030 16:47:33.951"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.951" endtime="20231030 16:47:33.951"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.951" endtime="20231030 16:47:33.951"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.941" endtime="20231030 16:47:33.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.951" endtime="20231030 16:47:33.951"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.951" endtime="20231030 16:47:33.951"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.959" endtime="20231030 16:47:33.959"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.951" endtime="20231030 16:47:33.959"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.961" endtime="20231030 16:47:33.961"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.961" endtime="20231030 16:47:33.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.961" endtime="20231030 16:47:33.967"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.961" endtime="20231030 16:47:33.969"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:33.971" endtime="20231030 16:47:33.971"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:33.971" endtime="20231030 16:47:33.971"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.911" endtime="20231030 16:47:33.971"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:33.971" level="INFO">Length is 12</msg>
<msg timestamp="20231030 16:47:33.971" level="INFO">${cnt} = 12</msg>
<status status="PASS" starttime="20231030 16:47:33.971" endtime="20231030 16:47:33.971"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:33.979" level="INFO">${text} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.971" endtime="20231030 16:47:33.979"/>
</kw>
<status status="PASS" starttime="20231030 16:47:33.971" endtime="20231030 16:47:33.979"/>
</branch>
<status status="PASS" starttime="20231030 16:47:33.971" endtime="20231030 16:47:33.979"/>
</if>
<msg timestamp="20231030 16:47:33.981" level="INFO">${text} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:33.900" endtime="20231030 16:47:33.983"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:33.984" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Xác nhận mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:33.984" endtime="20231030 16:47:33.984"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:33.984" endtime="20231030 16:47:34.084"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:34.085" endtime="20231030 16:47:34.123"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:34.123" level="INFO">Fills the text '7NQk!Lda$e' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:34.123" endtime="20231030 16:47:34.185"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:34.186" level="INFO">Length is 10</msg>
<msg timestamp="20231030 16:47:34.187" level="INFO">${cnt} = 10</msg>
<status status="PASS" starttime="20231030 16:47:34.185" endtime="20231030 16:47:34.187"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:34.191" level="INFO">${STATE["Xác nhận mật khẩu"]} = 7NQk!Lda$e</msg>
<status status="PASS" starttime="20231030 16:47:34.189" endtime="20231030 16:47:34.192"/>
</kw>
<status status="PASS" starttime="20231030 16:47:34.188" endtime="20231030 16:47:34.192"/>
</branch>
<status status="PASS" starttime="20231030 16:47:34.188" endtime="20231030 16:47:34.193"/>
</if>
<status status="PASS" starttime="20231030 16:47:33.898" endtime="20231030 16:47:34.193"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:34.297" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:34.196" endtime="20231030 16:47:34.297"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:34.312" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:34.299" endtime="20231030 16:47:34.312"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:34.316" endtime="20231030 16:47:34.456"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:34.456" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:34.456" endtime="20231030 16:47:34.456"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:34.468" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:34.456" endtime="20231030 16:47:34.468"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:34.468" endtime="20231030 16:47:34.468"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231030 16:47:34.468" endtime="20231030 16:47:34.468"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231030 16:47:34.482" endtime="20231030 16:47:34.483"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:34.468" endtime="20231030 16:47:34.483"/>
</branch>
<status status="PASS" starttime="20231030 16:47:34.468" endtime="20231030 16:47:34.484"/>
</if>
<status status="PASS" starttime="20231030 16:47:34.456" endtime="20231030 16:47:34.484"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231030 16:47:34.509" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:34.510" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:34.526" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:34.527" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231030 16:47:34.697" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231030 16:47:34.485" endtime="20231030 16:47:34.697"/>
</kw>
<status status="PASS" starttime="20231030 16:47:34.312" endtime="20231030 16:47:34.700"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:34.702" endtime="20231030 16:47:34.703"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231030 16:47:34.703" endtime="20231030 16:47:34.704"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231030 16:47:34.705" endtime="20231030 16:47:34.705"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:34.701" endtime="20231030 16:47:34.706"/>
</branch>
<status status="PASS" starttime="20231030 16:47:34.312" endtime="20231030 16:47:34.706"/>
</if>
<status status="PASS" starttime="20231030 16:47:34.194" endtime="20231030 16:47:34.707"/>
</kw>
<kw name="User look message &quot;Tạo tài khoản thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:34.709" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:34.708" endtime="20231030 16:47:34.710"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:34.712" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:34.712" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:34.710" endtime="20231030 16:47:34.713"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:34.717" endtime="20231030 16:47:34.717"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:34.713" endtime="20231030 16:47:34.718"/>
</branch>
<status status="PASS" starttime="20231030 16:47:34.713" endtime="20231030 16:47:34.719"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231030 16:47:35.234" level="INFO">Text: 'Tạo tài khoản thành công'</msg>
<status status="PASS" starttime="20231030 16:47:34.723" endtime="20231030 16:47:35.236"/>
</kw>
<status status="PASS" starttime="20231030 16:47:34.719" endtime="20231030 16:47:35.237"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:35.239" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231030 16:47:35.238" endtime="20231030 16:47:35.239"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 16:47:35.578" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231030 16:47:35.582" level="INFO">See also file:///D:/Intern%20test/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231030 16:47:35.583" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231030 16:47:35.242" endtime="20231030 16:47:35.590"/>
</kw>
<status status="FAIL" starttime="20231030 16:47:35.241" endtime="20231030 16:47:35.590"/>
</kw>
<msg timestamp="20231030 16:47:35.591" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231030 16:47:35.240" endtime="20231030 16:47:35.592"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.593" endtime="20231030 16:47:35.594"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.592" endtime="20231030 16:47:35.594"/>
</branch>
<status status="PASS" starttime="20231030 16:47:35.592" endtime="20231030 16:47:35.594"/>
</if>
<status status="PASS" starttime="20231030 16:47:34.707" endtime="20231030 16:47:35.595"/>
</kw>
<status status="PASS" starttime="20231030 16:47:30.851" endtime="20231030 16:47:35.595"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;${AccountName}&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:35.604" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:35.603" endtime="20231030 16:47:35.605"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:35.606" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:35.605" endtime="20231030 16:47:35.606"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:35.608" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:35.607" endtime="20231030 16:47:35.609"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:35.610" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:35.611" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:35.609" endtime="20231030 16:47:35.611"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:35.612" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:35.611" endtime="20231030 16:47:35.613"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:35.614" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:35.614" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:35.613" endtime="20231030 16:47:35.615"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.617" endtime="20231030 16:47:35.618"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.619" endtime="20231030 16:47:35.619"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.616" endtime="20231030 16:47:35.620"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.621" endtime="20231030 16:47:35.621"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.622" endtime="20231030 16:47:35.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.623" endtime="20231030 16:47:35.623"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.620" endtime="20231030 16:47:35.624"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.625" endtime="20231030 16:47:35.625"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.626" endtime="20231030 16:47:35.626"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.624" endtime="20231030 16:47:35.627"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.628" endtime="20231030 16:47:35.629"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.630" endtime="20231030 16:47:35.632"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.627" endtime="20231030 16:47:35.633"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.635" endtime="20231030 16:47:35.636"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.634" endtime="20231030 16:47:35.636"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:35.637" endtime="20231030 16:47:35.638"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.636" endtime="20231030 16:47:35.638"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.640" endtime="20231030 16:47:35.641"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.642" endtime="20231030 16:47:35.643"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.643" endtime="20231030 16:47:35.644"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.639" endtime="20231030 16:47:35.645"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.646" endtime="20231030 16:47:35.646"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.645" endtime="20231030 16:47:35.646"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.651" endtime="20231030 16:47:35.652"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.650" endtime="20231030 16:47:35.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.654" endtime="20231030 16:47:35.655"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.653" endtime="20231030 16:47:35.655"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.657" endtime="20231030 16:47:35.657"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.656" endtime="20231030 16:47:35.657"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:35.658" endtime="20231030 16:47:35.658"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:35.657" endtime="20231030 16:47:35.658"/>
</branch>
<status status="PASS" starttime="20231030 16:47:35.616" endtime="20231030 16:47:35.659"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:35.660" level="INFO">Length is 35</msg>
<msg timestamp="20231030 16:47:35.660" level="INFO">${cnt} = 35</msg>
<status status="PASS" starttime="20231030 16:47:35.659" endtime="20231030 16:47:35.660"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231030 16:47:35.662" level="INFO">${text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:35.661" endtime="20231030 16:47:35.662"/>
</kw>
<status status="PASS" starttime="20231030 16:47:35.660" endtime="20231030 16:47:35.662"/>
</branch>
<status status="PASS" starttime="20231030 16:47:35.660" endtime="20231030 16:47:35.662"/>
</if>
<msg timestamp="20231030 16:47:35.662" level="INFO">${text} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:35.602" endtime="20231030 16:47:35.662"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:35.662" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:35.662" endtime="20231030 16:47:35.662"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:35.662" endtime="20231030 16:47:36.309"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:36.309" endtime="20231030 16:47:36.343"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:36.343" level="INFO">Fills the text 'CA_11 Vero consectetur soluta amet.' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:36.343" endtime="20231030 16:47:36.390"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:36.390" level="INFO">Length is 35</msg>
<msg timestamp="20231030 16:47:36.390" level="INFO">${cnt} = 35</msg>
<status status="PASS" starttime="20231030 16:47:36.390" endtime="20231030 16:47:36.390"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231030 16:47:36.390" level="INFO">${STATE["Tìm kiếm"]} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:36.390" endtime="20231030 16:47:36.390"/>
</kw>
<status status="PASS" starttime="20231030 16:47:36.390" endtime="20231030 16:47:36.390"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.390" endtime="20231030 16:47:36.390"/>
</if>
<status status="PASS" starttime="20231030 16:47:35.600" endtime="20231030 16:47:36.390"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:36.390" endtime="20231030 16:47:36.604"/>
</kw>
<status status="PASS" starttime="20231030 16:47:36.390" endtime="20231030 16:47:36.604"/>
</kw>
<kw name="Then &quot;${AccountName}&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:36.704" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:36.604" endtime="20231030 16:47:36.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.705" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:36.704" endtime="20231030 16:47:36.705"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:36.713" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.705" endtime="20231030 16:47:36.713"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:36.717" endtime="20231030 16:47:36.718"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.716" endtime="20231030 16:47:36.718"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.715" endtime="20231030 16:47:36.719"/>
</if>
<status status="PASS" starttime="20231030 16:47:36.604" endtime="20231030 16:47:36.720"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:36.723" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:36.722" endtime="20231030 16:47:36.723"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:36.724" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:36.724" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.723" endtime="20231030 16:47:36.724"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.725" endtime="20231030 16:47:36.725"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.724" endtime="20231030 16:47:36.725"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.724" endtime="20231030 16:47:36.725"/>
</if>
<msg timestamp="20231030 16:47:36.726" level="INFO">${name} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:36.720" endtime="20231030 16:47:36.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.727" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_11 Vero consectetur soluta amet.")]</msg>
<status status="PASS" starttime="20231030 16:47:36.726" endtime="20231030 16:47:36.727"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:36.737" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:36.727" endtime="20231030 16:47:36.738"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231030 16:47:36.738" endtime="20231030 16:47:36.740"/>
</kw>
<status status="PASS" starttime="20231030 16:47:36.604" endtime="20231030 16:47:36.741"/>
</kw>
<kw name="Then &quot;_@Họ và tên@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:36.847" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:36.747" endtime="20231030 16:47:36.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.851" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:36.847" endtime="20231030 16:47:36.853"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:36.862" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.853" endtime="20231030 16:47:36.862"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:36.864" endtime="20231030 16:47:36.866"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.863" endtime="20231030 16:47:36.867"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.863" endtime="20231030 16:47:36.868"/>
</if>
<status status="PASS" starttime="20231030 16:47:36.745" endtime="20231030 16:47:36.869"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:36.872" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231030 16:47:36.871" endtime="20231030 16:47:36.872"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:36.874" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:36.874" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:36.873" endtime="20231030 16:47:36.874"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.876" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:36.875" endtime="20231030 16:47:36.876"/>
</kw>
<status status="PASS" starttime="20231030 16:47:36.874" endtime="20231030 16:47:36.876"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.874" endtime="20231030 16:47:36.877"/>
</if>
<msg timestamp="20231030 16:47:36.877" level="INFO">${name} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:36.869" endtime="20231030 16:47:36.877"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.878" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_11 Repellat voluptatem.")]</msg>
<status status="PASS" starttime="20231030 16:47:36.877" endtime="20231030 16:47:36.879"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:36.891" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.879" endtime="20231030 16:47:36.892"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &lt; 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231030 16:47:36.893" endtime="20231030 16:47:36.894"/>
</kw>
<status status="PASS" starttime="20231030 16:47:36.744" endtime="20231030 16:47:36.894"/>
</kw>
<kw name="When Enter &quot;text&quot; in &quot;Tìm kiếm&quot; with &quot;&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.919" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231030 16:47:36.918" endtime="20231030 16:47:36.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:36.921" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231030 16:47:36.921" endtime="20231030 16:47:36.922"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:36.924" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:36.922" endtime="20231030 16:47:36.924"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:36.926" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:36.927" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.925" endtime="20231030 16:47:36.927"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:36.929" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231030 16:47:36.928" endtime="20231030 16:47:36.930"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:36.934" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:36.934" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.931" endtime="20231030 16:47:36.935"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.937" endtime="20231030 16:47:36.937"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.938" endtime="20231030 16:47:36.939"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.935" endtime="20231030 16:47:36.939"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.941" endtime="20231030 16:47:36.942"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.943" endtime="20231030 16:47:36.943"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.944" endtime="20231030 16:47:36.945"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.940" endtime="20231030 16:47:36.945"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.948" endtime="20231030 16:47:36.949"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.950" endtime="20231030 16:47:36.951"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.946" endtime="20231030 16:47:36.952"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.955" endtime="20231030 16:47:36.957"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.958" endtime="20231030 16:47:36.960"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.952" endtime="20231030 16:47:36.961"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.963" endtime="20231030 16:47:36.964"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.962" endtime="20231030 16:47:36.966"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231030 16:47:36.968" endtime="20231030 16:47:36.968"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.967" endtime="20231030 16:47:36.968"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.970" endtime="20231030 16:47:36.970"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.971" endtime="20231030 16:47:36.972"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.972" endtime="20231030 16:47:36.973"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.969" endtime="20231030 16:47:36.973"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.975" endtime="20231030 16:47:36.975"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.974" endtime="20231030 16:47:36.975"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.977" endtime="20231030 16:47:36.977"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.976" endtime="20231030 16:47:36.978"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.979" endtime="20231030 16:47:36.980"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.978" endtime="20231030 16:47:36.980"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.982" endtime="20231030 16:47:36.983"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.981" endtime="20231030 16:47:36.983"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231030 16:47:36.984" endtime="20231030 16:47:36.985"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.984" endtime="20231030 16:47:36.986"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.935" endtime="20231030 16:47:36.986"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:36.987" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:36.988" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:36.987" endtime="20231030 16:47:36.988"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:37.000" endtime="20231030 16:47:37.001"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:36.989" endtime="20231030 16:47:37.014"/>
</branch>
<status status="PASS" starttime="20231030 16:47:36.988" endtime="20231030 16:47:37.015"/>
</if>
<msg timestamp="20231030 16:47:37.016" level="INFO">${text} = </msg>
<status status="PASS" starttime="20231030 16:47:36.916" endtime="20231030 16:47:37.016"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231030 16:47:37.018" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tìm kiếm"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231030 16:47:37.017" endtime="20231030 16:47:37.018"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:37.019" endtime="20231030 16:47:37.112"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:37.113" endtime="20231030 16:47:37.214"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 16:47:37.217" level="INFO">Fills the text '' in the given field.</msg>
<status status="PASS" starttime="20231030 16:47:37.215" endtime="20231030 16:47:37.292"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:37.292" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:37.292" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231030 16:47:37.292" endtime="20231030 16:47:37.292"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231030 16:47:37.292" endtime="20231030 16:47:37.292"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:37.292" endtime="20231030 16:47:37.292"/>
</branch>
<status status="PASS" starttime="20231030 16:47:37.292" endtime="20231030 16:47:37.300"/>
</if>
<status status="PASS" starttime="20231030 16:47:36.913" endtime="20231030 16:47:37.300"/>
</kw>
<kw name="When Click on magnifier icon in search box" library="common">
<kw name="Click" library="Browser">
<arg>xpath=//*[contains(@class, "text-lg las la-search")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:37.304" endtime="20231030 16:47:37.436"/>
</kw>
<status status="PASS" starttime="20231030 16:47:37.304" endtime="20231030 16:47:37.436"/>
</kw>
<kw name="Then &quot;_@Họ và tên@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:37.553" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:37.452" endtime="20231030 16:47:37.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:37.554" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:37.554" endtime="20231030 16:47:37.554"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:37.671" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:37.555" endtime="20231030 16:47:37.672"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:37.673" endtime="20231030 16:47:37.674"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:37.673" endtime="20231030 16:47:37.675"/>
</branch>
<status status="PASS" starttime="20231030 16:47:37.672" endtime="20231030 16:47:37.675"/>
</if>
<status status="PASS" starttime="20231030 16:47:37.452" endtime="20231030 16:47:37.675"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:37.675" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231030 16:47:37.675" endtime="20231030 16:47:37.675"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:37.675" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:37.675" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:37.675" endtime="20231030 16:47:37.675"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:37.686" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:37.675" endtime="20231030 16:47:37.686"/>
</kw>
<status status="PASS" starttime="20231030 16:47:37.675" endtime="20231030 16:47:37.687"/>
</branch>
<status status="PASS" starttime="20231030 16:47:37.675" endtime="20231030 16:47:37.688"/>
</if>
<msg timestamp="20231030 16:47:37.688" level="INFO">${name} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:37.675" endtime="20231030 16:47:37.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:37.688" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CA_11 Repellat voluptatem.")]</msg>
<status status="PASS" starttime="20231030 16:47:37.688" endtime="20231030 16:47:37.688"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:37.701" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231030 16:47:37.688" endtime="20231030 16:47:37.701"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231030 16:47:37.702" endtime="20231030 16:47:37.703"/>
</kw>
<status status="PASS" starttime="20231030 16:47:37.452" endtime="20231030 16:47:37.704"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Họ và tên@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:37.805" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:37.704" endtime="20231030 16:47:37.805"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:37.906" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:37.806" endtime="20231030 16:47:37.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:37.906" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.906"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:37.906" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.906"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.906"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.906"/>
</branch>
<status status="PASS" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.906"/>
</if>
<status status="PASS" starttime="20231030 16:47:37.806" endtime="20231030 16:47:37.906"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:37.921" level="INFO">${containsS} = ['Họ và tên']</msg>
<status status="PASS" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.921"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:37.921" level="INFO">Length is 1</msg>
<msg timestamp="20231030 16:47:37.921" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:37.921" level="INFO">${text} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<status status="PASS" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</branch>
<status status="PASS" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</if>
<msg timestamp="20231030 16:47:37.921" level="INFO">${name} = CA_11 Repellat voluptatem.</msg>
<status status="PASS" starttime="20231030 16:47:37.906" endtime="20231030 16:47:37.921"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.921"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.932"/>
</branch>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.933"/>
</if>
<status status="NOT RUN" starttime="20231030 16:47:37.921" endtime="20231030 16:47:37.933"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231030 16:47:37.934" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CA_11 Repellat voluptatem.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231030 16:47:37.934" endtime="20231030 16:47:37.934"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:37.934" endtime="20231030 16:47:38.053"/>
</kw>
<status status="PASS" starttime="20231030 16:47:37.933" endtime="20231030 16:47:38.053"/>
</branch>
<status status="PASS" starttime="20231030 16:47:37.921" endtime="20231030 16:47:38.066"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:38.069" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:38.068" endtime="20231030 16:47:38.070"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:38.081" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231030 16:47:38.070" endtime="20231030 16:47:38.081"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:38.081" endtime="20231030 16:47:38.362"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:38.462" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:38.362" endtime="20231030 16:47:38.462"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:38.563" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:38.462" endtime="20231030 16:47:38.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:38.569" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:38.563" endtime="20231030 16:47:38.570"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:38.736" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:38.572" endtime="20231030 16:47:38.736"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:38.736" endtime="20231030 16:47:38.736"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:38.736" endtime="20231030 16:47:38.736"/>
</branch>
<status status="PASS" starttime="20231030 16:47:38.736" endtime="20231030 16:47:38.736"/>
</if>
<status status="PASS" starttime="20231030 16:47:38.462" endtime="20231030 16:47:38.736"/>
</kw>
<status status="PASS" starttime="20231030 16:47:38.081" endtime="20231030 16:47:38.736"/>
</branch>
<status status="PASS" starttime="20231030 16:47:38.081" endtime="20231030 16:47:38.736"/>
</if>
<status status="PASS" starttime="20231030 16:47:38.067" endtime="20231030 16:47:38.736"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231030 16:47:38.736" endtime="20231030 16:47:38.754"/>
</kw>
<status status="PASS" starttime="20231030 16:47:37.704" endtime="20231030 16:47:38.754"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;${AccountName}&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:38.857" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:38.754" endtime="20231030 16:47:38.857"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:38.958" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:38.857" endtime="20231030 16:47:38.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:38.958" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:38.958" endtime="20231030 16:47:38.958"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:38.958" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:38.958" endtime="20231030 16:47:38.958"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:38.958" endtime="20231030 16:47:38.958"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:38.958" endtime="20231030 16:47:38.958"/>
</branch>
<status status="PASS" starttime="20231030 16:47:38.958" endtime="20231030 16:47:38.958"/>
</if>
<status status="PASS" starttime="20231030 16:47:38.857" endtime="20231030 16:47:38.958"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231030 16:47:38.974" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 16:47:38.974" level="INFO">Length is 0</msg>
<msg timestamp="20231030 16:47:38.974" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</branch>
<status status="PASS" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</if>
<msg timestamp="20231030 16:47:38.974" level="INFO">${name} = CA_11 Vero consectetur soluta amet.</msg>
<status status="PASS" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.974"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:38.983" endtime="20231030 16:47:38.984"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:38.986" endtime="20231030 16:47:38.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:38.985" endtime="20231030 16:47:38.986"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231030 16:47:38.986" endtime="20231030 16:47:38.986"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 16:47:38.986" endtime="20231030 16:47:38.986"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:38.986" endtime="20231030 16:47:38.986"/>
</branch>
<status status="NOT RUN" starttime="20231030 16:47:38.985" endtime="20231030 16:47:38.986"/>
</if>
<status status="NOT RUN" starttime="20231030 16:47:38.974" endtime="20231030 16:47:38.986"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231030 16:47:38.986" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CA_11 Vero consectetur soluta amet.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231030 16:47:38.986" endtime="20231030 16:47:38.986"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:38.986" endtime="20231030 16:47:40.591"/>
</kw>
<status status="PASS" starttime="20231030 16:47:38.986" endtime="20231030 16:47:40.591"/>
</branch>
<status status="PASS" starttime="20231030 16:47:38.974" endtime="20231030 16:47:40.591"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:40.591" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231030 16:47:40.591" endtime="20231030 16:47:40.591"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:40.600" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231030 16:47:40.591" endtime="20231030 16:47:40.600"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231030 16:47:40.600" endtime="20231030 16:47:40.887"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:40.987" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:40.887" endtime="20231030 16:47:40.987"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231030 16:47:41.088" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231030 16:47:40.987" endtime="20231030 16:47:41.088"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 16:47:41.089" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231030 16:47:41.089" endtime="20231030 16:47:41.090"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 16:47:41.191" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231030 16:47:41.090" endtime="20231030 16:47:41.191"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231030 16:47:41.191" endtime="20231030 16:47:41.191"/>
</kw>
<status status="NOT RUN" starttime="20231030 16:47:41.191" endtime="20231030 16:47:41.191"/>
</branch>
<status status="PASS" starttime="20231030 16:47:41.191" endtime="20231030 16:47:41.206"/>
</if>
<status status="PASS" starttime="20231030 16:47:40.987" endtime="20231030 16:47:41.206"/>
</kw>
<status status="PASS" starttime="20231030 16:47:40.600" endtime="20231030 16:47:41.206"/>
</branch>
<status status="PASS" starttime="20231030 16:47:40.600" endtime="20231030 16:47:41.206"/>
</if>
<status status="PASS" starttime="20231030 16:47:40.591" endtime="20231030 16:47:41.206"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20231030 16:47:41.206" endtime="20231030 16:47:41.206"/>
</kw>
<status status="PASS" starttime="20231030 16:47:38.754" endtime="20231030 16:47:41.206"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231030 16:47:42.078" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231030 16:47:41.222" endtime="20231030 16:47:42.078"/>
</kw>
<status status="PASS" starttime="20231030 16:47:41.222" endtime="20231030 16:47:42.078"/>
</kw>
<tag>Search</tag>
<status status="PASS" starttime="20231030 16:47:14.806" endtime="20231030 16:47:42.078"/>
</test>
<status status="PASS" starttime="20231030 16:47:12.109" endtime="20231030 16:47:42.093"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Customer Account">Customer Account</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

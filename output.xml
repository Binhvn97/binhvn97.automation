<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231226 15:12:52.765" rpa="false" schemaversion="4">
<suite id="s1" name="Code Type" source="d:\TESTER\Automation\Auto_Web\testcases\code_type.robot">
<test id="s1-t1" name="CO_32_03 Verify the delete data function in &quot;Bằng cấp chuyên môn&quot; category" line="1348">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231226 15:12:55.152" endtime="20231226 15:12:55.209"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231226 15:12:55.212" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\TESTER\\Automation\\browser\\traces\\61459123-bce1-479a-969f-eadea50f869a"}</msg>
<msg timestamp="20231226 15:12:56.456" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\TESTER\\Automation\\browser\\traces\\61459123-bce1-479a-969f-eadea50f869a"}</msg>
<status status="PASS" starttime="20231226 15:12:55.210" endtime="20231226 15:12:56.457"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231226 15:12:59.536" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20231226 15:12:59.537" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231226 15:12:56.458" endtime="20231226 15:12:59.538"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231226 15:12:59.540" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231226 15:12:59.539" endtime="20231226 15:12:59.541"/>
</kw>
<status status="PASS" starttime="20231226 15:12:55.151" endtime="20231226 15:12:59.542"/>
</kw>
<kw name="Create a test data of &quot;Bằng cấp chuyên môn&quot; category" sourcename="Create a test data of &quot;${category}&quot; category">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Danh mục" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Danh mục&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:12:59.632" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231226 15:12:59.567" endtime="20231226 15:12:59.632"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20231226 15:12:59.635" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20231226 15:12:59.633" endtime="20231226 15:12:59.635"/>
</kw>
<status status="FAIL" starttime="20231226 15:12:59.565" endtime="20231226 15:12:59.636"/>
</kw>
<msg timestamp="20231226 15:12:59.637" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20231226 15:12:59.564" endtime="20231226 15:12:59.637"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Select on the &quot;${category}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20231226 15:12:59.641" endtime="20231226 15:12:59.651"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20231226 15:12:59.653" endtime="20231226 15:12:59.654"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.638" endtime="20231226 15:12:59.654"/>
</branch>
<branch type="ELSE">
<kw name="Go to &quot;Danh mục&quot; page">
<kw name="Login to admin" library="common">
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:12:59.771" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:12:59.668" endtime="20231226 15:12:59.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:12:59.774" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:12:59.772" endtime="20231226 15:12:59.774"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:12:59.815" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:12:59.775" endtime="20231226 15:12:59.815"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:12:59.817" endtime="20231226 15:12:59.817"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.816" endtime="20231226 15:12:59.818"/>
</branch>
<status status="PASS" starttime="20231226 15:12:59.816" endtime="20231226 15:12:59.819"/>
</if>
<status status="PASS" starttime="20231226 15:12:59.666" endtime="20231226 15:12:59.819"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:12:59.822" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231226 15:12:59.821" endtime="20231226 15:12:59.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:12:59.825" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231226 15:12:59.824" endtime="20231226 15:12:59.830"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:12:59.835" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:12:59.832" endtime="20231226 15:12:59.835"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:12:59.837" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:12:59.838" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:12:59.836" endtime="20231226 15:12:59.838"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:12:59.841" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231226 15:12:59.839" endtime="20231226 15:12:59.841"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:12:59.846" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:12:59.847" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231226 15:12:59.842" endtime="20231226 15:12:59.847"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.849" endtime="20231226 15:12:59.850"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.851" endtime="20231226 15:12:59.851"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.848" endtime="20231226 15:12:59.852"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.854" endtime="20231226 15:12:59.855"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.855" endtime="20231226 15:12:59.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.858" endtime="20231226 15:12:59.859"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.853" endtime="20231226 15:12:59.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.864" endtime="20231226 15:12:59.867"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.868" endtime="20231226 15:12:59.870"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.862" endtime="20231226 15:12:59.871"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.873" endtime="20231226 15:12:59.875"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.879" endtime="20231226 15:12:59.880"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.872" endtime="20231226 15:12:59.881"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.884" endtime="20231226 15:12:59.885"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.882" endtime="20231226 15:12:59.885"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231226 15:12:59.889" endtime="20231226 15:12:59.890"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.886" endtime="20231226 15:12:59.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.895" endtime="20231226 15:12:59.898"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.900" endtime="20231226 15:12:59.900"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.906" endtime="20231226 15:12:59.908"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.913" endtime="20231226 15:12:59.914"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.915" endtime="20231226 15:12:59.916"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.917" endtime="20231226 15:12:59.917"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.891" endtime="20231226 15:12:59.918"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.920" endtime="20231226 15:12:59.922"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.919" endtime="20231226 15:12:59.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.936" endtime="20231226 15:12:59.940"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.933" endtime="20231226 15:12:59.940"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.942" endtime="20231226 15:12:59.948"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.941" endtime="20231226 15:12:59.950"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.952" endtime="20231226 15:12:59.953"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.950" endtime="20231226 15:12:59.953"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:12:59.954" endtime="20231226 15:12:59.954"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:12:59.953" endtime="20231226 15:12:59.956"/>
</branch>
<status status="PASS" starttime="20231226 15:12:59.848" endtime="20231226 15:12:59.957"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:12:59.964" level="INFO">Length is 15</msg>
<msg timestamp="20231226 15:12:59.965" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231226 15:12:59.958" endtime="20231226 15:12:59.967"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231226 15:12:59.970" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231226 15:12:59.969" endtime="20231226 15:12:59.971"/>
</kw>
<status status="PASS" starttime="20231226 15:12:59.968" endtime="20231226 15:12:59.972"/>
</branch>
<status status="PASS" starttime="20231226 15:12:59.968" endtime="20231226 15:12:59.973"/>
</if>
<msg timestamp="20231226 15:12:59.973" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231226 15:12:59.820" endtime="20231226 15:12:59.974"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231226 15:12:59.975" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231226 15:12:59.974" endtime="20231226 15:12:59.981"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:12:59.982" endtime="20231226 15:13:00.141"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:00.146" endtime="20231226 15:13:00.250"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231226 15:13:00.252" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231226 15:13:00.251" endtime="20231226 15:13:00.331"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:00.408" level="INFO">Text: 'admin@gmail.com'</msg>
<msg timestamp="20231226 15:13:00.409" level="INFO">${condition} = admin@gmail.com</msg>
<status status="PASS" starttime="20231226 15:13:00.332" endtime="20231226 15:13:00.412"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.416" endtime="20231226 15:13:00.416"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.417" endtime="20231226 15:13:00.418"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.413" endtime="20231226 15:13:00.418"/>
</iter>
<status status="NOT RUN" starttime="20231226 15:13:00.413" endtime="20231226 15:13:00.419"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231226 15:13:00.420" endtime="20231226 15:13:00.508"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:00.513" level="INFO">Length is 15</msg>
<msg timestamp="20231226 15:13:00.514" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231226 15:13:00.509" endtime="20231226 15:13:00.514"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231226 15:13:00.517" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231226 15:13:00.516" endtime="20231226 15:13:00.518"/>
</kw>
<status status="PASS" starttime="20231226 15:13:00.515" endtime="20231226 15:13:00.519"/>
</branch>
<status status="PASS" starttime="20231226 15:13:00.515" endtime="20231226 15:13:00.519"/>
</if>
<status status="PASS" starttime="20231226 15:12:59.663" endtime="20231226 15:13:00.520"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:00.625" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:00.523" endtime="20231226 15:13:00.625"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:00.630" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:00.626" endtime="20231226 15:13:00.630"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:00.641" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:00.631" endtime="20231226 15:13:00.642"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:00.647" endtime="20231226 15:13:00.648"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.642" endtime="20231226 15:13:00.648"/>
</branch>
<status status="PASS" starttime="20231226 15:13:00.642" endtime="20231226 15:13:00.649"/>
</if>
<status status="PASS" starttime="20231226 15:13:00.522" endtime="20231226 15:13:00.650"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:00.653" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231226 15:13:00.652" endtime="20231226 15:13:00.653"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:00.655" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231226 15:13:00.654" endtime="20231226 15:13:00.655"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:00.657" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:13:00.656" endtime="20231226 15:13:00.657"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:00.659" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:00.659" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:13:00.658" endtime="20231226 15:13:00.663"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:00.665" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231226 15:13:00.664" endtime="20231226 15:13:00.665"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:00.668" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:00.668" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231226 15:13:00.667" endtime="20231226 15:13:00.669"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.671" endtime="20231226 15:13:00.671"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.672" endtime="20231226 15:13:00.673"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.670" endtime="20231226 15:13:00.673"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.675" endtime="20231226 15:13:00.676"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.680" endtime="20231226 15:13:00.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.681" endtime="20231226 15:13:00.682"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.674" endtime="20231226 15:13:00.683"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.686" endtime="20231226 15:13:00.687"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.688" endtime="20231226 15:13:00.688"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.684" endtime="20231226 15:13:00.689"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.691" endtime="20231226 15:13:00.691"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.692" endtime="20231226 15:13:00.693"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.689" endtime="20231226 15:13:00.697"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.715" endtime="20231226 15:13:00.716"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.714" endtime="20231226 15:13:00.717"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231226 15:13:00.719" endtime="20231226 15:13:00.720"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.718" endtime="20231226 15:13:00.720"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.722" endtime="20231226 15:13:00.723"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.724" endtime="20231226 15:13:00.724"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.725" endtime="20231226 15:13:00.726"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.730" endtime="20231226 15:13:00.731"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.732" endtime="20231226 15:13:00.733"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.734" endtime="20231226 15:13:00.735"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.721" endtime="20231226 15:13:00.735"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.737" endtime="20231226 15:13:00.738"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.736" endtime="20231226 15:13:00.738"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.740" endtime="20231226 15:13:00.740"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.739" endtime="20231226 15:13:00.741"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.742" endtime="20231226 15:13:00.747"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.741" endtime="20231226 15:13:00.748"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.750" endtime="20231226 15:13:00.750"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.749" endtime="20231226 15:13:00.751"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:00.752" endtime="20231226 15:13:00.753"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:00.751" endtime="20231226 15:13:00.783"/>
</branch>
<status status="PASS" starttime="20231226 15:13:00.669" endtime="20231226 15:13:00.784"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:00.785" level="INFO">Length is 6</msg>
<msg timestamp="20231226 15:13:00.786" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231226 15:13:00.784" endtime="20231226 15:13:00.786"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231226 15:13:00.792" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231226 15:13:00.788" endtime="20231226 15:13:00.792"/>
</kw>
<status status="PASS" starttime="20231226 15:13:00.787" endtime="20231226 15:13:00.793"/>
</branch>
<status status="PASS" starttime="20231226 15:13:00.786" endtime="20231226 15:13:00.797"/>
</if>
<msg timestamp="20231226 15:13:00.798" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231226 15:13:00.650" endtime="20231226 15:13:00.798"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231226 15:13:00.801" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231226 15:13:00.799" endtime="20231226 15:13:00.801"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:00.802" endtime="20231226 15:13:00.922"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:00.923" endtime="20231226 15:13:00.973"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231226 15:13:00.975" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231226 15:13:00.974" endtime="20231226 15:13:01.036"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:01.084" level="INFO">Text: '123123'</msg>
<msg timestamp="20231226 15:13:01.085" level="INFO">${condition} = 123123</msg>
<status status="PASS" starttime="20231226 15:13:01.037" endtime="20231226 15:13:01.085"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.088" endtime="20231226 15:13:01.088"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.089" endtime="20231226 15:13:01.090"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:01.086" endtime="20231226 15:13:01.090"/>
</iter>
<status status="NOT RUN" starttime="20231226 15:13:01.086" endtime="20231226 15:13:01.091"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231226 15:13:01.092" endtime="20231226 15:13:01.175"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:01.181" level="INFO">Length is 6</msg>
<msg timestamp="20231226 15:13:01.182" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231226 15:13:01.176" endtime="20231226 15:13:01.182"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231226 15:13:01.186" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231226 15:13:01.184" endtime="20231226 15:13:01.186"/>
</kw>
<status status="PASS" starttime="20231226 15:13:01.183" endtime="20231226 15:13:01.187"/>
</branch>
<status status="PASS" starttime="20231226 15:13:01.183" endtime="20231226 15:13:01.187"/>
</if>
<status status="PASS" starttime="20231226 15:13:00.521" endtime="20231226 15:13:01.188"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:01.291" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:01.190" endtime="20231226 15:13:01.291"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:01.307" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:01.292" endtime="20231226 15:13:01.307"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:01.312" endtime="20231226 15:13:01.448"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:01.551" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:01.450" endtime="20231226 15:13:01.551"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:01.553" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231226 15:13:01.552" endtime="20231226 15:13:01.553"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:01.569" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:01.554" endtime="20231226 15:13:01.570"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.571" endtime="20231226 15:13:01.572"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.573" endtime="20231226 15:13:01.573"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231226 15:13:01.574" endtime="20231226 15:13:01.574"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:01.570" endtime="20231226 15:13:01.574"/>
</branch>
<status status="PASS" starttime="20231226 15:13:01.570" endtime="20231226 15:13:01.576"/>
</if>
<status status="PASS" starttime="20231226 15:13:01.449" endtime="20231226 15:13:01.576"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231226 15:13:01.681" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:01.681" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:01.844" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:01.844" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:01.888" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231226 15:13:01.577" endtime="20231226 15:13:01.888"/>
</kw>
<status status="PASS" starttime="20231226 15:13:01.308" endtime="20231226 15:13:01.889"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.890" endtime="20231226 15:13:01.891"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231226 15:13:01.892" endtime="20231226 15:13:01.893"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.894" endtime="20231226 15:13:01.895"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:01.890" endtime="20231226 15:13:01.896"/>
</branch>
<status status="PASS" starttime="20231226 15:13:01.308" endtime="20231226 15:13:01.897"/>
</if>
<status status="PASS" starttime="20231226 15:13:01.188" endtime="20231226 15:13:01.897"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:01.901" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231226 15:13:01.900" endtime="20231226 15:13:01.901"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:01.903" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:01.904" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231226 15:13:01.902" endtime="20231226 15:13:01.904"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:01.906" endtime="20231226 15:13:01.907"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:01.905" endtime="20231226 15:13:01.907"/>
</branch>
<status status="PASS" starttime="20231226 15:13:01.905" endtime="20231226 15:13:01.908"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:02.147" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231226 15:13:01.914" endtime="20231226 15:13:02.148"/>
</kw>
<status status="PASS" starttime="20231226 15:13:01.910" endtime="20231226 15:13:02.149"/>
</kw>
<status status="PASS" starttime="20231226 15:13:01.909" endtime="20231226 15:13:02.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:02.151" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231226 15:13:02.150" endtime="20231226 15:13:02.152"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:02.523" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231226 15:13:02.523" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231226 15:13:02.523" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231226 15:13:02.158" endtime="20231226 15:13:02.537"/>
</kw>
<status status="FAIL" starttime="20231226 15:13:02.155" endtime="20231226 15:13:02.538"/>
</kw>
<msg timestamp="20231226 15:13:02.539" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231226 15:13:02.153" endtime="20231226 15:13:02.539"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:02.541" endtime="20231226 15:13:02.543"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:02.540" endtime="20231226 15:13:02.543"/>
</branch>
<status status="PASS" starttime="20231226 15:13:02.540" endtime="20231226 15:13:02.545"/>
</if>
<status status="PASS" starttime="20231226 15:13:01.898" endtime="20231226 15:13:02.545"/>
</kw>
<status status="PASS" starttime="20231226 15:12:59.658" endtime="20231226 15:13:02.545"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:02.575" level="INFO">Waited for Element with selector //li[contains(@class, "menu") and descendant::span[contains(text(), "QUẢN LÝ DANH MỤC")]] at state attached</msg>
<status status="PASS" starttime="20231226 15:13:02.548" endtime="20231226 15:13:02.576"/>
</kw>
<status status="PASS" starttime="20231226 15:13:02.547" endtime="20231226 15:13:02.577"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:02.578" endtime="20231226 15:13:03.604"/>
</kw>
<status status="PASS" starttime="20231226 15:13:02.546" endtime="20231226 15:13:03.604"/>
</kw>
<kw name="Click &quot;Danh mục&quot; sub menu to &quot;/code-types&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Is Existent" library="common">
<arg>//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:03.625" level="INFO">Waited for Element with selector //a[contains(@class, "sub-menu") and descendant::span[contains(text(), "Danh mục")]] at state attached</msg>
<status status="PASS" starttime="20231226 15:13:03.607" endtime="20231226 15:13:03.625"/>
</kw>
<status status="PASS" starttime="20231226 15:13:03.606" endtime="20231226 15:13:03.627"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:03.629" endtime="20231226 15:13:04.153"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231226 15:13:04.161" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/code-types?filter=%7B%22type%22:%22MEDICAL_PROCEDURE_GROUP%22%7D</msg>
<status status="PASS" starttime="20231226 15:13:04.154" endtime="20231226 15:13:04.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231226 15:13:04.162" endtime="20231226 15:13:04.164"/>
</kw>
<status status="PASS" starttime="20231226 15:13:03.605" endtime="20231226 15:13:04.164"/>
</kw>
<status status="PASS" starttime="20231226 15:12:59.657" endtime="20231226 15:13:04.165"/>
</kw>
<kw name="Select on the &quot;${category}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:04.170" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:13:04.168" endtime="20231226 15:13:04.170"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:04.172" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:04.173" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:13:04.171" endtime="20231226 15:13:04.174"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:04.177" endtime="20231226 15:13:04.178"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:04.174" endtime="20231226 15:13:04.179"/>
</branch>
<status status="PASS" starttime="20231226 15:13:04.174" endtime="20231226 15:13:04.179"/>
</if>
<msg timestamp="20231226 15:13:04.180" level="INFO">${text} = Bằng cấp chuyên môn</msg>
<status status="PASS" starttime="20231226 15:13:04.167" endtime="20231226 15:13:04.180"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20231226 15:13:04.183" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Bằng cấp chuyên môn")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20231226 15:13:04.181" endtime="20231226 15:13:04.184"/>
</kw>
<kw name="Wait Until Element Is Existent" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>attached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:04.673" level="INFO">Waited for Element with selector xpath=//*[contains(@class, "item-text") and contains(text(), "Bằng cấp chuyên môn")]/ancestor::*[contains(@class, "item")] at state attached</msg>
<status status="PASS" starttime="20231226 15:13:04.187" endtime="20231226 15:13:04.674"/>
</kw>
<status status="PASS" starttime="20231226 15:13:04.185" endtime="20231226 15:13:04.675"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:04.676" endtime="20231226 15:13:05.014"/>
</kw>
<status status="PASS" starttime="20231226 15:13:04.165" endtime="20231226 15:13:05.018"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:05.123" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:05.021" endtime="20231226 15:13:05.123"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:05.298" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:05.124" endtime="20231226 15:13:05.299"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:05.301" endtime="20231226 15:13:05.497"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:05.601" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:05.499" endtime="20231226 15:13:05.601"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:05.602" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231226 15:13:05.601" endtime="20231226 15:13:05.602"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:05.611" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:05.602" endtime="20231226 15:13:05.612"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.614" endtime="20231226 15:13:05.615"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.616" endtime="20231226 15:13:05.616"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231226 15:13:05.617" endtime="20231226 15:13:05.618"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.613" endtime="20231226 15:13:05.618"/>
</branch>
<status status="PASS" starttime="20231226 15:13:05.613" endtime="20231226 15:13:05.619"/>
</if>
<status status="PASS" starttime="20231226 15:13:05.498" endtime="20231226 15:13:05.620"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231226 15:13:05.640" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:05.641" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:05.661" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:05.661" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:05.671" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231226 15:13:05.621" endtime="20231226 15:13:05.672"/>
</kw>
<status status="PASS" starttime="20231226 15:13:05.300" endtime="20231226 15:13:05.672"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.673" endtime="20231226 15:13:05.674"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231226 15:13:05.674" endtime="20231226 15:13:05.675"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.675" endtime="20231226 15:13:05.676"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.673" endtime="20231226 15:13:05.677"/>
</branch>
<status status="PASS" starttime="20231226 15:13:05.300" endtime="20231226 15:13:05.678"/>
</if>
<status status="PASS" starttime="20231226 15:13:05.019" endtime="20231226 15:13:05.678"/>
</kw>
<status status="PASS" starttime="20231226 15:12:59.656" endtime="20231226 15:13:05.679"/>
</branch>
<status status="PASS" starttime="20231226 15:12:59.638" endtime="20231226 15:13:05.679"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:05.784" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:05.683" endtime="20231226 15:13:05.784"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:05.786" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:05.785" endtime="20231226 15:13:05.786"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:05.799" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:05.787" endtime="20231226 15:13:05.799"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:05.801" endtime="20231226 15:13:05.801"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.800" endtime="20231226 15:13:05.802"/>
</branch>
<status status="PASS" starttime="20231226 15:13:05.800" endtime="20231226 15:13:05.802"/>
</if>
<status status="PASS" starttime="20231226 15:13:05.682" endtime="20231226 15:13:05.803"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:05.805" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231226 15:13:05.805" endtime="20231226 15:13:05.806"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:05.808" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231226 15:13:05.807" endtime="20231226 15:13:05.809"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:05.814" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:13:05.812" endtime="20231226 15:13:05.814"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:05.816" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:05.816" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:13:05.815" endtime="20231226 15:13:05.817"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:05.819" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231226 15:13:05.818" endtime="20231226 15:13:05.819"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:05.822" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:05.822" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:05.820" endtime="20231226 15:13:05.822"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.824" endtime="20231226 15:13:05.825"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.828" endtime="20231226 15:13:05.829"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.823" endtime="20231226 15:13:05.830"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20231226 15:13:05.833" level="INFO">${random} = Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:05.832" endtime="20231226 15:13:05.833"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231226 15:13:05.835" level="INFO">${words} = ['CO_32_03', 'Verify', 'the', 'delete', 'data', 'function', 'in', '"Bằng', 'cấp', 'chuyên', 'môn"', 'category']</msg>
<status status="PASS" starttime="20231226 15:13:05.834" endtime="20231226 15:13:05.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:05.839" level="INFO">${new_text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:05.836" endtime="20231226 15:13:05.839"/>
</kw>
<status status="PASS" starttime="20231226 15:13:05.831" endtime="20231226 15:13:05.840"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.841" endtime="20231226 15:13:05.841"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.844" endtime="20231226 15:13:05.845"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.840" endtime="20231226 15:13:05.846"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.847" endtime="20231226 15:13:05.848"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.848" endtime="20231226 15:13:05.863"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.846" endtime="20231226 15:13:05.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.865" endtime="20231226 15:13:05.865"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.864" endtime="20231226 15:13:05.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231226 15:13:05.867" endtime="20231226 15:13:05.867"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.866" endtime="20231226 15:13:05.868"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.869" endtime="20231226 15:13:05.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.870" endtime="20231226 15:13:05.870"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.871" endtime="20231226 15:13:05.871"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.872" endtime="20231226 15:13:05.872"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.873" endtime="20231226 15:13:05.873"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.874" endtime="20231226 15:13:05.879"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.868" endtime="20231226 15:13:05.879"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.881" endtime="20231226 15:13:05.881"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.880" endtime="20231226 15:13:05.882"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.884" endtime="20231226 15:13:05.885"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.883" endtime="20231226 15:13:05.886"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.887" endtime="20231226 15:13:05.887"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.886" endtime="20231226 15:13:05.888"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.889" endtime="20231226 15:13:05.890"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.888" endtime="20231226 15:13:05.890"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:05.891" endtime="20231226 15:13:05.892"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:05.891" endtime="20231226 15:13:05.893"/>
</branch>
<status status="PASS" starttime="20231226 15:13:05.823" endtime="20231226 15:13:05.894"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:05.900" level="INFO">Length is 8</msg>
<msg timestamp="20231226 15:13:05.900" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231226 15:13:05.899" endtime="20231226 15:13:05.901"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231226 15:13:05.913" level="INFO">${text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:05.907" endtime="20231226 15:13:05.914"/>
</kw>
<status status="PASS" starttime="20231226 15:13:05.901" endtime="20231226 15:13:05.915"/>
</branch>
<status status="PASS" starttime="20231226 15:13:05.901" endtime="20231226 15:13:05.915"/>
</if>
<msg timestamp="20231226 15:13:05.916" level="INFO">${text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:05.803" endtime="20231226 15:13:05.916"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231226 15:13:05.918" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231226 15:13:05.917" endtime="20231226 15:13:05.919"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:05.920" endtime="20231226 15:13:06.031"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:06.032" endtime="20231226 15:13:06.074"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231226 15:13:06.077" level="INFO">Fills the text 'CO_32_03 Velit possimus.' in the given field.</msg>
<status status="PASS" starttime="20231226 15:13:06.075" endtime="20231226 15:13:06.125"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:06.168" level="INFO">Text: 'CO_32_03 Velit possimus.'</msg>
<msg timestamp="20231226 15:13:06.168" level="INFO">${condition} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:06.126" endtime="20231226 15:13:06.169"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.171" endtime="20231226 15:13:06.172"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.173" endtime="20231226 15:13:06.173"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.169" endtime="20231226 15:13:06.174"/>
</iter>
<status status="NOT RUN" starttime="20231226 15:13:06.169" endtime="20231226 15:13:06.174"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231226 15:13:06.176" endtime="20231226 15:13:06.237"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.239" level="INFO">Length is 24</msg>
<msg timestamp="20231226 15:13:06.239" level="INFO">${cnt} = 24</msg>
<status status="PASS" starttime="20231226 15:13:06.238" endtime="20231226 15:13:06.239"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231226 15:13:06.243" level="INFO">${STATE["Tiêu đề"]} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:06.241" endtime="20231226 15:13:06.244"/>
</kw>
<status status="PASS" starttime="20231226 15:13:06.240" endtime="20231226 15:13:06.244"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.240" endtime="20231226 15:13:06.245"/>
</if>
<status status="PASS" starttime="20231226 15:13:05.680" endtime="20231226 15:13:06.246"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:06.352" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:06.250" endtime="20231226 15:13:06.352"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:06.354" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:06.353" endtime="20231226 15:13:06.354"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:06.366" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:06.355" endtime="20231226 15:13:06.366"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:06.368" endtime="20231226 15:13:06.369"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.367" endtime="20231226 15:13:06.369"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.367" endtime="20231226 15:13:06.370"/>
</if>
<status status="PASS" starttime="20231226 15:13:06.248" endtime="20231226 15:13:06.370"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:06.374" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231226 15:13:06.373" endtime="20231226 15:13:06.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:06.377" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231226 15:13:06.375" endtime="20231226 15:13:06.377"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:06.379" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:13:06.378" endtime="20231226 15:13:06.380"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.382" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:06.382" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:13:06.381" endtime="20231226 15:13:06.383"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:06.385" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231226 15:13:06.384" endtime="20231226 15:13:06.385"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.387" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:06.388" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:06.386" endtime="20231226 15:13:06.388"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.390" endtime="20231226 15:13:06.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.391" endtime="20231226 15:13:06.392"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.389" endtime="20231226 15:13:06.392"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.395" endtime="20231226 15:13:06.396"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.397" endtime="20231226 15:13:06.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.398" endtime="20231226 15:13:06.398"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.393" endtime="20231226 15:13:06.399"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20231226 15:13:06.401" level="INFO">${new_text} = 6073</msg>
<status status="PASS" starttime="20231226 15:13:06.400" endtime="20231226 15:13:06.401"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231226 15:13:06.403" level="INFO">${new_text} = 6073</msg>
<status status="PASS" starttime="20231226 15:13:06.402" endtime="20231226 15:13:06.404"/>
</kw>
<status status="PASS" starttime="20231226 15:13:06.399" endtime="20231226 15:13:06.404"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.406" endtime="20231226 15:13:06.406"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.407" endtime="20231226 15:13:06.408"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.405" endtime="20231226 15:13:06.408"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.410" endtime="20231226 15:13:06.412"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.409" endtime="20231226 15:13:06.412"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231226 15:13:06.414" endtime="20231226 15:13:06.414"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.413" endtime="20231226 15:13:06.415"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.416" endtime="20231226 15:13:06.417"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.418" endtime="20231226 15:13:06.419"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.420" endtime="20231226 15:13:06.420"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.421" endtime="20231226 15:13:06.422"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.423" endtime="20231226 15:13:06.424"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.425" endtime="20231226 15:13:06.426"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.415" endtime="20231226 15:13:06.427"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.428" endtime="20231226 15:13:06.429"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.428" endtime="20231226 15:13:06.430"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.431" endtime="20231226 15:13:06.432"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.430" endtime="20231226 15:13:06.432"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.434" endtime="20231226 15:13:06.435"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.433" endtime="20231226 15:13:06.435"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.437" endtime="20231226 15:13:06.437"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.436" endtime="20231226 15:13:06.438"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.439" endtime="20231226 15:13:06.439"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.438" endtime="20231226 15:13:06.440"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.388" endtime="20231226 15:13:06.441"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.443" level="INFO">Length is 8</msg>
<msg timestamp="20231226 15:13:06.443" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231226 15:13:06.442" endtime="20231226 15:13:06.444"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231226 15:13:06.447" level="INFO">${text} = 6073</msg>
<status status="PASS" starttime="20231226 15:13:06.445" endtime="20231226 15:13:06.447"/>
</kw>
<status status="PASS" starttime="20231226 15:13:06.444" endtime="20231226 15:13:06.448"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.444" endtime="20231226 15:13:06.448"/>
</if>
<msg timestamp="20231226 15:13:06.449" level="INFO">${text} = 6073</msg>
<status status="PASS" starttime="20231226 15:13:06.371" endtime="20231226 15:13:06.449"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231226 15:13:06.452" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231226 15:13:06.450" endtime="20231226 15:13:06.453"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:06.454" endtime="20231226 15:13:06.523"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:06.524" endtime="20231226 15:13:06.559"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231226 15:13:06.561" level="INFO">Fills the text '6073' in the given field.</msg>
<status status="PASS" starttime="20231226 15:13:06.560" endtime="20231226 15:13:06.602"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:06.640" level="INFO">Text: '6073'</msg>
<msg timestamp="20231226 15:13:06.641" level="INFO">${condition} = 6073</msg>
<status status="PASS" starttime="20231226 15:13:06.603" endtime="20231226 15:13:06.641"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.644" endtime="20231226 15:13:06.645"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.646" endtime="20231226 15:13:06.647"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.642" endtime="20231226 15:13:06.647"/>
</iter>
<status status="NOT RUN" starttime="20231226 15:13:06.642" endtime="20231226 15:13:06.648"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231226 15:13:06.649" endtime="20231226 15:13:06.739"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.741" level="INFO">Length is 4</msg>
<msg timestamp="20231226 15:13:06.742" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20231226 15:13:06.740" endtime="20231226 15:13:06.742"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231226 15:13:06.749" level="INFO">${STATE["Thứ tự"]} = 6073</msg>
<status status="PASS" starttime="20231226 15:13:06.747" endtime="20231226 15:13:06.749"/>
</kw>
<status status="PASS" starttime="20231226 15:13:06.744" endtime="20231226 15:13:06.750"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.743" endtime="20231226 15:13:06.750"/>
</if>
<status status="PASS" starttime="20231226 15:13:06.247" endtime="20231226 15:13:06.751"/>
</kw>
<kw name="Enter &quot;text&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:06.855" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:06.754" endtime="20231226 15:13:06.855"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:06.857" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:06.856" endtime="20231226 15:13:06.857"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:06.867" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:06.858" endtime="20231226 15:13:06.867"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:06.869" endtime="20231226 15:13:06.870"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.868" endtime="20231226 15:13:06.870"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.868" endtime="20231226 15:13:06.871"/>
</if>
<status status="PASS" starttime="20231226 15:13:06.753" endtime="20231226 15:13:06.871"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:06.873" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231226 15:13:06.873" endtime="20231226 15:13:06.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:06.875" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231226 15:13:06.874" endtime="20231226 15:13:06.875"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:06.880" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:13:06.877" endtime="20231226 15:13:06.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.882" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:06.882" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:13:06.881" endtime="20231226 15:13:06.883"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:06.885" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231226 15:13:06.884" endtime="20231226 15:13:06.885"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.887" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:06.887" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:06.886" endtime="20231226 15:13:06.888"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.889" endtime="20231226 15:13:06.890"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.890" endtime="20231226 15:13:06.891"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.888" endtime="20231226 15:13:06.891"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.893" endtime="20231226 15:13:06.894"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.895" endtime="20231226 15:13:06.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.896" endtime="20231226 15:13:06.897"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.892" endtime="20231226 15:13:06.897"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.899" endtime="20231226 15:13:06.900"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.901" endtime="20231226 15:13:06.901"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.898" endtime="20231226 15:13:06.902"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.903" endtime="20231226 15:13:06.904"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.905" endtime="20231226 15:13:06.906"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.902" endtime="20231226 15:13:06.906"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.908" endtime="20231226 15:13:06.908"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.907" endtime="20231226 15:13:06.909"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231226 15:13:06.912" endtime="20231226 15:13:06.912"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.910" endtime="20231226 15:13:06.918"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.920" endtime="20231226 15:13:06.920"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.921" endtime="20231226 15:13:06.922"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.923" endtime="20231226 15:13:06.923"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.924" endtime="20231226 15:13:06.925"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.926" endtime="20231226 15:13:06.927"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.928" endtime="20231226 15:13:06.929"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.919" endtime="20231226 15:13:06.930"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.931" endtime="20231226 15:13:06.932"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.930" endtime="20231226 15:13:06.932"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.934" endtime="20231226 15:13:06.934"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.933" endtime="20231226 15:13:06.935"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.936" endtime="20231226 15:13:06.937"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.935" endtime="20231226 15:13:06.937"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:06.939" endtime="20231226 15:13:06.939"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:06.938" endtime="20231226 15:13:06.939"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<msg timestamp="20231226 15:13:06.941" level="INFO">${new_text} = Architecto cumque facilis impedit velit ab.</msg>
<status status="PASS" starttime="20231226 15:13:06.941" endtime="20231226 15:13:06.942"/>
</kw>
<status status="PASS" starttime="20231226 15:13:06.940" endtime="20231226 15:13:06.943"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.888" endtime="20231226 15:13:06.944"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:06.945" level="INFO">Length is 8</msg>
<msg timestamp="20231226 15:13:06.946" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231226 15:13:06.944" endtime="20231226 15:13:06.946"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231226 15:13:06.949" level="INFO">${text} = Architecto cumque facilis impedit velit ab.</msg>
<status status="PASS" starttime="20231226 15:13:06.948" endtime="20231226 15:13:06.950"/>
</kw>
<status status="PASS" starttime="20231226 15:13:06.947" endtime="20231226 15:13:06.951"/>
</branch>
<status status="PASS" starttime="20231226 15:13:06.947" endtime="20231226 15:13:06.951"/>
</if>
<msg timestamp="20231226 15:13:06.958" level="INFO">${text} = Architecto cumque facilis impedit velit ab.</msg>
<status status="PASS" starttime="20231226 15:13:06.871" endtime="20231226 15:13:06.972"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//*[contains(@class, "ant-input")]</arg>
<msg timestamp="20231226 15:13:06.974" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//*[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231226 15:13:06.973" endtime="20231226 15:13:06.975"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:06.976" endtime="20231226 15:13:07.053"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:07.054" endtime="20231226 15:13:07.096"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231226 15:13:07.098" level="INFO">Fills the text 'Architecto cumque facilis impedit velit ab.' in the given field.</msg>
<status status="PASS" starttime="20231226 15:13:07.097" endtime="20231226 15:13:07.148"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:07.190" level="INFO">Text: 'Architecto cumque facilis impedit velit ab.'</msg>
<msg timestamp="20231226 15:13:07.191" level="INFO">${condition} = Architecto cumque facilis impedit velit ab.</msg>
<status status="PASS" starttime="20231226 15:13:07.149" endtime="20231226 15:13:07.191"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.196" endtime="20231226 15:13:07.197"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.197" endtime="20231226 15:13:07.198"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.192" endtime="20231226 15:13:07.199"/>
</iter>
<status status="NOT RUN" starttime="20231226 15:13:07.192" endtime="20231226 15:13:07.199"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231226 15:13:07.200" endtime="20231226 15:13:07.271"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:07.273" level="INFO">Length is 43</msg>
<msg timestamp="20231226 15:13:07.274" level="INFO">${cnt} = 43</msg>
<status status="PASS" starttime="20231226 15:13:07.272" endtime="20231226 15:13:07.274"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231226 15:13:07.280" level="INFO">${STATE["Mã"]} = Architecto cumque facilis impedit velit ab.</msg>
<status status="PASS" starttime="20231226 15:13:07.277" endtime="20231226 15:13:07.280"/>
</kw>
<status status="PASS" starttime="20231226 15:13:07.275" endtime="20231226 15:13:07.281"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.275" endtime="20231226 15:13:07.281"/>
</if>
<status status="PASS" starttime="20231226 15:13:06.752" endtime="20231226 15:13:07.282"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:07.285" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231226 15:13:07.284" endtime="20231226 15:13:07.286"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:07.288" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:07.288" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231226 15:13:07.287" endtime="20231226 15:13:07.288"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:07.291" level="INFO">${text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:07.289" endtime="20231226 15:13:07.292"/>
</kw>
<status status="PASS" starttime="20231226 15:13:07.289" endtime="20231226 15:13:07.292"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.289" endtime="20231226 15:13:07.295"/>
</if>
<msg timestamp="20231226 15:13:07.295" level="INFO">${text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:07.283" endtime="20231226 15:13:07.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:07.299" level="INFO">${name} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:07.298" endtime="20231226 15:13:07.299"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:07.403" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:07.302" endtime="20231226 15:13:07.403"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:07.405" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:07.404" endtime="20231226 15:13:07.405"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:07.422" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:07.406" endtime="20231226 15:13:07.423"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:07.424" endtime="20231226 15:13:07.425"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.423" endtime="20231226 15:13:07.426"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.423" endtime="20231226 15:13:07.427"/>
</if>
<status status="PASS" starttime="20231226 15:13:07.301" endtime="20231226 15:13:07.427"/>
</kw>
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:07.430" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231226 15:13:07.429" endtime="20231226 15:13:07.430"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:07.432" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231226 15:13:07.431" endtime="20231226 15:13:07.433"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:07.435" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231226 15:13:07.434" endtime="20231226 15:13:07.435"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:07.437" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:07.438" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231226 15:13:07.436" endtime="20231226 15:13:07.438"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:07.441" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20231226 15:13:07.439" endtime="20231226 15:13:07.441"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:07.444" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:07.444" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:07.443" endtime="20231226 15:13:07.445"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.447" endtime="20231226 15:13:07.448"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.449" endtime="20231226 15:13:07.449"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.446" endtime="20231226 15:13:07.450"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.452" endtime="20231226 15:13:07.452"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.453" endtime="20231226 15:13:07.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.455" endtime="20231226 15:13:07.455"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.451" endtime="20231226 15:13:07.456"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.458" endtime="20231226 15:13:07.460"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.460" endtime="20231226 15:13:07.461"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.457" endtime="20231226 15:13:07.462"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.463" endtime="20231226 15:13:07.464"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.465" endtime="20231226 15:13:07.466"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.462" endtime="20231226 15:13:07.466"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20231226 15:13:07.469" level="INFO">${new_text} = Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.</msg>
<status status="PASS" starttime="20231226 15:13:07.468" endtime="20231226 15:13:07.470"/>
</kw>
<status status="PASS" starttime="20231226 15:13:07.467" endtime="20231226 15:13:07.470"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231226 15:13:07.472" endtime="20231226 15:13:07.473"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.472" endtime="20231226 15:13:07.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=20000000</arg>
<arg>max=99999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.475" endtime="20231226 15:13:07.476"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.477" endtime="20231226 15:13:07.478"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${List}</var>
<arg>3</arg>
<arg>7</arg>
<arg>8</arg>
<arg>9</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.479" endtime="20231226 15:13:07.479"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${2nd_number}</var>
<arg>random.choice($List)</arg>
<arg>random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.480" endtime="20231226 15:13:07.481"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${2nd_number}</var>
<arg>${2nd_number}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.482" endtime="20231226 15:13:07.483"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${2nd_number}</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.485" endtime="20231226 15:13:07.486"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.474" endtime="20231226 15:13:07.487"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.489" endtime="20231226 15:13:07.489"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.488" endtime="20231226 15:13:07.490"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.491" endtime="20231226 15:13:07.492"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.490" endtime="20231226 15:13:07.493"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.494" endtime="20231226 15:13:07.495"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.493" endtime="20231226 15:13:07.495"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.496" endtime="20231226 15:13:07.497"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.496" endtime="20231226 15:13:07.498"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.499" endtime="20231226 15:13:07.499"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.498" endtime="20231226 15:13:07.500"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.445" endtime="20231226 15:13:07.501"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:07.502" level="INFO">Length is 8</msg>
<msg timestamp="20231226 15:13:07.503" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20231226 15:13:07.501" endtime="20231226 15:13:07.503"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231226 15:13:07.506" level="INFO">${text} = Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.</msg>
<status status="PASS" starttime="20231226 15:13:07.505" endtime="20231226 15:13:07.507"/>
</kw>
<status status="PASS" starttime="20231226 15:13:07.504" endtime="20231226 15:13:07.507"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.504" endtime="20231226 15:13:07.507"/>
</if>
<msg timestamp="20231226 15:13:07.508" level="INFO">${text} = Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.</msg>
<status status="PASS" starttime="20231226 15:13:07.428" endtime="20231226 15:13:07.508"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20231226 15:13:07.511" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20231226 15:13:07.509" endtime="20231226 15:13:07.511"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:07.512" endtime="20231226 15:13:07.557"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231226 15:13:07.560" level="INFO">Fills the text 'Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.' in the given field.</msg>
<status status="PASS" starttime="20231226 15:13:07.558" endtime="20231226 15:13:07.619"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:07.659" level="INFO">Text: 'Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.'</msg>
<msg timestamp="20231226 15:13:07.660" level="INFO">${condition} = Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.</msg>
<status status="PASS" starttime="20231226 15:13:07.620" endtime="20231226 15:13:07.661"/>
</kw>
<while condition="'${condition}' != '${text}'" limit="10">
<iter>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.664" endtime="20231226 15:13:07.665"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${condition}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:07.665" endtime="20231226 15:13:07.666"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:07.661" endtime="20231226 15:13:07.667"/>
</iter>
<status status="NOT RUN" starttime="20231226 15:13:07.661" endtime="20231226 15:13:07.667"/>
</while>
<kw name="Scroll To Element" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>This method waits for actionability checks, then tries to scroll element into view,
unless it is completely visible.</doc>
<status status="PASS" starttime="20231226 15:13:07.668" endtime="20231226 15:13:07.740"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:07.742" level="INFO">Length is 75</msg>
<msg timestamp="20231226 15:13:07.745" level="INFO">${cnt} = 75</msg>
<status status="PASS" starttime="20231226 15:13:07.741" endtime="20231226 15:13:07.745"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231226 15:13:07.750" level="INFO">${STATE["Mô tả"]} = Unde eos aperiam eius deserunt. Fugit aliquam laudantium facilis accusamus.</msg>
<status status="PASS" starttime="20231226 15:13:07.748" endtime="20231226 15:13:07.750"/>
</kw>
<status status="PASS" starttime="20231226 15:13:07.747" endtime="20231226 15:13:07.751"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.747" endtime="20231226 15:13:07.751"/>
</if>
<status status="PASS" starttime="20231226 15:13:07.300" endtime="20231226 15:13:07.752"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:07.855" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:07.754" endtime="20231226 15:13:07.855"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//button[@title = "${text}"]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:07.871" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20231226 15:13:07.856" endtime="20231226 15:13:07.872"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:07.874" endtime="20231226 15:13:07.955"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:08.061" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:07.959" endtime="20231226 15:13:08.062"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:08.065" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231226 15:13:08.064" endtime="20231226 15:13:08.065"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:08.272" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:08.066" endtime="20231226 15:13:08.273"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:08.275" endtime="20231226 15:13:08.278"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231226 15:13:08.279" endtime="20231226 15:13:08.280"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231226 15:13:08.282" endtime="20231226 15:13:08.283"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:08.274" endtime="20231226 15:13:08.284"/>
</branch>
<status status="PASS" starttime="20231226 15:13:08.274" endtime="20231226 15:13:08.285"/>
</if>
<status status="PASS" starttime="20231226 15:13:07.955" endtime="20231226 15:13:08.285"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231226 15:13:09.040" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:09.041" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:09.061" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:09.061" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231226 15:13:09.073" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231226 15:13:08.286" endtime="20231226 15:13:09.074"/>
</kw>
<status status="PASS" starttime="20231226 15:13:07.873" endtime="20231226 15:13:09.075"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//span[contains(text(),"${text}")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.078" endtime="20231226 15:13:09.079"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<status status="NOT RUN" starttime="20231226 15:13:09.079" endtime="20231226 15:13:09.080"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.081" endtime="20231226 15:13:09.081"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:09.076" endtime="20231226 15:13:09.082"/>
</branch>
<status status="PASS" starttime="20231226 15:13:07.872" endtime="20231226 15:13:09.083"/>
</if>
<status status="PASS" starttime="20231226 15:13:07.753" endtime="20231226 15:13:09.083"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:09.089" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231226 15:13:09.085" endtime="20231226 15:13:09.090"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:09.096" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:09.118" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231226 15:13:09.094" endtime="20231226 15:13:09.119"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.121" endtime="20231226 15:13:09.123"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:09.120" endtime="20231226 15:13:09.125"/>
</branch>
<status status="PASS" starttime="20231226 15:13:09.119" endtime="20231226 15:13:09.133"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:09.205" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231226 15:13:09.141" endtime="20231226 15:13:09.206"/>
</kw>
<status status="PASS" starttime="20231226 15:13:09.137" endtime="20231226 15:13:09.206"/>
</kw>
<status status="PASS" starttime="20231226 15:13:09.134" endtime="20231226 15:13:09.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:09.209" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231226 15:13:09.208" endtime="20231226 15:13:09.210"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:09.638" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231226 15:13:09.639" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231226 15:13:09.640" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231226 15:13:09.218" endtime="20231226 15:13:09.649"/>
</kw>
<status status="FAIL" starttime="20231226 15:13:09.214" endtime="20231226 15:13:09.650"/>
</kw>
<msg timestamp="20231226 15:13:09.650" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231226 15:13:09.211" endtime="20231226 15:13:09.651"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.653" endtime="20231226 15:13:09.654"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:09.652" endtime="20231226 15:13:09.654"/>
</branch>
<status status="PASS" starttime="20231226 15:13:09.651" endtime="20231226 15:13:09.655"/>
</if>
<status status="PASS" starttime="20231226 15:13:09.084" endtime="20231226 15:13:09.656"/>
</kw>
<status status="PASS" starttime="20231226 15:12:59.561" endtime="20231226 15:13:09.657"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:09.772" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:09.670" endtime="20231226 15:13:09.772"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:09.874" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:09.774" endtime="20231226 15:13:09.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:09.877" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:09.874" endtime="20231226 15:13:09.878"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:09.888" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:09.879" endtime="20231226 15:13:09.889"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:09.891" endtime="20231226 15:13:09.896"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:09.890" endtime="20231226 15:13:09.897"/>
</branch>
<status status="PASS" starttime="20231226 15:13:09.890" endtime="20231226 15:13:09.897"/>
</if>
<status status="PASS" starttime="20231226 15:13:09.773" endtime="20231226 15:13:09.898"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:09.901" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231226 15:13:09.900" endtime="20231226 15:13:09.901"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:09.903" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:09.903" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231226 15:13:09.902" endtime="20231226 15:13:09.903"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:09.905" level="INFO">${text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:09.904" endtime="20231226 15:13:09.905"/>
</kw>
<status status="PASS" starttime="20231226 15:13:09.904" endtime="20231226 15:13:09.906"/>
</branch>
<status status="PASS" starttime="20231226 15:13:09.903" endtime="20231226 15:13:09.906"/>
</if>
<msg timestamp="20231226 15:13:09.906" level="INFO">${name} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:09.898" endtime="20231226 15:13:09.906"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20231226 15:13:09.907" endtime="20231226 15:13:09.908"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.911" endtime="20231226 15:13:09.912"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.915" endtime="20231226 15:13:09.916"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:09.914" endtime="20231226 15:13:09.917"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20231226 15:13:09.917" endtime="20231226 15:13:09.918"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:09.918" endtime="20231226 15:13:09.919"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:09.917" endtime="20231226 15:13:09.919"/>
</branch>
<status status="NOT RUN" starttime="20231226 15:13:09.913" endtime="20231226 15:13:09.919"/>
</if>
<status status="NOT RUN" starttime="20231226 15:13:09.907" endtime="20231226 15:13:09.919"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20231226 15:13:09.921" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(),"CO_32_03 Velit possimus.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20231226 15:13:09.920" endtime="20231226 15:13:09.921"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:10.033" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:09.921" endtime="20231226 15:13:10.033"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:10.035" endtime="20231226 15:13:10.200"/>
</kw>
<status status="PASS" starttime="20231226 15:13:09.919" endtime="20231226 15:13:10.201"/>
</branch>
<status status="PASS" starttime="20231226 15:13:09.907" endtime="20231226 15:13:10.202"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:10.305" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:10.203" endtime="20231226 15:13:10.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:10.308" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231226 15:13:10.306" endtime="20231226 15:13:10.308"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:10.321" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231226 15:13:10.310" endtime="20231226 15:13:10.321"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231226 15:13:10.323" endtime="20231226 15:13:10.597"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:10.701" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:10.598" endtime="20231226 15:13:10.701"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231226 15:13:10.805" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20231226 15:13:10.703" endtime="20231226 15:13:10.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:10.807" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20231226 15:13:10.806" endtime="20231226 15:13:10.807"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231226 15:13:10.919" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231226 15:13:10.809" endtime="20231226 15:13:10.920"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20231226 15:13:10.922" endtime="20231226 15:13:10.923"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:10.921" endtime="20231226 15:13:10.923"/>
</branch>
<status status="PASS" starttime="20231226 15:13:10.920" endtime="20231226 15:13:10.924"/>
</if>
<status status="PASS" starttime="20231226 15:13:10.702" endtime="20231226 15:13:10.924"/>
</kw>
<status status="PASS" starttime="20231226 15:13:10.322" endtime="20231226 15:13:10.927"/>
</branch>
<status status="PASS" starttime="20231226 15:13:10.322" endtime="20231226 15:13:10.928"/>
</if>
<status status="PASS" starttime="20231226 15:13:10.202" endtime="20231226 15:13:10.929"/>
</kw>
<status status="PASS" starttime="20231226 15:13:09.669" endtime="20231226 15:13:10.932"/>
</kw>
<kw name="Then User look message &quot;Đã xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:10.956" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231226 15:13:10.954" endtime="20231226 15:13:10.956"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:10.958" level="INFO">Length is 0</msg>
<msg timestamp="20231226 15:13:10.960" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231226 15:13:10.957" endtime="20231226 15:13:10.960"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:10.966" endtime="20231226 15:13:10.967"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:10.963" endtime="20231226 15:13:10.967"/>
</branch>
<status status="PASS" starttime="20231226 15:13:10.962" endtime="20231226 15:13:10.968"/>
</if>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<arg>${TIME_TRY}</arg>
<arg>Element Text Should Be</arg>
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231226 15:13:11.065" level="INFO">Text: 'Đã xóa thành công'</msg>
<status status="PASS" starttime="20231226 15:13:10.973" endtime="20231226 15:13:11.066"/>
</kw>
<status status="PASS" starttime="20231226 15:13:10.970" endtime="20231226 15:13:11.066"/>
</kw>
<status status="PASS" starttime="20231226 15:13:10.969" endtime="20231226 15:13:11.067"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:11.069" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231226 15:13:11.068" endtime="20231226 15:13:11.070"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:11.515" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231226 15:13:11.515" level="INFO">See also file:///D:/TESTER/Automation/playwright-log.txt for additional details.</msg>
<msg timestamp="20231226 15:13:11.516" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231226 15:13:11.078" endtime="20231226 15:13:11.519"/>
</kw>
<status status="FAIL" starttime="20231226 15:13:11.072" endtime="20231226 15:13:11.520"/>
</kw>
<msg timestamp="20231226 15:13:11.520" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231226 15:13:11.071" endtime="20231226 15:13:11.521"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231226 15:13:11.523" endtime="20231226 15:13:11.524"/>
</kw>
<status status="NOT RUN" starttime="20231226 15:13:11.521" endtime="20231226 15:13:11.527"/>
</branch>
<status status="PASS" starttime="20231226 15:13:11.521" endtime="20231226 15:13:11.528"/>
</if>
<status status="PASS" starttime="20231226 15:13:10.953" endtime="20231226 15:13:11.528"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should not be visible in table line" library="common" sourcename="&quot;${name}&quot; should not be visible in table line">
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231226 15:13:11.553" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20231226 15:13:11.551" endtime="20231226 15:13:11.553"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231226 15:13:11.555" level="INFO">Length is 1</msg>
<msg timestamp="20231226 15:13:11.556" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20231226 15:13:11.554" endtime="20231226 15:13:11.556"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:11.563" level="INFO">${text} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:11.560" endtime="20231226 15:13:11.563"/>
</kw>
<status status="PASS" starttime="20231226 15:13:11.558" endtime="20231226 15:13:11.564"/>
</branch>
<status status="PASS" starttime="20231226 15:13:11.557" endtime="20231226 15:13:11.564"/>
</if>
<msg timestamp="20231226 15:13:11.565" level="INFO">${name} = CO_32_03 Velit possimus.</msg>
<status status="PASS" starttime="20231226 15:13:11.550" endtime="20231226 15:13:11.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>//tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"${name}")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231226 15:13:11.566" level="INFO">${element} = //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CO_32_03 Velit possimus.")]</msg>
<status status="PASS" starttime="20231226 15:13:11.565" endtime="20231226 15:13:11.566"/>
</kw>
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>detached</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231226 15:13:11.616" level="INFO">Waited for Element with selector //tbody//tr[contains(@class,'ant-table-row')]/td/*[contains(text(),"CO_32_03 Velit possimus.")] at state detached</msg>
<status status="PASS" starttime="20231226 15:13:11.568" endtime="20231226 15:13:11.617"/>
</kw>
<status status="PASS" starttime="20231226 15:13:11.567" endtime="20231226 15:13:11.618"/>
</kw>
<status status="PASS" starttime="20231226 15:13:11.548" endtime="20231226 15:13:11.618"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231226 15:13:12.786" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231226 15:13:11.624" endtime="20231226 15:13:12.787"/>
</kw>
<status status="PASS" starttime="20231226 15:13:11.622" endtime="20231226 15:13:12.787"/>
</kw>
<tag>Delete</tag>
<status status="PASS" starttime="20231226 15:12:55.142" endtime="20231226 15:13:12.789"/>
</test>
<status status="PASS" starttime="20231226 15:12:52.775" endtime="20231226 15:13:12.841"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Delete</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Code Type">Code Type</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.4 on win32)" generated="20231003 16:36:47.964" rpa="false" schemaversion="4">
<suite id="s1" name="Login" source="d:\Intern test\Automation\Auto_Web\testcases\login.robot">
<test id="s1-t1" name="LO_07 Verify the remember account function when click on &quot;Ghi nhớ&quot; check field" line="56">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20231003 16:36:50.164" endtime="20231003 16:36:50.182"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231003 16:36:50.184" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\Intern test\\Automation\\Auto_Web\\browser\\traces\\b4ffc01e-86fd-46f0-88a1-ff0ee7b5d64c"}</msg>
<msg timestamp="20231003 16:36:51.253" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"D:\\Intern test\\Automation\\Auto_Web\\browser\\traces\\b4ffc01e-86fd-46f0-88a1-ff0ee7b5d64c"}</msg>
<status status="PASS" starttime="20231003 16:36:50.183" endtime="20231003 16:36:51.253"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231003 16:36:53.733" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/vn</msg>
<msg timestamp="20231003 16:36:53.733" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20231003 16:36:51.254" endtime="20231003 16:36:53.734"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231003 16:36:53.736" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20231003 16:36:53.735" endtime="20231003 16:36:53.737"/>
</kw>
<status status="PASS" starttime="20231003 16:36:50.163" endtime="20231003 16:36:53.738"/>
</kw>
<kw name="When Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231003 16:36:53.754" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231003 16:36:53.753" endtime="20231003 16:36:53.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231003 16:36:53.756" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231003 16:36:53.755" endtime="20231003 16:36:53.756"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231003 16:36:53.758" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231003 16:36:53.757" endtime="20231003 16:36:53.759"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:53.762" level="INFO">Length is 0</msg>
<msg timestamp="20231003 16:36:53.763" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231003 16:36:53.760" endtime="20231003 16:36:53.764"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231003 16:36:53.766" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231003 16:36:53.764" endtime="20231003 16:36:53.767"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:53.769" level="INFO">Length is 0</msg>
<msg timestamp="20231003 16:36:53.769" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231003 16:36:53.768" endtime="20231003 16:36:53.770"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.772" endtime="20231003 16:36:53.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.773" endtime="20231003 16:36:53.774"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.771" endtime="20231003 16:36:53.774"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.776" endtime="20231003 16:36:53.780"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.781" endtime="20231003 16:36:53.782"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.782" endtime="20231003 16:36:53.783"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.775" endtime="20231003 16:36:53.784"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.787" endtime="20231003 16:36:53.788"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.789" endtime="20231003 16:36:53.790"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.785" endtime="20231003 16:36:53.790"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.793" endtime="20231003 16:36:53.794"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.796" endtime="20231003 16:36:53.797"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.792" endtime="20231003 16:36:53.798"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.799" endtime="20231003 16:36:53.800"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.798" endtime="20231003 16:36:53.801"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231003 16:36:53.803" endtime="20231003 16:36:53.804"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.801" endtime="20231003 16:36:53.804"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.806" endtime="20231003 16:36:53.807"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.808" endtime="20231003 16:36:53.809"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.809" endtime="20231003 16:36:53.810"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.805" endtime="20231003 16:36:53.812"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.814" endtime="20231003 16:36:53.815"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.813" endtime="20231003 16:36:53.816"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.822" endtime="20231003 16:36:53.824"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.817" endtime="20231003 16:36:53.825"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.827" endtime="20231003 16:36:53.833"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.825" endtime="20231003 16:36:53.834"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.836" endtime="20231003 16:36:53.836"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.834" endtime="20231003 16:36:53.837"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231003 16:36:53.838" endtime="20231003 16:36:53.838"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:53.837" endtime="20231003 16:36:53.839"/>
</branch>
<status status="PASS" starttime="20231003 16:36:53.770" endtime="20231003 16:36:53.839"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:53.841" level="INFO">Length is 15</msg>
<msg timestamp="20231003 16:36:53.841" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231003 16:36:53.840" endtime="20231003 16:36:53.841"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231003 16:36:53.848" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231003 16:36:53.843" endtime="20231003 16:36:53.848"/>
</kw>
<status status="PASS" starttime="20231003 16:36:53.842" endtime="20231003 16:36:53.850"/>
</branch>
<status status="PASS" starttime="20231003 16:36:53.842" endtime="20231003 16:36:53.851"/>
</if>
<msg timestamp="20231003 16:36:53.852" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20231003 16:36:53.751" endtime="20231003 16:36:53.852"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231003 16:36:53.855" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231003 16:36:53.853" endtime="20231003 16:36:53.855"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231003 16:36:53.856" endtime="20231003 16:36:54.046"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231003 16:36:54.048" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20231003 16:36:54.047" endtime="20231003 16:36:54.184"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:54.187" level="INFO">Length is 15</msg>
<msg timestamp="20231003 16:36:54.188" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20231003 16:36:54.185" endtime="20231003 16:36:54.188"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231003 16:36:54.192" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20231003 16:36:54.190" endtime="20231003 16:36:54.193"/>
</kw>
<status status="PASS" starttime="20231003 16:36:54.189" endtime="20231003 16:36:54.196"/>
</branch>
<status status="PASS" starttime="20231003 16:36:54.188" endtime="20231003 16:36:54.197"/>
</if>
<status status="PASS" starttime="20231003 16:36:53.749" endtime="20231003 16:36:54.198"/>
</kw>
<kw name="When Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231003 16:36:54.207" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20231003 16:36:54.206" endtime="20231003 16:36:54.207"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231003 16:36:54.209" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20231003 16:36:54.208" endtime="20231003 16:36:54.209"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231003 16:36:54.215" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20231003 16:36:54.212" endtime="20231003 16:36:54.215"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:54.217" level="INFO">Length is 0</msg>
<msg timestamp="20231003 16:36:54.218" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20231003 16:36:54.216" endtime="20231003 16:36:54.219"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231003 16:36:54.221" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231003 16:36:54.220" endtime="20231003 16:36:54.221"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:54.223" level="INFO">Length is 0</msg>
<msg timestamp="20231003 16:36:54.223" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231003 16:36:54.222" endtime="20231003 16:36:54.223"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.225" endtime="20231003 16:36:54.226"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.231" endtime="20231003 16:36:54.232"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.224" endtime="20231003 16:36:54.232"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.234" endtime="20231003 16:36:54.234"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.235" endtime="20231003 16:36:54.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.236" endtime="20231003 16:36:54.237"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.233" endtime="20231003 16:36:54.237"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.239" endtime="20231003 16:36:54.239"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.240" endtime="20231003 16:36:54.240"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.238" endtime="20231003 16:36:54.241"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.243" endtime="20231003 16:36:54.247"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.248" endtime="20231003 16:36:54.249"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.242" endtime="20231003 16:36:54.250"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.251" endtime="20231003 16:36:54.252"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.250" endtime="20231003 16:36:54.252"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20231003 16:36:54.254" endtime="20231003 16:36:54.255"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.253" endtime="20231003 16:36:54.256"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.258" endtime="20231003 16:36:54.259"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.260" endtime="20231003 16:36:54.265"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${new_text}</var>
<arg>SEPARATOR=</arg>
<arg>0</arg>
<arg>${new_text}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.265" endtime="20231003 16:36:54.266"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.257" endtime="20231003 16:36:54.266"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.268" endtime="20231003 16:36:54.269"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.267" endtime="20231003 16:36:54.269"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.271" endtime="20231003 16:36:54.272"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.270" endtime="20231003 16:36:54.326"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.338" endtime="20231003 16:36:54.338"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.331" endtime="20231003 16:36:54.339"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=2</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.342" endtime="20231003 16:36:54.342"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.340" endtime="20231003 16:36:54.349"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20231003 16:36:54.352" endtime="20231003 16:36:54.352"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:54.351" endtime="20231003 16:36:54.353"/>
</branch>
<status status="PASS" starttime="20231003 16:36:54.224" endtime="20231003 16:36:54.354"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:54.355" level="INFO">Length is 6</msg>
<msg timestamp="20231003 16:36:54.356" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231003 16:36:54.354" endtime="20231003 16:36:54.356"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20231003 16:36:54.365" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231003 16:36:54.358" endtime="20231003 16:36:54.365"/>
</kw>
<status status="PASS" starttime="20231003 16:36:54.357" endtime="20231003 16:36:54.366"/>
</branch>
<status status="PASS" starttime="20231003 16:36:54.357" endtime="20231003 16:36:54.366"/>
</if>
<msg timestamp="20231003 16:36:54.367" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20231003 16:36:54.204" endtime="20231003 16:36:54.367"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20231003 16:36:54.370" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20231003 16:36:54.368" endtime="20231003 16:36:54.370"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20231003 16:36:54.371" endtime="20231003 16:36:54.543"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231003 16:36:54.548" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20231003 16:36:54.546" endtime="20231003 16:36:54.592"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:54.597" level="INFO">Length is 6</msg>
<msg timestamp="20231003 16:36:54.597" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20231003 16:36:54.595" endtime="20231003 16:36:54.598"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231003 16:36:54.603" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20231003 16:36:54.600" endtime="20231003 16:36:54.603"/>
</kw>
<status status="PASS" starttime="20231003 16:36:54.599" endtime="20231003 16:36:54.604"/>
</branch>
<status status="PASS" starttime="20231003 16:36:54.598" endtime="20231003 16:36:54.605"/>
</if>
<status status="PASS" starttime="20231003 16:36:54.202" endtime="20231003 16:36:54.605"/>
</kw>
<kw name="When Click on &quot;Ghi nhớ&quot; check box" library="common" sourcename="Click on &quot;${name}&quot; check box">
<kw name="Get Element" library="Browser">
<var>${element}</var>
<arg>//span[contains(text(),"${name}")]//ancestor::label/span[contains(@class,'ant-checkbox')]</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to a Playwright [https://playwright.dev/docs/api/class-locator|Locator].</doc>
<msg timestamp="20231003 16:36:54.654" level="INFO">Locator found successfully.</msg>
<msg timestamp="20231003 16:36:54.655" level="INFO">${element} = //span[contains(text(),"Ghi nhớ")]//ancestor::label/span[contains(@class,'ant-checkbox')]</msg>
<status status="PASS" starttime="20231003 16:36:54.625" endtime="20231003 16:36:54.655"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231003 16:36:54.656" endtime="20231003 16:36:54.788"/>
</kw>
<status status="PASS" starttime="20231003 16:36:54.624" endtime="20231003 16:36:54.789"/>
</kw>
<kw name="When Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title = "${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231003 16:36:54.808" endtime="20231003 16:36:54.973"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231003 16:36:54.975" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20231003 16:36:54.975" endtime="20231003 16:36:54.976"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231003 16:36:54.998" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20231003 16:36:54.977" endtime="20231003 16:36:54.999"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231003 16:36:55.001" endtime="20231003 16:36:55.002"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20231003 16:36:55.003" endtime="20231003 16:36:55.003"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<status status="NOT RUN" starttime="20231003 16:36:55.004" endtime="20231003 16:36:55.005"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:55.000" endtime="20231003 16:36:55.006"/>
</branch>
<status status="PASS" starttime="20231003 16:36:54.999" endtime="20231003 16:36:55.007"/>
</if>
<status status="PASS" starttime="20231003 16:36:54.974" endtime="20231003 16:36:55.007"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20231003 16:36:55.059" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231003 16:36:55.059" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231003 16:36:55.350" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231003 16:36:55.351" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20231003 16:36:55.383" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20231003 16:36:55.008" endtime="20231003 16:36:55.384"/>
</kw>
<status status="PASS" starttime="20231003 16:36:54.806" endtime="20231003 16:36:55.385"/>
</kw>
<kw name="Then User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231003 16:36:55.398" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20231003 16:36:55.397" endtime="20231003 16:36:55.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231003 16:36:55.400" level="INFO">Length is 0</msg>
<msg timestamp="20231003 16:36:55.401" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20231003 16:36:55.399" endtime="20231003 16:36:55.401"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20231003 16:36:55.403" endtime="20231003 16:36:55.403"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:55.402" endtime="20231003 16:36:55.404"/>
</branch>
<status status="PASS" starttime="20231003 16:36:55.401" endtime="20231003 16:36:55.404"/>
</if>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20231003 16:36:55.659" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20231003 16:36:55.408" endtime="20231003 16:36:55.659"/>
</kw>
<status status="PASS" starttime="20231003 16:36:55.405" endtime="20231003 16:36:55.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231003 16:36:55.664" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20231003 16:36:55.663" endtime="20231003 16:36:55.664"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231003 16:36:55.971" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20231003 16:36:55.971" level="INFO">See also file:///D:/Intern%20test/Automation/Auto_Web/playwright-log.txt for additional details.</msg>
<msg timestamp="20231003 16:36:55.971" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20231003 16:36:55.667" endtime="20231003 16:36:55.982"/>
</kw>
<status status="FAIL" starttime="20231003 16:36:55.665" endtime="20231003 16:36:55.983"/>
</kw>
<msg timestamp="20231003 16:36:55.983" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20231003 16:36:55.665" endtime="20231003 16:36:55.984"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231003 16:36:55.986" endtime="20231003 16:36:55.986"/>
</kw>
<status status="NOT RUN" starttime="20231003 16:36:55.984" endtime="20231003 16:36:55.987"/>
</branch>
<status status="PASS" starttime="20231003 16:36:55.984" endtime="20231003 16:36:55.987"/>
</if>
<status status="PASS" starttime="20231003 16:36:55.395" endtime="20231003 16:36:55.987"/>
</kw>
<kw name="When Log out account" library="common">
<kw name="Click" library="Browser">
<arg>//img[contains(@alt,'Avatar')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231003 16:36:55.990" endtime="20231003 16:36:57.017"/>
</kw>
<kw name="Click" library="Browser">
<arg>//li[contains(text(),'Đăng xuất')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20231003 16:36:57.018" endtime="20231003 16:36:57.504"/>
</kw>
<status status="PASS" starttime="20231003 16:36:55.989" endtime="20231003 16:36:57.504"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231003 16:36:58.402" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20231003 16:36:57.507" endtime="20231003 16:36:58.402"/>
</kw>
<status status="PASS" starttime="20231003 16:36:57.506" endtime="20231003 16:36:58.403"/>
</kw>
<tag>Login</tag>
<tag>Remember</tag>
<status status="PASS" starttime="20231003 16:36:50.155" endtime="20231003 16:36:58.417"/>
</test>
<status status="PASS" starttime="20231003 16:36:47.974" endtime="20231003 16:36:58.431"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Login</stat>
<stat pass="1" fail="0" skip="0">Remember</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
